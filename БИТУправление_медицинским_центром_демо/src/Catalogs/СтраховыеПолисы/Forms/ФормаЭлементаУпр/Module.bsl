#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.ВидКлассификатора", Перечисления.ВидыКлассификаторовМинЗдрава.ВидыПолисаОМС));
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.КлассификаторВидовПолисовРЭМД.ПараметрыВыбора = НовыеПараметры;
	
	Если Объект.ВидПолиса.Тип = Перечисления.ТипыСтраховыхПрограмм.ОМС Тогда
		Объект.Серия = "";
		Элементы.Серия.Доступность = Ложь;
		Элементы.СрокДействияНачало.АвтоОтметкаНезаполненного = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ДополнительныеСвойства = Новый Структура;
	
	// Сразу открываем форму выбора вида полисов
	Если Не ЗначениеЗаполнено(Объект.ВидПолиса) Тогда
		ОткрытьФорму("Справочник.ВидыПолисов.ФормаВыбора",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВыборВидаПолисаЗавершение", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ДополнительныеСвойства.Вставить("ЗаписьНового", Объект.Ссылка.Пустая());
	
	ТипПолиса = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ВидПолиса, "Тип");
	
	Если ТипПолиса = ПредопределенноеЗначение("Перечисление.ТипыСтраховыхПрограмм.ОМС") Тогда
		
		Если Не ЗначениеЗаполнено(Объект.СрокДействияНачало) Тогда
			Отказ = Истина;
			ПоказатьПредупреждение(, "Укажите дату начала действия полиса");
		КонецЕсли;
	
		Если Не Отказ Тогда
			РезультатПроверки = ПроверитьПересечениеПолисовОМСИСформироватьСообщение(Объект.Владелец, Объект.СрокДействия, Объект.СрокДействияНачало, Объект.ВидПолиса, Объект.Ссылка);
			Если РезультатПроверки <> Неопределено Тогда
				Отказ = Истина;
				Оповещение = Новый ОписаниеОповещения("ПослеПроверкиПересеченийПолисовОМС", ЭтотОбъект, РезультатПроверки);
				ПоказатьВопрос(Оповещение, РезультатПроверки.ТекстСообщения, РежимДиалогаВопрос.ДаНет);	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ДополнительныеСвойства.ЗаписьНового Тогда
		ПараметрОповещения = Новый Структура("Полис, Клиент", Объект.Ссылка, Объект.Владелец);
		Оповестить("ЗаписьНовогоПолиса", ПараметрОповещения);	
		
		// Для случая, когда оповещение о записи новой карты не приведет к заполнению пустой оснвной медкарты клиента.
		// Строго после оповещения формы клиента.
		ЗаполнитьОсновнойПолисКлиента(Объект.Ссылка, Объект.Владелец);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементов

&НаКлиенте
Процедура ВидПолисаПриИзменении(Элемент)
	
	ТипПолиса = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.ВидПолиса, "Тип");
	Если ЗначениеЗаполнено(ТипПолиса) 
		И ТипПолиса = ПредопределенноеЗначение("Перечисление.ТипыСтраховыхПрограмм.ОМС") 
	Тогда
		Объект.Серия = "";
		Элементы.Серия.Доступность = Ложь;
		Элементы.СрокДействияНачало.АвтоОтметкаНезаполненного = Истина;
	Иначе
		Элементы.Серия.Доступность = Истина;
		Элементы.СрокДействияНачало.АвтоОтметкаНезаполненного = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗаполнитьОсновнойПолисКлиента(Полис, Клиент)
	
	Если Не ЗначениеЗаполнено(Клиент.умцОсновнойСтраховойПолис) Тогда
		ОбъектКлиент = Клиент.ПолучитьОбъект();
		ОбъектКлиент.умцОсновнойСтраховойПолис = Полис;
		ОбъектКлиент.ОбменДанными.Загрузка = Истина;
		Попытка
			ОбъектКлиент.Записать();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаПолисаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Объект.ВидПолиса = Результат;	
	КонецЕсли;
	
	// Начинаем редактирование следующего незаполненного поля
	Если Не ЗначениеЗаполнено(Объект.Владелец) Тогда
		ТекущийЭлемент = Элементы.Владелец;	
	ИначеЕсли Не ЗначениеЗаполнено(Объект.Номер) Тогда
		ТекущийЭлемент = Элементы.Номер;	
	КонецЕсли;
	
	ВидПолисаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьПересечениеПолисовОМСИСформироватьСообщение(Знач Владелец, Знач СрокДействия, Знач СрокДействияНачало, Знач ВидПолиса, Знач Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтраховыеПолисы.Ссылка КАК Ссылка,
	|	СтраховыеПолисы.СрокДействияНачало КАК СрокДействияНачало,
	|	СтраховыеПолисы.СрокДействия КАК СрокДействия,
	|	СтраховыеПолисы.Номер КАК Номер
	|ИЗ
	|	Справочник.СтраховыеПолисы КАК СтраховыеПолисы
	|ГДЕ
	|	СтраховыеПолисы.Владелец = &Владелец
	|	И (СтраховыеПолисы.СрокДействия = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ (СтраховыеПолисы.СрокДействияНачало <= &СрокДействия
	|				И СтраховыеПолисы.СрокДействия >= &СрокДействияНачало))
	|	И СтраховыеПолисы.ВидПолиса.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыСтраховыхПрограмм.ОМС)
	|	И СтраховыеПолисы.Ссылка <> &Ссылка
	|	И СтраховыеПолисы.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Владелец", Владелец);
	Запрос.УстановитьПараметр("СрокДействия", ?(ЗначениеЗаполнено(СрокДействия), СрокДействия, Дата(3999,12,31)));
	Запрос.УстановитьПараметр("СрокДействияНачало", ?(ЗначениеЗаполнено(СрокДействияНачало), СрокДействияНачало, Дата(1,1,1)));
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТекстСообщения = "";
	мСсылокПолисов = Новый Массив;
	Если Выборка.Количество() <> 0 Тогда
		ТекстСообщения = "Есть другой действующий полис ОМС:";
		Пока Выборка.Следующий() Цикл
			Номер = ?(ЗначениеЗаполнено(Выборка.Номер), Выборка.Номер, "не указан");
			СрокДействияНачало = ?(ЗначениеЗаполнено(Выборка.СрокДействияНачало), Формат(Выборка.СрокДействияНачало, "ДФ=dd.MM.yyyy"), "не указан");
			СрокДействия = ?(ЗначениеЗаполнено(Выборка.СрокДействия), Формат(Выборка.СрокДействия, "ДФ=dd.MM.yyyy"), "не указан");
			ТекстСообщения = ТекстСообщения + Символы.ПС + "№ " + Номер + " c " + СрокДействияНачало;
			мСсылокПолисов.Добавить(Выборка.Ссылка);		
		КонецЦикла;
		ТекстСообщения = ТекстСообщения + Символы.ПС + "Завершить старый полис ОМС?"
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураВозврата = Новый Структура("мСсылокПолисов, ТекстСообщения", мСсылокПолисов, ТекстСообщения);
	
	Возврат СтруктураВозврата;
	
КонецФункции

&НаКлиенте
Функция ПослеПроверкиПересеченийПолисовОМС(Результат, ДопПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТекстОшибки = "";
		ИзменитьДанныеПересекающихсяПолисов(ДопПараметры.мСсылокПолисов, Объект.СрокДействия, Объект.СрокДействияНачало, ТекстОшибки);
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			ПоказатьПредупреждение(, ТекстОшибки);
		Иначе
			Записать();
		КонецЕсли;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(ДопПараметры.ТекстСообщения);
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ИзменитьДанныеПересекающихсяПолисов(мСсылокПолисов, СрокДействия, СрокДействияНачало, ТекстОшибки)
	
	Для Каждого Эл Из мСсылокПолисов Цикл
		
		Попытка
			ОбъектИзменяемыйПолис = Эл.ПолучитьОбъект();
			ОбъектИзменяемыйПолис.СрокДействия = СрокДействияНачало - 24*60*60;
			Если ОбъектИзменяемыйПолис.СрокДействияНачало > ОбъектИзменяемыйПолис.СрокДействия Тогда
				ОбъектИзменяемыйПолис.СрокДействияНачало = ОбъектИзменяемыйПолис.СрокДействия;		
			КонецЕсли;
			ОбъектИзменяемыйПолис.Записать();
		Исключение
			ТекстОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстОшибки = "Не удалось изменить срок действия полиса № " + ?(ЗначениеЗаполнено(Эл.Номер), Эл.Номер, "не указан")
						+ " по причине: " + ТекстОшибки;
			Прервать;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
