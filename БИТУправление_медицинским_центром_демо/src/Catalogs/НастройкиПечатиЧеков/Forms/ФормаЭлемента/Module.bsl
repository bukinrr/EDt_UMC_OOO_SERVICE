#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
	Если Не Параметры.Ключ.Пустая() Тогда
		СправочникОбъект = РеквизитФормыВЗначение("Объект");
		
		НастройкиОтбораСкидок = СправочникОбъект.ХранилищеОтбор.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораСкидок) Тогда
			КомпоновщикОтбораПрименения.ЗагрузитьНастройки(СправочникОбъект.ХранилищеОтбор.Получить());
		КонецЕсли;	
		
		НастройкиОтбораПатент = СправочникОбъект.ХранилищеОтборПатент.Получить();
		Если ЗначениеЗаполнено(НастройкиОтбораПатент) Тогда
			КомпоновщикОтбораПатент.ЗагрузитьНастройки(НастройкиОтбораПатент);
		КонецЕсли;	
		
		ЗначениеВРеквизитФормы(СправочникОбъект, "Объект");
	КонецЕсли;
	
	Элементы.ПравилоПечатиКодаНМУВЧеке.Видимость = Метаданные.Перечисления.Найти("ПравилаПечатиКодаУслугиВЧеке") <> Неопределено;
	Элементы.НоменклатураФискализацииМатериалов.Доступность = Объект.СпособФискализацииМатериалов = Перечисления.СпособФискализацииРасходныхМатериалов.ПечататьОтдельнойУслугой;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)

	Если Отказ = Ложь Тогда
		
		Если Объект.ОсновнаяСистемаНалогообложения <> ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ЕдиныйНалогНаВмененныйДоход")
			И Объект.ЕстьУчетПоЕНВД
		Тогда
			ЕстьОтборЕНВД = Ложь;
			Для Каждого ЭлементОтбора Из КомпоновщикОтбораПрименения.Настройки.Отбор.Элементы Цикл
				ЕстьОтборЕНВД = ЕстьОтборЕНВД Или ЭлементОтбора.Использование;
			КонецЦикла;
			Если Не ЕстьОтборЕНВД Тогда
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru ='Не задан отбор, определяющий нефискальную номенклатуру.'"), Отказ);
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.ОсновнаяСистемаНалогообложения <> ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ПатентнаяСистемаНалогообложения")
			И Объект.ЕстьУчетПоПатенту
		Тогда
			ЕстьОтборПоПатенту = Ложь;
			Для Каждого ЭлементОтбора Из КомпоновщикОтбораПатент.Настройки.Отбор.Элементы Цикл
				ЕстьОтборПоПатенту = ЕстьОтборПоПатенту Или ЭлементОтбора.Использование;
			КонецЦикла;
			Если Не ЕстьОтборПоПатенту Тогда
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru ='Не задан отбор, определяющий номенклатуру, продаваемую по патенту.'"), Отказ);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ХранилищеОтбор = Новый ХранилищеЗначения(КомпоновщикОтбораПрименения.ПолучитьНастройки());
	ТекущийОбъект.ХранилищеОтборПатент = Новый ХранилищеЗначения(КомпоновщикОтбораПатент.ПолучитьНастройки());

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЕстьУчетПоЕНВДПриИзменении(Элемент)
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЕстьУчетПоПатентуПриИзменении(Элемент)

	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяСистемаНалогообложенияПриИзменении(Элемент)
	
	Если Объект.ОсновнаяСистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ЕдиныйНалогНаВмененныйДоход") Тогда
		Объект.ЕстьУчетПоЕНВД								= Ложь;
		Объект.СтавкаНДСДляОсновнойСистемыНалогообложения	= ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
	КонецЕсли;
	
	Если Объект.ОсновнаяСистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ПатентнаяСистемаНалогообложения") Тогда
		Объект.ЕстьУчетПоПатенту 							= Ложь;
		Объект.СтавкаНДСДляОсновнойСистемыНалогообложения	= ПредопределенноеЗначение("Перечисление.СтавкиНДС.БезНДС");
	КонецЕсли;
	
	ОбновитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьЭлементов()
	
	Если Объект.ОсновнаяСистемаНалогообложения = ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ЕдиныйНалогНаВмененныйДоход") Тогда
		Элементы.ЕстьУчетПоЕНВД.ТолькоПросмотр								= Истина;
		Элементы.ПравилоПечатиЧековЕНВД.ТолькоПросмотр						= Ложь;
		Элементы.СтавкаНДСДляОсновнойСистемыНалогообложения.ТолькоПросмотр	= Истина;
	Иначе
		Элементы.ЕстьУчетПоЕНВД.ТолькоПросмотр								= Ложь;
		Элементы.СтавкаНДСДляОсновнойСистемыНалогообложения.ТолькоПросмотр	= Ложь;
		Элементы.ПравилоПечатиЧековЕНВД.ТолькоПросмотр = Не Объект.ЕстьУчетПоЕНВД;
	КонецЕсли;
	
	Если Объект.ОсновнаяСистемаНалогообложения = 
		ПредопределенноеЗначение("Перечисление.СистемыНалогообложения.ПатентнаяСистемаНалогообложения") Тогда
		Элементы.ЕстьУчетПоПатенту.ТолькоПросмотр							= Истина;
		Элементы.СтавкаНДСДляОсновнойСистемыНалогообложения.ТолькоПросмотр	= Истина;
	Иначе 
		Элементы.ЕстьУчетПоПатенту.ТолькоПросмотр							= Ложь;
	КонецЕсли;
	
	Элементы.ГруппаСпособыРасчета.Доступность = Истина;
	
	ОбновитьСтраницуОтбораНоменклатуры();
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
	
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет("ПоляШаблона");
	ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	
	// Настройки скидки
	КомпоновщикОтбораПрименения.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	КомпоновщикОтбораПрименения.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикОтбораПрименения.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	Содержимое = СправочникОбъект.ХранилищеОтбор.Получить();
	
	Если Содержимое <> Неопределено Тогда
		КомпоновщикОтбораПрименения.ЗагрузитьНастройки(Содержимое);
	КонецЕсли;
	
	КомпоновщикОтбораПатент.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД));
	КомпоновщикОтбораПатент.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикОтбораПатент.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
	
	СодержимоеОтборПатент = СправочникОбъект.ХранилищеОтборПатент.Получить();
	
	Если СодержимоеОтборПатент <> Неопределено Тогда
		КомпоновщикОтбораПатент.ЗагрузитьНастройки(СодержимоеОтборПатент);
	КонецЕсли;
	
КонецПроцедуры // ЗагрузитьНастройкиОтбораПоУмолчанию()

&НаКлиенте
Процедура ОбновитьСтраницуОтбораНоменклатуры()
	
	Если Объект.ЕстьУчетПоЕНВД Тогда
		Элементы.СтраницаОтбор.Видимость = Истина;
	Иначе
		Элементы.СтраницаОтбор.Видимость = Ложь;
	КонецЕсли;
	
	Если Объект.ЕстьУчетПоПатенту Тогда
		Элементы.СтраницаОтборПатент.Видимость = Истина;
	Иначе
		Элементы.СтраницаОтборПатент.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура КомпоновщикОтбораПримененияНастройкиОтборПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура РежимПечатиМатериаловПриИзменении(Элемент)
	Элементы.НоменклатураФискализацииМатериалов.Доступность = Объект.СпособФискализацииМатериалов = ПредопределенноеЗначение("Перечисление.СпособФискализацииРасходныхМатериалов.ПечататьОтдельнойУслугой");	
	Если Не Элементы.НоменклатураФискализацииМатериалов.Доступность Тогда
		Объект.НоменклатураФискализацииМатериалов = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти