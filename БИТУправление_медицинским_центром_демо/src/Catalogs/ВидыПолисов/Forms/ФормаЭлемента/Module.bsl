#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.НастройкаПодбораПриСоздании(ЭтаФорма, Ложь);
	
	Если Объект.ФиксироватьДолгКонтрагентаПриПроведенииРеестраОУ Тогда
		ФиксироватьДолгКонтрагента = "ПриПроведенииРеестра";
	Иначе
		ФиксироватьДолгКонтрагента = "ПриПродаже";
	КонецЕсли;
	
	ТекущаяДатаУО = ТекущаяДатаСеанса();
	
	ОбновитьАтрибутыТабЧастиДоговоры();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьФлажков();
	УстановитьДоступностьСпискаНоменклатуры();
	РаботаСФормамиКлиент.ОчиститьЛишниеКомандыПобор(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УчетОстаткаПоГарантийнымПисьмамПриИзменении(Элемент)
	УстановитьДоступностьФлажков();
КонецПроцедуры

&НаКлиенте
Процедура ЛимитированноеНаправлениеПриИзменении(Элемент)
	УстановитьДоступностьФлажков();
КонецПроцедуры

&НаКлиенте
Процедура СоглашениеСтрахованияОткрытие(Элемент, СтандартнаяОбработка)
	
	Если Объект.СоглашениеСтрахования.Пустая() 
		И Не Объект.Контрагент.Пустая() 
	Тогда
		СтандартнаяОбработка = Ложь;
		Объект.СоглашениеСтрахования = СоздатьСоглашениеСтрахования(Объект.Контрагент, Объект.Наименование);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборПодбор(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ДопСерверныеФункции.ПолучитьРеквизит(ВыбранноеЗначение, "ЭтоГруппа") Тогда 
		Поиск = Новый Структура();
		Поиск.Вставить("Номенклатура",ВыбранноеЗначение);
		НайденныеСтроки = Объект.Номенклатура.НайтиСтроки(Поиск);
		Если НайденныеСтроки.Количество()>0 Тогда 
			инд = Объект.Номенклатура.Индекс(НайденныеСтроки[0]);
			Элементы.Номенклатура.ТекущаяСтрока = инд;
		Иначе 
			Объект.Номенклатура.Добавить().Номенклатура = ВыбранноеЗначение;
			Элементы.Номенклатура.ТекущаяСтрока = Объект.Номенклатура.Количество()-1;
			Элементы.Номенклатура.Обновить();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ФиксироватьДолгКонтрагентаПриИзменении(Элемент)
	Если ФиксироватьДолгКонтрагента = "ПриПродаже" Тогда
		Объект.ФиксироватьДолгКонтрагентаПриПроведенииРеестраОУ = Ложь;
	Иначе
		Объект.ФиксироватьДолгКонтрагентаПриПроведенииРеестраОУ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле <> Элементы.ДоговорыДоговор Тогда
		ТекущаяСтрока = Элементы.Договоры.ТекущиеДанные;
		Если ЗначениеЗаполнено(ТекущаяСтрока.Договор) Тогда
			ОткрытьЗначение(ТекущаяСтрока.Договор);
		Иначе
			ПараметрыФормыВыбора = Новый Структура("Отбор", Новый Структура("Владелец", Объект.Контрагент));
			Оповещение = Новый ОписаниеОповещения("ДоговорыПослеВыбора", ЭтотОбъект);
			ОткрытьФорму("Справочник.СоглашенияСтрахования.ФормаВыбора", ПараметрыФормыВыбора, Элементы.ДоговорыДоговор,,,,Оповещение);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПослеВыбора(Договор, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Договор) Тогда
		ТекущаяСтрока = Элементы.Договоры.ТекущиеДанные;
		Если ТекущаяСтрока <> Неопределено Тогда
			ТекущаяСтрока.Договор = Договор;
		КонецЕсли;
		
		ОбновитьАтрибутыТабЧастиДоговоры();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаЗаполнитьПоГруппе(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьПоГруппе", ЭтотОбъект);
	ОткрытьФорму("Справочник.Номенклатура.Форма.ФормаВыбораГруппыУпр", , ЭтотОбъект, Объект.Ссылка,,, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоГруппе(Группа, ДополнительныеПараметры) Экспорт
	
	Если Группа <> Неопределено Тогда
		ДополнитьНоменклатуруМассивом(НоменклатураЗаполненияПоГруппе(Группа));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборРаботы(Команда)
	
	РаботаСФормамиКлиент.КнопкаПодборПриНажатии(ЭтаФорма, "ОсновныеУслуги");	

КонецПроцедуры

&НаКлиенте
Процедура ДополнитьПоПрейскуранту(Команда)
	
	ДополнитьНоменклатуруМассивом(НоменклатураЗаполненияИзПрейскуранта(Объект.Прейскурант));
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьИзУстановкиЦен(Команда)
	
	ОткрытьФорму("Документ.УстановкаЦен.ФормаВыбора",,ЭтотОбъект,,,,Новый ОписаниеОповещения("ДополнитьИзУстановкиЦен_ПослеВыбора", ЭтотОбъект));
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьИзУстановкиЦен_ПослеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		ДополнитьНоменклатуруМассивом(НоменклатураЗаполненияИзДокументаУстановкиЦен(Результат));		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьАрхивные(Команда)
	
	АрхивнаяНоменклатураМассив = ЗаполнитьАрхивнуюНоменклатуру(ПолучитьМассивНоменклатурыВСписке());
	Для Каждого АрхивнаяНоменклатура Из АрхивнаяНоменклатураМассив Цикл
		СтрокиНаУдаление = Объект.Номенклатура.НайтиСтроки(Новый Структура("Номенклатура", АрхивнаяНоменклатура));
		Для Каждого СтрокаНаУдаление Из СтрокиНаУдаление Цикл
			Объект.Номенклатура.Удалить(СтрокаНаУдаление);
		КонецЦикла;
	КонецЦикла;
		
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСписок(Команда)
	
	Объект.Номенклатура.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура СоставУслугОпределяетсяПрейскурантомПриИзменении(Элемент)
	
	УстановитьДоступностьСпискаНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура СортироватьДоговоры(Команда)
	ОбновитьАтрибутыТабЧастиДоговоры();
	Объект.Договоры.Сортировать("Картинка УБЫВ, Организация");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьДоступностьФлажков()
	Элементы.УчетОстаткаПоГарантийнымПисьмам.Доступность = НЕ Объект.ЛимитированноеНаправление;
	Элементы.ЛимитированноеНаправление.Доступность = НЕ Объект.УчетОстаткаПоГарантийнымПисьмам;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьСпискаНоменклатуры()
	Элементы.Номенклатура.Доступность = Не Объект.СоставПолисаОпределяетсяПрейскурантом;
	Элементы.ОсновныеУслугиПодбор.Доступность = Не Объект.СоставПолисаОпределяетсяПрейскурантом;
	Элементы.ГруппаЗаполнение.Доступность = Не Объект.СоставПолисаОпределяетсяПрейскурантом;
	Элементы.ПроверятьНаличияЦеныВПрайслисте.Доступность = Не Объект.СоставПолисаОпределяетсяПрейскурантом;
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьСоглашениеСтрахования(Контрагент, НаименованиеВидаПолиса)
	
	Выб = Справочники.СоглашенияСтрахования.Выбрать(, Контрагент);
	Пока Выб.Следующий() Цикл
		Если Не Выб.ПометкаУдаления Тогда
			Возврат Выб.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Договор = Справочники.СоглашенияСтрахования.СоздатьЭлемент();
	Договор.Владелец = Контрагент;
	Договор.Наименование = НаименованиеВидаПолиса;
	Договор.Записать();
	Возврат Договор.Ссылка;
	
КонецФункции

&НаСервереБезКонтекста
Функция НоменклатураЗаполненияПоГруппе(Группа)
	
	МассивНоменклатуры = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТабНом.Ссылка КАК Номенклатура
	|ИЗ
	|	Справочник.Номенклатура КАК ТабНом
	|ГДЕ
	|	ТабНом.Ссылка В ИЕРАРХИИ(&Группа)
	|	И НЕ ТабНом.ЭтоГруппа
	|	И ТабНом.ВидНоменклатуры = &ВидНоменклатуры
	|	И НЕ ТабНом.Архив
	|	И НЕ ТабНом.ПометкаУдаления"
	;
	
	Запрос.УстановитьПараметр("Группа",Группа);
	Запрос.УстановитьПараметр("ВидНоменклатуры",ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Услуга"));
	Выб = Запрос.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		МассивНоменклатуры.Добавить(Выб.Номенклатура);
	КонецЦикла;
	
	Возврат МассивНоменклатуры;
	
КонецФункции

&НаСервереБезКонтекста
Функция НоменклатураЗаполненияИзПрейскуранта(Прейскурант)
	
	МассивНоменклатуры = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЦеныНоменклатуры.Номенклатура КАК Номенклатура
	               |ИЗ
	               |	РегистрСведений.ЦеныНоменклатуры КАК ЦеныНоменклатуры
	               |ГДЕ
	               |	ЦеныНоменклатуры.Прейскурант = &Прейскурант
	               |	И НЕ ЦеныНоменклатуры.Номенклатура.ПометкаУдаления
	               |	И ЦеныНоменклатуры.Номенклатура.ВидНоменклатуры = &ВидНоменклатуры
	               |	И НЕ ЦеныНоменклатуры.Номенклатура.Архив
	               |	И ЦеныНоменклатуры.Цена > 0";
	
	Запрос.УстановитьПараметр("Прейскурант", Прейскурант);
	Запрос.УстановитьПараметр("ВидНоменклатуры",ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Услуга"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		МассивНоменклатуры.Добавить(Выборка.Номенклатура);	
	КонецЦикла;
	
	Возврат МассивНоменклатуры;
	
КонецФункции

&НаКлиенте
Процедура ДополнитьНоменклатуруМассивом(МассивНоменклатуры)
	
	Для Каждого Номенклатура Из МассивНоменклатуры Цикл
		Если Объект.Номенклатура.НайтиСтроки(Новый Структура("Номенклатура", Номенклатура)).Количество() = 0 Тогда
			НоваяСтрока = Объект.Номенклатура.Добавить();
			НоваяСтрока.Номенклатура = Номенклатура;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НоменклатураЗаполненияИзДокументаУстановкиЦен(УстановкаЦен)
	
	МассивНоменклатуры = Новый Массив;
	
	Для Каждого СтрокаНоменклатуры Из УстановкаЦен.Номенклатура Цикл
		Если СтрокаНоменклатуры.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга
			И СтрокаНоменклатуры.Цена > 0
			И Не СтрокаНоменклатуры.Номенклатура.ПометкаУдаления
			И Не СтрокаНоменклатуры.Номенклатура.Архив
		Тогда
			МассивНоменклатуры.Добавить(СтрокаНоменклатуры.Номенклатура);	
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивНоменклатуры;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьАрхивнуюНоменклатуру(НоменклатураПроверки)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НоменклатураПроверки", НоменклатураПроверки);
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Ссылка В(&НоменклатураПроверки)
	               |	И (Номенклатура.ПометкаУдаления ИЛИ Номенклатура.Архив)";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивНоменклатурыВСписке()
	
	Массив = Новый Массив;
	Для Каждого СтрокаНоменклатуры Из Объект.Номенклатура Цикл
		Массив.Добавить(СтрокаНоменклатуры.Номенклатура);	
	КонецЦикла;
	
	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ДоговорыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		
		ПараметрыФормыВыбора = Новый Структура("Отбор", Новый Структура("Владелец", Объект.Контрагент));
		Оповещение = Новый ОписаниеОповещения("ДоговорыПослеВыбора", ЭтотОбъект);
		ОткрытьФорму("Справочник.СоглашенияСтрахования.ФормаВыбора", ПараметрыФормыВыбора, Элементы.ДоговорыДоговор,,,,Оповещение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорыПриИзменении(Элемент)
	
	ОбновитьАтрибутыТабЧастиДоговоры();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьАтрибутыТабЧастиДоговоры()
	
	Для Каждого СтрокаДоговор Из Объект.Договоры Цикл
		Если ЗначениеЗаполнено(СтрокаДоговор.Договор) Тогда
			СтрокаДоговор.Картинка =  (Не ЗначениеЗаполнено(СтрокаДоговор.Договор.ДатаНачала) Или СтрокаДоговор.Договор.ДатаНачала <= ТекущаяДатаСеанса())
									И (Не ЗначениеЗаполнено(СтрокаДоговор.Договор.ДатаОкончания) Или СтрокаДоговор.Договор.ДатаОкончания >= НачалоДня(ТекущаяДатаСеанса()));
			СтрокаДоговор.Организация = СтрокаДоговор.Договор.Организация;
		Иначе
			СтрокаДоговор.Картинка = Ложь;
			СтрокаДоговор.Организация = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьАтрибутыТабЧастиДоговоры();
КонецПроцедуры

#КонецОбласти
