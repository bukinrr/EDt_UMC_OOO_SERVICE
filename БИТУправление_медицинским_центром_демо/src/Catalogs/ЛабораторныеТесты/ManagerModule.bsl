#Область ПрограммныйИнтерфейс

#Область ЗагрузкаИзЕГИСЗ

// Возвращает идентификатор основного классификатора источника на сайте росминздрава.
// 
// Возвращаемое значение:
//   - Строка
//
Функция ПолучитьOIDСправочника() Экспорт
	Возврат "1.2.643.5.1.13.13.11.1080";
КонецФункции

// Описывает соответствие между именем реквизита в классификаторе и его именем в базе 1С.
// 
// Возвращаемое значение:
//   - Соответствие.
//
Функция ПолучитьСопоставленийРеквизитовИXMLСправочникаЕГИСЗ() Экспорт
	
	Сопоставление = Новый Соответствие;
	//1) ID, Уникальный идентификатор, Строковое, Уникальный код ФСЛИ, Обязательное;
	Сопоставление.Вставить("ID", "УИДЕГИСЗ");
	//2) LOINC, Код LOINC, Строковое, Код LOINC, соответствующий данному тесту;
	Сопоставление.Вставить("LOINC", "loinc");
	//3) FULLNAME, Полное наименование, Строковое, Полное наименование лабораторного теста;
	Сопоставление.Вставить("FULLNAME", "ПолноеНаименование");
	//5) SHORTNAME, Краткое наименование, Строковое, Краткое наименование лабораторного теста;
	Сопоставление.Вставить("SHORTNAME", "Наименование");
	//8) SPECANALYTE, Характеристика аналита, Строковое, Характеристика аналита;
	Сопоставление.Вставить("SPECANALYTE", "ХарактеристикаАналита");
	//9) MEASUREMENT, Размерность, Строковое, Размерность количественных лабораторных тестов;
	Сопоставление.Вставить("MEASUREMENT", "Размерность");
	//10) UNIT, Единица измерения, Строковое, Примеры единиц измерения из справочника "Единицы измерения" (OID 1.2.643.5.1.13.13.11.1358);
	Сопоставление.Вставить("UNIT", "ЕдиницаИзмерения");
	//11) SPECIMEN, Образец, Строковое, Соответствует биологическому образцу из справочника "ФСЛИ. Справочник лабораторных материалов и образцов" (OID 1.2.643.5.1.13.13.11.1081);
	Сопоставление.Вставить("SPECIMEN", "Образец");
	//13) METHODTYPE, Тип метода, Строковое, Тип метода определения результата;
	Сопоставление.Вставить("METHODTYPE", "Метод");
	//15) TESTSTATUS, Статус, Строковое, Статус теста (новый, активный, устаревший);
	Сопоставление.Вставить("TESTSTATUS", "Статус");
	//16) GROUP, Группа тестов, Строковое, Группа лабораторного теста, соответствует записи из справочника "ФСЛИ. Группы лабораторных исследований" (OID 1.2.643.5.1.13.13.11.1117);
	Сопоставление.Вставить("GROUP", "Группа");
	//17) NMU, Код НМУ, Строковое, Код Номенклатуры медицинских услуг, соответствующий данному лабораторному тесту из справочника "Номенклатура медицинских услуг" (OID 1.2.643.5.1.13.13.11.1070);
	Сопоставление.Вставить("NMU", "НМУ");
	
	Возврат Сопоставление;

КонецФункции

// Возвращает массив структур, ключ которой - имя реквизита справочника, а значение - имя поля таблицы актуальных в общей форме загрузки.
// 
// Возвращаемое значение:
//   - Массив
//
Функция ПолучитьЗагружаемыеПоляЕГИСЗ() Экспорт
	
	Поля = Новый Структура;
	Поля.Вставить("УИДЕГИСЗ","УИДЕГИСЗ");
	Поля.Вставить("ПолноеНаименование", "ПолноеНаименование");
	Поля.Вставить("Наименование", "Наименование");
	Поля.Вставить("ХарактеристикаАналита", "ХарактеристикаАналита");
	Поля.Вставить("Размерность", "Размерность");
	Поля.Вставить("ЕдиницаИзмерения", "ЕдиницаИзмерения");
	Поля.Вставить("Образец", "Образец");
	Поля.Вставить("НМУ", "НМУ");
	Поля.Вставить("Группа", "Группа");
	Поля.Вставить("Статус", "Статус");
	Поля.Вставить("loinc", "loinc");
	Поля.Вставить("Метод", "Метод");
	Возврат Поля;
	
КонецФункции

// Загрузка справочника: событие перед началом загрузки.
//
// Параметры:
//  ТаблицаКлассификатора	 - ТаблицаЗначений	 - таблица классификатора
//  OID						 - Строка			 - OID
//  ДополнительныеСвойства	 - Структура		 - дополнительные свойства.
//
Функция ЗагрузкаСправочникаПередНачаломЗагрузки(ТаблицаКлассификатора, OID, ДополнительныеСвойства) Экспорт
	
	ТаблицаКлассификатора = ТаблицаКлассификатора.Скопировать(ТаблицаКлассификатора.НайтиСтроки(Новый Структура("Статус", "Актуальный")));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	НоменклатураМедицинскихУслуг.Ссылка КАК Ссылка,
		|	НоменклатураМедицинскихУслуг.Код КАК НМУ
		|ИЗ
		|	Справочник.НоменклатураМедицинскихУслуг КАК НоменклатураМедицинскихУслуг
		|ГДЕ
		|	НЕ НоменклатураМедицинскихУслуг.Архив
		|	И НЕ НоменклатураМедицинскихУслуг.ПометкаУдаления";
	
	ДополнительныеСвойства.Вставить("СсылкиНМУ", Запрос.Выполнить().Выгрузить());
	
КонецФункции

// Загрузка справочника: событие перед записью элемента справочника.
//
// Параметры:
//  ОбъектСправочника		 - СправочникОбъект	 - объект справочника
//  ДополнительныеСвойства	 - Структура		 - дополнительные свойства
//  СтрокаКлассификатора	 - СтрокаДереваЗначений	 - строка дерева классификатора
//  СообщениеОтказа			 - Строка				 - Сообщение отказа
//
Процедура ЗагрузкаСправочникаИзЕГИСЗПередЗаписью(ОбъектСправочника, ДополнительныеСвойства, СтрокаКлассификатора, СообщениеОтказа = "") Экспорт
	
	НМУ = ОбъектСправочника.НМУ;
	Если ДополнительныеСвойства.Свойство("СсылкиНМУ") Тогда
		ПараметрыНМУ = ДополнительныеСвойства.СсылкиНМУ.Найти(НМУ, "НМУ");
		Если ЗначениеЗаполнено(ПараметрыНМУ) Тогда
			ОбъектСправочника.НоменклатураМедицинскихУслуг = ПараметрыНМУ.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Дополнительные атрибуты классификатора для загрузки.
// 
// Возвращаемое значение:
//  Соответствие - дополнительные атрибуты.
//
Функция ПолучитьДополнительныеАтрибуты() Экспорт
	
	Поля = Новый Соответствие;
	//4) ENGLISHNAME, Английское наименование, Строковое, Международное наименование лабораторного теста;
	Поля.Вставить("ENGLISHNAME", "ENGLISHNAME");
	//6) SYNONYMS, Синонимы, Строковое, Синонимы и связанные понятия;
	Поля.Вставить("SYNONYMS", "SYNONYMS");
	//7) ANALYTE, Аналит, Строковое, Аналит;
	Поля.Вставить("ANALYTE", "ANALYTE");
	//12) TIMECHAR, Временная характеристика образца, Строковое, Временная характеристика образца;
	Поля.Вставить("TIMECHAR", "TIMECHAR");
	//14) SCALETYPE, Тип шкалы измерения, Строковое, Тип шкалы измерения лабораторного теста;
	Поля.Вставить("SCALETYPE", "SCALETYPE");
	//18) SORT, Порядок сортировки, Строковое, Код порядка сортировки;
	Поля.Вставить("SORT", "SORT");
	
	Возврат Поля;
	
КонецФункции

// Формирует массив структур, ключи которых - поля для поиска существующих элементов при загрузки из ФР НСИ ЕГИСЗ,
//  а порядок в массиве - приоритет использования способов поиска.
// 
// Возвращаемое значение:
//  Массив - наборы ключей поиска.
//
Функция ПолучитьПорядокПоискаСуществующихОбъектов() Экспорт
	
	ПорядокПоиска = Новый Массив;
	
	ПоляПоиска = Новый Структура;
	ПоляПоиска.Вставить("УИДЕГИСЗ", "УИДЕГИСЗ");
	
	ПорядокПоиска.Добавить(ПоляПоиска);
	
	Возврат ПорядокПоиска;
	
КонецФункции

#КонецОбласти

#КонецОбласти