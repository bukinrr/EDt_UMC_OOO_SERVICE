#Область РазделОписанияПеременных

&НаКлиенте
Перем НовыйСертификат; // Для передачи в подключаемый обработчик ожидания.

#КонецОбласти

#Область ОбработчикиСобытий

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "";
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
		
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);    
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
		
	КонецЕсли;
	
	РаботаСФормамиКлиент.УстановитьОтборСписка("ВидСертификата", ПредопределенноеЗначение("Справочник.Сертификаты.ПустаяСсылка"), Список);
	
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Список, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	ПоддерживаемыеТипыВО.Добавить("СчитывательМагнитныхКарт");
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(Неопределено, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ScanData" Тогда
		Если ВводДоступен() Тогда
			ТипШК = Неопределено;
			РаботаСТорговымОборудованиемКлиент.ОбработатьСобытиеСШКФормы(ЭтаФорма, Параметр, ТипШК);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "TracksData" Тогда
		Если ВводДоступен() Тогда
			СМК = Неопределено;
			РаботаСТорговымОборудованиемКлиент.ОбработатьСобытиеСМК(ЭтаФорма, Параметр[0], СМК, Неопределено, Неопределено);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	ЗначенияЗаполнения = Новый Структура("ВидСертификата", Элементы.ВидыСертификатов.ТекущаяСтрока);
	Форма = ОткрытьФорму("Справочник.Сертификаты.ФормаОбъекта",Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
	
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьВАрхив(Команда)

	РаботаСДиалогамиКлиент.ПоместитьВАрхив(Элементы.Список.ВыделенныеСтроки);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьАрхивные(Команда)

	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Список);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если ЭтаФорма.Открыта() Тогда
		ОповеститьОВыборе(ВыбраннаяСтрока);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСертификатовПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.ВидыСертификатов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("ВидСертификата", ТекущиеДанные.Ссылка, Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидыСертификатовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НовыйСертификат = СоздатьСертификатПоВиду(ВыбраннаяСтрока);
	Если ЭтаФорма.Открыта() Тогда
		ОповеститьОВыборе(НовыйСертификат);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция СоздатьСертификатПоВиду(ВидСертификата, Штрихкод = Неопределено, ТипКода = Неопределено, МагнитныйКод = Неопределено)
	
	НовыйСертификат = Справочники.Сертификаты.СоздатьЭлемент();
	НовыйСертификат.ВидСертификата = ВидСертификата;
	НовыйСертификат.Записать();
	
	Если ЗначениеЗаполнено(Штрихкод) Тогда
		Запись				= РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
   		Запись.Владелец		= НовыйСертификат.Ссылка;
		Запись.Штрихкод		= Штрихкод;
		Запись.ТипШтрихкода	= ТипКода;
		Запись.Записать();
	ИначеЕсли ЗначениеЗаполнено(МагнитныйКод) Тогда
		Запись			= РегистрыСведений.МагнитныеКарты.СоздатьМенеджерЗаписи();
		Запись.Владелец	= НовыйСертификат.Ссылка;
		Запись.КодКарты	= МагнитныйКод;
	КонецЕсли;
	
	Возврат НовыйСертификат.Ссылка;
	
КонецФункции

// Функция осуществляет обработку считывания штрихового кода, который не был
// зарегистрирован.
//
// Параметры:
//  Штрихкод - <Строка>
//           - Считанный код.
//
//  ТипКода  - <ПланыВидовХарактеристикСсылка.ТипыШтрихкодов>
//           - Тип штрихкода. Пустая ссылка в случае, если тип определить не
//             представляется возможным.
//
//  СШК      - <Строка>
//           - Идентификатор сканера штрих-кода, с которым связано данное
//             событие.
//
// Возвращаемое значение:
//  <Булево> - Данная ситуация обработана.
//
&НаКлиенте
Функция СШКНеизвестныйКод(Штрихкод, ТипКода, СШК) Экспорт

	ВидСертификата = Элементы.ВидыСертификатов.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ВидСертификата) Тогда 
		НовыйСертификат = СоздатьСертификатПоВиду(ВидСертификата, Штрихкод, ТипКода);
		ВыбратьНовыйСертификат();
	КонецЕсли;
	
КонецФункции // СШКНеизвестныйКод()

&НаКлиенте
Процедура ОповеститьОВыбореНовогоСертификата()
	ОповеститьОВыборе(НовыйСертификат);
КонецПроцедуры

&НаКлиенте
Функция СМКНеизвестныйКод(Код, СМК) Экспорт

	ВидСертификата = Элементы.ВидыСертификатов.ТекущаяСтрока;
	Если ЗначениеЗаполнено(ВидСертификата) Тогда 
		НовыйСертификат = СоздатьСертификатПоВиду(ВидСертификата,,,Код);
		ВыбратьНовыйСертификат();
	КонецЕсли;
	
КонецФункции // СМКНеизвестныйКод()

&НаКлиенте
Процедура ВыбратьНовыйСертификат()
		
	Если ЭтаФорма.Открыта() Тогда
		// Прежде чем закрыть форму, мы позволяем остальным формам (у которых ВводДоступен() = Ложь)
		// выполнить их ОбработкаОповещения.
		ПодключитьОбработчикОжидания("ОповеститьОВыбореНовогоСертификата", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти