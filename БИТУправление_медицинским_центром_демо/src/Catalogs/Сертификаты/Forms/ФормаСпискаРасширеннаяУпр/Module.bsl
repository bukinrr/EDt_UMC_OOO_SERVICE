#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СертификатыТолькоВладельца = Параметры.СертификатыТолькоВладельца;
	ТолькоПополняемые = Параметры.ТолькоПополняемые;
	ЭтаФорма.ВладелецСертификата = Параметры.ВладелецСертификата;
	ЭтаФорма.КоманднаяПанель.Доступность	= Не Параметры.ПроданныеСертификаты;
	ПоказыватьСертификатыСНулевымОстатком	= Не Параметры.ПроданныеСертификаты;
	Элементы.ПоказыватьСертификатыСНулевымОстатком.Видимость = Параметры.ПроданныеСертификаты;
	
	Если ЗначениеЗаполнено(Параметры.Дата) = Ложь Тогда
		Дата = ТекущаяДата();
	КонецЕсли;	
	
	Список.Параметры.УстановитьЗначениеПараметра("Дата", Дата);
	
	ОбновитьСписок();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Список, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	Парам = Новый Структура;
	Парам.Вставить("ВидСертификата", ВидСертификатов);
	Форма = ПолучитьФорму("Справочник.Сертификаты.ФормаОбъекта",Парам);
	Форма.ОткрытьМодально();
	
	ОбновитьНажатие(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНажатие(Команда)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьВАрхив(Команда)

	РаботаСДиалогамиКлиент.ПоместитьВАрхив(Элементы.Список.ВыделенныеСтроки);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьАрхивные(Команда)

	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Список);
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	Если ЭтаФорма.Открыта() Тогда
		ВыбраннаяСтрока = Элементы.Список.ТекущаяСтрока;
		Если ВыбраннаяСтрока <> Неопределено Тогда
			ОповеститьОВыборе(ВыбраннаяСтрока);
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ЭтаФорма.Открыта() Тогда
		ОповеститьОВыборе(ВыбраннаяСтрока);
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ВидСертификатовПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура СертификатыТолькоВладельцаПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ВладелецСертификатаПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСертификатыСНулевымОстаткомПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьСертификатыРодственниковПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписок()
	
	Фильтр = " НЕ Сертификаты.ПометкаУдаления И ";
	
	ПараметрВладелец = Неопределено;
	Если СертификатыТолькоВладельца Тогда
		Если ПоказыватьСертификатыРодственников И ЗначениеЗаполнено(ВладелецСертификата) Тогда
			СписокКлиентов = РаботаСКлиентамиПереопределяемый.ПолучитьРодственниковКлиента(ВладелецСертификата, Истина);
			
			Фильтр = Фильтр + " Сертификаты.ВладелецКарты В (&ВладелецКарты) И ";
			ПараметрВладелец = СписокКлиентов.ВыгрузитьЗначения();
		Иначе
			Фильтр = Фильтр + " Сертификаты.ВладелецКарты = &ВладелецКарты И ";
			ПараметрВладелец = ВладелецСертификата;
		КонецЕсли;
	Конецесли;
	
	Если ЗначениеЗаполнено(ВидСертификатов)  Тогда
		Фильтр = Фильтр + "Сертификаты.ВидСертификата = &ВидСертификата И "
	Конецесли;
	
	Если Не (Параметры.НаОплату И Параметры.НаУслуги) Тогда
		ФильтрОплатаУслуги = "";
		Если Не Параметры.НаОплату Тогда
			Фильтр = Фильтр + "Сертификаты.ВидСертификата.ТипСертификата <> Значение(Перечисление.ТипыСертификатов.НаОплату) И ";
		КонецЕсли;
		Если Не Параметры.НаУслуги Тогда
			Фильтр = Фильтр + "Сертификаты.ВидСертификата.ТипСертификата <> Значение(Перечисление.ТипыСертификатов.НаУслуги) И ";
		КонецЕсли;
	Конецесли;
	
	Если ТолькоПополняемые Тогда
		Фильтр = Фильтр + "Сертификаты.ВидСертификата.ПополняемыйСертификат И ";
	КонецЕсли;

	Фильтр = Фильтр + 
				 "
	 	           |	Сертификаты.Ссылка " + ?(Параметры.ПроданныеСертификаты,""," НЕ ") + " В
	               |				(ВЫБРАТЬ
	               |					ОстаткиПоСертификатамОбороты.Сертификат КАК Сертификат
	               |				ИЗ
	               |					РегистрНакопления.ОстаткиПоСертификатам.Обороты КАК ОстаткиПоСертификатамОбороты
	               |				ГДЕ
	               |					ОстаткиПоСертификатамОбороты.СуммаПриход > 0
				   |				
				   |				ОБЪЕДИНИТЬ
				   |
				   |				ВЫБРАТЬ
				   |					Сертификаты.Ссылка
				   |				ИЗ
				   |					Справочник.Сертификаты КАК Сертификаты
				   |				ГДЕ
				   |					Сертификаты.ВладелецКарты <> ЗНАЧЕНИЕ(Справочник.Клиенты.ПустаяСсылка) 
				   |					И Сертификаты.ВидСертификата.ПополняемыйСертификат
				   |					И Сертификаты.ВидСертификата.КомплексныйСертификат)
	               |	И ";

	Фильтр = Фильтр + ?(НЕ ПоказыватьСертификатыСНулевымОстатком,  
				 "
	 			   |	Сертификаты.Ссылка В
				   |				(ВЫБРАТЬ
				   |					ОстаткиПоСертификатамОбороты.Сертификат КАК Сертификат
				   |				ИЗ
				   |					РегистрНакопления.ОстаткиПоСертификатам.Обороты КАК ОстаткиПоСертификатамОбороты
				   |				ГДЕ                                          
				   |					(ОстаткиПоСертификатамОбороты.СуммаПриход - ОстаткиПоСертификатамОбороты.СуммаРасход) > 0)
				   |	И ", "");
	
	Если ЗначениеЗаполнено(Параметры.СертификатыДокумента) Тогда
		СертификатыДокументаТекст = "
					|	Сертификаты.Ссылка В (&СертификатыДокумента)
					|	ИЛИ ";
	Иначе
		СертификатыДокументаТекст = "";
	КонецЕсли;
	
	Фильтр = " 
			 |ГДЕ "+ СертификатыДокументаТекст + Лев(Фильтр,СтрДлина(Фильтр)-2);   
	Фильтр = СтрЗаменить(Фильтр, " И", "
									   | И");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Сертификаты.Код КАК Код,
	               |	Сертификаты.Ссылка КАК Сертификат,
	               |	Сертификаты.Примечание КАК Примечание,
	               |	Сертификаты.ВидСертификата КАК Вид,
	               |	Сертификаты.Архив КАК Архив,
	               |	Сертификаты.ВладелецКарты КАК Владелец,
	               |	Сертификаты.ВидСертификата.Номинал КАК Сумма,
	               |	Сертификаты.ВидСертификата.Именной КАК Именной,
	               |	ВЫБОР
	               |		КОГДА Сертификаты.Ссылка В
	               |				(ВЫБРАТЬ
	               |					ОстаткиПоСертификатамОбороты.Сертификат КАК Сертификат
	               |				ИЗ
	               |					РегистрНакопления.ОстаткиПоСертификатам.Обороты КАК ОстаткиПоСертификатамОбороты
	               |				ГДЕ
	               |					ОстаткиПоСертификатамОбороты.СуммаПриход > 0)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК Проданный,
	               |	ЕСТЬNULL(ОстаткиПоСертификатамОстатки.СуммаОстаток, 0) КАК Остаток
	               |ИЗ
	               |	Справочник.Сертификаты КАК Сертификаты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиПоСертификатам.Остатки(&Дата, ) КАК ОстаткиПоСертификатамОстатки
	               |		ПО (ОстаткиПоСертификатамОстатки.Сертификат = Сертификаты.Ссылка)" + Фильтр;
																				   
	Список.ТекстЗапроса = Запрос.Текст;
	
	Список.Параметры.УстановитьЗначениеПараметра("Дата", Дата);
	Если ЗначениеЗаполнено(ВидСертификатов)  Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВидСертификата",ВидСертификатов);			   
	КонецЕсли;	
	
	Если СертификатыТолькоВладельца Тогда
		Список.Параметры.УстановитьЗначениеПараметра("ВладелецКарты",ПараметрВладелец);			   
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СертификатыДокумента) Тогда
		СертификатыДокумента = Новый Массив;
		Для Каждого Сертификат Из Параметры.СертификатыДокумента Цикл
			Если ((Сертификат.ВидСертификата.ТипСертификата = Перечисления.ТипыСертификатов.НаОплату) = Параметры.НаОплату
				ИЛИ Параметры.НаОплату И Параметры.НаУслуги)
				И Сертификат.ВидСертификата.ПополняемыйСертификат = Параметры.НаОплату Тогда
				
				СертификатыДокумента.Добавить(Сертификат);		
			КонецЕсли;
		КонецЦикла;
		Список.Параметры.УстановитьЗначениеПараметра("СертификатыДокумента", СертификатыДокумента);	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
