#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.КнопкаВедомостьПоСертификату.Доступность = Истина Тогда
		Отчет = ДанныеФормыВЗначение(ОтчетВедомость, Тип("ОтчетОбъект.ВедомостьПоСертификатам"));
		Отчет = Отчеты.ВедомостьПоСертификатам.Создать();
		ЗначениеВДанныеФормы(Отчет,ОтчетВедомость);
	КонецЕсли;
	
	// Обработка передачи параметров.
	Если Параметры.Свойство("ВидСертификата") Тогда
		Если ЗначениеЗаполнено(Параметры.ВидСертификата) Тогда
			Объект.ВидСертификата = Параметры.ВидСертификата;
		КонецЕсли;
	КонецЕсли;	
	
	УстановитьОтборыСписковЭлемента();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// На случай ввода копирвоанием.
	Если Параметры.Ключ.Пустая() И ЗначениеЗаполнено(Объект.ВладелецКарты) Тогда
		Объект.ВладелецКарты = Неопределено;
		Объект.СуммаПродажи  = 0;
	КонецЕсли;
	
	УстановитьДоступность();

	Если Истина // ИспользоватьПодключаемоеОборудование Проверка на включенную ФО "Использовать ВО".
	   И МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда // Проверка на определенность рабочего места ВО.

		ОписаниеОшибки = "";
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);    
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, ПоддерживаемыеТипыВО);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьОтборыСписковЭлемента();
	УстановитьДоступность();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если Объект.Ссылка.Пустая() Тогда
		ТекущийОбъект.РучноеРедактированиеВладельца = ЗначениеЗаполнено(ТекущийОбъект.ВладелецКарты);
		ТекущийОбъект.РучноеРедактированиеДатыДействия = ЗначениеЗаполнено(ТекущийОбъект.ДатаНачалаДействия);
	Иначе
		ТекущийОбъект.РучноеРедактированиеВладельца = ТекущийОбъект.РучноеРедактированиеВладельца Или Объект.Ссылка.ВладелецКарты <> ТекущийОбъект.ВладелецКарты;
		ТекущийОбъект.РучноеРедактированиеДатыДействия = ТекущийОбъект.РучноеРедактированиеДатыДействия Или Объект.Ссылка.ДатаНачалаДействия <> ТекущийОбъект.ДатаНачалаДействия;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(Неопределено, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ScanData" Тогда
		Если ВводДоступен() Тогда
			ТипШК = Неопределено;
			РаботаСТорговымОборудованиемКлиент.ОбработатьСобытиеСШКФормы(ЭтаФорма, Параметр, ТипШК);
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "TracksData" Тогда
		Если ВводДоступен() Тогда
			КодКарты = Неопределено;
			СМК = Неопределено;
			РаботаСТорговымОборудованиемКлиент.ОбработатьСобытиеСМК(ЭтаФорма,  Параметр[0], СМК, Неопределено, Неопределено);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура МагнитныеКартыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	РаботаСДиалогамиКлиент.ПередНачаломДобавленияВПодчиненныйСписокНаФормеОбъекта(ЭтаФорма, Элемент, Отказ);
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборыСписковЭлемента()
	
	РаботаСФормамиСервер.УстановитьОтборСписка("Владелец", Объект.Ссылка, Штрихкоды);
	РаботаСФормамиСервер.УстановитьОтборСписка("Владелец", Объект.Ссылка, МагнитныеКарты);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.ВладелецКарты.ОтображениеПредупрежденияПриРедактировании	= ?(ЗначениеЗаполнено(Объект.ВладелецКарты),
		ОтображениеПредупрежденияПриРедактировании.Отображать,ОтображениеПредупрежденияПриРедактировании.НеОтображать);
		
	Элементы.ВидСертификата.ОтображениеПредупрежденияПриРедактировании	= ?(ЗначениеЗаполнено(Объект.Ссылка),
		ОтображениеПредупрежденияПриРедактировании.Отображать,ОтображениеПредупрежденияПриРедактировании.НеОтображать);
		
	ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.КнопкаВедомостьПоСертификату.Доступность = НЕ Объект.Ссылка.Пустая();
	
КонецПроцедуры

&НаКлиенте
Процедура ШтрихкодыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	Если Не РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Отказ = Истина;
	КонецЕсли;

КонецПроцедуры

// Функция осуществляет обработку считывания штрихового кода, который не был
// зарегистрирован.
//
// Параметры:
//  Штрихкод - <Строка>
//           - Считанный код.
//
//  ТипКода  - <ПланыВидовХарактеристикСсылка.ТипыШтрихкодов>
//           - Тип штрихкода. Пустая ссылка в случае, если тип определить не
//             представляется возможным.
//
//  СШК      - <Строка>
//           - Идентификатор сканера штрих-кода, с которым связано данное
//             событие.
//
// Возвращаемое значение:
//  <Булево> - Данная ситуация обработана.
//
&НаКлиенте
// Функция СШКНеизвестныйКод.
//
// Параметры:
//  Штрихкод - Неопределено
//  ТипКода - Неопределено
//  СШК - Неопределено
//
// Возвращаемое значение:
//  Неопределено.
//
Функция СШКНеизвестныйКод(Штрихкод, ТипКода, СШК) Экспорт
	
	РаботаСТорговымОборудованиемКлиент.ДобавитьШрихкодВФормеОбъекта (ЭтаФорма, Элементы.ПанельЭлемента, Объект, Штрихкод, ТипКода);
	Элементы.Штрихкоды.Обновить();
	Возврат Истина
	
КонецФункции // СШКНеизвестныйКод()

&НаКлиенте
// Процедура ПодключитьОборудованиеЗавершение.
//
// Параметры:
//  РезультатВыполнения - Неопределено
//  Параметры - Неопределено
//
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
// Функция СМКНеизвестныйКод.
//
// Параметры:
//  Код - Неопределено
//  СМК - Неопределено
//
// Возвращаемое значение:
//  Неопределено.
//
Функция СМКНеизвестныйКод(Код, СМК) Экспорт

	Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		РаботаСТорговымОборудованиемСервер.ДобавитМагнитныйКодСервер(Объект.Ссылка, Код);
		Элементы.МагнитныеКарты.Обновить();
	КонецЕсли;
	
	Возврат Истина;

КонецФункции // СМКНеизвестныйКод()

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействияФормыКнопкаВедомостьПоСертификату(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		Если ДопСерверныеФункции.ПолучитьРеквизит(Объект.ВидСертификата, "КомплексныйСертификат") Тогда
			КлючВарианта = "По номенклатуре";
		Иначе
			КлючВарианта = "ПоКлиенту";
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("КлючВарианта", КлючВарианта);
		ПараметрыФормы.Вставить("Отбор", Новый Структура("Сертификат", Объект.Ссылка));
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		Форма = ПолучитьФорму("Отчет.ВедомостьПоСертификатам.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
		
		КомпоновщикНастроек = Форма.Отчет.КомпоновщикНастроек;
		
		Для Каждого ЭлементНастроек Из КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы Цикл
			Если ТипЗнч(ЭлементНастроек) = Тип("ЗначениеПараметраНастроекКомпоновкиДанных") Тогда
				Если Строка(ЭлементНастроек.Параметр) = "НачалоПериода" Или Строка(ЭлементНастроек.Параметр) = "КонецПериода" Тогда
					Для Каждого ЭлементПользовательскихНастроек Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
						Если ЭлементПользовательскихНастроек.ИдентификаторПользовательскойНастройки =  ЭлементНастроек.ИдентификаторПользовательскойНастройки Тогда
							ЭлементНастроек.Использование = Ложь;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;

		Для Каждого ЭлементНастроек Из КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл
			ЭлементНастроек.Использование = Ложь;
		КонецЦикла;
		
		Форма.КлючНазначенияИспользования = "Сертификат";
		Форма.ПользовательскиеНастройкиМодифицированы = Ложь;
		Форма.ВариантМодифицирован = Ложь;
		Форма.Открыть();
	Иначе
		ПоказатьПредупреждение(,НСтр("ru = 'Сертификат еще не записан!'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НовыйШтрихкод(Команда)
		
	Если Не РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	ТекущаяСтрока = Элементы.Штрихкоды.ТекущиеДанные;

	РаботаСТорговымОборудованиемКлиент.КнопкаНовыйШрихкодНажатие(ТекущаяСтрока, Объект.Ссылка);
	Элементы.Штрихкоды.Обновить();
КонецПроцедуры

#КонецОбласти