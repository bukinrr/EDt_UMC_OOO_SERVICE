#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТипыИсточника = ПолучитьСписокТиповИсточникаСобытия();
	Для Каждого ТипИсточника Из ТипыИсточника Цикл
		Элементы.ТипИсточника.СписокВыбора.Добавить(ТипИсточника.Значение, ТипИсточника.Представление);
	КонецЦикла;
	
	Если Объект.ТипСобытия = Перечисления.ТипыСобытий.Документ Тогда
		ТипИсточникаСтрока = ВычислитьПредставлениеТипаИсточника(Объект.ТипИсточника);
	КонецЕсли;
	
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекущуюСтруницуОписанияТипаСобытия();
	НастроитьВидимостьОтбора(); 
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если ТекущийОбъект.ТипСобытия = Перечисления.ТипыСобытий.Документ Тогда 
		ТекущийОбъект.ХранилищеОтбор = Новый ХранилищеЗначения(КомпоновщикОтбора.ПолучитьНастройки());
	Иначе
		ТекущийОбъект.ХранилищеОтбор = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли; 	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ТипСобытияПриИзменении(Элемент)
	
	УстановитьТекущуюСтруницуОписанияТипаСобытия();
	НастроитьВидимостьОтбора(); 
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущуюСтруницуОписанияТипаСобытия()
	
	Видимость = Истина;
	Если Объект.ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.ДеньРождения") Тогда
		Элементы.ГруппаОписаниеТипаСобытия.ТекущаяСтраница = Элементы.ГруппаДеньРождения;
	ИначеЕсли Объект.ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.НаступлениеКалендарнойДаты") Тогда
		Элементы.ГруппаОписаниеТипаСобытия.ТекущаяСтраница = Элементы.ГруппаДатыКалендаря;
	ИначеЕсли Объект.ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Документ") Тогда
		Элементы.ГруппаОписаниеТипаСобытия.ТекущаяСтраница = Элементы.ГруппаТипИсточника;
	Иначе
		Видимость = Ложь;
	КонецЕсли;
	Элементы.ГруппаОписаниеТипаСобытия.Видимость = Видимость;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокТиповИсточникаСобытия()
	
	Результат = Новый СписокЗначений;
	
	тзТипы = Новый ТаблицаЗначений;
	тзТипы.Колонки.Добавить("Значение");
	тзТипы.Колонки.Добавить("Представление");
	тзТипы.Колонки.Добавить("ПорядокТипа", Новый ОписаниеТипов("Число"));
	
	Если Истина Тогда
		СтрТЗ = тзТипы.Добавить();
		мсТипы = Новый Массив;
		мсТипы.Добавить(Тип("ДокументСсылка.Заявка"));
		ОписаниеТипов = Новый ОписаниеТипов(мсТипы);
		СтрТЗ.Значение = ОписаниеТипов.ПривестиЗначение(Неопределено);
		СтрТЗ.Представление = Строка(мсТипы[0]);
	Иначе
		ТипыИсточника = Метаданные.Справочники.ВидыСобытий.Реквизиты.ТипИсточника.Тип;
		Для Каждого Тип Из ТипыИсточника.Типы() Цикл
			СтрТЗ = тзТипы.Добавить();
			мсТипы = Новый Массив;
			мсТипы.Добавить(Тип);
			ОписаниеТипов = Новый ОписаниеТипов(мсТипы);
			СтрТЗ.Значение = ОписаниеТипов.ПривестиЗначение(Неопределено);
			СтрТЗ.Представление = Строка(Тип);
			Если Метаданные.Документы.Содержит(Метаданные.НайтиПоТипу(Тип)) Тогда
				СтрТЗ.ПорядокТипа = 2;
			Иначе 
				СтрТЗ.ПорядокТипа = 3;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	тзТипы.Сортировать("ПорядокТипа, Представление");
	
	Для Каждого СтрТЗ Из тзТипы Цикл
		
		Эл = Результат.Добавить(СтрТЗ.Значение);
		Если СтрТЗ.ПорядокТипа = 2 Тогда
			Эл.Представление = "Документ """ + СтрТЗ.Представление + """";
		Иначе
			Эл.Представление = СтрТЗ.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТипИсточникаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Объект.ТипИсточника = ВыбранноеЗначение;
	ТипИсточникаСтрока	= ВычислитьПредставлениеТипаИсточника(Объект.ТипИсточника);
	СтандартнаяОбработка = Ложь;
	ЗагрузитьНастройкиОтбораПоУмолчанию();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВычислитьПредставлениеТипаИсточника(ТипИсточника)
	
	Если ТипИсточника = Неопределено Тогда 
		Представление = "";
	Иначе
		МетаданныеТипаИсточника = Метаданные.НайтиПоТипу(ТипЗнч(ТипИсточника));
		Представление = МетаданныеТипаИсточника.Представление();
		
		Если Метаданные.Документы.Содержит(МетаданныеТипаИсточника) Тогда
			Представление = "Документ """ + Представление + """";
		КонецЕсли;
	КонецЕсли;
		
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
		
	Если Объект.ТипСобытия = Перечисления.ТипыСобытий.Документ И Объект.ТипИсточника <> Неопределено Тогда
		
		Если ТипЗнч(Объект.ТипИсточника) = Тип("ДокументСсылка.Заявка") Тогда 
			ИмяМакета = "ПоляШаблонаДокументаЗаявка";
		Иначе
			Возврат;
		КонецЕсли;
		
		СправочникОбъект = РеквизитФормыВЗначение("Объект");
		
		СхемаКомпоновкиДанных = СправочникОбъект.ПолучитьМакет(ИмяМакета);
		ВремХранилищеСКД = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
		
		КомпоновщикОтбора.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ВремХранилищеСКД)
		);
		КомпоновщикОтбора.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
		КомпоновщикОтбора.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.ПроверятьДоступность);
		
		Содержимое = СправочникОбъект.ХранилищеОтбор.Получить();
		
		Если Содержимое <> Неопределено Тогда
			КомпоновщикОтбора.ЗагрузитьНастройки(Содержимое);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура НастроитьВидимостьОтбора()
	
	Элементы.Отбор.Видимость = Объект.ТипСобытия = ПредопределенноеЗначение("Перечисление.ТипыСобытий.Документ");
	
КонецПроцедуры

#КонецОбласти