#Область ПрограммныйИнтерфейс

// Перезаполняет табличную часть ЗаполняемыеПараметры по типу карты.
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт	 - вид карты.
//
Процедура ЗаполнитьПараметрыПоТипуМедКарты(ВидКарты) Экспорт
	
	Если ТипЗнч(ВидКарты) = Тип("СправочникСсылка.ВидыМедицинскихКарт") Тогда
		Объект = ВидКарты.ПолучитьОбъект();
	Иначе
		Объект = ВидКарты;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ТипКарты) Тогда
		Возврат;
	КонецЕсли;
	
	ПрошлаяТЗПараметры = Объект.ЗаполняемыеПараметры.Выгрузить();
	Объект.ЗаполняемыеПараметры.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыМедицинскойКартыТипыМедкарт.Ссылка
	|ИЗ
	|	ПланВидовХарактеристик.ПараметрыМедицинскойКарты.ТипыМедкарт КАК ПараметрыМедицинскойКартыТипыМедкарт
	|ГДЕ
	|	ПараметрыМедицинскойКартыТипыМедкарт.ТипКарты = &ТипКарты");
	Запрос.УстановитьПараметр("ТипКарты", Объект.ТипКарты);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Объект.ЗаполняемыеПараметры.НайтиСтроки(Новый Структура("ИмяПараметра", Выборка.Ссылка)).Количество() = 0 Тогда
			
			Стр = Объект.ЗаполняемыеПараметры.Добавить();
			Стр.ИмяПараметра = Выборка.Ссылка;
			Стр.ИмяПараметраНРег = НРег(Выборка.Ссылка.Наименование);
			
			Рез = ПрошлаяТЗПараметры.Найти(Выборка.Ссылка, "ИмяПараметра");
			Если Рез <> Неопределено
				И ЗначениеЗаполнено(Рез.ЗначениеПоУмолчанию)
			Тогда
				Стр.ЗначениеПоУмолчанию = Рез.ЗначениеПоУмолчанию;
			Иначе
				ТипЗначенияПараметра = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Выборка.Ссылка, "ТипЗначения");
				
				ОТ = Новый ОписаниеТипов(ТипЗначенияПараметра.Типы()); 
				Если ТипЗначенияПараметра.Типы().Количество() = 1 Тогда
					Если ЗначениеЗаполнено(Стр.ИмяПараметра.ПараметрШаблонаОсмотра) Тогда
						Стр.ЗначениеПоУмолчанию = ОТ.ПривестиЗначение(Стр.ИмяПараметра.ПараметрШаблонаОсмотра);	
					Иначе
						Стр.ЗначениеПоУмолчанию = ОТ.ПривестиЗначение(Неопределено);  
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Процедура ВыполнитьПервоначальноеЗаполнениеПараметровВидовМедкарт
Процедура ВыполнитьПервоначальноеЗаполнениеПараметровВидовМедкарт() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	МедицинскиеКартыЗаполняемыеПараметры.Ссылка.ВидКарты КАК ВидКарты,
	|	МедицинскиеКартыЗаполняемыеПараметры.ИмяПараметра
	|ИЗ
	|	Справочник.МедицинскиеКарты.ЗаполняемыеПараметры КАК МедицинскиеКартыЗаполняемыеПараметры
	|ИТОГИ ПО
	|	ВидКарты";
	ВыборкаВидыМедкарт = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВидыМедкарт.Следующий() Цикл
		
		ВидМедкартыОбъект = ВыборкаВидыМедкарт.ВидКарты.ПолучитьОбъект();
		ВидМедкартыОбъект.ЗаполняемыеПараметры.Очистить();
		
		Выборка = ВыборкаВидыМедкарт.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ВидМедкартыОбъект.ЗаполняемыеПараметры.Добавить(), Выборка);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Функция - Доступно ручное редактирование
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт - вид карты.
// 
// Возвращаемое значение:
//  Булево - возвращает Истина, если медкарту можно редактировать вручную в таб. документе.
//
Функция ДоступноРучноеРедактирование(ВидКарты) Экспорт
	
	МакетыСРучнымРедактированием = Новый Массив;
	МедицинскаяДеятельностьПереопределяемый.ДополнитьМакетыСРучнымРедактированием(МакетыСРучнымРедактированием);
	
	Возврат МакетыСРучнымРедактированием.Найти(ВидКарты.Макет) <> Неопределено;
	
КонецФункции

// Функция - Роли для подписания
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт - вид карты.
// 
// Возвращаемое значение:
//  Массив - Массив ролей для подписания. Если пустой - медкарта не подписывается ЭЦП.
//
Функция РолиДляПодписания(ВидКарты) Экспорт
	
	Роли = МедицинскаяДеятельностьПереопределяемый.ПолучитьРолиДляПодписанияПоВидуМедкарты(ВидКарты);
	
	Если Роли <> Неопределено Тогда
		Возврат Роли;
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции

// Функция - Используются вычисляемые параметры
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт - вид карты.
// 
// Возвращаемое значение:
//  Булево - Если Ложь, то список параметров медкарты не будет заполняться вычисляемыми параметрами
//
Функция ИспользуютсяВычисляемыеПараметры(ВидКарты) Экспорт
	
	МакетыБезВычисляемыхПараметров = Новый Массив;
	МедицинскаяДеятельностьПереопределяемый.ДополнитьМакетыМедкартБезВычисляемыхПараметров(МакетыБезВычисляемыхПараметров);
	
	Возврат МакетыБезВычисляемыхПараметров.Найти(ВидКарты.Макет) = Неопределено;
	
КонецФункции

// Функция - Параметры расшифровок ЭЦП
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт - вид карты.
// 
// Возвращаемое значение:
//  Неопределено,
//  Соответствие - со свойствами:
//   * Ключ - Значение параметра расшифровки области, в которую должна вставляться область ЭЦП,
//   * Значение - Роль подписи
//
Функция ПараметрыРасшифровокЭЦП(ВидКарты) Экспорт
	
	ПараметрыРасшифровок = МедицинскаяДеятельностьПереопределяемый.ПолучитьПараметрыРасшифровокПоВидуМедкарты(ВидКарты);
	
	Если ПараметрыРасшифровок <> Неопределено Тогда
		Возврат ПараметрыРасшифровок;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Функция - Получить область ЭЦП макета медкарты
//
// Параметры:
//  ВидКарты - СправочникСсылка.ВидыМедицинскихКарт - вид карты.
// 
// Возвращаемое значение:
//  ТабличныйДокумент, Неопределено - Табличный документ области ЭЦП из макета вида медкарты.
//
Функция ПолучитьОбластьЭЦПМакетаМедкарты(ВидКарты) Экспорт
	
	ОбластьЭЦП = МедицинскаяДеятельностьПереопределяемый.ПолучитьОбластьЭЦППоВидуМедкарты(ВидКарты);
	
	Если ОбластьЭЦП <> Неопределено Тогда
		Возврат ОбластьЭЦП;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПолучитьЗначенияПустыхПараметровПоУмолчанию(ВидКарты) Экспорт
	
	ЗначенияПустыхПараметров = МедицинскаяДеятельностьПереопределяемый.ПолучитьЗначенияПустыхПараметровПоУмолчанию(ВидКарты);
	
	Если ЗначенияПустыхПараметров <> Неопределено Тогда
		Возврат ЗначенияПустыхПараметров;
	КонецЕсли;
	
	Возврат Новый Массив;
	
КонецФункции

#КонецОбласти