#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Макет = Объект.Макет;
	
	Если Объект.ИспользуетсяВнешняяПФ Тогда
		ЗаполнитьСписокВыбораВнешнейПФ();
	Иначе
		ЗаполнитьСписокВыбораМакетаПФ();
	КонецЕсли;
	
	ЗаполнитьСписокПараметровМакета();
	
	Если Объект.Ссылка.Пустая() 
		И ЗначениеЗаполнено(Объект.ТипКарты)
		И Объект.ЗаполняемыеПараметры.Количество() = 0
		И (Не Параметры.Свойство("ЗначениеКопирования") Или Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования))
	Тогда
		ЗаполнитьПараметрыПоТипуМедКарты(Объект);
	КонецЕсли;
	
	ЗаполнитьИменаПараметровНРег();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.Макет = Макет;
	Если Не ЗначениеЗаполнено(Объект.НачальныйНомер) Тогда
		Если Вопрос(НСтр("ru='Не задан начальный номер. Установить 0 в качестве начального номера?'"), РежимДиалогаВопрос.ДаНет) = 
			КодВозвратаДиалога.Нет
		Тогда
			Возврат;
		Иначе
			Объект.НачальныйНомер = 0;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьИменаПараметровНРег();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МакетПриИзменении(Элемент)
	
	ПараметрыМакета.Очистить();
	Если Не Объект.ИспользуетсяВнешняяПФ И ЗначениеЗаполнено(Макет) Тогда 
		ЗаполнитьСписокПараметровМакета();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуетсяВнешняяПФПриИзменении(Элемент)
	
	Если Объект.ИспользуетсяВнешняяПФ Тогда
		ЗаполнитьСписокВыбораВнешнейПФ();
	Иначе
		ЗаполнитьСписокВыбораМакетаПФ();
	КонецЕсли;
	
	НастроитьВидимостьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполняемыеПараметрыИмяПараметраПриИзменении(Элемент)
	
	ТекДанные = Элементы.ЗаполняемыеПараметры.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ИмяПараметра) Тогда
		
		ТипЗначенияПараметра = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекДанные.ИмяПараметра, "ТипЗначения");
		ТекДанные.ЗначениеПоУмолчанию = ТипЗначенияПараметра.ПривестиЗначение(Неопределено);
		
		Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ДоступныеТипы = ТипЗначенияПараметра;
		Если ТипЗначенияПараметра.Типы().Количество() > 1 Тогда
			Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ВыбиратьТип = Истина;
		Иначе
			Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ВыбиратьТип = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекДанные.ИмяПараметраНРег = НРег(ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекДанные.ИмяПараметра, "Наименование"));
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполняемыеПараметрыПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ЗаполняемыеПараметры.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекДанные.ИмяПараметра) Тогда
		
		ТипЗначенияПараметра = ОбщегоНазначения.ПолучитьЗначениеРеквизита(ТекДанные.ИмяПараметра, "ТипЗначения");
		
		Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ДоступныеТипы = ТипЗначенияПараметра;
		Если ТипЗначенияПараметра.Типы().Количество() > 1 Тогда
			Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ВыбиратьТип = Истина;
		Иначе
			Элементы.ЗаполняемыеПараметрыЗначениеПоУмолчанию.ВыбиратьТип = Ложь;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыМакетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элемент.ДанныеСтроки(ВыбраннаяСтрока);
	
	// Поиск параметра в списке
	ИмяПараметраНРег = НРег(ТекДанные.Значение);
	НайдПараметры = Объект.ЗаполняемыеПараметры.НайтиСтроки(Новый Структура("ИмяПараметраНРег", ИмяПараметраНРег));
	Если НайдПараметры.Количество() > 0 Тогда
		Элементы.ЗаполняемыеПараметры.ТекущаяСтрока = НайдПараметры[0].ПолучитьИдентификатор();
		Возврат;
	КонецЕсли;
	
	// Поиск параметра в справочнике.
	СтруктураОтбора = Новый Структура("Наименование, ПометкаУдаления", ТекДанные.Значение, Ложь);
	СтруктураРеквизитовНового = Новый Структура("ТипЗначения", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки("100", ДопустимаяДлина.Переменная)));
	ПараметрМедкарты = ОбщегоНазначенияРасширенный.НайтиСсылкуПоОтбору("ПланВидовХарактеристик.ПараметрыМедицинскойКарты",
		СтруктураОтбора, Новый Структура("Наименование", "Подобно"), Истина, СтруктураРеквизитовНового);
		
	Если Не ЗначениеЗаполнено(ПараметрМедкарты) Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Объект.ЗаполняемыеПараметры.Добавить();
	НоваяСтрока.ИмяПараметра = ПараметрМедкарты;
	Элементы.ЗаполняемыеПараметры.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	ПоказатьЗначение(, ПараметрМедкарты);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьПараметрыПоТипу(Команда)
	
	ОбъектКопия = Объект;
	ЗаполнитьПараметрыПоТипуМедКарты(ОбъектКопия);
	КопироватьДанныеФормы(ОбъектКопия, Объект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьИменаПараметровНРег()
	
	Для Каждого СтрокаПараметра Из Объект.ЗаполняемыеПараметры Цикл
		СтрокаПараметра.ИмяПараметраНРег = НРег(СтрокаПараметра.ИмяПараметра.Наименование);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВидимостьДоступность()
	
	//Элементы.ПараметрыМакета.Видимость = Не Объект.ИспользуетсяВнешняяПФ;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПараметровМакета()
	
	ПараметрыМакета.Очистить();
	Если Объект.ИспользуетсяВнешняяПФ Или Не ЗначениеЗаполнено(Макет) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		МакетКарты = Справочники.ВидыМедицинскихКарт.ПолучитьМакет(Макет);
	Исключение
		Возврат;
	КонецПопытки;
	
	ИспользуютсяВычисляемыеПараметры = Справочники.ВидыМедицинскихКарт.ИспользуютсяВычисляемыеПараметры(ЭтотОбъект);
	Элементы.ЗаполняемыеПараметры.Доступность = ИспользуютсяВычисляемыеПараметры;
	Если Не ИспользуютсяВычисляемыеПараметры Тогда
		Объект.ЗаполняемыеПараметры.Очистить();
		Возврат;
	КонецЕсли;
	
	ПараметрыМакета.ЗагрузитьЗначения(ОбщегоНазначенияКлиентСервер.ПолучитьСписокПараметровТабличногоДокумента(МакетКарты));
	ПараметрыМакета.СортироватьПоЗначению();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораВнешнейПФ()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВнешниеОбработки.Ссылка,
	|	ВнешниеОбработки.Наименование
	|ИЗ
	|	Справочник.ВнешниеОбработки КАК ВнешниеОбработки
	|ГДЕ
	|	ВнешниеОбработки.ВидОбработки = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма)";
	
	Выборка = Запрос.Выполнить().Выгрузить();
	
	Элементы.Макет.СписокВыбора.Очистить();
	
	Если Выборка.Количество() > 0 Тогда
		
		Для Каждого Элемент Из Выборка Цикл
			
			Элементы.Макет.СписокВыбора.Добавить(Элемент.Ссылка, Элемент.Наименование);
			
		КонецЦикла;
		Элементы.Макет.СписокВыбора.СортироватьПоПредставлению();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокВыбораМакетаПФ()
	
	КоллекцияМакетов = Метаданные.Справочники.ВидыМедицинскихКарт.Макеты;
	
	Элементы.Макет.СписокВыбора.Очистить();
	
	Если КоллекцияМакетов.Количество() > 0 Тогда
		
		Для Каждого Элемент Из КоллекцияМакетов Цикл
			Если Строка(Элемент.ТипМакета) = "ТабличныйДокумент" Тогда // "ТипМакета.ТабличныйДокумент" недоступно.
				Элементы.Макет.СписокВыбора.Добавить(Элемент.Имя, Элемент.Синоним);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьПараметрыПоТипуМедКарты(ОбъектКопия)
	
	Справочники.ВидыМедицинскихКарт.ЗаполнитьПараметрыПоТипуМедКарты(ОбъектКопия);
	
КонецПроцедуры

#КонецОбласти