#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьНастройки();
	ЗаполнитьРолиИзРолейИБ();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Дерево = ДанныеФормыВЗначение(ДеревоНастроек, Тип("ДеревоЗначений"));
	ТекущийОбъект.Настройки.Очистить();
	ЗаполнитьНастройкиВТЧпрофиля(Дерево.Строки, ТекущийОбъект.Настройки);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьВсе(Команда)
	Объект.Роли.Очистить();
	Для Каждого стр Из Роли Цикл
		стр.РольПрисвоена = Истина;
		Строка = Объект.Роли.Добавить();
		Строка.Роль = стр.Роль;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьВсе(Команда)
	Объект.Роли.Очистить();
	Для Каждого стр Из Роли Цикл
		стр.РольПрисвоена = Ложь;	
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РолиРольПрисвоенаПриИзменении(Элемент)
	Если Элементы.Роли.ТекущиеДанные.РольПрисвоена Тогда
		Стр = Объект.Роли.Добавить();
		Стр.Роль = Элементы.Роли.ТекущиеДанные.Роль;
	Иначе
		Для Каждого Стр Из Объект.Роли Цикл
			Если Стр.Роль = Элементы.Роли.ТекущиеДанные.Роль Тогда
				Объект.Роли.Удалить(Стр);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		Отказ = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоНастроекЗначениеПриИзменении(Элемент)
	
	Элементы.ДеревоНастроек.ТекущиеДанные.Используется = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНастройки()
	
	Дерево = ДанныеФормыВЗначение(ДеревоНастроек, Тип("ДеревоЗначений"));
	Дерево.Строки.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПользователей.Ссылка КАК Ссылка,
		|	НастройкиПользователей.Родитель КАК Родитель,
		|	НастройкиПользователей.ЭтоГруппа КАК ЭтоГруппа,
		|	NULL КАК Значение
		|ИЗ
		|	ПланВидовХарактеристик.НастройкиПользователей КАК НастройкиПользователей
		|
		|УПОРЯДОЧИТЬ ПО
		|	НастройкиПользователей.ЭтоГруппа ИЕРАРХИЯ,
		|	НастройкиПользователей.Наименование";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Не Выборка.Родитель.Пустая() Тогда
			СтрокаГруппы = Дерево.Строки.Найти(Выборка.Родитель, "Настройка", Истина);
			Если СтрокаГруппы=Неопределено Тогда
				СтрокаГруппы = Дерево.Строки.Добавить();
				СтрокаГруппы.Настройка = Выборка.Родитель;
				СтрокаГруппы.ЭтоГруппа = Выборка.ЭтоГруппа;
			КонецЕсли;
		Иначе
			СтрокаГруппы = Дерево;
		КонецЕсли;
		
		СтрокаНастройки = СтрокаГруппы.Строки.Добавить();
		СтрокаНастройки.Настройка = Выборка.Ссылка;
		
		Если Параметры.Ключ.Пустая() Или Не ЗначениеЗаполнено(Выборка.Значение) Тогда
			Если Не Выборка.ЭтоГруппа Тогда
				СтрокиНастройки = Объект.Настройки.НайтиСтроки(Новый Структура("Настройка", СтрокаНастройки.Настройка));
				Если СтрокиНастройки.Количество() = 0 Тогда
					// Заполним по умолчанию для нового профиля
					СтрокаНастройки.Значение = Выборка.Ссылка.ТипЗначения.ПривестиЗначение();
				Иначе
					// Используем настройки, сохраненные в ТЧ существующего профиля.
					Для Каждого стрТЧ Из СтрокиНастройки Цикл
						СтрокаНастройки.Значение = стрТЧ.Значение;
						СтрокаНастройки.Используется = стрТЧ.Используется;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаНастройки.ЭтоГруппа = Выборка.ЭтоГруппа;
		
	КонецЦикла;
	
	ЗначениеВДанныеФормы(Дерево, ДеревоНастроек);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРолиИзРолейИБ()
	Для Каждого Роль Из Метаданные.Роли Цикл
		Строка = Роли.Добавить();
		Строка.Роль = Роль.Имя;
		Строка.РольПредставление = Роль.Синоним;
		Строка.РольПрисвоена = Ложь;
		Для Каждого Стр Из Объект.Роли Цикл
			Если Стр.Роль = Строка.Роль Тогда
				Строка.РольПрисвоена = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;		
	КонецЦикла;
	
	// Удаление ролей профиля, которых уже нет в конфигурации.
	МассивНаУдаление = Новый Массив;
	Для Каждого Стр Из Объект.Роли Цикл
		Если Метаданные.Роли.Найти(Стр.Роль) = Неопределено Тогда
			МассивНаУдаление.Добавить(Стр);	
			Продолжить;
		КонецЕсли;
	КонецЦикла;		
	Для Каждого Стр Из МассивНаУдаление Цикл
		 Объект.Роли.Удалить(Стр);
	КонецЦикла;
	 
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНастройкиВТЧпрофиля(СтрокиДерева, НаборЗаписей)
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		
		Если Не СтрокаДерева.ЭтоГруппа Тогда
			
			Если СтрокаДерева.Настройка.ПометкаУдаления Тогда
				Продолжить;
			КонецЕсли;
			
			Запись = НаборЗаписей.Добавить();
			Запись.Настройка = СтрокаДерева.Настройка;
			Запись.Значение = СтрокаДерева.Настройка.ТипЗначения.ПривестиЗначение(СтрокаДерева.Значение);
			Запись.Используется = СтрокаДерева.Используется;
		Иначе
			ЗаполнитьНастройкиВТЧпрофиля(СтрокаДерева.Строки, НаборЗаписей)
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
