#Область СлужебныйПрограммныйИнтерфейс

// Первоначальное заполнение
Процедура ПерезаполнитьКлассификатор() Экспорт
	
	Справочник = Справочники.ПричиныНетрудоспособности;
	
	// Получение классификтора (из макета).
	Классификатор = Новый ТаблицаЗначений;
	Классификатор.Колонки.Добавить("Код", Новый ОписаниеТипов("Строка"));
	Классификатор.Колонки.Добавить("Наименование", Новый ОписаниеТипов("Строка"));
	
	МакетКлассификатор = Справочник.ПолучитьМакет("СоставКлассификатора");
	
	Для Сч = 3 По МакетКлассификатор.ВысотаТаблицы Цикл
		НоваяСтрока = Классификатор.Добавить();
		НоваяСтрока.Код	 = МакетКлассификатор.Область(Сч, 1).Текст;
		
		Наименование	 = МакетКлассификатор.Область(Сч, 2).Текст;
		НоваяСтрока.Наименование = СтрШаблон("%1 - %2", НоваяСтрока.Код, Наименование);
	КонецЦикла;
	
	// Перезаполнение справочника.
	Для Каждого ОписаниеЭлемента Из Классификатор Цикл
		
		НайденныйЭлемент = Справочник.НайтиПоКоду(ОписаниеЭлемента.Код);
		Если Не ЗначениеЗаполнено(НайденныйЭлемент) Тогда
			
			// Создаем новый элемент справочника.
			НовыйЭлемент = Справочник.СоздатьЭлемент();
			ЗаполнитьЗначенияСвойств(НовыйЭлемент, ОписаниеЭлемента);
			НовыйЭлемент.Записать();
		Иначе
			// Обновляем реквизиты найденного элемента.
			ТекЭлемент = НайденныйЭлемент.ПолучитьОбъект();
			ТекЭлемент.ПометкаУдаления = Ложь;
			Если ТекЭлемент.Наименование <> ОписаниеЭлемента.Наименование Тогда
				ТекЭлемент.Наименование = ОписаниеЭлемента.Наименование;
			КонецЕсли; 
			ТекЭлемент.Записать();
		КонецЕсли;
	КонецЦикла; 
	
	//Пометить на удаление удаленные элементы справочника
	
	ЭлементыСправочника = Справочник.Выбрать();
	Пока ЭлементыСправочника.Следующий() Цикл
		Если Классификатор.Найти(ЭлементыСправочника.Код, "Код") = Неопределено Тогда	
			Элемент = ЭлементыСправочника.ПолучитьОбъект();
			Элемент.ПометкаУдаления = Истина;
			Элемент.Записать();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Массив кодов причин, соответствующих ЛН по ребенку/родственнику.
// 
// Возвращаемое значение:
//  Массив - массив строк кодов справочника.
//
Функция КодыПричинНетрудоспособностиСРодственником() Экспорт
	
	Коды = Новый Массив;
	Коды.Добавить("09");
	Коды.Добавить("12");
	Коды.Добавить("13");
	Коды.Добавить("14");
	Коды.Добавить("15");
	
	Возврат Коды;
	
КонецФункции

#КонецОбласти