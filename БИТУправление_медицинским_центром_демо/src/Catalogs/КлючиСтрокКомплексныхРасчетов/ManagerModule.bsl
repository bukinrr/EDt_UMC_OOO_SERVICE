#Область ПрограммныйИнтерфейс

// Находит либо создает ключ для строки расчета по заданным ключевым параметрам.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура
//  ХарактеристикаНоменклатуры -  СправочникСсылка.ХарактеристикиНоменклатуры - характеристика
//  Цена - Число - цена позиции расчета.
//  Примечание - Строка - примечание позиции расчета.
//  ЕдиницаИзмерения - СправочникСсылка.ЕдиницыИзмерения - единица измерения позиции расчета.
//  ИгнорироватьДолг - Булево - признак игнорирования долга позиции расчета.
//
// Возвращаемое значение:
//  СправочникСсылка.КлючиСтрокКомплексныхРасчетов.
//
Функция ПолучитьКлючСтрокиРасчета(Номенклатура, ХарактеристикаНоменклатуры, Цена, Примечание, Знач ЕдиницаИзмерения, ИгнорироватьДолг) Экспорт
	
	Если ЕдиницаИзмерения = Неопределено Тогда
		ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	Запрос.УстановитьПараметр("Цена", Цена);
	Запрос.УстановитьПараметр("ИгнорироватьДолг", ИгнорироватьДолг);
	Запрос.УстановитьПараметр("ЕдиницаИзмерения", ЕдиницаИзмерения);
	Запрос.УстановитьПараметр("Примечание", Примечание);
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КлючиСтрокКомплексныхРасчетов.Ссылка КАК КлючСтроки
	|ИЗ
	|	Справочник.КлючиСтрокКомплексныхРасчетов КАК КлючиСтрокКомплексныхРасчетов
	|ГДЕ
	|	КлючиСтрокКомплексныхРасчетов.Номенклатура = &Номенклатура
	|	И КлючиСтрокКомплексныхРасчетов.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|	И КлючиСтрокКомплексныхРасчетов.Цена = &Цена
	|	И КлючиСтрокКомплексныхРасчетов.ИгнорироватьДолг = &ИгнорироватьДолг
	//|	И КлючиСтрокКомплексныхРасчетов.Примечание = &Примечание
	|	И КлючиСтрокКомплексныхРасчетов.ЕдиницаИзмерения = &ЕдиницаИзмерения"
	;
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		// Создание ключа
		СтруктураКлюча = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Цена, Примечание, ЕдиницаИзмерения, ИгнорироватьДолг",
											Номенклатура, ХарактеристикаНоменклатуры, Цена, Примечание, ЕдиницаИзмерения, ИгнорироватьДолг);
											
		Возврат СоздатьКлючСтрокиРасчета(СтруктураКлюча);
	Иначе
		Возврат Результат.Выгрузить()[0].КлючСтроки;
	КонецЕсли;
	
КонецФункции

// Процедура ДобавитьКлючиПозицийРасчета.
//
// Параметры:
//  ТаблицаСостава - ТаблицаЗначений.
//
Процедура ДобавитьКлючиПозицийРасчета(ТаблицаСостава) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПозицииДокумента", ТаблицаСостава);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПозицииДокумента.Номенклатура,
	|	ПозицииДокумента.ХарактеристикаНоменклатуры,
	|	ПозицииДокумента.Цена,
	|	ПозицииДокумента.ЕдиницаИзмерения,
	//|	ПозицииДокумента.Примечание,
	|	ПозицииДокумента.ИгнорироватьДолг
	|ПОМЕСТИТЬ ПозицииДокумента
	|ИЗ
	|	&ПозицииДокумента КАК ПозицииДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(КлючиСтрокКомплексныхРасчетов.Ссылка) КАК КлючСтроки,
	|	ПозицииДокумента.Номенклатура,
	|	ПозицииДокумента.ХарактеристикаНоменклатуры,
	|	ПозицииДокумента.Цена,
	|	ПозицииДокумента.ИгнорироватьДолг,
	//|	ПозицииДокумента.Примечание,
	|	ПозицииДокумента.ЕдиницаИзмерения
	|ИЗ
	|	Справочник.КлючиСтрокКомплексныхРасчетов КАК КлючиСтрокКомплексныхРасчетов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПозицииДокумента КАК ПозицииДокумента
	|		ПО КлючиСтрокКомплексныхРасчетов.Номенклатура = ПозицииДокумента.Номенклатура
	|			И КлючиСтрокКомплексныхРасчетов.ХарактеристикаНоменклатуры = ПозицииДокумента.ХарактеристикаНоменклатуры
	|			И КлючиСтрокКомплексныхРасчетов.Цена = ПозицииДокумента.Цена
	|			И КлючиСтрокКомплексныхРасчетов.ИгнорироватьДолг = ПозицииДокумента.ИгнорироватьДолг
	//|			И КлючиСтрокКомплексныхРасчетов.Примечание = ПозицииДокумента.Примечание
	|			И КлючиСтрокКомплексныхРасчетов.ЕдиницаИзмерения = ПозицииДокумента.ЕдиницаИзмерения
	|
	|СГРУППИРОВАТЬ ПО
	|	ПозицииДокумента.Номенклатура,
	|	ПозицииДокумента.Цена,
	|	ПозицииДокумента.ХарактеристикаНоменклатуры,
	|	ПозицииДокумента.ИгнорироватьДолг,
	//|	ПозицииДокумента.Примечание,
	|	ПозицииДокумента.ЕдиницаИзмерения"
	;
	Выб = Запрос.Выполнить().Выбрать();
	
	Если ТаблицаСостава.Колонки.Найти("КлючСтроки") = Неопределено Тогда
		ТаблицаСостава.Колонки.Добавить("КлючСтроки", Новый ОписаниеТипов("СправочникСсылка.КлючиСтрокКомплексныхРасчетов"));
	КонецЕсли;
	
	Отбор = ПолучитьСтруктуруИзмеренийКлючаСтроки();
	Для Каждого СтрокаСостава Из ТаблицаСостава Цикл
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаСостава);
		Выб.Сбросить();
		Если Выб.НайтиСледующий(Отбор) Тогда
			СтрокаСостава.КлючСтроки = Выб.КлючСтроки;
		Иначе
			СтрокаСостава.КлючСтроки = СоздатьКлючСтрокиРасчета(СтрокаСостава);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Пустая структура с измерениями ключа строки расчета.
//
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруИзмеренийКлючаСтроки() Экспорт
	Возврат Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Цена, ЕдиницаИзмерения, ИгнорироватьДолг");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьКлючСтрокиРасчета(СтруктураКлюча)
	
	Если СтруктураКлюча.ЕдиницаИзмерения = Неопределено Тогда
		СтруктураКлюча.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);

	Объект = Справочники.КлючиСтрокКомплексныхРасчетов.СоздатьЭлемент();
	ЗаполнитьЗначенияСвойств(Объект, СтруктураКлюча);
	Объект.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Объект.Ссылка;
	
КонецФункции

#КонецОбласти