#Область РазделОписанияПеременных

&НаКлиенте
Перем ТекущийПриемник;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУОСтрокеПоУмолчанию();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСписокПриемников();
	ОбновитьСписокПеременныхПростой();
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	мСтрокиСПриемниками = Новый Массив;
	Для Каждого СтрокаПеременной Из Объект.СписокПеременных Цикл
		Если ЗначениеЗаполнено(СтрокаПеременной.Приемник) Тогда
			мСтрокиСПриемниками.Добавить(СтрокаПеременной);
		КонецЕсли;
	КонецЦикла;
	
	Если ПростойРежим И мСтрокиСПриемниками.Количество() > 0 Тогда
		Если Вопрос(НСтр("ru='Режим изменён на простой. При записи будут очищены все переменные, для которых указан приемник. Продолжить?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;
		Иначе
			Для Каждого СтрокаСПриемником Из мСтрокиСПриемниками Цикл
				Объект.СписокПеременных.Удалить(СтрокаСПриемником);
			КонецЦикла;
			ОбновитьСписокПриемников();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПолучательВычисляемогоЗначенияПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеременныхИмяПеременнойПриИзменении(Элемент)
	
	ТекДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекДанные.ИмяПеременной = ОбщегоНазначенияКлиентСервер.ПривестиИмяПараметраКДопустимому(ТекДанные.ИмяПеременной);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеременныхПараметрПриИзменении(Элемент)
	
	ТекДанные = Элемент.Родитель.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекДанные.ИмяПеременной) Тогда
		
		ТекДанные.ИмяПеременной = ОбщегоНазначенияКлиентСервер.ПривестиИмяПараметраКДопустимому(ТекДанные.Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПростойРежимПриИзменении(Элемент)
	
	УстановитьВидимостьЭлементов();
	
	Если ПростойРежим Тогда
		ОбновитьСписокПеременныхПростой();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникиПриАктивизацииСтроки(Элемент)
	
	ОбновитьСписокПеременныхПоПриемнику();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеременныхПриемникаПриИзменении(Элемент)
	
	Для Каждого СтрокаПриемника Из Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ТекущийПриемник)) Цикл
		Объект.СписокПеременных.Удалить(СтрокаПриемника);
	КонецЦикла;
	
	Для Каждого СтрокаПриемника Из СписокПеременныхПриемника Цикл
		НоваяСтрока = Объект.СписокПеременных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаПриемника);
		НоваяСтрока.Приемник = ТекущийПриемник;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПеременныхПростойПриИзменении(Элемент)
	
	ПростыеСтроки = Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыHTML.ПустаяСсылка")));
	Для Каждого ПростаяСтрока Из ПростыеСтроки Цикл
		Объект.СписокПеременных.Удалить(ПростаяСтрока);
	КонецЦикла;
	
	Для Каждого ПростаяСтрока Из СписокПеременныхПростой Цикл
		НоваяСтрока = Объект.СписокПеременных.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ПростаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникиПередУдалением(Элемент, Отказ)
	
	Если Не ЗначениеЗаполнено(ТекущийПриемник) Тогда
		Если Элементы.Приемники.ТекущиеДанные <> Неопределено
			И Элементы.Приемники.ТекущиеДанные.Приемник = ИмяПриемникаПоУмолчанию()
		Тогда
			Отказ = Истина;
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаПриемника Из Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ТекущийПриемник)) Цикл
		Объект.СписокПеременных.Удалить(СтрокаПриемника);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникиПриемникПриИзменении(Элемент)
	
	СтрокиТекущегоПриемника = Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ТекущийПриемник));
	
	НовыйПриемник = Элемент.Родитель.ТекущиеДанные.Приемник;
	
	Элементы.СписокПеременныхПриемника.ТолькоПросмотр = Не ЗначениеЗаполнено(НовыйПриемник);
	
	Если Не ЗначениеЗаполнено(НовыйПриемник) Тогда
		Для Каждого СтрокаТекущегоПриемника Из СтрокиТекущегоПриемника Цикл
			Объект.СписокПеременных.Удалить(СтрокаТекущегоПриемника);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТекущегоПриемника Из СтрокиТекущегоПриемника Цикл
		СтрокаТекущегоПриемника.Приемник = НовыйПриемник;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Копирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемникиПриИзменении(Элемент)
	
	Для Каждого СтрокаПриемника Из Приемники Цикл
		Если Не ЗначениеЗаполнено(СтрокаПриемника.Приемник) Тогда
			СтрокаПриемника.Приемник = ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыHTML.ПустаяСсылка");
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьЭлементов()
	
	Получатель = Объект.ПолучательВычисляемогоЗначения;
	Элементы.ГруппаДополнительныеПараметры.Видимость = (Получатель <> ПредопределенноеЗначение("Перечисление.ПолучателиВычисляемогоЗначения.ВычисляемыйБлок") 
														И Получатель <> ПредопределенноеЗначение("Перечисление.ПолучателиВычисляемогоЗначения.ПараметрEmailСообщения")
														И Получатель <> ПредопределенноеЗначение("Перечисление.ПолучателиВычисляемогоЗначения.ДопПараметрПриказаМедОсмотра"));
	
	Элементы.СписокПеременныхПростой.Видимость = ПростойРежим;
	Элементы.РасширенныйРежим.Видимость = Не ПростойРежим;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокПеременныхПоПриемнику()
	
	СписокПеременныхПриемника.Очистить();
	Если Элементы.Приемники.ТекущиеДанные = Неопределено
		Или Не ЗначениеЗаполнено(Элементы.Приемники.ТекущиеДанные.Приемник)
	Тогда
		Элементы.СписокПеременныхПриемника.ТолькоПросмотр = Истина;
		ТекущийПриемник = Неопределено;
		Возврат;
	КонецЕсли;
	
	Элементы.СписокПеременныхПриемника.ТолькоПросмотр = Ложь;
	
	Если ТипЗнч(Элементы.Приемники.ТекущиеДанные.Приемник) = Тип("Строка") Тогда
		ТекущийПриемник = ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыHTML.ПустаяСсылка");
	Иначе
		ТекущийПриемник = Элементы.Приемники.ТекущиеДанные.Приемник;
	КонецЕсли;
	
	Для Каждого СтрокаПеременной Из Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ТекущийПриемник)) Цикл
		ЗаполнитьЗначенияСвойств(СписокПеременныхПриемника.Добавить(), СтрокаПеременной);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяПриемникаПоУмолчанию()
	
	Возврат НСтр("ru='По умолчанию'");
	
КонецФункции

&НаСервере
Процедура УстановитьУОСтрокеПоУмолчанию()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.Приемники.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приемники.Приемник");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = ИмяПриемникаПоУмолчанию();
	
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокПеременныхПростой()
	
	СписокПеременныхПростой.Очистить();
	Для Каждого СтрокаПростойПеременной Из Объект.СписокПеременных.НайтиСтроки(Новый Структура("Приемник", ПредопределенноеЗначение("ПланВидовХарактеристик.ПараметрыHTML.ПустаяСсылка"))) Цикл
		ЗаполнитьЗначенияСвойств(СписокПеременныхПростой.Добавить(), СтрокаПростойПеременной);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокПриемников()
	
	Приемники.Очистить();
	
	СтрокаПоУмолчанию = Приемники.Добавить();
	СтрокаПоУмолчанию.Приемник = ИмяПриемникаПоУмолчанию();
	
	мПриемники = Новый Массив;
	Для Каждого СтрокаПеременных Из Объект.СписокПеременных Цикл
		Если ЗначениеЗаполнено(СтрокаПеременных.Приемник)
			И мПриемники.Найти(СтрокаПеременных.Приемник) = Неопределено
		Тогда
			мПриемники.Добавить(СтрокаПеременных.Приемник);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Приемник Из мПриемники Цикл
		НоваяСтрокаПриемника = Приемники.Добавить();
		НоваяСтрокаПриемника.Приемник = Приемник;
	КонецЦикла;
	
	ПростойРежим = мПриемники.Количество() = 0;
	
КонецПроцедуры

#КонецОбласти
