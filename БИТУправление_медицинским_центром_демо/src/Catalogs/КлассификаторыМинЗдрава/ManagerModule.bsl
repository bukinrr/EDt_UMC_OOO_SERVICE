
#Область ПрограммныйИнтерфейс

// Возвращает идентификатор основного классификатора источника на сайте росминздрава.
// 
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава - классификатор
//
// Возвращаемое значение:
//   - Строка
//
Функция ПолучитьOIDСправочника(ВидКлассификатора) Экспорт
	
	Попытка
		ИндексЗначенияПеречисления = Перечисления.ВидыКлассификаторовМинЗдрава.Индекс(ВидКлассификатора);
		МетаданныеПеречисления = Метаданные.Перечисления.ВидыКлассификаторовМинЗдрава.ЗначенияПеречисления[ИндексЗначенияПеречисления];
		Возврат МетаданныеПеречисления.Комментарий;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

// Возвращает список альтернативных идентификаторов классификатора источника на сайте росминздрава.
//
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава	 - классификатор.
// 
// Возвращаемое значение:
//  Массив - строки дополнительных OID классификатора в ФР НСИ ЕГИСЗ.
//
Функция ПолучитьАльтернативныеOID(ВидКлассификатора) Экспорт
	СписокOID = Новый Массив();
	
	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПорядокСлучаевГоспитализацииИлиОбращения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.109");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЕдиницыИзмерения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1031");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВитальныеПараметры Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1010");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипыКонсультации Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.12");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1463");
		СписокOID.Добавить("1.2.643.5.1.13.13.99.2.29");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЦелиТелемедицинскойКонсультации Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1369");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РезультатыОбращения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.688");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыИнвалидности Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.702");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПотенциальноОпасныеСоцфакторы Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.713");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессиональныеВредностиПациента Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.714");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПризнакЖителяГородаСела Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.573");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПривычкиИЗависимости Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.701");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипПатологическойРеакции Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.709");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПатологическиеРеакции Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.705");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникКодовИнтерпретацииРезультатов Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.204");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1381");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииНаселения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.32");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1050");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураСпециальностей Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.181");
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.716");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДолжностиРаботниковМедОрганизаций Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.733");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторКатегорийЛьгот Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.358");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторДокументовУдостоверяющихЛичность Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.498");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДокументыУдостоверяющиеЛичность Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1011");
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.736");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторПоловойПринадлежности Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.156");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипАдресаПациента Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1415");
		СписокOID.Добавить("1.2.643.5.1.13.13.99.2.241");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФормыОказанияМедицинскойПомощи Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.568");
		СписокOID.Добавить("1.2.643.5.1.13.13.99.2.377");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УсловияОказанияМедицинскойПомощи Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.103");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыКровиДляУчетаСигнальнойИнформацииОПациенте Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.719");
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.703");
	// Служебные
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КодируемыеПоляCDAДокументов Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.41");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1380");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникСекцийДокументов Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.23");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1379");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииИПодкатегорииТранспортныхСредств Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.74");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1113");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникМедицинскихПоказанийКУправлениюТС Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.72");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникМедицинскихОграниченийКУправлениюТС Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.71");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникНаличияМедицинскихПоказанийОграниченийИПротивопоказанийКУправлениюТС Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.73");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыНозологическихЕдиницДиагноза Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.4");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессииРабочихИДолжностейСлужащих Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.658");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УровеньКонфиденциальностиМедицинскогоДокумента Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.9");
		СписокOID.Добавить("2.16.840.1.113883.2.35.10.9");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1116");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепеньОбоснованностиДиагноза Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1076");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииГражданства Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.218");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РезультатыИндивидуальнойПрограммыРеабилитацииИнвалидов Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.193");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПричиныИнвалидности Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.169");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураКоечногоФондаМедицинскойОрганизации Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.221");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепеньТяжестиСостоянияПациента Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.111");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИсходыГоспитализации Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.542");
		СписокOID.Добавить("1.2.643.5.1.13.13.99.2.85");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыТравмПоСпособуПолучения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.105");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ХарактерЗаболевания Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.586");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПричиныНетрудоспособности Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.121");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СрочностьГоспитализации Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.3");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1375");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепениВыраженностиСтойкихРасстройств Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.711");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СубъектыРФ Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1093");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипыИнструментальныхИсследований Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.1504.11");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1378");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ХарактерыТеченияЗаболевания Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.708");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофилиЛабораторныхИсследований Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.10043");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФРМРДолжностиМедицинскогоПерсонала Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1102");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтатусыДиспансерногоНаблюдения Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.531");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТрансплантологияТипыРодственнойСвязи Тогда
		СписокOID.Добавить("1.2.643.5.1.13.13.99.2.239");
		СписокOID.Добавить("1.2.643.5.1.13.13.11.1429");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтатусВыполненияМедицинскойУслуги Тогда
		СписокOID.Добавить("1.2.643.5.1.13.2.1.1.142");
	Иначе
		ИмяЗначения = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидКлассификатора);
		Если ИмяЗначения = "ПричиныОтказовВГоспитализации" Тогда
			СписокOID.Добавить("1.2.643.5.1.13.2.1.1.194");
		КонецЕсли;
	КонецЕсли;
	
	Возврат СписокOID;
	
КонецФункции

// Описывает соответствие между именем реквизита в классификаторе и его именем в базе 1С.
// 
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава - классификатор
// 
// Возвращаемое значение:
//  Соответствие.
//
Функция ПолучитьСопоставленийРеквизитовИXMLСправочникаЕГИСЗ(ВидКлассификатора) Экспорт
	
	Сопоставление = Новый Соответствие;
	
	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МестоОказанияМедицинскойПомощи Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//3) SORT, Код сортировки, Целочисленное, обязательное поле. Код предназначен для сортировки записей в логическом порядке, Обязательное;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЕдиницыИзмерения Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Уникальный идентификатор единицы измерения лабораторного теста, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) FULLNAME, Полное наименование, Строковое;
		Сопоставление.Вставить("FULLNAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВыявленныеПатологии Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) FULLNAME, Наименование, Строковое;
		Сопоставление.Вставить("FULLNAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЦелиТелемедицинскойКонсультации Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, целочисленный тип, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PURPOSE, Цель, Строковое, цель телемедицинской консультации, строчный тип;
		Сопоставление.Вставить("PURPOSE", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникЛабораторныхМатериаловИОбразцов Тогда
		//1) ID, Код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//5) SPECIMEN, Образец, Строковое;
		Сопоставление.Вставить("SPECIMEN", "Наименование");
		//6) Sort, Сортировка, Целочисленное;
		Сопоставление.Вставить("Sort", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИсточникиОплатыМедПомощи Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) FULL_NAME, Полное наименование, Строковое;
		Сопоставление.Вставить("FULL_NAME", "НаименованиеПолное");
		//3) SHORT_NAME, Краткое наименование, Строковое;
		Сопоставление.Вставить("SHORT_NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыМедПомощи Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
		//3) NAME, Полное название, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//4) SORT, Код сортировки, Целочисленное, числовой формат, обязательное поле. Код предназначен для сортировки записей в логическом порядке, Обязательное;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПотенциальноОпасныеСоцфакторы Тогда
		//1) ID, Код, Целочисленное, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//3) PARENT, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессиональныеВредностиПациента Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число, состоящее из трех символов, генерирующихся случайным образом, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//3) NAME, Полное название, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//4) PARENT, Код родительской записи, Целочисленное, целое число, состоящее из трех символов;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СоциальныеГруппыНаселения Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Название, Строковое, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипПатологическойРеакции Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число, состоящее из двух символов, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//3) PARENT, Родительский узел, Целочисленное, Родительский узел иерархического справочника;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИмплантируемыеИВспомогательныеУстройства Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//3) PARENT, Код родительского элемента, Целочисленное;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
		//4) NAME, Наименование, Строковое, наименование вида изделия;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыАнестезии Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) Name, Вид анестезии, Строковое, Наименование вида анестезии по способу введения анестетиков;
		Сопоставление.Вставить("NAME", "Наименование");
		//3) Parent, Код родительской записи, Целочисленное, Родительский узел иерархического справочника;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИммунобиологическиеЛекарственныеПрепараты Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число – номер по порядку, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//5) TRADENAME, Торговое наименование МИБП , Строковое, текстовое поле;
		Сопоставление.Вставить("TRADENAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииНаселения Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, целое четырехзначное число (коды сформированы случайным образом), Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//4) NAME_SHORT, Краткое название категории льготы, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME_SHORT", "Наименование");
		//5) NAME_FULL, Полное название категории льготы, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME_FULL", "НаименованиеПолное");
		//6) GROUP, Код родительской записи, Целочисленное, содержит код родительской группы категории льготы, позволяет проследить иерархическую структуру данного справочника, числовой формат, целое четырехзначное число;
		Сопоставление.Вставить("GROUP", "УИДЕГИСЗРодителя");
		//11) SORT, Код сортировки, Целочисленное;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РЭМДКлассификаторКодовСообщений Тогда
		//1) ID, Идентификатор, Целочисленное, целое число, обязательное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) CODE, Код ответа, Строковое, строка, обязательное;
		Сопоставление.Вставить("CODE", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураСпециальностей Тогда
		//1) ID, Код , Целочисленное, текстовый формат, трехсимвольный, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//3) PARENT, Код родительской записи, Целочисленное, текстовый формат, трехсимвольный;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДолжностиРаботниковМедОрганизаций Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PID, Код родительской записи, Целочисленное, позволяет проследить иерархическую структуру данного справочника, числовой формат;
		Сопоставление.Вставить("PID", "УИДЕГИСЗРодителя");
		//3) SORT, Номер строки, Целочисленное, код, используемый для сортировки записей в иерархическом порядке, числовой формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("SORT", "НПП");
		//4) NAME, Название, Строковое, название, определяющее должность работника или группу должностей определенного вида, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторКатегорийЛьгот Тогда
		//1) ID, ID, Целочисленное, Уникальный идентификатор (УИ)., Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) DESCR, DESCR, Строковое, Наименование записи;
		Сопоставление.Вставить("DESCR", "Наименование");
		//3) CODE, CODE, Целочисленное, Код записи;
		Сопоставление.Вставить("CODE", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторДокументовУдостоверяющихЛичность Тогда
		//1) N_ID, Уникальный идентификатор (УИ), Целочисленное, Обязательное;
		Сопоставление.Вставить("N_ID", "УИДЕГИСЗ");
		//3) S_NAME, Наименование записи, Строковое;
		Сопоставление.Вставить("S_NAME", "Наименование");
		//4) N_ORDER, Порядок сортировки, Строковое;
		Сопоставление.Вставить("N_ORDER", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторСоциальныхСтатусов Тогда
		//1) ID, ID, Целочисленное, Уникальный идентификатор (УИ)., Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) DESCR, DESCR, Строковое, Наименование записи;
		Сопоставление.Вставить("DESCR", "Наименование");
		//3) CODE, CODE, Строковое, Код записи;
		Сопоставление.Вставить("CODE", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтраныМира Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//3) NAME_SHORT, Краткое наименование, Строковое;
		Сопоставление.Вставить("NAME_SHORT", "Наименование");
		//4) NAME_FULL, Полное наименование, Строковое, Отсутствие в позиции классификатора полного наименования страны мира означает его совпадение с кратким наименованием;
		Сопоставление.Вставить("NAME_FULL", "НаименованиеПолное");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СубъектыРФ Тогда
		//1) id, Код, Целочисленное, уникальный идентификатор записи, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) SUBJECT, Субъекты РФ, Строковое;
		Сопоставление.Вставить("SUBJECT", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СопоставленияКодовЛьготСЛьготнымиКатегориямиГраждан Тогда
		//1) ID, Код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//5) NAME_FORM, Наименование по форме, Строковое;
		Сопоставление.Вставить("NAME_FORM", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ХарактерыТеченияЗаболевания Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, целое число, состоящее из двух символов, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//5) PARENT, Родительский узел, Целочисленное, родительский узел иерархического справочника;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДокументыУдостоверяющиеЛичность Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT_ID, Код родительской записи, Целочисленное, позволяет проследить иерархическую структуру данного справочника, числовой формат, целое число;
		Сопоставление.Вставить("PARENT_ID", "УИДЕГИСЗРодителя");
		//3) NAME, Полное наименование, Строковое, полное наименование, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//6) SORT, Код сортировки, Целочисленное, числовой формат;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипАдресаПациента Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) ADDRESS_TYPE, Тип адреса, Строковое, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("ADDRESS_TYPE", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипыДокументированныхСобытий Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Уникальный идентификатор позиции, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT_ID, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT_ID", "УИДЕГИСЗРодителя");
		//3) Type, Наименование типа, Строковое, Наименование типа документированного исследования;
		Сопоставление.Вставить("TYPE", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФормыОказанияМедицинскойПомощи Тогда
		//1) ID, ID, Целочисленное, Уникальный идентификатор (УИ)., Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) S_NAME, S_NAME, Строковое, Наименование записи;
		Сопоставление.Вставить("S_NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УсловияОказанияМедицинскойПомощи Тогда
		//1) CODE, Уникальный идентификатор, Целочисленное, Уникальный идентификатор (УИ), Обязательное;
		Сопоставление.Вставить("CODE", "УИДЕГИСЗ");
		//2) NAME, Наименование, Строковое, Наименование записи;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыКровиДляУчетаСигнальнойИнформацииОПациенте Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, составлен с учетом иерархической структуры справочника, числовой формат, целое четырехзначное число, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME_FULL, Полное наименование, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME_FULL", "НаименованиеПолное");
		//3) NAME_SHOT, Краткое наименование, Строковое, Краткое название показателя для обозначения показателя в записи сводного фенотипа;
		Сопоставление.Вставить("NAME_SHOT", "Наименование");
		//4) PARENT, Код родительской записи, Целочисленное, позволяет проследить иерархическую структуру данного справочника, числовой формат, целое четырехзначное число;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииИПодкатегорииТранспортныхСредств Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, числовой формат, обязательное поле. Уникальный идентификатор категории/подкатегории ТС, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) CODE, Код, Строковое, текстовый формат, обязательное поле. Уникальный буквенно-цифровой код категории/подкатегории ТС для использования в документах, Обязательное;
		Сопоставление.Вставить("CODE", "НаименованиеПолное");
		//3) NAME, Название, Строковое, текстовый формат, обязательное поле. Наименование категории/подкатегории ТС, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КодируемыеПоляCDAДокументов Тогда
		//1) ID, Код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT_ID, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT_ID", "УИДЕГИСЗРодителя");
		//4) NAME, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыНозологическихЕдиницДиагноза Тогда
		//1) ID, Уникальный идентификатор, Строковое, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) FULL_NAME, Полное наименование, Строковое;
		Сопоставление.Вставить("FULL_NAME", "НаименованиеПолное");
		//3) SHORT_NAME, Краткое наименование, Строковое;
		Сопоставление.Вставить("SHORT_NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессииРабочихИДолжностейСлужащих Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Уникальный идентификатор (УИ)., Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) P_ID, Уникальный идентификатор родительской записи, Целочисленное, Уникальный идентификатор родительской записи;
		Сопоставление.Вставить("P_ID", "УИДЕГИСЗРодителя");
		//3) NAME, Наименование, Строковое, Наименование;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РешениеОГоспитализацииВМедицинскуюОрганизациюПриПоступлении Тогда
		//1) Id, Код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) Decision, Наименование, Строковое;
		Сопоставление.Вставить("DECISION", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СМПСправочникВидовРаботИУслуг Тогда
		//1) id, Уникальный_идентификатор, Строковое, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//3) name, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникКодовИнтерпретацииРезультатов Тогда
		//2) NAME, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИсходыГоспитализации Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) S_NAME, Наименование записи, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("S_NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепеньОбоснованностиДиагноза Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) ID_PARENT, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("ID_PARENT", "УИДЕГИСЗРодителя");
		//3) NAME, Полное наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
		// 4) SORT, Сортировка, Целочисленный;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииГраждан Тогда
		//2) NAME, Полное наименование, Строковое, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "НаименованиеПолное");
		//2) NAME_SHORT_FRLLO, Краткое наименование ФРЛЛО, Строковое;
		Сопоставление.Вставить("NAME_SHORT_FRLLO", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураКоечногоФондаМедицинскойОрганизации Тогда
		//1) ID, Код, Целочисленное, числовой формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PID, Код родительской записи, Целочисленное, числовой формат, присваивается согласно иерархии справочника;
		Сопоставление.Вставить("PID", "УИДЕГИСЗРодителя");
		//3) NAME, Полное название, Строковое, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//9) SORT, Сортировка, Целочисленное, Целочисленный, порядок сортировки;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииГражданства Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Уникальный идентификатор, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) S_NAME, Наименование, Строковое, Категория гражданства в соответствии с №62-ФЗ «О гражданстве Российской Федерации»;
		Сопоставление.Вставить("S_NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПричиныИнвалидности Тогда
		//1) CODE, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("CODE", "УИДЕГИСЗ");
		//2) NAME, Название записи, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МедицинскиеОбследованияДляМСЭ Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//9) FLC_REMD, ФЛК РЭМД, Строковое, Данное поле добавлено по требованию разработчиков РЭМД с целью проведения форматно-логического контроля;
		Сопоставление.Вставить("FLC_REMD", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ОценкиСостоянияДляМСЭ Тогда
		//1) ID, Код, Целочисленный, уникальный идентификатор записи, числовой формат, целое число, обязательное поле;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное наименование, Строчный, полное наименование, текстовый формат, обязательное поле;
		Сопоставление.Вставить("Name", "Наименование");
		//3) Actual, Актуальность, Логический;
		Сопоставление.Вставить("Actual", "Архив");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СпособПолученияУведомленияОПроведенииМСЭ Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NOTIFICATION, Способ получения уведомления, Строковое;
		Сопоставление.Вставить("NOTIFICATION", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникЛабораторныхМатериалов Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) MATTER, Материал, Строковое;
		Сопоставление.Вставить("MATTER", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИсточникМедицинскойИнформации Тогда
		//1) Id, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("Id", "УИДЕГИСЗ");
		//2) P_id, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("P_id", "УИДЕГИСЗРодителя");
		//3) Name, Наименование, Строковое;
		Сопоставление.Вставить("Name", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыМедицинскихНаправлений Тогда
		//1) ID, Код, Целочисленное, Код (ID) – уникальный идентификатор, целое число, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, Полное название (NAME), обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//4) SORT, Код сортировки, Целочисленное, числовой формат, обязательное поле. Код предназначен для сортировки записей в логическом порядке, Обязательное;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыЗдоровья Тогда
		//1) ID, Код, Целочисленное, Уникальный идентификатор записи, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Наименование, Строковое, Наименование группы здоровья;
		Сопоставление.Вставить("NAME", "Наименование");
		//4) SORT, Сортировка, Строчный;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепеньТяжестиСостоянияПациента Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, возможные значения – целые числа от 1 до 6, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строковое, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//5) SORT, Сортировка, Целочисленное, приведение данных к порядковой шкале для упорядочивания терминов справочника от более легкой к более тяжелой степени тяжести состояний, целое число от 1 до 7;
		Сопоставление.Вставить("SORT", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УровеньКонфиденциальностиМедицинскогоДокумента Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, числовой формат, обязательное поле. Уникальный идентификатор уровня конфиденциальности медицинского документа, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//3) NAME, Название, Строковое, текстовый формат, обязательное поле. Наименование уровня конфиденциальности медицинского документа., Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
		//5) ORDER, Порядок, Целочисленный, числовой формат, обязательное поле. Порядок следования уровней конфиденциальности медицинского документа.;
		Сопоставление.Вставить("ORDER", "НПП");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РеестрРуководствПоРеализацииСтруктурированныхЭлектронныхМедицинскихДокументов Тогда
		//4) FULL_NAME, Полное наименование, Строковое, Полное наименование руководства по реализации СЭМД;
		Сопоставление.Вставить("FULL_NAME", "Наименование");
		//1) OID, OID, Строковое, Уникальный идентификатор объекта НСИ, Обязательное;
		Сопоставление.Вставить("OID", "OIDКлассификатораМинздрава");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофилиЛабораторныхИсследований Тогда
		//1) ID, Уникальный код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) Description, Наименование профиля, Строковое;
		Сопоставление.Вставить("Description", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УточнениеМестаВзятияМатериала Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT_ID, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT_ID", "УИДЕГИСЗРодителя");
		//3) NAME, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.АнатомическиеЛокализации Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) ID_PARENT, Код родительской записи, Целочисленное, Ссылка на родительскую запись, номер строки предшествующего уровня, к которому относится данная запись, позволяет проследить иерархическую структуру данного справочника;
		Сопоставление.Вставить("ID_PARENT", "УИДЕГИСЗРодителя");
		//3) NAME, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.Латеральность Тогда
		//1) ID, Код, Целочисленное, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) laterality, Латеральность, Строковое, обязательное поле, Обязательное;
		Сопоставление.Вставить("laterality", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФРМРДолжностиМедицинскогоПерсонала Тогда
		//1) id, Код , Целочисленное, уникальный идентификатор записи, числовой формат, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("id", "УИДЕГИСЗ");
		//2) parent_id, Код родительской записи , Целочисленное, позволяет проследить иерархическую структуру данного справочника, числовой формат, целое число;
		Сопоставление.Вставить("parent_id", "УИДЕГИСЗРодителя");
		//3) work_position, Должность медицинского персонала, Строковое, текстовый формат;
		Сопоставление.Вставить("work_position", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПриоритетИсполненияРецепта Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) Priority, Приоритет рецепта, Строковое;
		Сопоставление.Вставить("Priority", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СрокДействияРецепта Тогда
		//1) ID, Уникальный идентификатор, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) Period, Срок действия рецепта, Строковое;
		Сопоставление.Вставить("Period", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПутиВведенияЛекарственныхПрепаратов Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор, обязательное поле, целое число, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME_RUS, Путь введения на русском языке, Строковое, наименование пути введения лекарственных средств на русском языке, обязательное поле, текстовый формат, Обязательное;
		Сопоставление.Вставить("NAME_RUS", "Наименование");
		//4) PARENT, Родительский узел, Целочисленное, родительский узел иерархического справочника, целое число;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УровниОбразования Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT, Код родительской записи, Целочисленное, числовой формат, целое число, не обязательное поле;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
		//3) DESCR, Название, Строковое, название уровня образования, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("DESCR", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТрансплантологияТипыРодственнойСвязи Тогда
		//1) ID, Код, Целочисленное, уникальный идентификатор записи, числовой формат, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) RELATE_TYPE, Тип родственной связи, Строковое, текстовый формат, обязательное поле, Обязательное;
		Сопоставление.Вставить("RELATE_TYPE", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ОценкаФизическогоРазвития Тогда
		//1) ID, Код, Строковое, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) ID_PARENT, Код родительской записи, Строковое;
		Сопоставление.Вставить("ID_PARENT", "УИДЕГИСЗРодителя");
		//3) DESCRIPTION, Описание, Строковое;
		Сопоставление.Вставить("DESCRIPTION", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МероприятияПМОДиспансеризацииИУД Тогда
		//1) id, Уникальный код, Целочисленное, Обязательное;
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) PARENT_FNSI_KEY, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT_FNSI_KEY", "УИДЕГИСЗРодителя");
		//3) NAME, Наименование, Строковое;
		Сопоставление.Вставить("NAME", "Наименование");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтатусВыполненияМедицинскойУслуги Тогда
		//1) CODE, Идентификатор, Целочисленное, уникальный идентификатор, целое число, обязательное поле, Обязательное;
		Сопоставление.Вставить("CODE", "УИДЕГИСЗ");
		//2) PARENT, Код родительской записи, Целочисленное;
		Сопоставление.Вставить("PARENT", "УИДЕГИСЗРодителя");
		//3) NAME, Название, Строковое, название статуса выполнения медицинской услуги, текстовое поле, обязательное поле, Обязательное;
		Сопоставление.Вставить("NAME", "Наименование");
	Иначе
		//1) Код (ID) – уникальный идентификатор, целое число.
		Сопоставление.Вставить("ID", "УИДЕГИСЗ");
		//2) NAME, Полное название, Строчный, текстовый формат, обязательное поле;
		Сопоставление.Вставить("NAME", "Наименование");
	КонецЕсли;
	
	Возврат Сопоставление;
	
КонецФункции

// Возвращает дополнительные атрибуты классификатора, которые будут добавлены в таблицу атрибутов
//
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава - классификатор
// 
// Возвращаемое значение:
//  Соответствие.
//
Функция ПолучитьДополнительныеАтрибуты(ВидКлассификатора) Экспорт
	
	ДополнительныеАтрибуты = Новый Соответствие;

	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МестоОказанияМедицинскойПомощи Тогда
		//4) F025-1y, Признак использования записи в Талоне пациента, получающего медицинскую помощь в амбулаторных условиях, Целочисленное, не обязательное поле. Значение признака =1, соответствует использованию записи в данной учетной форме.;
		ДополнительныеАтрибуты.Вставить("F025-1y", "F025-1y");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЕдиницыИзмерения Тогда
		//3) SHORTNAME, Краткое наименование, Строковое;
		ДополнительныеАтрибуты.Вставить("SHORTNAME", "SHORTNAME");
		//4) PRINTNAME, Наименование для печати, Строковое;
		ДополнительныеАтрибуты.Вставить("PRINTNAME", "PRINTNAME");
		//5) MEASUREMENT, Размерность, Строковое;
		ДополнительныеАтрибуты.Вставить("MEASUREMENT", "MEASUREMENT");
		//6) UCUM, Код UCUM, Строковое;
		ДополнительныеАтрибуты.Вставить("UCUM", "UCUM");
		//7) COEFFICIENT, Коэффициент пересчета, Строковое, Коэффициент пересчета в рамках одной размерности.;
		ДополнительныеАтрибуты.Вставить("COEFFICIENT", "COEFFICIENT");
		//8) FORMULA, Формула пересчета, Строковое, В настоящей версии справочника не используется.;
		ДополнительныеАтрибуты.Вставить("FORMULA", "FORMULA");
		//9) CONVERSION_ID, Код единицы измерения для пересчета, Целочисленное, Код единицы измерения, в которую осуществляется пересчет.;
		ДополнительныеАтрибуты.Вставить("CONVERSION_ID", "CONVERSION_ID");
		//10) CONVERSION_NAME, Единица измерения для пересчета, Строковое, Краткое наименование единицы измерения, в которую осуществляется пересчет.;
		ДополнительныеАтрибуты.Вставить("CONVERSION_NAME", "CONVERSION_NAME");
		//11) OKEI_CODE, Код ОКЕИ, Строковое, Соответствующий код Общероссийского классификатора единиц измерений.;
		ДополнительныеАтрибуты.Вставить("OKEI_CODE", "OKEI_CODE");
		//12) NSI_CODE_EEC, Код справочника ЕАЭК, Строковое, необязательное поле – код справочника реестра НСИ ЕАЭК;
		ДополнительныеАтрибуты.Вставить("NSI_CODE_EEC", "NSI_CODE_EEC");
		//13) NSI_ELEMENT_CODE_EEC, Код элемента справочника ЕАЭК, Строковое, необязательное поле – код элемента справочника реестра НСИ ЕАЭК;
		ДополнительныеАтрибуты.Вставить("NSI_ELEMENT_CODE_EEC", "NSI_ELEMENT_CODE_EEC");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВыявленныеПатологии Тогда
		//3) ANATOM_LOC, Анатомическая локализация, Строковое;
		ДополнительныеАтрибуты.Вставить("ANATOM_LOC", "ANATOM_LOC");
		//4) TYPE_PAT, Тип патологии, Целочисленное, Соответствует уникальному идентификатору записи из справочника «Тип патологии» (OID 1.2.643.5.1.13.13.99.2.840);
		ДополнительныеАтрибуты.Вставить("TYPE_PAT", "TYPE_PAT");
		//5) METHOD, Метод исследования, Строковое;
		ДополнительныеАтрибуты.Вставить("METHOD", "METHOD");
		//6) SNOMED_CT, SNOMED CT, Строковое;
		ДополнительныеАтрибуты.Вставить("SNOMED_CT", "SNOMED_CT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВитальныеПараметры Тогда
		//3) SYNONYM, Синоним, Строковое, Синоним/ аббревиатура/ сокращенное наименование витального параметра;
		ДополнительныеАтрибуты.Вставить("SYNONYM", "SYNONYM");
		//4) LOCALIZATION, Анатомическая локализация, Строковое;
		ДополнительныеАтрибуты.Вставить("LOCALIZATION", "LOCALIZATION");
		//5) MEASUREMENT, Размерность, Строковое;
		ДополнительныеАтрибуты.Вставить("MEASUREMENT", "MEASUREMENT");
		//6) METHOD, Метод, Строковое;
		ДополнительныеАтрибуты.Вставить("METHOD", "METHOD");
		//7) UnitCode, Код единицы измерения, Целочисленное, Рекомендуемая единица измерения параметра. Соответствует уникальному идентификатору записи справочника "Единицы измерения" (OID 1.2.643.5.1.13.13.11.1358);
		ДополнительныеАтрибуты.Вставить("UnitCode", "UnitCode");
		//8) DATA_TYPE, Код типа данных, Строковое, Соответствует уникальному идентификатору записи справочника "Типы данных" (OID 1.2.643.5.1.13.13.99.2.938);
		ДополнительныеАтрибуты.Вставить("DATA_TYPE", "DATA_TYPE");
		//9) OID, Справочник, Строковое;
		ДополнительныеАтрибуты.Вставить("OID", "OID");
		//10) ID_PARAMETR, Ограничения справочника, Строковое, Представляет собой набор допустимых значений из справочника, обозначенного в поле «OID, Справочник». Данное поле остается незаполненным в случае, если все значения из справочника могут быть использованы;
		ДополнительныеАтрибуты.Вставить("ID_PARAMETR", "ID_PARAMETR");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепеньТяжестиСостоянияПациента Тогда
		//3) SYN, Синонимы, Строковое, синонимы терминов справочника, текстовый формат;
		ДополнительныеАтрибуты.Вставить("SYN", "SYN");
		//4) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЦелиТелемедицинскойКонсультации Тогда
		//3) DATEOUT, Дата упразднения, Дата, дата упразднения цели телемедицинской консультации, тип дата;
		ДополнительныеАтрибуты.Вставить("DATEOUT", "DATEOUT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникЛабораторныхМатериаловИОбразцов Тогда
		//2) GROUP, Группа, Строковое;
		ДополнительныеАтрибуты.Вставить("GROUP", "GROUP");
		//3) ID_MATTER, Код материала, Целочисленное, соответствует уникальному идентификатору записи справочника «ФСЛИ. Справочник лабораторных материалов» (OID 1.2.643.5.1.13.13.99.2.1019);
		ДополнительныеАтрибуты.Вставить("ID_MATTER", "ID_MATTER");
		//4) MATTER, Материал, Строковое;
		ДополнительныеАтрибуты.Вставить("MATTER", "MATTER");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыИнвалидности Тогда
		//3) SCTID, Код SNOMED CT, Строчный;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПотенциальноОпасныеСоцфакторы Тогда
		//4) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//5) REL, Признак активности, Логическое;
		ДополнительныеАтрибуты.Вставить("REL", "REL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессиональныеВредностиПациента Тогда
		//2) GROUP, Код группы факторов, Целочисленное, обязательное поле. Возможные значения – целые числа от 1 до 9, Обязательное;
		ДополнительныеАтрибуты.Вставить("GROUP", "GROUP");
		//5) SCTID, Код SNOMED CT, Строковое, текстовый формат, не более 15 символов, соответствующий код номенклатуры;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//6) NUMBER, N по приказу 29н, Строковое;
		ДополнительныеАтрибуты.Вставить("NUMBER", "NUMBER");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СоциальныеГруппыНаселения Тогда
		//3) BASE, Базовый набор, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("BASE", "BASE");
		//4) F_025u, Форма_025/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_025u", "F_025u");
		//5) NAME_F_025u, Название_Форма_025/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_025u", "NAME_F_025u");
		//6) F_025-1u, Форма_025-1/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_025-1u", "F_025-1u");
		//7) NAME_F_025-1u, Название_Форма_025-1/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_025-1u", "NAME_F_025-1u");
		//8) F_025u-VMP, Форма_025/у-ВМП, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_025u-VMP", "F_025u-VMP");
		//9) NAME_F_025u-VMP, Название_Форма_025/у-ВМП, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_025u-VMP", "NAME_F_025u-VMP");
		//10) F_103u, Форма_103/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_103u", "F_103u");
		//11) NAME_F_103u, Название_Форма_103/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_103u", "NAME_F_103u");
		//12) F_106_u, Форма_106/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_106_u", "F_106_u");
		//13) NAME_F_106_u, Название_ Форма_106/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_106_u", "NAME_F_106_u");
		//14) F_106_2_u, Форма_106-2/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_106_2_u", "F_106_2_u");
		//15) NAME_F_106_2_u, Название_ Форма_106-2/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_106_2_u", "NAME_F_106_2_u");
		//16) F_066u-02, Форма_066/у-02, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_066u-02", "F_066u-02");
		//17) NAME_F_066u-02, Название_ Форма_066/у-02, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_066u-02", "NAME_F_066u-02");
		//18) F_58-1_u, Форма_58-1/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_58-1_u", "F_58-1_u");
		//19) NAME_F_58-1_u, Название_ Форма_58-1/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_58-1_u", "NAME_F_58-1_u");
		//20) Referral_to_the_place_of_treatment, Направление к месту лечения, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("Referral_to_the_place_of_treatment", "Referral_to_the_place_of_treatment");
		//21) NAME_Referral_to_the_place_of_treatment, Название_направление к месту лечения, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_Referral_to_the_place_of_treatment", "NAME_Referral_to_the_place_of_treatment");
		//22) F_095_u, Форма_095/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_095_u", "F_095_u");
		//23) NAME_F_095_u, Название_ Форма_095/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_095_u", "NAME_F_095_u");
		//24) F_110_u, Форма_110/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_110_u", "F_110_u");
		//25) NAME_F_110_u, Название_ Форма_110/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_110_u", "NAME_F_110_u");
		//26) F_013_u, Форма_013/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_013_u", "F_013_u");
		//27) NAME_F_013_u, Название_ Форма_013/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_013_u", "NAME_F_013_u");
		//28) F_035_u-02, Форма_035/у-02, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_035_u-02", "F_035_u-02");
		//29) NAME_F_035_u-02, Название_ Форма_035/у-02, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_035_u-02", "NAME_F_035_u-02");
		//30) F_030_PO_u_17, Форма_030-ПО/у-17, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_030_PO_u_17", "F_030_PO_u_17");
		//31) NAME_F_030_PO_u_17, Название_ Форма_030-ПО/у-17, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_030_PO_u_17", "NAME_F_030_PO_u_17");
		//32) F_131_u, Форма_131/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_131_u", "F_131_u");
		//33) NAME_F_131_u, Название_ Форма_131/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_131_u", "NAME_F_131_u");
		//34) F_003_u, Форма_003/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_003_u", "F_003_u");
		//35) NAME_F_003_u, Название_Форма_003/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_003_u", "NAME_F_003_u");
		//36) F_066_u, Форма_066/у, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_066_u", "F_066_u");
		//37) NAME_F_066_u, Название_Форма_066/у, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_066_u", "NAME_F_066_u");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПривычкиИЗависимости Тогда
		//3) SYNONYM, Синоним, Строковое;
		ДополнительныеАтрибуты.Вставить("SYNONYM", "SYNONYM");
		//4) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры SNOMED CT;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//5) REL, Признак активности, Логическое;
		ДополнительныеАтрибуты.Вставить("REL", "REL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипПатологическойРеакции Тогда
		//4) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры, необязательное поле;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПатологическиеРеакции Тогда
		//3) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры, необязательное поле;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//4) NAME_SYN, Синоним записи, Строковое, обязательное поле, текстовый формат, Обязательное;
		ДополнительныеАтрибуты.Вставить("NAME_SYN", "NAME_SYN");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИмплантируемыеИВспомогательныеУстройства Тогда
		//2) RZN, Росздравнадзор, Строковое, код изделия согласно Номенклатурному классификатору Росздравнадзора;
		ДополнительныеАтрибуты.Вставить("RZN", "RZN");
		//5) ACTUAL, Актуальность, Логическое;
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
		//6) EXISTENCE_NPA, Признак наличия НПА, Логическое, признак означает наличие или отсутствие данного медицинского изделия в Распоряжении Правительства РФ от 31.12.2018 №3053-р «Об утверждении перечня медицинских изделий, имплантируемых в организм человека при оказании медицинской помощи в рамках программы государственных гарантий бесплатного оказания гражданам медицинской помощи, а также перечня медицинских изделий, отпускаемых по рецептам на медицинские изделия при предоставлении набора социальных услуг» (ред. от 14.01.2022);
		ДополнительныеАтрибуты.Вставить("EXISTENCE_NPA", "EXISTENCE_NPA");
		//7) ORDER, Порядок сортировки, Строковое;
		ДополнительныеАтрибуты.Вставить("ORDER", "ORDER");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыАнестезии Тогда
		//4) Synonym, Синоним, Строковое, Альтернативные названия видов анестезии;
		ДополнительныеАтрибуты.Вставить("Synonym", "Synonym");
		//5) Group, Группа, Строковое, Группировочное название вида анестезии;
		ДополнительныеАтрибуты.Вставить("Group", "Group");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникКодовИнтерпретацииРезультатов Тогда
		//1) CODE, Код, Строковое, Обязательное;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//3) ORDER, Порядок сортировки, Строковое;
		ДополнительныеАтрибуты.Вставить("ORDER", "ORDER");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИммунобиологическиеЛекарственныеПрепараты Тогда
		//2) GROUPMIBP, Группа МИБП , Строковое, текстовое поле. Используемая группировка соответствует группировке МИБП в ГРЛС;
		ДополнительныеАтрибуты.Вставить("GROUPMIBP", "GROUPMIBP");
		//3) GROUPNAME, Группировочное наименование, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("GROUPNAME", "GROUPNAME");
		//4) GROUPNAME_ENG, Группировочное наименование МИБП на английском языке , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("GROUPNAME_ENG", "GROUPNAME_ENG");
		//6) TRADENAME_ENG, Торговое наименование МИБП на английском языке, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("TRADENAME_ENG", "TRADENAME_ENG");
		//7) DISEASEGROUP, Заболевание/ группа заболеваний МИБП, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DISEASEGROUP", "DISEASEGROUP");
		//8) ATC, Код анатомо-терапевтическо-химической классификации , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("ATC", "ATC");
		//9) CALENDAR, Принадлежность к национальному календарю профилактических прививок, Целочисленное, числовой формат, целое;
		ДополнительныеАтрибуты.Вставить("CALENDAR", "CALENDAR");
		//10) EPID, Принадлежность к календарю прививок по эпидемическим показаниям, Целочисленное, числовой формат, целое;
		ДополнительныеАтрибуты.Вставить("EPID", "EPID");
		//11) ACTIVE, Признак живой вакцины, Целочисленное, числовой формат, целое;
		ДополнительныеАтрибуты.Вставить("ACTIVE", "ACTIVE");
		//12) ASSOC, Признак ассоциированной вакцины , Целочисленное, числовой формат, целое;
		ДополнительныеАтрибуты.Вставить("ASSOC", "ASSOC");
		//13) DRUGFORM, Лекарственная форма МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DRUGFORM", "DRUGFORM");
		//14) DRUGFORMGR, Вид лекарственной формы МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DRUGFORMGR", "DRUGFORMGR");
		//15) DRUGFORMSH, Краткое название лекарственной формы МИБП , Строковое, Соответствует базовой лекарственной форме из справочника "Базовые лекарственные формы и состояния вещества" (OID: 1.2.643.5.1.13.13.11.1464);
		ДополнительныеАтрибуты.Вставить("DRUGFORMSH", "DRUGFORMSH");
		//16) DRUGPACK, Упаковка 1 уровня (первичная упаковка) МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DRUGPACK", "DRUGPACK");
		//17) DRUGPACKGR, Вид упаковки 1 уровня МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DRUGPACKGR", "DRUGPACKGR");
		//18) DOZA, Дозировка МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("DOZA", "DOZA");
		//19) NUM_DOSA, Количество доз, Строковое, Количество доз в первичной упаковке;
		ДополнительныеАтрибуты.Вставить("NUM_DOSA", "NUM_DOSA");
		//20) MASS, Масса/объем МИБП, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("MASS", "MASS");
		//21) SCTID, Код SNOMED CT, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//22) ICD10, Код МКБ10 , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("ICD10", "ICD10");
		//23) NAMESH, Общепринятое сокращение названия МИБП, Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("NAMESH", "NAMESH");
		//24) PRODUCER, Производитель МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("PRODUCER", "PRODUCER");
		//25) PRODUCER_ENG, Производитель МИБП на английском языке , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("PRODUCER_ENG", "PRODUCER_ENG");
		//26) COUNTRY, Страна-производитель МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("COUNTRY", "COUNTRY");
		//27) BARCODE, Штрих-код МИБП , Строковое, текстовое поле;
		ДополнительныеАтрибуты.Вставить("BARCODE", "BARCODE");
		//28) ACTUAL, Признак актуальности, Логическое, (true – запись актуальна, false – запись неактуальна);
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
		//29) KLP, Код КЛП, Строковое;
		ДополнительныеАтрибуты.Вставить("KLP", "KLP");
		//30) SMNN, Код СМНН, Строковое;
		ДополнительныеАтрибуты.Вставить("SMNN", "SMNN");
		//31) KTRU, Код КТРУ, Строковое;
		ДополнительныеАтрибуты.Вставить("KTRU", "KTRU");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииНаселения Тогда
		//2) SING, Признак уровня группировки, Строковое;
		ДополнительныеАтрибуты.Вставить("SING", "SING");
		//3) SKL, СКЛ, Строковое, Санаторно-курортное лечение;
		ДополнительныеАтрибуты.Вставить("SKL", "SKL");
		//4) NAME_SHORT, Краткое название категории льготы, Строковое, обязательное поле, текстовый формат, Обязательное;
		ДополнительныеАтрибуты.Вставить("NAME_SHORT", "NAME_SHORT");
		//7) REG, Код региона по ОКАТО, Целочисленное, код субъект Российской Федерации по ОКАТО, числовой формат, целое двузначное число;
		ДополнительныеАтрибуты.Вставить("REG", "REG");
		//8) DEPART, Код ведомства по ОКОГУ, Целочисленное, числовой код, кодирующий министерства и ведомства Российской Федерации;
		ДополнительныеАтрибуты.Вставить("DEPART", "DEPART");
		//9) DATE, Дата отмены льготы, Дата, дата отмены льготы, краткий формат даты;
		ДополнительныеАтрибуты.Вставить("DATE", "DATE");
		//10) ID_MOSCOW, ID в Московском классификаторе льгот, Целочисленное, ID в Московском классификаторе льгот;
		ДополнительныеАтрибуты.Вставить("ID_MOSCOW", "ID_MOSCOW");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РЭМДФорматыФайловМедДокументов Тогда
		//3) EXTENSION, Расширение файла, Строковое, текстовое поле, обязательное;
		ДополнительныеАтрибуты.Вставить("EXTENSION", "EXTENSION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РЭМДТипыПолучателейМедДокументов Тогда
		//2) CODE, Код, Строковое, строка, обязательное;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//4) DESCRIPTION, Описание, Строковое, текстовое поле, обязательное;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РЭМДКлассификаторКодовСообщений Тогда
		//3) DESCRIPTION, Описание, Строковое, текстовое поле, обязательное;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РЭМДТипыСвязейЭлектронныхДокументов Тогда
		//2) CODE, Код, Строковое, строка, обязательное;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//4) DESCRIPTION, Описание, Строковое, текстовое поле, обязательное;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураСпециальностей Тогда
		//4) REL, Признак активности / актуальности , Целочисленное, числовой формат, один символ (если = 0, то данное значение упразднено согласно новым приказам);
		ДополнительныеАтрибуты.Вставить("REL", "REL");
		//5) DATEOUT, Дата упразднения , Дата, дата, после которой данная специальность или группа специальностей упраздняется согласно новым приказам;
		ДополнительныеАтрибуты.Вставить("DATEOUT", "DATEOUT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДолжностиРаботниковМедОрганизаций Тогда
		//5) EQUIVALENT, Синоним, Строковое, эквивалентное название должности, используемое для указания должности работника противоположного пола, текстовый формат, не обязательное поле;
		ДополнительныеАтрибуты.Вставить("EQUIVALENT", "EQUIVALENT");
		//6) NORMATIVE, Признак соответствия НПА, Целочисленное, признак, отражающий регулирование должности нормативно-правовым актом (НПА), (соответствия: 
		//	1 - Приказ МЗ РФ от 20.12.2012 № 1183н, 
		//	2 - Постановление Правительства РФ от 08.08.2013 № 678, 
		//	3 - Приказ Минздравсоцразвития РФ от 11.01.2011 № 1н, 
		//	4 - Приказ Минздравсоцразвития РФ от 03.07.2008 № 305н, 
		//	5 - Постановление Минтруда РФ от 21.08.1998 № 37), 
		//	числовой формат, необязательное поле.;
		ДополнительныеАтрибуты.Вставить("NORMATIVE", "NORMATIVE");
		//7) GROUP, Признак группировочных записей, Целочисленное, признак группировочных (родительских) записей справочника, числовой формат. Если значение признака = 1, то данная запись является родительской и в непосредственной работе не используются;
		ДополнительныеАтрибуты.Вставить("GROUP", "GROUP");
		//8) FORM_30, Код по отчетной статистической Форме № 30, Целочисленное, используется для сопоставления кодов справочника с кодами отчетной формы №30 (Раздел II. «Штаты медицинской организации», табл. 1 «Должности и физические лица медицинской организации (1100)»);
		ДополнительныеАтрибуты.Вставить("FORM_30", "FORM_30");
		//9) ACTUAL, Признак актуальности записи, Целочисленное, (1 – запись актуальна, 0 – запись не используется), числовой формат, обязательное поле, Обязательное;
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
		//10) DATA_END, Дата окончания действия записи, Строковое, соответствует дате соответствующего приказа, текстовый формат;
		ДополнительныеАтрибуты.Вставить("DATA_END", "DATA_END");
		//11) COMMENT, Комментарий, Строковое, для записи комментариев, не обязательное поле, текстовый формат;
		ДополнительныеАтрибуты.Вставить("COMMENT", "COMMENT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторДокументовУдостоверяющихЛичность Тогда
		//2) S_CODE, Код записи, Строковое;
		ДополнительныеАтрибуты.Вставить("S_CODE", "S_CODE");
		//5) IS_ENABLED, Флаг отображения, Целочисленное;
		ДополнительныеАтрибуты.Вставить("IS_ENABLED", "IS_ENABLED");
		//6) VALIDATION_SERIAL, Регулярное выражение для серии документа, Строковое;
		ДополнительныеАтрибуты.Вставить("VALIDATION_SERIAL", "VALIDATION_SERIAL");
		//7) VALIDATION_NUMBER, Регулярное выражение для номера документа, Строковое;
		ДополнительныеАтрибуты.Вставить("VALIDATION_NUMBER", "VALIDATION_NUMBER");
		//8) DOCUM_SERIAL, Флаг обязательности серии, Целочисленное;
		ДополнительныеАтрибуты.Вставить("DOCUM_SERIAL", "DOCUM_SERIAL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтраныМира Тогда
		//2) ID_NUMBER, Цифровой идентификатор, Строковое, содержит трехзначный цифровой код страны мира, построенный с использованием порядкового метода кодирования;
		ДополнительныеАтрибуты.Вставить("ID_NUMBER", "ID_NUMBER");
		//5) A2, Альфа2, Строковое, содержит двузначный (альфа-2) буквенный код, знаками которого являются буквы латинского алфавита.
		//Основным принципом, который использовался при создании буквенных кодов, является принцип визуальной ассоциации кодов с наименованиями стран мира на английском, французском или других языках.;
		ДополнительныеАтрибуты.Вставить("A2", "A2");
		//6) A3, Альфа3, Строковое, содержит трехзначный (альфа-3) буквенный код, знаками которого являются буквы латинского алфавита.
		//Основным принципом, который использовался при создании буквенных кодов, является принцип визуальной ассоциации кодов с наименованиями стран мира на английском, французском или других языках.;
		ДополнительныеАтрибуты.Вставить("A3", "A3");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МедицинскиеГруппыДляЗанятийНесовершеннолетнимиФизКультурой Тогда
		//3) DESCRIPTION, Описание, Строковое, характеристика группы для занятия физической культурой;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СубъектыРФ Тогда
		//3) CODE_OKATO, ОКАТО_2, Строковое, два первых разряда Общероссийского классификатора объектов административно-территориального деления;
		ДополнительныеАтрибуты.Вставить("CODE_OKATO", "CODE_OKATO");
		//4) STATUS, Конституционно-правовой статус, Строковое;
		ДополнительныеАтрибуты.Вставить("STATUS", "STATUS");
		//5) OKATO_5, OKATO_5, Строковое, пять первых разрядов Общероссийского классификатора объектов административно-территориального деления;
		ДополнительныеАтрибуты.Вставить("OKATO_5", "OKATO_5");
		//6) CODE_FNS, Код региона в ФНС, Строковое;
		ДополнительныеАтрибуты.Вставить("CODE_FNS", "CODE_FNS");
		//7) SYNONYM, Синоним, Строковое;
		ДополнительныеАтрибуты.Вставить("SYNONYM", "SYNONYM");
		//8) FED, Федеральный округ, Целочисленное, код Федерального округа, соответствует ID справочника "Федеральные округа РФ " (OID 1.2.643.5.1.13.13.99.2.657);
		ДополнительныеАтрибуты.Вставить("FED", "FED");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтепениВыраженностиСтойкихРасстройств Тогда
		//3) NAME_435, Название_435н, Строковое, Указаны формулировки степени выраженности стойких нарушений функций организма человека из Приказа Минтруда России от 21.06.2019 № 435н «Об утверждении формы сведений о результатах проведенной медико-социальной экспертизы»;
		ДополнительныеАтрибуты.Вставить("NAME_435", "NAME_435");
		//4) COMMENT, Примечание, Строковое, Необязательное поле;
		ДополнительныеАтрибуты.Вставить("COMMENT", "COMMENT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СопоставленияКодовЛьготСЛьготнымиКатегориямиГраждан Тогда
		//2) NPA, НПА, Строковое, Нормативный правовой акт;
		ДополнительныеАтрибуты.Вставить("NPA", "NPA");
		//3) RECID, Уникальный идентификатор типа электронного медицинского документа, Строковое;
		ДополнительныеАтрибуты.Вставить("RECID", "RECID");
		//4) ID_FORM, Код по форме, Целочисленное;
		ДополнительныеАтрибуты.Вставить("ID_FORM", "ID_FORM");
		//6) ID_541, Код льготной категории граждан, Строковое, соответствует кодам записей справочника «Льготные категории граждан» (OID 1.2.643.5.1.13.13.99.2.541).;
		ДополнительныеАтрибуты.Вставить("ID_541", "ID_541");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ХарактерыТеченияЗаболевания Тогда
		//3) SCTID, Код SNOMED CT, Строковое, соответствующий код номенклатуры;
		ДополнительныеАтрибуты.Вставить("SCTID", "SCTID");
		//4) NAME_SYN, Синоним записи, Строковое, обязательное поле, текстовый формат, Обязательное;
		ДополнительныеАтрибуты.Вставить("NAME_SYN", "NAME_SYN");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПричиныНетрудоспособности Тогда
		//3) CODE_LN, Код причины нетрудоспособности, Строковое, Код причины нетрудоспособности, используемый в листке нетрудоспособности;
		ДополнительныеАтрибуты.Вставить("CODE_LN", "CODE_LN");
		//4) FORM_095U, Форма_095/у, Целочисленное, признак использования записи в Форме N 095/у;
		ДополнительныеАтрибуты.Вставить("FORM_095U", "FORM_095U");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДокументыУдостоверяющиеЛичность Тогда
		//4) STATUS, Статус, Строковое, А – актуальный (для использования при совершении полного перечня юридических действий);
		//	Л – локальный (для использования при совершении ограниченного перечня юридических действий);
		//	У – устаревший (не применяется для совершения юридических действий в настоящее время);
		ДополнительныеАтрибуты.Вставить("STATUS", "STATUS");
		//5) COMMENT, Комментарий, Строковое;
		ДополнительныеАтрибуты.Вставить("COMMENT", "COMMENT");
		//7) ACTUAL, Актуальность, Логическое;
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
		//8) CODE_ZAGS_NALOG, Код ЕГР ЗАГС, Строковое, соответствует кодам справочника видов документов, удостоверяющих личность (https://zags.nalog.ru/developers/convert/ref/);
		ДополнительныеАтрибуты.Вставить("CODE_ZAGS_NALOG", "CODE_ZAGS_NALOG");
		//9) CODE_ES_NSI, Код ЕС НСИ, Строковое, соответствует кодам справочника "Виды документов, удостоверяющих личность налогоплательщика" (https://esnsi.gosuslugi.ru/classifiers/549/data);
		ДополнительныеАтрибуты.Вставить("CODE_ES_NSI", "CODE_ES_NSI");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипАдресаПациента Тогда
		//2) ADDRESS_TYPE, Тип адреса, Строковое, текстовый формат, обязательное поле, Обязательное;
		ДополнительныеАтрибуты.Вставить("ADDRESS_TYPE", "ADDRESS_TYPE");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыКровиДляУчетаСигнальнойИнформацииОПациенте Тогда
		//5) SING1, Результат исследования, Логическое, используется для отметок о получении данных в результате исследования, числовой формат, один символ (если =1, то значение является результатом исследования);
		ДополнительныеАтрибуты.Вставить("SING1", "SING1");
		//6) SING2, Обязательность исследования «для всех», Логическое, числовой формат, один символ (если = 1, то исследование обязательно «для всех» при гемотрансфузии по п. 22 (а, г) Приказа № 183);
		ДополнительныеАтрибуты.Вставить("SING2", "SING2");
		//7) SING3, Обязательность исследования «для определенных групп», Логическое, числовой формат, один символ (если = 1, то исследование обязательно «для определенных групп» при гемотрансфузии по п. 22 (а, г) Приказа № 183) значение);
		ДополнительныеАтрибуты.Вставить("SING3", "SING3");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникСекцийДокументов Тогда
		//2) CODE, Код секции, Строковое;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//4) DOC_OID, OID руководства по реализации СЭМД, Строковое, Уникальный идентификатор (OID) руководства по реализации СЭМД из справочника «Реестр руководств по реализации структурированных электронных медицинских документов и протоколов информационного взаимодействия» (OID 1.2.643.5.1.13.13.99.2.638);
		ДополнительныеАтрибуты.Вставить("DOC_OID", "DOC_OID");
		//5) DOC_BETA_OID, OID СЭМД beta-версии, Строковое, Уникальный идентификатор (OID) СЭМД beta-версии из справочника «ВИМИС. Редакции регистрируемых СЭМД beta -версии» (OID 1.2.643.5.1.13.13.99.2.1020);
		ДополнительныеАтрибуты.Вставить("DOC_BETA_OID", "DOC_BETA_OID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииИПодкатегорииТранспортныхСредств Тогда
		//2) CODE, Код, Строковое, текстовый формат, обязательное поле. Уникальный буквенно-цифровой код категории/подкатегории ТС для использования в документах, Обязательное;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//4) DESCRIPTION, Описание, Строковое, текстовый формат, обязательное поле. Описание и комментарии по категории/подкатегории ТС, Обязательное;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофессииРабочихИДолжностейСлужащих Тогда
		//4) OKPDTR, Код по ОКПДТР, Строковое, Код по ОКПДТР;
		ДополнительныеАтрибуты.Вставить("OKPDTR", "OKPDTR");
		//5) OKZ, Код по ОКЗ, Строковое, Код по ОКЗ;
		ДополнительныеАтрибуты.Вставить("OKZ", "OKZ");
		//6) KCS, КЧ, Строковое, КЧ;
		ДополнительныеАтрибуты.Вставить("KCS", "KCS");
		//7) TARIFF, Диапазон тарифных разрядов, Строковое, Диапазон тарифных разрядов;
		ДополнительныеАтрибуты.Вставить("TARIFF", "TARIFF");
		//8) ETKS, Код выпуска ЕТКС, Строковое, Код выпуска ЕТКС;
		ДополнительныеАтрибуты.Вставить("ETKS", "ETKS");
		//9) CATEGOGY, Код категории, Строковое, Код категории;
		ДополнительныеАтрибуты.Вставить("CATEGOGY", "CATEGOGY");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыЗдоровья Тогда
		//3) AGE_GROUP, Возрастная группа, Строчный,
		//	1 - Группы здоровья несовершеннолетних и взрослых;
		//	2 - Группы здоровья несовершеннолетних;
		//	3 - Группы здоровья взрослых;
		ДополнительныеАтрибуты.Вставить("AGE_GROUP", "AGE_GROUP");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УровеньКонфиденциальностиМедицинскогоДокумента Тогда
		//2) CODE, Код, Строковое, текстовый формат, обязательное поле.Код уровня конфиденциальности медицинского документа., Обязательное;
		ДополнительныеАтрибуты.Вставить("CODE", "CODE");
		//4) DESCRIPTION, Описание, Строковое, текстовый формат, обязательное поле. Описание уровня конфиденциальности медицинского документа., Обязательное;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СМПСправочникВидовРаботИУслуг Тогда
		//2) parent, Родитель, Строковое;
		ДополнительныеАтрибуты.Вставить("PARENT", "PARENT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЭтапыТалонаНаОказаниеВысокотехнологичнойМедицинскойПомощи Тогда
		//3) DESCR, Указание на заполнение этапа, Строковое;
		ДополнительныеАтрибуты.Вставить("DESCR", "DESCR");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииГраждан Тогда
		//1) ID, Код, Строковое, уникальный идентификатор записи, обязательное поле
		//	Структура Кода (ID):
		//	Общая структура кода имеет вид: Х.ХХХХХ.ХХХХ, содержит 3 группы цифровых символов, разделенных точкой. Общее число цифр в коде равно 10. 
		//	Первая группа кода содержит 1 цифровой символ, предназначенный для кодирования Уровня льготы: 1 – федеральная льгота, 2 – региональная льгота (не применяется в настоящем справочнике).
		//	Вторая группа кода содержит 5 цифровых символов, предназначенных для кодирования Региона (Субъекта Российской Федерации), и соответствует: для федеральных льгот значению - 00000, для региональных льгот - пятизначному коду региона по ОКАТО (не применяется в настоящем справочнике).
		//	Третья группа кода содержит 4 цифровых символа, которые соответствуют порядковому номеру льготы федеральной льготы, либо порядковому номеру льготы для каждого субъекта Российской Федерации (не применяется в настоящем справочнике)., Обязательное;
		ДополнительныеАтрибуты.Вставить("ID", "ID");
		//3) NAME_SHORT_FRLLO, Краткое наименование ФРЛЛО, Строковое;
		ДополнительныеАтрибуты.Вставить("NAME_SHORT_FRLLO", "NAME_SHORT_FRLLO");
		//4) ICD10, Код диагнозов по МКБ-10, Строковое, не обязательное поле;
		ДополнительныеАтрибуты.Вставить("ICD10", "ICD10");
		//5) DATA_BEGIN, Дата начала действия льготы, Дата, дата введения льготы;
		ДополнительныеАтрибуты.Вставить("DATA_BEGIN", "DATA_BEGIN");
		//6) NPA_BEGIN, НПА ввода льготы, Целочисленное, код нормативно-правового акта, вводившего данную льготу, обязательное поле, соответствует коду НПА из справочника «Нормативно-правовые акты справочников ФР НСИ» (OID 1.2.643.5.1.13.13.99.2.533), Обязательное;
		ДополнительныеАтрибуты.Вставить("NPA_BEGIN", "NPA_BEGIN");
		//7) DATA_END, Дата окончания действия льготы, Дата, дата отмены льготы;
		ДополнительныеАтрибуты.Вставить("DATA_END", "DATA_END");
		//8) NPA_END, НПА отмены льготы, Целочисленное, код нормативно-правового акта, отменившего данную льготу, обязательное поле, соответствует коду НПА из справочника «Нормативно-правовые акты справочников ФР НСИ» (OID 1.2.643.5.1.13.13.99.2.533), Обязательное;
		ДополнительныеАтрибуты.Вставить("NPA_END", "NPA_END");
		//9) SOURCE, Источник оплаты, Целочисленное, код источника оплаты, соответствует коду источника из справочника «Источники оплаты льгот» (OID 1.2.643.5.1.13.13.99.2.602);
		ДополнительныеАтрибуты.Вставить("SOURCE", "SOURCE");
		//10) CATEGORY, Категория лиц ФРЛЛО, Целочисленное, Код категории лиц ФРЛЛО, соответствует коду категории из справочника «Категории лиц ФРЛЛО» (OID 1.2.643.5.1.13.13.99.2.632);
		ДополнительныеАтрибуты.Вставить("CATEGORY", "CATEGORY");
		//11) MONEY, Монетизация, Логическое;
		ДополнительныеАтрибуты.Вставить("MONEY", "MONEY");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураКоечногоФондаМедицинскойОрганизации Тогда
		//4) AgeGROUP, Код возрастной группы, Целочисленное, числовой формат, один символ (если =1 – профиль койки для взрослого населения, если =2 – для детского, если = 0 – смешанный);
		ДополнительныеАтрибуты.Вставить("AgeGROUP", "AgeGROUP");
		//5) REL, Признак актуальности, Целочисленное, числовой формат, один символ (если =1 – запись актуальна, если 0 – запись упразднена в соответствии с новыми нормативно-правовыми актами);
		ДополнительныеАтрибуты.Вставить("REL", "REL");
		//6) DATEOUT, Дата упразднения, Дата, дата, после которой данная запись упраздняется согласно новым приказам;
		ДополнительныеАтрибуты.Вставить("DATEOUT", "DATEOUT");
		//7) F30, Код строки по форме №30, Строковое, параметр для обозначения кода строки в отчетной форме №30;
		ДополнительныеАтрибуты.Вставить("F30", "F30");
		//8) RAZDEL, Раздел, Строковое, Содержит один символ (1 – принадлежность к Приказу № 555н; 2 - принадлежность к Приказу № 830; 3 - оба Приказа);
		ДополнительныеАтрибуты.Вставить("RAZDEL", "RAZDEL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ИсходыГоспитализации Тогда
		//3) MED_FORM, Форма медицинской документации, Строковое, учетная форма медицинской документации, для которой предназначена запись справочника, не обязательное поле, текстовый формат;
		ДополнительныеАтрибуты.Вставить("MED_FORM", "MED_FORM");
		//4) f066_u, 066/у, Логическое;
		ДополнительныеАтрибуты.Вставить("f066_u", "f066_u");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыТравмПоСпособуПолучения Тогда
		//3) F_066u-02, Форма_066/у-02, Целочисленное, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_066u-02", "F_066u-02");
		//4) NAME_F_066u-02, Название_Форма_066/у-02, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_066u-02", "NAME_F_066u-02");
		//5) F_025u-1, Форма_025/у-1, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("F_025u-1", "F_025u-1");
		//6) NAME_F_025u-1, Название_Форма_025/у-1, Строковое, необязательное поле;
		ДополнительныеАтрибуты.Вставить("NAME_F_025u-1", "NAME_F_025u-1");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЦелиНаправленияНаМСЭ Тогда
		//3) NAME_088_488_551, Наименование_088/у_488н/551н, Строковое, Указаны формулировки целей направления на МСЭ из Приказа Минтруда России №488н, Минздрава России №551н от 12.08.2022 "Об утверждении формы направления на медико-социальную экспертизу медицинской организацией и порядка ее заполнения;
		ДополнительныеАтрибуты.Вставить("NAME_088_488_551", "NAME_088_488_551");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КатегорииГражданства Тогда
		//3) NAME_F_088_u, Наименование_Форма_088/у, Строковое, Категория гражданства в соответствии с формой 088/у;
		ДополнительныеАтрибуты.Вставить("NAME_F_088_u", "NAME_F_088_u");
		//4) NAME_F_PDO, Наименование_Форма_ПДО, Строковое, Категория гражданства в соответствии с формой программы дополнительного обследования гражданина;
		ДополнительныеАтрибуты.Вставить("NAME_F_PDO", "NAME_F_PDO");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипыТелосложения Тогда
		//3) SYNONYM, Синоним, Строковое;
		ДополнительныеАтрибуты.Вставить("SYNONYM", "SYNONYM");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МедицинскиеОбследованияДляМСЭ Тогда
		//2) CATEGORY_ICD10, Рубрика МКБ-10, Строковое, Диапазоны кодов МКБ-10 согласно приказу Минтруда России, Минздрава России от 10.06.2021 №402н;
		ДополнительныеАтрибуты.Вставить("CATEGORY_ICD10", "CATEGORY_ICD10");
		//3) NMU_CODE, Код НМУ, Строковое;
		ДополнительныеАтрибуты.Вставить("NMU_CODE", "NMU_CODE");
		//4) DESCRIPTION, Описание, Строковое, Описание услуги;
		ДополнительныеАтрибуты.Вставить("DESCRIPTION", "DESCRIPTION");
		//5) NMU_TYPE, Тип услуги, Строковое;
		ДополнительныеАтрибуты.Вставить("NMU_TYPE", "NMU_TYPE");
		//6) DATE, Срок действия, Строковое;
		ДополнительныеАтрибуты.Вставить("DATE", "DATE");
		//7) BASIC_ADDITIONAL, Признак основного или дополнительного обследования, Целочисленное, Указывается «1» в случае, если медицинское обследование является основным, «2» - в случае, если медицинское обследование является дополнительным;
		ДополнительныеАтрибуты.Вставить("BASIC_ADDITIONAL", "BASIC_ADDITIONAL");
		//8) SECTION, Раздел документа, Целочисленное, Указывается «1» в случае, если медицинское обследование указано в Разделе I в целях проведения медико-социальной экспертизы лиц в возрасте 18 лет и старше, «2» - в случае, если медицинское обследование указано в Разделе II в целях проведения медико-социальной экспертизы лица (ребенка) в возрасте до 18 лет;
		ДополнительныеАтрибуты.Вставить("SECTION", "SECTION");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПредпочтительнаяФормаПроведенияМСЭ Тогда
		//3) NAME_088_488_551, Наименование_088/у_488н/551н, Строковое, Указаны формулировки предпочтительной формы проведения медико-социальной экспертизы из Приказа Минтруда России №488н, Минздрава России №551н от 12.08.2022 "Об утверждении формы направления на медико-социальную экспертизу медицинской организацией и порядка ее заполнения";
		ДополнительныеАтрибуты.Вставить("NAME_088_488_551", "NAME_088_488_551");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РезультатыОбращения Тогда
		//3) FORM_025, Номер строки по форме 025-1/у, Целочисленное, Номер строки в соответствии с формой 025-1/у;
		ДополнительныеАтрибуты.Вставить("FORM_025", "FORM_025");
		//4) FORM_066, Номер строки по форме 066/у-02, Целочисленное, Номер строки в соответствии с формой 066/у-02;
		ДополнительныеАтрибуты.Вставить("FORM_066", "FORM_066");
		//5) NAME_SYNONYM, Название (синоним) в форме 066/у-02, Строковое;
		ДополнительныеАтрибуты.Вставить("NAME_SYNONYM", "NAME_SYNONYM");
		//6) FORM_066_u, Номер строки по форме 066/у, Целочисленное, Номер строки в соответствии с формой 066/у;
		ДополнительныеАтрибуты.Вставить("FORM_066_u", "FORM_066_u");
		//7) NAME_066_u, Название в форме 066/у, Строковое;
		ДополнительныеАтрибуты.Вставить("NAME_066_u", "NAME_066_u");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ХарактерЗаболевания Тогда
		//3) F_025-1u, Форма_025-1/у, Целочисленное, Код, использующийся в учетной форме №025-1/у;
		ДополнительныеАтрибуты.Вставить("F_025-1u", "F_025-1u");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыМедицинскихНаправлений Тогда
		//3) DOC, Номер документа, Строковое, текстовый формат, необязательное поле. Номер оформляемого медицинского документа – направления;
		ДополнительныеАтрибуты.Вставить("DOC", "DOC");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыНозологическихЕдиницДиагноза Тогда
		//4) NAME_088_488_551, Наименование_088/у_488н/551н, Строковое, Указаны формулировки видов нозологических единиц диагноза из Приказа Минтруда России №488н, Минздрава России №551н от 12.08.2022 "Об утверждении формы направления на медико-социальную экспертизу медицинской организацией и порядка ее заполнения";
		ДополнительныеАтрибуты.Вставить("NAME_088_488_551", "NAME_088_488_551");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЗаключенияВМедицинскихДокументах Тогда
		//3) NameForm, Уникальный идентификатор медицинского документа, Целочисленное, указывается уникальный идентификатор по справочнику «Виды медицинской документации» (OID 1.2.643.5.1.13.13.11.1522);
		ДополнительныеАтрибуты.Вставить("NameForm", "NameForm");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КодируемыеПоляCDAДокументов Тогда
		//3) DOC_OID, OID руководства по реализации СЭМД, Строковое, Уникальный идентификатор (OID) руководства по реализации СЭМД из справочника «Реестр руководств по реализации структурированных электронных медицинских документов и протоколов информационного взаимодействия» (OID 1.2.643.5.1.13.13.99.2.638);
		ДополнительныеАтрибуты.Вставить("DOC_OID", "DOC_OID");
		//5) DATA_TYPE, Код типа данных, Строковое, Соответствует уникальному идентификатору записи справочника «Типы данных» (OID 1.2.643.5.1.13.13.99.2.938);
		ДополнительныеАтрибуты.Вставить("DATA_TYPE", "DATA_TYPE");
		//6) DOC_BETA_OID, OID СЭМД beta-версии, Строковое, Уникальный идентификатор (OID) СЭМД beta-версии из справочника «ВИМИС. Редакции регистрируемых СЭМД beta -версии» (OID: 1.2.643.5.1.13.13.99.2.1020);
		ДополнительныеАтрибуты.Вставить("DOC_BETA_OID", "DOC_BETA_OID");
		//7) OID, Справочник, Строковое;
		ДополнительныеАтрибуты.Вставить("OID", "OID");
		//8) ACTUAL, Актуальность, Логическое;
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ОценкиСостоянияДляМСЭ Тогда
		//4) Group, Группирующий признак, Строковое;
		ДополнительныеАтрибуты.Вставить("Group", "Group");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПризнакЖителяГородаСела Тогда
		//3) SYNONYM, Синонимы, Строковое;
		ДополнительныеАтрибуты.Вставить("SYNONYM", "SYNONYM");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТипыДокументированныхСобытий Тогда
		//4) DOC_OID, OID руководства по реализации СЭМД, Строковое, Уникальный идентификатор (OID) руководства по реализации СЭМД из справочника «Реестр руководств по реализации структурированных электронных медицинских документов и протоколов информационного взаимодействия» (OID 1.2.643.5.1.13.13.99.2.638);
		ДополнительныеАтрибуты.Вставить("DOC_OID", "DOC_OID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УсловияОказанияМедицинскойПомощи Тогда
		//3) COMMENTS, Комментарии, Строковое;
		ДополнительныеАтрибуты.Вставить("COMMENTS", "COMMENTS");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ВидыСтруктурированныхЭлектронныхМедицинскихДокументов Тогда
		//3) TYPE, Вид медицинского документа, Целочисленное, Соответствует уникальному идентификатору вида медицинского документа из справочника "Виды медицинской документации" (OID: 1.2.643.5.1.13.13.11.1522);
		ДополнительныеАтрибуты.Вставить("TYPE", "TYPE");
		//4) NPA, НПА, Строковое, Нормативно-правовой акт;
		ДополнительныеАтрибуты.Вставить("NPA", "NPA");
		//5) FUNCTION, Основное назначение, Строковое, Основное назначение структурированного электронного медицинского документа;
		ДополнительныеАтрибуты.Вставить("FUNCTION", "FUNCTION");
		//6) YEAR, Год разработки, Целочисленное, Соответствует году разработки документации для структурированного электронного медицинского документа;
		ДополнительныеАтрибуты.Вставить("YEAR", "YEAR");
		//7) CLIENT, Заказчик, Строковое, Автор запроса о разработке документации к соответствующему структурированному электронному медицинскому документу;
		ДополнительныеАтрибуты.Вставить("CLIENT", "CLIENT");
		//8) FORM, Форма документа, Строковое, Информация о форме, на основании которой проводилась разработка документации для структурированного электронного медицинского документа (Номер утверждённой печатной формы документа или Форма (Шаблон));
		ДополнительныеАтрибуты.Вставить("FORM", "FORM");
		//9) REGISTRATION, Регистрируется в РЭМД, Логическое, Признак регистрации структурированного электронного медицинского документа в РЭМД на момент публикации текущей версии справочника;
		ДополнительныеАтрибуты.Вставить("REGISTRATION", "REGISTRATION");
		//10) SHOW_EPGU, Транслируется на ЕПГУ, Логическое, Признак отображения документа на Едином портале государственных услуг Российской Федерации;
		ДополнительныеАтрибуты.Вставить("SHOW_EPGU", "SHOW_EPGU");
		//11) EXISTENCE_DOC, Документация к СЭМД разработана, Логическое, Признак наличия разработанной документации для структурированного электронного медицинского документа на Едином репозитории исходного кода Минздрава России;
		ДополнительныеАтрибуты.Вставить("EXISTENCE_DOC", "EXISTENCE_DOC");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РеестрРуководствПоРеализацииСтруктурированныхЭлектронныхМедицинскихДокументов Тогда
		////1) OID, OID, Строковое, Уникальный идентификатор объекта НСИ, Обязательное;
		//ДополнительныеАтрибуты.Вставить("OID", "OID");
		//2) OID_SYNONYM, Синоним OID, Строковое, Синонимичные OID;
		ДополнительныеАтрибуты.Вставить("OID_SYNONYM", "OID_SYNONYM");
		//3) SEMD_ID, Вид СЭМД, Целочисленное, Уникальный идентификатор вида СЭМД из справочника "Виды структурированных электронных медицинских документов" (OID: 1.2.643.5.1.13.13.99.2.1079);
		ДополнительныеАтрибуты.Вставить("SEMD_ID", "SEMD_ID");
		//5) RELEASE, Редакция, Строковое, Номер редакции;
		ДополнительныеАтрибуты.Вставить("RELEASE", "RELEASE");
		//6) GIT_PUB_DATE, Дата опубликования в GitLab, Дата, Дата опубликования Документации СЭМД в Едином репозитории исходного кода Минздрава России (https://git.minzdrav.gov.ru/semd);
		ДополнительныеАтрибуты.Вставить("GIT_PUB_DATE", "GIT_PUB_DATE");
		//7) GIT_LINK, Ссылка в GitLab, Строковое, Ссылка на Документацию СЭМД в Едином репозитории исходного кода Минздрава России (https://git.minzdrav.gov.ru/semd);
		ДополнительныеАтрибуты.Вставить("GIT_LINK", "GIT_LINK");
		//8) FORMAT, Формат, Строковое, Стандарт обмена электронными медицинскими данными, который использован для разработки СЭМД;
		ДополнительныеАтрибуты.Вставить("FORMAT", "FORMAT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МедицинскиеПроцедурыИМанипуляции Тогда
		//3) S_CODE, Код услуги, Строковое, Уникальный код услуги;
		ДополнительныеАтрибуты.Вставить("S_CODE", "S_CODE");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПрофилиЛабораторныхИсследований Тогда
		//3) Comments, Комментарии, Строковое;
		ДополнительныеАтрибуты.Вставить("Comments", "Comments");
		//4) CodeNMS, Код НМУ, Строковое;
		ДополнительныеАтрибуты.Вставить("CodeNMS", "CodeNMS");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.АнатомическиеЛокализации Тогда
		//4) NAME_ENG, Английское наименование, Строковое;
		ДополнительныеАтрибуты.Вставить("NAME_ENG", "NAME_ENG");
		//5) SNOMED_CT, SNOMED_CT, Строковое;
		ДополнительныеАтрибуты.Вставить("SNOMED_CT", "SNOMED_CT");
		//6) ANATOMIC_FIELD, Анатомическая область, Строковое;
		ДополнительныеАтрибуты.Вставить("ANATOMIC_FIELD", "ANATOMIC_FIELD");
		//7) LATERALITY, Латеральность, Строковое, При указании в данном поле значения «да» для данной анатомической локализации возможно уточнение латеральности из справочника «Латеральность» (OID 1.2.643.5.1.13.13.99.2.778);
		ДополнительныеАтрибуты.Вставить("LATERALITY", "LATERALITY");
		//8) SYNONYMS, Синонимы, Строковое;
		ДополнительныеАтрибуты.Вставить("SYNONYMS", "SYNONYMS");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФРМРДолжностиМедицинскогоПерсонала Тогда
		//4) med, Признак медицинской должности , Целочисленное, признак требуется наличие сертификата, числовой формат, целое число. Значения: 1 – true, 0 – false;
		ДополнительныеАтрибуты.Вставить("med", "med");
		//5) date_end, Дата окончания действия, Дата, формат дата/время;
		ДополнительныеАтрибуты.Вставить("date_end", "date_end");
		//6) form_30, Код строки по форме №30 , Целочисленное, числовой формат, целое число;
		ДополнительныеАтрибуты.Вставить("form_30", "form_30");
		//7) need_cert, Признак требуется наличие сертификата , Целочисленное, числовой формат, целое число. Значения: 1 – true, 0 – false;
		ДополнительныеАтрибуты.Вставить("need_cert", "need_cert");
		//8) educ, Признак должности образовательного учреждения , Целочисленное, числовой формат, целое число. Значения: 1 – true, 0 – false;
		ДополнительныеАтрибуты.Вставить("educ", "educ");
		//9) zs, Признак наличия должности в подсистеме Земский доктор/фельдшер, Целочисленное, числовой формат, целое число. Значения: 1 – true, 0 – false;;
		ДополнительныеАтрибуты.Вставить("zs", "zs");
		//10) show_staff_list, Признак отображения в штатном расписании, Целочисленное, числовой формат, целое число. Значения: 1 – true, 0 – false;, Обязательное;
		ДополнительныеАтрибуты.Вставить("show_staff_list", "show_staff_list");
		//11) federal_code, Код из справочника 1.2.643.5.1.13.13.11.1002, Целочисленное, числовой формат, целое число.;
		ДополнительныеАтрибуты.Вставить("federal_code", "federal_code");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПриоритетИсполненияРецепта Тогда
		//3) Priority_Latin, Приоритет рецепта на латинском языке, Строковое, Название приоритета рецепта на латинском языке;
		ДополнительныеАтрибуты.Вставить("Priority_Latin", "Priority_Latin");
		//4) Comments, Комментарии, Строковое, Уточняющая информация по каждой позиции;
		ДополнительныеАтрибуты.Вставить("Comments", "Comments");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ПутиВведенияЛекарственныхПрепаратов Тогда
		//3) NAME_ENG, Путь введения на английском языке, Строковое, наименование пути введения лекарственных средств на английском языке, обязательное поле, текстовый формат, Обязательное;
		ДополнительныеАтрибуты.Вставить("NAME_ENG", "NAME_ENG");
		//5) NSI_CODE_EEC, Код справочника ЕАЭК, Строковое, необязательное поле – код справочника реестра НСИ ЕАЭК;
		ДополнительныеАтрибуты.Вставить("NSI_CODE_EEC", "NSI_CODE_EEC");
		//6) NSI_ELEMENT_CODE_EEC, Код элемента справочника ЕАЭК, Строковое, необязательное поле – код элемента справочника реестра НСИ ЕАЭК;
		ДополнительныеАтрибуты.Вставить("NSI_ELEMENT_CODE_EEC", "NSI_ELEMENT_CODE_EEC");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.УровниОбразования Тогда
		//4) ACTUAL, Актуальность, Логическое, Используется для обозначения актуальности записи;
		ДополнительныеАтрибуты.Вставить("ACTUAL", "ACTUAL");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ТрансплантологияТипыРодственнойСвязи Тогда
		//3) RELATION_KIND_ID, Код вида родства, Целочисленное, уникальный идентификатор записи из справочника «Виды родства» 1.2.643.5.1.13.13.11.1020;
		ДополнительныеАтрибуты.Вставить("RELATION_KIND_ID", "RELATION_KIND_ID");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.МероприятияПМОДиспансеризацииИУД Тогда
		//4) EVENT, Мероприятие, Строковое;
		ДополнительныеАтрибуты.Вставить("EVENT", "EVENT");
		//5) SourceOfInformation, Источник информации, Строковое; 
		ДополнительныеАтрибуты.Вставить("SourceOfInformation", "SourceOfInformation");
		//6) NUMBER_ACCOUNTING_FORM, NUMBER_ACCOUNTING_FORM, Строковое;
		ДополнительныеАтрибуты.Вставить("NUMBER_ACCOUNTING_FORM", "NUMBER_ACCOUNTING_FORM");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СтатусВыполненияМедицинскойУслуги Тогда
		//4) SORT, Сортировка, Целочисленное;
		ДополнительныеАтрибуты.Вставить("SORT", "SORT");
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ФакторыРискаВыявленныеПриПроведенииПМО Тогда
		//3) ICD10, Код МКБ-10, Строковое;
		ДополнительныеАтрибуты.Вставить("ICD10", "ICD10");
	Иначе
		ИмяЗначения = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидКлассификатора);
		Если ИмяЗначения = "ПричиныОтказовВГоспитализации" Тогда
			//3) NAME_530N, Название по 530н, Строковое, название причины отказа в госпитализации по 530н приказу;
			ДополнительныеАтрибуты.Вставить("NAME_530N", "NAME_530N");
			//4) SYSTEM, Признак СМП/ВМП, Целочисленное, Признак для определения, для какой из систем можно указать причину (1-СМП, 2-ВМП, 3-Оба, 0 - формулировка не может быть применима к СМП/ВМП), Обязательное;
			ДополнительныеАтрибуты.Вставить("SYSTEM", "SYSTEM");
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДополнительныеАтрибуты;
	
КонецФункции

#Область ЗагрузкаИзЕГИСЗ

// Возвращает массив структур, ключ которой - имя реквизита справочника, а значение - имя поля таблицы актуальных в общей форме загрузки.
//
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава - классификатор
// 
// Возвращаемое значение:
//  Массив.
//
Функция ПолучитьЗагружаемыеПоляЕГИСЗ(ВидКлассификатора) Экспорт
	
	Поля = Новый Структура;
	
	Сопоставления = ПолучитьСопоставленийРеквизитовИXMLСправочникаЕГИСЗ(ВидКлассификатора);
	Для Каждого КлючИЗначение Из Сопоставления Цикл
		Для Каждого Значение Из СтрРазделить(КлючИЗначение.Значение, ",", Ложь) Цикл
			Поля.Вставить(СокрЛП(Значение), СокрЛП(Значение));
		КонецЦикла;
	КонецЦикла;
	
	Возврат Поля;
	
КонецФункции

// Варианты поиска существующих объектов при загрузке.
//
// Параметры:
//  ВидКлассификатора	 - ПеречислениеСсылка.ВидыКлассификаторовМинЗдрава - классификатор
// 
// Возвращаемое значение:
//  Массив - порядок поиска объектов в базе при загрузке из ФР НСИ ЕГИСЗ.
//
Функция ПолучитьПорядокПоискаСуществующихОбъектов(ВидКлассификатора) Экспорт
	
	ПорядокПоиска = Новый Массив;
	
	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.СправочникКодовИнтерпретацииРезультатов Тогда
		ПорядокПоиска.Добавить(Новый Структура("ТЧ_Атрибуты_CODE", "ТЧ_Атрибуты_CODE"));
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.РеестрРуководствПоРеализацииСтруктурированныхЭлектронныхМедицинскихДокументов Тогда
		ПорядокПоиска.Добавить(Новый Структура("OIDКлассификатораМинздрава", "OIDКлассификатораМинздрава"));
	Иначе
		ПорядокПоиска.Добавить(Новый Структура("УИДЕГИСЗ", "УИДЕГИСЗ"));
	КонецЕсли;
	
	Возврат ПорядокПоиска;
	
КонецФункции

// Выполняется перед записью нового элемента
//
// Параметры:
//  ТаблицаКлассификатор	 - ТаблицаЗначений - Результат запроса к сайту НСИ
//  OID						 - Строка - oid справочника
//  ДополнительныеСвойства	 - Структура - Дополнительные параметры при загрузке
//
Процедура ПередОбработкойТаблицыКлассификатора(ТаблицаКлассификатор, ВидКлассификатора) Экспорт
	
	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ГруппыКровиДляУчетаСигнальнойИнформацииОПациенте Тогда
		ЗаполнитьНаименованияГрупп(ТаблицаКлассификатор);
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ЛьготныеКатегорииГраждан Тогда
		ЗаполнитьУИДЕГИСЗИзТаблицыАтрибутов(ТаблицаКлассификатор);
	КонецЕсли;
	
КонецПроцедуры

// Загрузка справочника: событие перед загрузкой элемента.
//
// Параметры:
//  СтрокаДереваКлассификатора	 - СтрокаДереваЗначений	 - строка дерева классификатора
//  Родитель					 - Ссылка				 - группа
//  ДополнительныеСвойства		 - Структура			 - дополнительные свойства
//  OID							 - Строка				 - OID
//  Отказ						 - Булево				 - Отказ
// 
// Возвращаемое значение:
//  Строка - сообщение.
//
Функция ЗагрузкаСправочникаПередЗагрузкойЭлемента(СтрокаДереваКлассификатора, Родитель, ДополнительныеСвойства, OID, Отказ, ВидКлассификатора, СтрокаКлассификатора) Экспорт
	
	ОпределитьАктуальность(СтрокаДереваКлассификатора, ВидКлассификатора, СтрокаКлассификатора);
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьНаименованияГрупп(ТаблицаКлассификатор)
	
	Для Каждого СтрокаКлассификатора Из ТаблицаКлассификатор Цикл
		Если Не ЗначениеЗаполнено(СтрокаКлассификатора.Наименование) Тогда
			СтрокаКлассификатора.Наименование = СтрокаКлассификатора.НаименованиеПолное;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьУИДЕГИСЗИзТаблицыАтрибутов(ТаблицаКлассификатор)
	
	Для Каждого СтрокаТаблицы Из ТаблицаКлассификатор Цикл
		
		СтрокаИдентификатора = СтрокаТаблицы.Атрибуты.Найти("ID", "Ключ");
		Если СтрокаИдентификатора <> Неопределено Тогда
			СтрокаТаблицы.УИДЕГИСЗ = Число(СтроковыеФункцииКлиентСервер.ПолучитьЦифрыСтроки(СтрокаИдентификатора.Значение));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОпределитьАктуальность(СтрокаДереваКлассификатора, ВидКлассификатора, СтрокаКлассификатора)
	
	ПризнакАктуальности = Неопределено;
	Если ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураСпециальностей Тогда
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("REL");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(Число(СтрокаАтрибута.Значение));
			Исключение КонецПопытки;
		КонецЕсли;
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДолжностиРаботниковМедОрганизаций Тогда
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("ACTUAL");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(Число(СтрокаАтрибута.Значение));
			Исключение КонецПопытки;
		КонецЕсли;
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.КлассификаторДокументовУдостоверяющихЛичность Тогда
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("IS_ENABLED");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(Число(СтрокаАтрибута.Значение));
			Исключение КонецПопытки;
		КонецЕсли;
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.ДокументыУдостоверяющиеЛичность Тогда
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("ACTUAL");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(СтрокаАтрибута.Значение);
			Исключение КонецПопытки;
		КонецЕсли;
	ИначеЕсли ВидКлассификатора = Перечисления.ВидыКлассификаторовМинЗдрава.НоменклатураКоечногоФондаМедицинскойОрганизации Тогда
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("REL");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(Число(СтрокаАтрибута.Значение));
			Исключение КонецПопытки;
		КонецЕсли;
	Иначе
		СтрокаАтрибута = СтрокаКлассификатора.Атрибуты.Найти("ACTUAL");
		Если СтрокаАтрибута <> Неопределено Тогда
			Попытка
				ПризнакАктуальности = Булево(СтрокаАтрибута.Значение);
			Исключение КонецПопытки;
		КонецЕсли;
		
		Если ПризнакАктуальности = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ПризнакАктуальности = Ложь Тогда
		СтрокаДереваКлассификатора.Архив = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти