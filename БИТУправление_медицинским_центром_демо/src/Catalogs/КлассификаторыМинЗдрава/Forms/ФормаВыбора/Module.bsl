#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПроизвольныйЗапрос") Тогда
		Список.ПроизвольныйЗапрос = Истина;
		Список.ТекстЗапроса = Параметры.ПроизвольныйЗапрос;
	КонецЕсли;
	
	Элементы.ФормаЗагрузитьСправочник.Видимость = ЕстьПравоЗагрузкиКлассификаторов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.СписокСкрытьПоказатьАрхивные, Список, Ложь);
	
	ТекущиеВидыКлассификатора = ТекущийОтборВидовКлассификатора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор);
	ОтображаемыеКолонки = ПолучитьОтображаемыеКолонкиПоВидуКлассификатора(ТекущиеВидыКлассификатора);
	
	Для Каждого КолонкаСписка Из Элементы.Список.ПодчиненныеЭлементы Цикл
		КолонкаСписка.Видимость = ОтображаемыеКолонки.Найти(КолонкаСписка.Имя) <> Неопределено;
	КонецЦикла;
	
	Если ТекущиеВидыКлассификатора.Количество() = 1 Тогда
		ЭтотОбъект.Заголовок = Строка(ТекущиеВидыКлассификатора[0]);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПоместитьВАрхив(Команда)
	
	РаботаСДиалогамиКлиент.ПоместитьВАрхив(Элементы.Список.ВыделенныеСтроки);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьАрхивные(Команда)
	
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.СписокСкрытьПоказатьАрхивные, Список);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	ТекущиеВидыКлассификатора = ТекущийОтборВидовКлассификатора(Настройки.Отбор);
	
	Если ЗначениеЗаполнено(ТекущиеВидыКлассификатора) Тогда
		Для Каждого СтрокаСписка Из Строки Цикл
			Если ТекущиеВидыКлассификатора.НайтиПоЗначению(СтрокаСписка.Значение.Данные.ВидКлассификатора) = Неопределено Тогда
				Для Каждого ОформлениеЯчейки Из СтрокаСписка.Значение.Оформление Цикл
					ОформлениеЯчейки.Значение.УстановитьЗначениеПараметра("Видимость", Ложь);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекущийОтборВидовКлассификатора(Знач КомпоновщикНастроек)
	
	Если ТипЗнч(КомпоновщикНастроек) = Тип("КомпоновщикНастроекКомпоновкиДанных") Тогда
		ОтборКомпоновкиСписка = КомпоновщикНастроек.ПолучитьНастройки().Отбор.Элементы;
	Иначе
		ОтборКомпоновкиСписка = КомпоновщикНастроек.Элементы;
	КонецЕсли;
	
	Для Каждого ЭлементОтбора Из ОтборКомпоновкиСписка Цикл
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных")
			И ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВидКлассификатора")
			И ЭлементОтбора.Использование
		Тогда
			Если ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
				ВидыКлассификатора = Новый СписокЗначений;
				ВидыКлассификатора.Добавить(ЭлементОтбора.ПравоеЗначение);
				Возврат ВидыКлассификатора;
			ИначеЕсли ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда
				Возврат ЭлементОтбора.ПравоеЗначение;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Новый СписокЗначений;
	
КонецФункции

&НаКлиенте
Функция ПолучитьОтображаемыеКолонкиПоВидуКлассификатора(ТекущиеВидыКлассификатора)
	
	ОтображаемыеКолонки = ОбщегоНазначенияБИТКлиентСервер.НовыйМассив("УИДЕГИСЗ", "НПП");
	
	Для Каждого ВидКлассификатора Из ТекущиеВидыКлассификатора Цикл
		Если ВидКлассификатора.Значение = ПредопределенноеЗначение("Перечисление.ВидыКлассификаторовМинЗдрава.КлассификаторКатегорийЛьгот")
			Или ВидКлассификатора.Значение = ПредопределенноеЗначение("Перечисление.ВидыКлассификаторовМинЗдрава.КлассификаторДокументовУдостоверяющихЛичность")
			Или ВидКлассификатора.Значение = ПредопределенноеЗначение("Перечисление.ВидыКлассификаторовМинЗдрава.КлассификаторСоциальныхСтатусов")
		Тогда
			ОтображаемыеКолонки.Добавить("НаименованиеПолное");
		Иначе
			ОтображаемыеКолонки.Добавить("Наименование");
			ОтображаемыеКолонки.Добавить("ВидКлассификатора");
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ТекущиеВидыКлассификатора) Тогда
		ОтображаемыеКолонки.Добавить("Наименование");
		ОтображаемыеКолонки.Добавить("ВидКлассификатора");
	КонецЕсли;
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОтображаемыеКолонки);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеСправочника(ТекущийВидКлассификатора)
	
	МенеджерСправочника = Справочники["КлассификаторыМинЗдрава"];
	OID = МенеджерСправочника.ПолучитьOIDСправочника(ТекущийВидКлассификатора);
	
	МенеджерЗаписи = РегистрыСведений.НастройкиОбновленияСправочниковЕГИСЗ.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.Классификатор = OID;
	МенеджерЗаписи.Прочитать();
	Если МенеджерЗаписи.РежимОбновления = Перечисления.РежимыАвтоОбновленияСправочниковЕГИСЗ.Полное Тогда
		РежимОбновленияПолное = Истина;
	Иначе
		РежимОбновленияПолное = Ложь;
	КонецЕсли;
	
	ДанныеСправочника = Новый Структура;
	ДанныеСправочника.Вставить("OID", OID);
	ДанныеСправочника.Вставить("РежимОбновленияПолное", РежимОбновленияПолное);
	
	Возврат ДанныеСправочника;
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьПравоЗагрузкиКлассификаторов()
	
	Если РольДоступна("ДополнительныеПраваЕГИСЗ")
		Или РольДоступна("ПолныеПрава")
		Или ПривилегированныйРежим()
	Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьСправочник(Команда)
	
	ТекущиеВидыКлассификатора = ТекущийОтборВидовКлассификатора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор);
	
	Если ТекущиеВидыКлассификатора.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеВидыКлассификатора.Количество() > 1 Тогда
		ТекущиеВидыКлассификатора.ПоказатьВыборЭлемента(Новый ОписаниеОповещения("ПослеВыбораВидаКлассификатора", ЭтотОбъект));
		//ПоказатьВыборИзМеню(Новый ОписаниеОповещения("ПослеВыбораВидаКлассификатора", ЭтотОбъект), ТекущиеВидыКлассификатора);
	Иначе
		ЗагрузитьКлассификаторПоВидуКлассификатора(ТекущиеВидыКлассификатора[0].Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораВидаКлассификатора(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ЗагрузитьКлассификаторПоВидуКлассификатора(ВыбранныйЭлемент.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьКлассификаторПоВидуКлассификатора(ВидКлассификатора)
	
	ДанныеСправочника = ПолучитьДанныеСправочника(ВидКлассификатора);
	
	Если ДанныеСправочника.РежимОбновленияПолное Тогда
		ИнтеграцияЕГИСЗВызовСервера.ОбновитьСправочник(ДанныеСправочника.OID);
		Элементы.Список.Обновить();
	Иначе
		СтруктураПараметры = Новый Структура("НаименованиеСправочника, ВидКлассификатора", "КлассификаторыМинЗдрава", ВидКлассификатора);
		ОткрытьФорму("ОбщаяФорма.ЗагрузкаНСИЕГИСЗ", СтруктураПараметры, ЭтотОбъект, ВидКлассификатора,,, Новый ОписаниеОповещения("ЗагрузкаКлассификатораЗавершена",ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузкаКлассификатораЗавершена(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.Список.Обновить();
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.СписокСкрытьПоказатьАрхивные, Список, Элементы.СписокСкрытьПоказатьАрхивные.Пометка);
	
КонецПроцедуры

#КонецОбласти