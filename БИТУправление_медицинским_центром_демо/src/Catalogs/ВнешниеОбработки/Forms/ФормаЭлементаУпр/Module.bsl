#Область ОписаниеПеременных
Перем мСпискиПечатныхФормОбъектов;

&НаКлиенте
Перем мТекущаяСтрока;

&НаКлиенте
Перем мПредыдущийВидОбработки;

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	об = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.ВнешниеОбработки"));
	ДанныеХранилища = об.ХранилищеВнешнейОбработки.Получить();
	
	Если Не Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма И ДанныеХранилища = Неопределено Тогда
		
		Объект.КомментарийКФайлуИсточнику = "Файл внешней обработки не выбран";
		ОбновлениеОтображения();
		
	КонецЕсли;
	
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)	
	
	Элементы.ВидОбработки.ТолькоПросмотр = Не Объект.ВидОбработки.Пустая();
	
	мПредыдущийВидОбработки = Объект.ВидОбработки;
	ОбновитьДоступностьПринадлежности();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Объект.ВидОбработки.Пустая() Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не заполнено поле: Вид обработки'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли; 
	
	Если Не ВыбраныФайлыВнешнейОбработки() Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не выбран файл внешней обработки'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если РегистрацияОбработки Тогда         
		ТекущийОбъект.ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(ДвоичныеДанныеОбработки , Новый СжатиеДанных(9));
		РегистрацияОбработки = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// Обновление кэша печатных форм конфигурации.
	Если Объект.ВидОбработки = 
		ПредопределенноеЗначение("Перечисление.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма")
	Тогда
		глКэшПечатныхФорм = ПечатьДокументовСервер.ЗаполнитьКэшПечатныхФорм();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ЗаполнитьСписокВыбораПодменяемыхФорм()
	
	Если Объект.ВидОбработки = ПредопределенноеЗначение("Перечисление.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма") Тогда
		
		ТекущиеДанные = Элементы.Принадлежность.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			
			СтруктураВнутреннихПечатныхФорм = ПечатьДокументовСервер.ПолучитьСтруктуруПечатныхФормСервер(ТекущиеДанные.СсылкаОбъекта);
			
			СписокВыбора = Элементы.ЗаменяемаяПечатнаяФорма.СписокВыбора;
			СписокВыбора.Очистить();
			Для Каждого ВнутренняяПечатнаяФорма Из СтруктураВнутреннихПечатныхФорм Цикл
				СписокВыбора.Добавить(ВнутренняяПечатнаяФорма.Ключ, ВнутренняяПечатнаяФорма.Значение);
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтруктураЗаполненных(ТекущийОбъект = Неопределено)
	
	Результат = Новый СписокЗначений;
	
	об = РеквизитФормыВЗначение("Объект");
	Для Каждого СтрокаПринадлежности Из об.Принадлежность Цикл
		
		Если ТекущийОбъект = Неопределено Тогда
			Результат.Добавить(СтрокаПринадлежности.СсылкаОбъекта.Метаданные().Имя);
		ИначеЕсли ТекущийОбъект <> Неопределено И СтрокаПринадлежности.СсылкаОбъекта <> ТекущийОбъект Тогда
			Результат.Добавить(СтрокаПринадлежности.СсылкаОбъекта.Метаданные().Имя);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ВыбратьФайл()
	
	Если НЕ ЗначениеЗаполнено(Объект.ВидОбработки) Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не заполнено значение реквизита ""Вид обработки""'"));
		Возврат Ложь;
	КонецЕсли; 
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	СтруктураВозврата = Новый Структура;
	
	
	ВидыДополнительныхВнешнихОбработок = ДопСерверныеФункцииПовтИсп.ПолучитьСоответствиеДляПеречисления("ВидыДополнительныхВнешнихОбработок");
	Если Объект.ВидОбработки = ВидыДополнительныхВнешнихОбработок.Получить("Отчет") Тогда
		
		ДиалогФайла.Фильтр = "Внешний отчет(*.erf)|*.erf";
		
	Иначе
		
		ДиалогФайла.Фильтр = "Внешняя обработка(*.epf)|*.epf";
		
	КонецЕсли;
	
	ВнешняяОбработка = Неопределено;
	
	Если ДиалогФайла.Выбрать() Тогда
		
		ПолноеИмяФайлаОбработки = ДиалогФайла.ПолноеИмяФайла;
		Файл = Новый Файл(ПолноеИмяФайлаОбработки);
		
		АдресВоВременномХранилище = "";
		ВыбранноеИмяФайла = "";
		
		Если ПоместитьФайл(АдресВоВременномХранилище, ПолноеИмяФайлаОбработки, , Ложь) Тогда
			
			ИмяФайла		= Файл.Имя;
			РасширениеФайла = СтрЗаменить(Файл.Расширение,".","");
			
			Если	  ВРег(РасширениеФайла) = "EPF" Тогда
				// Внешняя обработка
			ИначеЕсли ВРег(РасширениеФайла) = "ERF" Тогда
				// Внешний отчет
			Иначе
				ПоказатьПредупреждение(,НСтр("ru = 'Невозможно определить тип файла по расширению'"));
				Возврат Ложь;
			КонецЕсли;
			
			Если НЕ ЗарегистрироватьОбработку(АдресВоВременномХранилище, ИмяФайла, РасширениеФайла) Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЕсли;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
	Элементы.ВидОбработки.ТолькоПросмотр = Истина;
	
	Объект.КомментарийКФайлуИсточнику = Файл.Имя + Символы.ПС + "размер:" + Файл.Размер()+" байт; изменен:" + Файл.ПолучитьВремяИзменения() + "; сохранен в ИБ:" + ТекущаяДата();

	ОбновлениеОтображения();
	
	Возврат Истина;
	
КонецФункции

// Получает файл обработки из временного хранилища, пытается создать объект
// обработки (внешнего отчета) и получает информацию из объекта внешней обработки (отчета).
//
Функция ЗарегистрироватьОбработку(АдресВоВременномХранилище,
								ИмяФайла,
								РасширениеФайла)
	
	ДвоичныеДанныеОбработки = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	ДвоичныеДанныеОбработки.Записать(ИмяВременногоФайла);
	
	Попытка
		Если ВРег(РасширениеФайла) = "EPF" Тогда
			ВнешняяОбработкаОбъект = ВнешниеОбработки.Создать(ИмяВременногоФайла, Истина);
		Иначе
			ВнешняяОбработкаОбъект = ВнешниеОтчеты.Создать(ИмяВременногоФайла, Истина);
		КонецЕсли;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат Ложь;
	КонецПопытки;
			
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		Объект.Наименование = ВнешняяОбработкаОбъект.Метаданные().Синоним;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции
	
&НаКлиенте
Процедура КоманднаяПанельФайлаИсточникаЗаменитьФайл(Элемент)
	
	Если ВыбратьФайл() Тогда
		
		Элементы.ВидОбработки.Доступность = Ложь;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	РегистрацияОбработки = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДоступностьПринадлежности()
	
	Если Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
		ЭтаФорма.Заголовок = "Регистрация внешней печатной формы";
	ИначеЕсли Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Обработка Тогда
		ЭтаФорма.Заголовок = "Регистрация внешней обработки";
	ИначеЕсли Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет Тогда
		ЭтаФорма.Заголовок = "Регистрация внешнего отчета";
	КонецЕсли;
	
	Если Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Обработка ИЛИ Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.Отчет ИЛИ Объект.ВидОбработки.Пустая() Тогда
		
		Если Не Объект.Принадлежность.Количество() = 0  Тогда
			Объект.Принадлежность.Очистить();
		КонецЕсли;
		
		Элементы.Принадлежность.КоманднаяПанель.Доступность = Ложь;
		Элементы.ГруппаПринадлежность.Доступность = Ложь;
		Элементы.Принадлежность.Доступность = Ложь;
		
	Иначе
		
		Элементы.Принадлежность.КоманднаяПанель.Доступность = Истина;
		Элементы.ГруппаПринадлежность.Доступность = Истина;
		Элементы.Принадлежность.Доступность = Истина;
		
		Если Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма Тогда
			Элементы.ГруппаПринадлежность.Заголовок = "Принадлежность печатной формы";
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Принадлежность.ПодчиненныеЭлементы.ТабличнаяЧасть.Видимость = Ложь;
	
	ЭтоВидОбработкиПечатнойФормы = Объект.ВидОбработки = Перечисления.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма;
	ЭтоВидОбработкиЗаполнениеТЧ  = Ложь;
	
	Элементы.ПредставлениеКнопки.Видимость            = ЭтоВидОбработкиЗаполнениеТЧ Или ЭтоВидОбработкиПечатнойФормы;
	Элементы.ЗаменяемаяПечатнаяФорма.Видимость        = ЭтоВидОбработкиПечатнойФормы;
	
КонецПроцедуры  

&НаКлиенте
Процедура ВидОбработкиПриИзменении(Элемент)
	
	Если Не Объект.Принадлежность.Количество() = 0 Тогда
		ВидыДополнительныхВнешнихОбработок = ДопСерверныеФункцииПовтИсп.ПолучитьСоответствиеДляПеречисления("ВидыДополнительныхВнешнихОбработок");
		
		Если (Объект.ВидОбработки = ВидыДополнительныхВнешнихОбработок.Получить("Обработка") 
			ИЛИ Объект.ВидОбработки = ВидыДополнительныхВнешнихОбработок.Получить("Отчет") 
			ИЛИ Объект.ВидОбработки = ВидыДополнительныхВнешнихОбработок.Получить("ЗаполнениеСпискаСМСРассылки"))
			Тогда
			Ответ = Вопрос(НСтр("ru='Табличная часть будет очищена'"), РежимДиалогаВопрос.ОКОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				ВидОбработки =  мПредыдущийВидОбработки;
				Возврат;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
	ОбновитьДоступностьПринадлежности();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОткрытьФормуВыбораПринадлежности(Элементы.Принадлежность, Элементы.Принадлежность.ТекущиеДанные.СсылкаОбъекта);
	
КонецПроцедуры

&НаСервере
Функция СтруктураЗаполненныхТЧ(СсылкаНаОбъект, ТекНомерСтроки)
	
	об = РеквизитФормыВЗначение("Объект");
	Массив = об.Принадлежность.НайтиСтроки(Новый Структура("СсылкаОбъекта", СсылкаНаОбъект));
	
	Результат = Новый СписокЗначений;
	
	Для Каждого СтрокаПринадлежности Из Массив Цикл
		
		Если Не СтрокаПринадлежности.НомерСтроки = ТекНомерСтроки Тогда
			Результат.Добавить(СтрокаПринадлежности.ТабличнаяЧастьИмя);
		КонецЕсли;
		
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ТабличнаяЧастьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Принадлежность.ТекущиеДанные;
	Парам = Новый Структура;
	Парам.Вставить("РежимВыбора", Истина);
	Форма = ПолучитьФорму("Справочник.ВнешниеОбработки.Форма.ФормаВыбораТЧПринадлежностиУпр", Парам, ЭтаФорма.Элементы.Принадлежность);
	
	Если  ТекущиеДанные.СсылкаОбъекта  = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru='Не выбрана принадлежность к объекту'"));
		Возврат;
	КонецЕсли; 
	
	Форма.СсылкаОбъекта = ТекущиеДанные.СсылкаОбъекта;
	Форма.УжеВыбранные  = СтруктураЗаполненныхТЧ(ТекущиеДанные.СсылкаОбъекта, ТекущиеДанные.НомерСтроки);
	мТекущаяСтрока = Элементы.Принадлежность.ТекущиеДанные;
	
	Если Форма.Открыта() Тогда
		Форма.СписокТабличныхЧастей.Очистить();
	КонецЕсли;
	
	Форма.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура КоманднаяПанельФайлаИсточникаСохранитьФайлНаДиск(Элемент)
	
	ДанныеОбработки = ФайлВнешнейОбработки(Объект);
	
	Если ДанныеОбработки = Неопределено Тогда
		ПоказатьПредупреждение(,НСтр("ru='Внешний файл отсутствует в хранилище'")); 
		Возврат;
	КонецЕсли; 
	
	ДиалогФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	                           
	Если Объект.ВидОбработки = ПредопределенноеЗначение("Перечисление.ВидыДополнительныхВнешнихОбработок.Отчет") Тогда
		ДиалогФайла.Фильтр = "Внешний отчет(*.erf)|*.erf";
	Иначе
		ДиалогФайла.Фильтр = "Внешняя обработка(*.epf)|*.epf";
	КонецЕсли;
	
	ДиалогФайла.ПолноеИмяФайла = ОбщегоНазначенияСервер.УдалитьЗапрещенныеСимволыИмени(Объект.Наименование);
	
	Если ДиалогФайла.Выбрать() Тогда
		ИмяФайла = ДиалогФайла.ПолноеИмяФайла;
		Попытка
			ДанныеОбработки.Записать(ИмяФайла);
		Исключение
			ПоказатьПредупреждение(,НСтр("ru='Внешний файл не сохранен
									|'")+ ОписаниеОшибки()); 
		КонецПопытки; 
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ФайлВнешнейОбработки(Знач Объект)
	
	об = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.ВнешниеОбработки"));
	ДвоичныеДанные = об.ХранилищеВнешнейОбработки.Получить();
	
	Возврат ДвоичныеДанные;
	
КонецФункции

&НаСервере
Процедура УстановитьХранилищеОбработкиТЧ(ПолноеИмяФайлаОбработки, НомерСтроки)
	
	об = РеквизитФормыВЗначение("Объект");
	об.Принадлежность.Получить(НомерСтроки).ХранилищеВнешнейОбработки = Новый ХранилищеЗначения(Новый ДвоичныеДанные(ПолноеИмяФайлаОбработки));
	ЗначениеВРеквизитФормы(об, "Объект");
	
КонецПроцедуры	

&НаКлиенте
Процедура КоманднаяПанельФайлаИсточникаУдалитьФайл(Кнопка)
	
	СсылкаНаОбработку = "";
	ДвоичныеДанныеОбработки = Неопределено;
	ВнешняяОбработка = Неопределено;
	
	Объект.КомментарийКФайлуИсточнику = НСтр("ru='Файл не выбран'");
	ОбновлениеОтображения();
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеОтображения()
	
	Если ВыбраныФайлыВнешнейОбработки() Тогда
		Элементы.КомментарийКФайлуИсточнику.ЦветТекста = ЦветаСтиля.ЦветТекстаФормы;
	Иначе
		Элементы.КомментарийКФайлуИсточнику.ЦветТекста = ЦветаСтиля.ЦветОтрицательногоЧисла;
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Функция ВыбраныФайлыВнешнейОбработки()
	
	об = РеквизитФормыВЗначение("Объект", Тип("СправочникОбъект.ВнешниеОбработки"));
	Если об.КомментарийКФайлуИсточнику = "Файл внешней обработки не выбран" Тогда
		
		Если об.Принадлежность.Количество() = 0 Или Не об.Принадлежность.Найти("","ИмяФайлаПечатнойФормы") = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли; 
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ()


///////////////////////////////////////////////////////////////////
//////////////// ОБРАБОТЧИКИ ТЧ ПРИНАДЛЕЖНОСТЬ

&НаКлиенте
Процедура ИмяФайлаПечатнойФормыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЗначениеВозврата = ВыбратьФайл();
	
	Если ЗначениеВозврата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.Принадлежность.ТекущиеДанные.ИмяФайлаПечатнойФормы = ЗначениеВозврата.КомментарийКФайлу;
	Если Элементы.Принадлежность.ТекущиеДанные.НомерСтроки > 0 Тогда 
		УстановитьХранилищеОбработкиТЧ(ЗначениеВозврата.ПолноеИмяФайлаОбработки, Элементы.Принадлежность.ТекущиеДанные.НомерСтроки - 1 );
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось загрузить файл'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		Элементы.ВидОбработки.ТолькоПросмотр = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличнаяЧастьОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Принадлежность.ТекущиеДанные;
	ТекущиеДанные.ТабличнаяЧастьИмя           = "";
	ТекущиеДанные.ТабличнаяЧастьПредставление = "";
	
	
КонецПроцедуры

// Процедура обработки события "НачалоВыбора" колонки ПредставлениеНастроекОбработки элемента формы Принадлежность.
// Открывает форму редактирования параметров обработки.
// Устанавливает значение в поле ПредставлениеНастроекОбработки.
//
&НаКлиенте
Процедура ПринадлежностьПредставлениеНастроекОбработкиНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Если новый объект, записать перед установкой параметров.
	Если Параметры.Ключ.Пустая() Тогда
		
		Ответ = Вопрос(НСтр("ru='Перед установкой параметров необходимо записать объект. Записать?'"), РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ Записать() Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Принадлежность.ТекущиеДанные;
	
	// Получить форму редактирования параметров.
	Если ТекущиеДанные.НомерСтроки > 0 Тогда
		номер = ТекущиеДанные.НомерСтроки-1;
		// Передать параметры форме
		Парам = ПолучитьПараметры(номер);
		ФормаПараметров = ПолучитьФорму("Справочник.ВнешниеОбработки.Форма.ФормаПараметровОбработкиУпр", Парам, ЭтаФорма);
		
		// Получить измененные параметры.
		ПолучПараметры = ФормаПараметров.ОткрытьМодально();
	КонецЕсли;
	
	// Если параметры изменились, принять изменения.
	Если ПолучПараметры <> Неопределено Тогда
		
		Если ПолучПараметры.Количество() > 0 Тогда
			УстановитьДополнительныеПараметрыОбработки(ПолучПараметры, Элементы.Принадлежность.ТекущиеДанные.НомерСтроки - 1);
			ТекущиеДанные.ПредставлениеНастроекОбработки   = "<Изменить параметры>";
			
		Иначе
			ТекущиеДанные.ДополнительныеПараметрыОбработки = Неопределено;
			ТекущиеДанные.ПредставлениеНастроекОбработки   = "<Задать параметры>";
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПринадлежностьПредставлениеНастроекОбработкиНачалоВыбора()

&НаСервере
Процедура УстановитьДополнительныеПараметрыОбработки(ПолучПараметры, НомерСтроки)
	об = РеквизитФормыВЗначение("Объект");
	об.Принадлежность.Получить(НомерСтроки).ДополнительныеПараметрыОбработки = Новый ХранилищеЗначения(ПолучПараметры);
	об.Записать();
	ЗначениеВРеквизитФормы(об, "Объект");
КонецПроцедуры	

&НаСервере
Функция ПолучитьПараметры(НомерСтроки)
	
	Парам = Новый Структура;
	об = ДанныеФормыВЗначение(Объект, Тип("СправочникОбъект.ВнешниеОбработки"));
	Парам.Вставить("ХранилищеВнешнейОбработкиПараметр", об.Принадлежность.Получить(НомерСтроки).ДополнительныеПараметрыОбработки);
	Возврат Парам;
	
КонецФункции

// Процедура обработки события "Очистка" колонки ДополнительныеПараметрыОбработки элемента формы Принадлежность.
// Очищает значение поля ДополнительныеПараметрыОбработки.
// Устанавливает значение в поле ПредставлениеНастроекОбработки.
//
&НаКлиенте
Процедура ПринадлежностьПредставлениеНастроекОбработкиОчистка(Элемент, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Принадлежность.ТекущиеДанные;
	
	// Если структура параметров заполнена, запросить подтверждение на очистку.
	Если Элементы.Принадлежность.ТекущиеДанные.НомерСтроки > 0 Тогда
		Если Не ДополнительныеПараметрыОбработкиНеопределено(Элементы.Принадлежность.ТекущиеДанные.НомерСтроки-1) Тогда
			
			Ответ = Вопрос(НСтр("ru='Параметры внешней обработки будут очищены.'") + " " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ДаНет);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				
				УстановитьДополнительныеПараметрыОбработки(Неопределено, Элементы.Принадлежность.ТекущиеДанные.НомерСтроки-1);
				Объект.Принадлежность.НайтиПоИдентификатору(Элементы.Принадлежность.ТекущиеДанные.НомерСтроки-1).ПредставлениеНастроекОбработки = "<Задать параметры>";
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры // ПринадлежностьПредставлениеНастроекОбработкиОчистка()

&НаКлиенте
Процедура ПринадлежностьПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ЗаполнитьСписокВыбораПодменяемыхФорм();
	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаПечатнойФормыОчистка(Элемент, СтандартнаяОбработка)
	
	Если Элементы.Принадлежность.ТекущиеДанные.НомерСтроки > 0 Тогда
		УстановитьХранилищеОбработкиТЧ(Неопределено, Элементы.Принадлежность.ТекущиеДанные.НомерСтроки - 1);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПринадлежности(Элемент, СсылкаОбъекта = Неопределено, РежимПодбора = Ложь)
	
	Отказ = Истина;
	Парам = Новый Структура;
	Парам.Вставить("РежимВыбора", Истина);
	Форма = ПолучитьФорму("Справочник.ВнешниеОбработки.Форма.ФормаВыбораПринадлежностиУпр", Парам, ЭтаФорма.Элементы.Принадлежность);
	Форма.ВидОбработки = Объект.ВидОбработки;
	
	Если Не Объект.ВидОбработки = ПредопределенноеЗначение("Перечисление.ВидыДополнительныхВнешнихОбработок.ПечатнаяФорма") Тогда
		Форма.УжеВыбранные = СтруктураЗаполненных(СсылкаОбъекта);
	КонецЕсли; 
	
	мТекущаяСтрока = ?(СсылкаОбъекта = Неопределено, Неопределено, Элемент.ТекущиеДанные);
	Если Форма.Открыта() Тогда
		Форма.СписокДокументов.Очистить();
	КонецЕсли;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ОткрытьФормуВыбораПринадлежности(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СписокЗначений") Тогда
		
		Если мТекущаяСтрока = Неопределено Тогда
			НоваяСтрока = Объект.Принадлежность.Добавить();
		Иначе
			НоваяСтрока = мТекущаяСтрока;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗНЧ(ВыбранноеЗначение) = Тип("ЭлементСпискаЗначений") Тогда // Выбрали ТЧ
		
		НоваяСтрока.ТабличнаяЧастьИмя           = ВыбранноеЗначение.Значение;
		НоваяСтрока.ТабличнаяЧастьПредставление = ВыбранноеЗначение.Представление;
		
	ИначеЕсли ТипЗНЧ(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			
			НоваяСтрока = Объект.Принадлежность.Добавить();
			
			Если ДопСерверныеФункции.ЭтоДокумент(ЭлементСписка.Значение.Имя) Тогда
				
				НоваяСтрока.СсылкаОбъекта = ПредопределенноеЗначение("Документ." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			ИначеЕсли ДопСерверныеФункции.ЭтоСправочник(ЭлементСписка.Значение.Имя) Тогда
				
				НоваяСтрока.СсылкаОбъекта = ПредопределенноеЗначение("Справочник." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Если ДопСерверныеФункции.ЭтоДокумент(ВыбранноеЗначение.Имя) Тогда
			НоваяСтрока.СсылкаОбъекта = ДопСерверныеФункции.ПустаяСсылкаПоТипуДокумента(ВыбранноеЗначение.Имя);
			НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
		ИначеЕсли ДопСерверныеФункции.ЭтоСправочник(ВыбранноеЗначение.Имя) Тогда
			НоваяСтрока.СсылкаОбъекта = ДопСерверныеФункции.ПустаяСсылкаПоТипуСправочника(ВыбранноеЗначение.Имя);
			НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
		Иначе
			НоваяСтрока.ТабличнаяЧастьИмя           = ВыбранноеЗначение.Имя;
			НоваяСтрока.ТабличнаяЧастьПредставление = ВыбранноеЗначение.Синоним;
		КонецЕсли;	
		
		ЗаполнитьСписокВыбораПодменяемыхФорм();
		
	КонецЕсли;
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////
///////////////// ОБРАБОТЧИКИ КОМАНДНОЙ ПАНЕЛИ

// Процедура обработки действия "Подбор" элемента формы КоманднаяПанельОбъектов.
// Открывает форму выбора принадлежности в режиме подбора.
//
&НаКлиенте
Процедура КоманднаяПанельОбъектовПодбор(Кнопка)
	
	ОткрытьФормуВыбораПринадлежности(Элементы.Принадлежность, , Истина);
	
КонецПроцедуры // КоманднаяПанельОбъектовПодбор()

// Процедура обработки действия "Очистить" элемента формы КоманднаяПанельОбъектов.
// Очищает табличную часть Принадлежность.
//
&НаКлиенте
Процедура КоманднаяПанельОбъектовОчистить(Кнопка)
	
	Ответ = Вопрос(НСтр("ru='Таблица принадлежности будет очищена.'") + " " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Объект.Принадлежность.Очистить();
	КонецЕсли;
	
КонецПроцедуры // КоманднаяПанельОбъектовОчистить()

&НаКлиенте
Процедура ПринадлежностьПриАктивизацииСтроки(Элемент)
	
	ДанныеСтроки = Элементы.Принадлежность.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		Если ПустаяСтрока(ДанныеСтроки.ПредставлениеНастроекОбработки) Тогда
			
			Если Элементы.Принадлежность.ТекущиеДанные.НомерСтроки > 0 Тогда
				Если ДополнительныеПараметрыОбработкиНеопределено(Элементы.Принадлежность.ТекущиеДанные.НомерСтроки-1) Тогда 
					ДанныеСтроки.ПредставлениеНастроекОбработки = "<Задать параметры>";
				Иначе	
					ДанныеСтроки.ПредставлениеНастроекОбработки = "<Изменить параметры>";
				КонецЕсли;	
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция  ДополнительныеПараметрыОбработкиНеопределено(НомерСтроки)
	
	об = РеквизитФормыВЗначение("Объект");
	Если об.Принадлежность.Получить(НомерСтроки).ДополнительныеПараметрыОбработки.Получить() = Неопределено Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;	
	
КонецФункции	

//////////////////////////////////////////////////////////////////
мСпискиПечатныхФормОбъектов = Новый Соответствие;

#КонецОбласти