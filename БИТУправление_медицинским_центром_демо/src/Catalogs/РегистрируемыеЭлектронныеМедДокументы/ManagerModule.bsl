#Область ПрограммныйИнтерфейс

#Область ЗагрузкаИзЕГИСЗ

// Возвращает идентификатор основного классификатора источника на сайте росминздрава.
// 
// Возвращаемое значение:
//   - Строка
//
Функция ПолучитьOIDСправочника() Экспорт
	Возврат "1.2.643.5.1.13.13.11.1520";
КонецФункции

// Возвращает список альтернативных идентификаторов классификатора источника на сайте росминздрава.
// 
// Возвращаемое значение:
// 	Массив Из Строка
//
Функция ПолучитьАльтернативныеOID() Экспорт
	СписокOID = Новый Массив();
	СписокOID.Добавить("1.2.643.5.1.13.13.99.2.41");
	Возврат СписокOID;
КонецФункции

// Описывает соответствие между именем реквизита в классификаторе и его именем в базе 1С.
// 
// Возвращаемое значение:
//   - Соответствие.
//
Функция ПолучитьСопоставленийРеквизитовИXMLСправочникаЕГИСЗ() Экспорт
	
	Сопоставление = Новый Соответствие;
	
	//1) ID, Уникальный идентификатор, Целочисленное, обязательное, Обязательное;
	Сопоставление.Вставить("ID", "УИДЕГИСЗ");
	//2) OID, OID, Строковое, обязательное, Обязательное;
	Сопоставление.Вставить("OID", "OIDКлассификатораМинздрава");
	//3) TYPE, Вид МД, Целочисленное, код типа электронного документа из справочника Виды медицинских документов, обязательное, (1.2.643.5.1.13.13.11.1522);, Обязательное;
	Сопоставление.Вставить("TYPE", "ВидДокумента, ВидДокументаСтрокой");
	//4) NAME, Наименование, Строковое, обязательное, Обязательное;
	Сопоставление.Вставить("NAME", "Наименование");
	
	Возврат Сопоставление;
	
КонецФункции

// Добаляет специфичные колонки таблицы данных при загрузке классификатора.
//
// Параметры:
//  ТЗРеквизитов - ТаблицаЗначений	 - исходная таблица реквизитов согласно общему механизму загрузки.
//
Процедура ДополнитьКолонкиТаблицыДанных(ТЗРеквизитов) Экспорт
	
	ТЗРеквизитов.Колонки.Добавить("ВидДокументаСтрокой", Новый ОписаниеТипов("Строка"));
	
КонецПроцедуры

// Дополнительные атрибуты классификатора для загрузки.
// 
// Возвращаемое значение:
//  Соответствие - дополнительные атрибуты.
//
Функция ПолучитьДополнительныеАтрибуты() Экспорт
	
	Поля = Новый Соответствие;
	
	//5) LEVEL, Уровень детализации, Строковое, обязательное, Обязательное;
	Поля.Вставить("LEVEL", "LEVEL");
	//6) PATIENT_INFO, Сведения о пациенте, Строковое, обязательное, Обязательное;
	Поля.Вставить("PATIENT_INFO", "PATIENT_INFO");
	//7) SHELF_LIFE, Срок хранения, Строковое, обязательное, Обязательное;
	Поля.Вставить("SHELF_LIFE", "SHELF_LIFE");
	//8) STORAGE_TYPE, Тип хранения, Строковое, обязательное, Обязательное;
	Поля.Вставить("STORAGE_TYPE", "STORAGE_TYPE");
	//9) EXTENDED_LIFE, Допускается увеличение сроков хранения, Строковое, обязательное, Обязательное;
	Поля.Вставить("EXTENDED_LIFE", "EXTENDED_LIFE");
	//10) UNLIMITED_LIFE, В том числе неограниченное увеличение сроков хранения, Строковое, обязательное, Обязательное;
	Поля.Вставить("UNLIMITED_LIFE", "UNLIMITED_LIFE");
	//11) MO_SIGN, Необходима подпись МО, Строковое, обязательное, Обязательное;
	Поля.Вставить("MO_SIGN", "MO_SIGN");
	//12) FORMAT, Формат файла, Целочисленное, (связь со справочником 1.2.643.5.1.13.13.99.2.40 по полю ID, отображаемое поле NAME), обязательное, Обязательное;
	Поля.Вставить("FORMAT", "FORMAT");
	//13) START_DATE, Дата начала регистрации, Дата, обязательное, Обязательное;
	Поля.Вставить("START_DATE", "START_DATE");
	//14) END_DATE, Дата окончания регистрации, Дата, не обязательное;
	Поля.Вставить("END_DATE", "END_DATE");
	//15) IMPLEMENTATION_GUIDE, Ссылка на руководство по реализации СЭМД на портале оперативного взаимодействия участников ЕГИСЗ, Строковое, не обязательное;
	Поля.Вставить("IMPLEMENTATION_GUIDE", "IMPLEMENTATION_GUIDE");
	//16) GIT_LINK, Идентификатор руководства по реализации СЭМД, Строковое, не обязательное;
	Поля.Вставить("GIT_LINK", "GIT_LINK");
	//17) SHOW_PATIENT, Доступен на ЕПГУ, Строковое, обязательное, Обязательное;
	Поля.Вставить("SHOW_PATIENT", "SHOW_PATIENT");
	//18) IS_ONLINE, Доступен к заказу онлайн, Строковое, обязательное, Обязательное;
	Поля.Вставить("IS_ONLINE", "IS_ONLINE");
	//19) DAYS_COUNT, Срок предоставления, Строковое;
	Поля.Вставить("DAYS_COUNT", "DAYS_COUNT");
	//20) SERIES_REQUIRED, Серия документа, Строковое, обязательное, Обязательное;
	Поля.Вставить("SERIES_REQUIRED", "SERIES_REQUIRED");
	
	Возврат Поля;
	
КонецФункции

// Возвращает массив структур, ключ которой - имя реквизита справочника, а значение - имя поля таблицы актуальных в общей форме загрузки.
// 
// Возвращаемое значение:
//   - Массив
//
Функция ПолучитьЗагружаемыеПоляЕГИСЗ() Экспорт
	
	Поля = Новый Структура;
	Поля.Вставить("Наименование", "Наименование");
	Поля.Вставить("НаименованиеПолное", "Наименование");
	Поля.Вставить("УИДЕГИСЗ", "УИДЕГИСЗ");
	Поля.Вставить("ВидДокумента", "ВидДокумента");
	Поля.Вставить("OIDКлассификатораМинздрава", "OIDКлассификатораМинздрава");
	Возврат Поля;
	
КонецФункции

// Загрузка справочника: событие перед записью элемента справочника.
//
// Параметры:
//  ОбъектСправочника		 - СправочникОбъект	 - объект справочника
//  ДополнительныеСвойства	 - Структура		 - дополнительные свойства
//  СтрокаКлассификатора	 - СтрокаДереваЗначений	 - строка дерева классификатора
//  СообщениеОтказа			 - Строка				 - Сообщение отказа
//
Процедура ЗагрузкаСправочникаИзЕГИСЗПередЗаписью(ОбъектСправочника, ДополнительныеСвойства, СтрокаКлассификатора, СообщениеОтказа = "") Экспорт
	
	Если Не ЗначениеЗаполнено(ОбъектСправочника.ВидДокумента) Тогда
		СообщениеОтказа = "Для элемента с ID ЕГИСЗ ""%1"" нет загруженного Вида документа с ID ЕГИСЗ ""%2"".
							|Актуальный классификатор ""Виды медицинских документов"" должен быть предварительно загружен.";
		СообщениеОтказа = СтрШаблон(СообщениеОтказа, Формат(ОбъектСправочника.УИДЕГИСЗ, "ЧГ="), СтрокаКлассификатора.ВидДокументаСтрокой);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОтказа);
		Возврат;
	КонецЕсли;
	
	ТекстСхематрона = "";
	ТекстСхемыВизуализации = "";
	СсылкаНаРуководствоГит = ОбъектСправочника.Атрибуты.Найти("GIT_LINK", "Ключ");
	Если СсылкаНаРуководствоГит <> Неопределено
		И ЗначениеЗаполнено(СсылкаНаРуководствоГит.Значение)
	Тогда
		Попытка
			Результат = ЗагрузкаКлассификаторовНСИЕГИСЗ.ПолучитьТекстСхематронаИСхемуВизуализацииИзРепозиторияИсходногоКода(СсылкаНаРуководствоГит.Значение);
			Если ЗначениеЗаполнено(Результат.ФайлСхематрона) Тогда
				ТекстСхематрона = Результат.ФайлСхематрона;
				ОбъектСправочника.Схематрон = ТекстСхематрона;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Результат.ФайлСхемыВизуализации) Тогда
				ТекстСхемыВизуализации = Результат.ФайлСхемыВизуализации;
				ОбъектСправочника.СхемаВизуализации = ТекстСхемыВизуализации;
			КонецЕсли;
		Исключение КонецПопытки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекстСхематрона)
		Или Не ЗначениеЗаполнено(ТекстСхемыВизуализации)
	Тогда
		// Если схема визуализации или схематрон уже загружены, то не ищем повторно
		ЗагружатьТолькоСхематрон = Ложь;
		ЗагружатьТолькоСхемуВизуализации = Ложь;
		Если Не ЗначениеЗаполнено(ТекстСхематрона)
			И ЗначениеЗаполнено(ТекстСхемыВизуализации)
		Тогда
			ЗагружатьТолькоСхематрон = Истина;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ТекстСхемыВизуализации)
			И ЗначениеЗаполнено(ТекстСхематрона)
		Тогда
			ЗагружатьТолькоСхемуВизуализации = Истина;
		КонецЕсли;
		
		СтрокаСсылкиНаРуководство = ОбъектСправочника.Атрибуты.Найти("IMPLEMENTATION_GUIDE", "Ключ");
		
		Если СтрокаСсылкиНаРуководство <> Неопределено
			И ЗначениеЗаполнено(СтрокаСсылкиНаРуководство.Значение)
		Тогда
			Попытка
				ЗагрузкаКлассификаторовНСИЕГИСЗ.СохранитьСхематронИСхемуВизуализации(ОбъектСправочника, СтрокаСсылкиНаРуководство.Значение, ЗагружатьТолькоСхематрон, ЗагружатьТолькоСхемуВизуализации);
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Порядок поиска существующих объектов при загрузке.
// 
// Возвращаемое значение:
//  Массив - реквизиты справочника в порядке поиска по ним.
//
Функция ПолучитьПорядокПоискаСуществующихОбъектов() Экспорт
	
	ПорядокПоиска = Новый Массив;
	
	ПоляПоиска = Новый Структура;
	ПоляПоиска.Вставить("УИДЕГИСЗ", "УИДЕГИСЗ");
	
	ПоляПоиска = Новый Структура;
	ПоляПоиска.Вставить("OIDКлассификатораМинздрава", "OIDКлассификатораМинздрава");
	
	ПорядокПоиска.Добавить(ПоляПоиска);
	
	ПоляПоиска = Новый Структура;
	ПоляПоиска.Вставить("НаименованиеПолное", "Наименование");
	ПорядокПоиска.Добавить(ПоляПоиска);
	
	Возврат ПорядокПоиска;
	
КонецФункции

#КонецОбласти

// Идентификаторы регистрируемых видов ЭМД в РЭМД ЕГИСЗ, поддерживаемые конфигурацией.
//
// Параметры:
//  ТабличныйШаблонСправки	 - Булево	 - для шаблона справки.
// 
// Возвращаемое значение:
//  Массив.
//
Функция ПолучитьИдентификаторыДоступныеРЭМД(ТабличныйШаблонСправки = Ложь, МожноPDF = Истина) Экспорт
	
	СуществующиеCDAРЭМД = Новый Массив;
	
	Если Не ТабличныйШаблонСправки Тогда
		// Протокол инструментального исследования (CDA) Редакция 1
		СуществующиеCDAРЭМД.Добавить(15);
		// Протокол консультации (CDA) Редакция 2
		СуществующиеCDAРЭМД.Добавить(16);
		// Протокол лабораторного исследования (CDA) Редакция 2
		СуществующиеCDAРЭМД.Добавить(17);
		// Протокол телемедицинской консультации (CDA) Редакция 1
		СуществующиеCDAРЭМД.Добавить(40);
		// Направление на госпитализацию, восстановительное лечение, обследование, консультацию (CDA) Редакция 2
		СуществующиеCDAРЭМД.Добавить(43);
		// Эпикриз по законченному случаю амбулаторный (CDA) Редакция 4
		СуществующиеCDAРЭМД.Добавить(92);
		// Протокол консультации (CDA) Редакция 4
		СуществующиеCDAРЭМД.Добавить(119);
		// Сведения о результатах диспансеризации или профилактического медицинского осмотра (CDA) Редакция 2
		СуществующиеCDAРЭМД.Добавить(122);
		// Эпикриз по результатам диспансеризации / профилактического медицинского осмотра (CDA) Редакция 1
		СуществующиеCDAРЭМД.Добавить(129);
		// Протокол инструментального исследования (СDA) Редакция 4
		СуществующиеCDAРЭМД.Добавить(174);
		// Протокол лабораторного исследования (CDA) Редакция 5
		СуществующиеCDAРЭМД.Добавить(186);
	КонецЕсли;
	
	// Медицинская справка о допуске к управлению транспортными средствами (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(4);
	// Медицинская справка (врачебное профессионально-консультативное заключение) (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(50);
	// Медицинское заключение об отсутствии медицинских противопоказаний к владению оружием (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(63);
	// Медицинское заключение об отсутствии в организме человека наркотических средств, психотропных веществ и их метаболитов (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(64);
	// Справка об отсутствии контактов с инфекционными больными (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(80);
	// Справка о временной нетрудоспособности студента, учащегося техникума, профессионально-технического училища, о болезни, карантине и прочих причинах отсутствия ребенка, посещающего школу, детское дошкольное учреждение (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(81);
	// Медицинское заключение о принадлежности несовершеннолетнего к медицинской группе для занятий физической культурой (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(82);
	// Медицинское заключение об отсутствии противопоказаний к занятию определенными видами спорта (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(83);
	// Медицинское заключение о принадлежности несовершеннолетнего к медицинской группе для занятий физической культурой (CDA) Редакция 2 
	СуществующиеCDAРЭМД.Добавить(84);
	// Направление на консультацию и во вспомогательные кабинеты (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(85);
	// Направление к месту лечения для получения медицинской помощи (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(86);
	// Медицинская справка о состоянии здоровья ребенка, отъезжающего в организацию отдыха детей и их оздоровления (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(87);
	// Медицинская справка (для выезжающего за границу) (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(88);
	// Справка об оплате медицинских услуг для предоставления в налоговые органы Российской Федерации (Редакция 1)
	СуществующиеCDAРЭМД.Добавить(100);
	// Справка об отказе в направлении на медико-социальную экспертизу (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(102);
	// Медицинское заключение по результатам предварительного (периодического) медицинского осмотра (обследования) (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(103);
	// Уведомление о выявлении противопоказаний или аннулировании медицинских заключений к владению оружием (CDA) Редакция 1
	СуществующиеCDAРЭМД.Добавить(116);
	// Направление на медико-социальную экспертизу (CDA) Редакция 6
	СуществующиеCDAРЭМД.Добавить(121);
	// Рецепт на лекарственный препарат (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(148);
	// Медицинское заключение по результатам предварительного (периодического) медицинского осмотра (обследования) (CDA) Редакция 2
	СуществующиеCDAРЭМД.Добавить(194);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РегистрируемыеЭлектронныеМедДокументы.УИДЕГИСЗ КАК УИДЕГИСЗ,
		|	ВЫРАЗИТЬ(РегистрируемыеЭлектронныеМедДокументыАтрибуты.Значение КАК СТРОКА(10)) КАК ДатаОкончанияРегистрации
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегистрируемыеЭлектронныеМедДокументыАтрибуты.Ссылка КАК Ссылка
		|	ИЗ
		|		Справочник.РегистрируемыеЭлектронныеМедДокументы.Атрибуты КАК РегистрируемыеЭлектронныеМедДокументыАтрибуты
		|	ГДЕ
		|		РегистрируемыеЭлектронныеМедДокументыАтрибуты.Ключ = ""FORMAT""
		|		И РегистрируемыеЭлектронныеМедДокументыАтрибуты.Значение ПОДОБНО ""1""
		|		И &МожноPDF = ИСТИНА
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		РегистрируемыеЭлектронныеМедДокументы.Ссылка
		|	ИЗ
		|		Справочник.РегистрируемыеЭлектронныеМедДокументы КАК РегистрируемыеЭлектронныеМедДокументы
		|	ГДЕ
		|		РегистрируемыеЭлектронныеМедДокументы.УИДЕГИСЗ В(&УИДыCDAРЭМД)) КАК ДоступныеРЭМД
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрируемыеЭлектронныеМедДокументы.Атрибуты КАК РегистрируемыеЭлектронныеМедДокументыАтрибуты
		|		ПО ДоступныеРЭМД.Ссылка = РегистрируемыеЭлектронныеМедДокументыАтрибуты.Ссылка
		|			И (РегистрируемыеЭлектронныеМедДокументыАтрибуты.Ключ = ""END_DATE"")
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РегистрируемыеЭлектронныеМедДокументы КАК РегистрируемыеЭлектронныеМедДокументы
		|		ПО ДоступныеРЭМД.Ссылка = РегистрируемыеЭлектронныеМедДокументы.Ссылка
		|			И (НЕ РегистрируемыеЭлектронныеМедДокументы.Архив)
		|			И (НЕ РегистрируемыеЭлектронныеМедДокументы.ПометкаУдаления)";
	
	Запрос.УстановитьПараметр("УИДыCDAРЭМД", СуществующиеCDAРЭМД);
	Запрос.УстановитьПараметр("МожноPDF",	 МожноPDF);
	
	мУИДыДоступныхРЭМД = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Попытка
			Если Не ЗначениеЗаполнено(Выборка.ДатаОкончанияРегистрации)
				Или ОбщегоНазначенияКлиентСервер.ПолучитьДатуИзСтроки(Выборка.ДатаОкончанияРегистрации) > ТекущаяДата()
			Тогда
				мУИДыДоступныхРЭМД.Добавить(Выборка.УИДЕГИСЗ);
			КонецЕсли;
		Исключение КонецПопытки;
	КонецЦикла;
	
	Возврат мУИДыДоступныхРЭМД;
	
КонецФункции

#КонецОбласти