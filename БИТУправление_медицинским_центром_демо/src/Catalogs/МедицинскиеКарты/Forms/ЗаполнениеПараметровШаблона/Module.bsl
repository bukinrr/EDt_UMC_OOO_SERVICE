#Область ОбработчикиСобытийЭлементовФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтрокаПараметровРасшифровки = Параметры.Расшифровка.СтрокаПараметров;
	Синонимы = Параметры.Расшифровка.Синонимы;
	СпискиВыбора = Параметры.Расшифровка.СпискиВыбора;
	
	Для Каждого ЗначениеПараметра Из Параметры.ЗначенияПустыхПараметровСтрокиПоУмолчанию Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияПустыхПараметровПоУмолчанию.Добавить(), ЗначениеПараметра);
	КонецЦикла;
	
	ПредставлениеШаблона = СтрокаПараметровРасшифровки;
	РезультатШаблона = СтрокаПараметровРасшифровки;
	
	ЭлементПервогоПоля = Неопределено;
	ЭтоШаблон = СтрНайти(ПредставлениеШаблона, "[") <> 0;
	
	Для Каждого ПараметрРасшифровки Из Параметры.ЗначенияПараметровСтроки Цикл
		
		ИмяРеквизита = СтрШаблон("Реквизит%1", РеквизитыПараметров.Количество() + 1);
		
		СинонимРеквизита = Синонимы.Получить(ПараметрРасшифровки.Параметр);
		Если Не ЗначениеЗаполнено(СинонимРеквизита) Тогда
			СинонимРеквизита = ПолучитьСиноним(ПараметрРасшифровки.Параметр);
		КонецЕсли;
		
		СтрокаЗначенияПараметров = РеквизитыПараметров.Добавить();
		СтрокаЗначенияПараметров.Параметр = ПараметрРасшифровки.Параметр;
		СтрокаЗначенияПараметров.ИмяРеквизита = ИмяРеквизита;
		СтрокаЗначенияПараметров.ИсходноеЗначение = ПараметрРасшифровки.Значение;
		
		ДобавляемыеРеквизиты = Новый Массив;
		ТипСтроки = Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки());
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, ТипСтроки, , СинонимРеквизита));
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
		
		// Заполнение
		ЭтотОбъект[ИмяРеквизита] = ПараметрРасшифровки.Значение;
		
		нЭлемент = Элементы.Добавить(ИмяРеквизита, Тип("ПолеФормы"), Элементы.Реквизиты);
		нЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		нЭлемент.ПутьКДанным = ИмяРеквизита;
		нЭлемент.УстановитьДействие("ПриИзменении", "РеквизитПриИзменении");
		
		СписокВыбора = СпискиВыбора.Получить(ПараметрРасшифровки.Параметр);
		Если СписокВыбора <> Неопределено
			И ТипЗнч(СписокВыбора.Получить("Значения")) = Тип("Массив")
		Тогда
			нЭлемент.СписокВыбора.ЗагрузитьЗначения(СписокВыбора["Значения"]);
			Если СписокВыбора.Получить("ВозможностьРедактирования") = Истина Тогда
				нЭлемент.КнопкаВыпадающегоСписка = Истина;
			Иначе
				нЭлемент.РежимВыбораИзСписка = Истина;
			КонецЕсли;
			нЭлемент.КнопкаОчистки = Истина;
		КонецЕсли;
		
		Если ЭлементПервогоПоля = Неопределено Тогда
			ЭлементПервогоПоля = нЭлемент;
		КонецЕсли;
		
		СтрокиЗначенияПустогоПараметра = ЗначенияПустыхПараметровПоУмолчанию.НайтиСтроки(Новый Структура("ИмяПараметра", ПараметрРасшифровки.Параметр));
		Если Не ЗначениеЗаполнено(ПараметрРасшифровки.Значение)
			И СтрокиЗначенияПустогоПараметра.Количество() > 0
		Тогда
			ТекстЗначенияПараметра = СтрокиЗначенияПустогоПараметра[0].Значение;
		Иначе
			ТекстЗначенияПараметра = ПараметрРасшифровки.Значение;
		КонецЕсли;
		
		Если ЭтоШаблон Тогда
			ПредставлениеШаблона = СтрЗаменить(ПредставлениеШаблона, СтрШаблон("[%1]", ПараметрРасшифровки.Параметр), СтрШаблон("[%1]", СинонимРеквизита));
			РезультатШаблона = СтрЗаменить(РезультатШаблона, СтрШаблон("[%1]", ПараметрРасшифровки.Параметр), ТекстЗначенияПараметра);
		Иначе
			ПредставлениеШаблона = СтрШаблон("[%1]", СинонимРеквизита);
			РезультатШаблона = ТекстЗначенияПараметра;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЭтотОбъект.КлючСохраненияПоложенияОкна = Параметры.ЗначенияПараметровСтроки.Количество();
	ЭтотОбъект.ТекущийЭлемент = ЭлементПервогоПоля;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ТекстСтроки = СтрокаПараметровРасшифровки;
	
	ИзмененныеПараметры = Новый Массив;
	Для Каждого СтрокаПараметра Из РеквизитыПараметров Цикл
		ЗначениеПараметра = ЭтотОбъект[СтрокаПараметра.ИмяРеквизита];
		Если ЗначениеПараметра <> СтрокаПараметра.ИсходноеЗначение Тогда
			ИзмененныеПараметры.Добавить(Новый Структура("Параметр, Значение", СтрокаПараметра.Параметр, ЗначениеПараметра));
		КонецЕсли;
		
		СтрокиЗначенияПустогоПараметра = ЗначенияПустыхПараметровПоУмолчанию.НайтиСтроки(Новый Структура("ИмяПараметра", СтрокаПараметра.Параметр));
		Если Не ЗначениеЗаполнено(ЗначениеПараметра)
			И СтрокиЗначенияПустогоПараметра.Количество() > 0
		Тогда
			ТекстЗначенияПараметра = СтрокиЗначенияПустогоПараметра[0].Значение;
		Иначе
			ТекстЗначенияПараметра = ЗначениеПараметра;
		КонецЕсли;
		
		Если ЭтоШаблон Тогда
			ТекстСтроки = СтрЗаменить(ТекстСтроки, СтрШаблон("[%1]", СтрокаПараметра.Параметр), ТекстЗначенияПараметра);
		Иначе
			ТекстСтроки = ТекстЗначенияПараметра;
		КонецЕсли;
	КонецЦикла;
	
	Закрыть(Новый Структура("ИзмененныеПараметры, ТекстСтроки", ИзмененныеПараметры, ТекстСтроки));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСиноним(Знач ИмяРеквизита)
	
	Перем Синоним, СчСимв, Символ, ПредСимвол, СледСимвол, Прописная, ПредПрописная, СледПрописная, ДлинаСтроки;
	
	ИмяРеквизита = СтрЗаменить(ИмяРеквизита, "_", " ");
	
	Синоним = ВРег(Сред(ИмяРеквизита, 1, 1));
	ДлинаСтроки = СтрДлина(ИмяРеквизита);
	
	Для СчСимв = 2 По ДлинаСтроки Цикл
		
		ПредПредСимвол = Сред(ИмяРеквизита, СчСимв-2, 1);
		ПредСимвол = Сред(ИмяРеквизита, СчСимв-1, 1);
		Символ = Сред(ИмяРеквизита, СчСимв, 1);
		СледСимвол = Сред(ИмяРеквизита, СчСимв+1, 1);
		ПослеСледСимвол = Сред(ИмяРеквизита, СчСимв+2, 1);
		
		ПредПредПрописная = ПредПредСимвол = ВРег(ПредПредСимвол);
		ПредПрописная = ПредСимвол = ВРег(ПредСимвол);
		Прописная = Символ = ВРег(Символ);
		СледПрописная = СледСимвол = ВРег(СледСимвол);
		ПослеСледПрописная = ПослеСледСимвол = ВРег(ПослеСледСимвол);
		
		
		ВтораяИзДвухПрописныхПодряд = Прописная И ПредПрописная И Не ПредПредПрописная И Не СледПрописная;
		НачалоАббревиатуры = Прописная И СледПрописная И ПослеСледПрописная;
		
		// Варианты:
		Если (Не ПредПрописная И Прописная)
			Или ВтораяИзДвухПрописныхПодряд
		Тогда
			Синоним = Синоним + " " + ?(НачалоАббревиатуры, Символ, НРег(Символ));
		Иначе
			Синоним = Синоним + Символ;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Синоним;
	
КонецФункции

&НаКлиенте
Процедура РеквизитПриИзменении(Элемент)
	
	ПересчитатьТекстЯчейки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьТекстЯчейки()
	
	РезультатШаблона = СтрокаПараметровРасшифровки;
	Для Каждого СтрокаПараметра Из РеквизитыПараметров Цикл
		
		СтрокиЗначенияПустогоПараметра = ЗначенияПустыхПараметровПоУмолчанию.НайтиСтроки(Новый Структура("ИмяПараметра", СтрокаПараметра.Параметр));
		Если Не ЗначениеЗаполнено(ЭтотОбъект[СтрокаПараметра.ИмяРеквизита])
			И СтрокиЗначенияПустогоПараметра.Количество() > 0
		Тогда
			ТекстЗначенияПараметра = СтрокиЗначенияПустогоПараметра[0].Значение;
		Иначе
			ТекстЗначенияПараметра = ЭтотОбъект[СтрокаПараметра.ИмяРеквизита];
		КонецЕсли;
		
		Если ЭтоШаблон Тогда
			РезультатШаблона = СтрЗаменить(РезультатШаблона, СтрШаблон("[%1]", СтрокаПараметра.Параметр), ТекстЗначенияПараметра);
		Иначе
			РезультатШаблона = ТекстЗначенияПараметра;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти