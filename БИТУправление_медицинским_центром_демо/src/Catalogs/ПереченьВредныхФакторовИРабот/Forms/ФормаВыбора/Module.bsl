#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ОтборСписка") Тогда
		УстановитьПараметрДинамическогоСписка(Параметры.ОтборСписка, Истина);
		УстановитьСписокВыбораДляПриказа(Параметры.ОтборСписка);
	Иначе
		УстановитьПараметрДинамическогоСписка(Новый Массив, Ложь);
		Приказ = ПредопределенноеЗначение("Справочник.ПриказыМедосмотров.Приказ29н");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ПолучитьКоличествоЭлементов() < 3 Тогда
		Если Вопрос(НСтр("ru = 'Справочник не заполнен. Загрузить перечень вредных факторов и условий работ из приказа 302н?'"), РежимДиалогаВопрос.ДаНет, 30) = КодВозвратаДиалога.Да Тогда
			ЗагрузитьКлассификатор();		
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Приказ) Тогда
		ПриказПриИзменении(Неопределено);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		
		СтандартнаяОбработка = Ложь;
		Если Элемент.Развернут(ВыбраннаяСтрока) Тогда
			Элемент.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элемент.Развернуть(ВыбраннаяСтрока)
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП(Текст, Список, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП(Текст, Список, Элементы.Список);

КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППОчистка(Элемент, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП("", Список, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию("");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоНаименованию(Знач Текст)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаСФормамиСервер.УстановитьОтборСписка("НаименованиеПолное", Текст, Список, ВидСравненияКомпоновкиДанных.Содержит);
	Иначе
		РаботаСФормамиСервер.СнятьОтборСписка("НаименованиеПолное", Список);
	КонецЕсли;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриказПриИзменении(Элемент)
	Список.Отбор.Элементы.Очистить();
	Если ЗначениеЗаполнено(Приказ) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приказ");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Приказ;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПервоначальнаяЗагрузка(Команда)
	Если Вопрос(НСтр("ru = 'Будет загружен перечень вредных факторов производства по классификатору. Продолжить?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗагрузитьКлассификатор();
		Закрыть();
		ОткрытьФорму("Справочник.ПереченьВредныхФакторовИРабот.ФормаВыбора");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьПараметрДинамическогоСписка(ЗначениеОтбора, ОтборПоПараметру)
	
	Список.Параметры.УстановитьЗначениеПараметра("СписокОтбор", ЗначениеОтбора);
	Список.Параметры.УстановитьЗначениеПараметра("ОтборПоПараметру", ОтборПоПараметру);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЭлементов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПереченьВредныхФакторовИРабот.Ссылка) КАК Ссылка
	|ИЗ
	|	Справочник.ПереченьВредныхФакторовИРабот КАК ПереченьВредныхФакторовИРабот";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		Возврат Выборка.Ссылка;	
	
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ЗагрузитьКлассификатор()
	
	УстановитьПривилегированныйРежим(Истина);
	ДвоичныеДанныеВыгрузки = Справочники.ПереченьВредныхФакторовИРабот.ПолучитьМакет("ПервоначальноеНаполнение");

	ОбщегоНазначенияСервер.ВыполнитьЗагрузкуУниверсальнымОбменомXML(ДвоичныеДанныеВыгрузки, Истина, Истина);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Выполнено заполенние вредных и опасных факторов и условий работ'"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораДляПриказа(СписокПриказов)
	
	Элементы.Приказ.РежимВыбораИзСписка = Истина;
	
	ОбработанныеДанные = Новый Массив;
	
	Для Каждого Эл Из СписокПриказов Цикл
		
		Если ОбработанныеДанные.Найти(Эл.Приказ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Элементы.Приказ.СписокВыбора.Добавить(Эл.Приказ, Строка(Эл.Приказ));
		
		ОбработанныеДанные.Добавить(Эл.Приказ);
		
	КонецЦикла;
	
	Если ОбработанныеДанные.Найти(ПредопределенноеЗначение("Справочник.ПриказыМедосмотров.Приказ29н")) = Неопределено Тогда
		Если ОбработанныеДанные.Количество() > 0 Тогда
			Приказ = ОбработанныеДанные[0];
		КонецЕсли;
	Иначе
		Приказ = ПредопределенноеЗначение("Справочник.ПриказыМедосмотров.Приказ29н");
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти