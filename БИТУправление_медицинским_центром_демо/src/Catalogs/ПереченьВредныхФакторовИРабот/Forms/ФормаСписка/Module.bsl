#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.НеРаскрывать;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПолучитьКоличествоЭлементов() < 3 Тогда
		Если Вопрос(НСтр("ru = 'Справочник не заполнен. Загрузить перечень вредных факторов и условий работ из приказа 29н?'"), РежимДиалогаВопрос.ДаНет, 30) = КодВозвратаДиалога.Да Тогда
			ЗагрузитьКлассификатор();
			Элементы.Список.Обновить();
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если ТипЗнч(Элемент.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
		
		СтандартнаяОбработка = Ложь;
		Если Элемент.Развернут(ВыбраннаяСтрока) Тогда
			Элемент.Свернуть(ВыбраннаяСтрока);
		Иначе
			Элемент.Развернуть(ВыбраннаяСтрока)
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП(Текст, Список, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП(Текст, Список, Элементы.Список);

КонецПроцедуры

&НаКлиенте
Процедура ОтборНомерППОчистка(Элемент, СтандартнаяОбработка)
	
	МедосмотрыКлиент.ОбновитьОтборСпискаВредныхФакторовПоНомеруПП("", Список, Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	
	ОбновитьОтборПоНаименованию("");
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОтборПоНаименованию(Знач Текст)
	
	Если ЗначениеЗаполнено(Текст) Тогда
		РаботаСФормамиСервер.УстановитьОтборСписка("НаименованиеПолное", Текст, Список, ВидСравненияКомпоновкиДанных.Содержит);
	Иначе
		РаботаСФормамиСервер.СнятьОтборСписка("НаименованиеПолное", Список);
	КонецЕсли;
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриказПриИзменении(Элемент)
	Список.Отбор.Элементы.Очистить();
	Если ЗначениеЗаполнено(Приказ) Тогда
		ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приказ");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбора.ПравоеЗначение = Приказ;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПервоначальнаяЗагрузка(Команда)
	Если Вопрос(НСтр("ru = 'Будет загружен перечень вредных факторов производства по классификатору.'") + " " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ЗагрузитьКлассификатор();
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДействияМОБезНоменклатуры_29н(Команда)
	ОповещениеПродолжения = Новый ОписаниеОповещения("ДействияМОБезНоменклатуры_29нПродолжение", ЭтотОбъект);
	ОткрытьФорму("Справочник.ПриказыМедосмотров.ФормаВыбора",,,,,,ОповещениеПродолжения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ДействияМОБезНоменклатуры_29нПродолжение(Результат, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		СтруктураНаПечать = ПолучитьСтруктуруПечатиТабДокДействияМОБезНоменклатуры_29н(Результат);
		ОткрытьФорму("ОбщаяФорма.ПечатьДокументов",СтруктураНаПечать,,ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ЗагрузитьКлассификатор()
	
	УстановитьПривилегированныйРежим(Истина);
	ДвоичныеДанныеВыгрузки = Справочники.ПереченьВредныхФакторовИРабот.ПолучитьМакет("ПервоначальноеНаполнение");
	
	ОбщегоНазначенияСервер.ВыполнитьЗагрузкуУниверсальнымОбменомXML(ДвоичныеДанныеВыгрузки, Истина, Истина);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru ='Выполнено заполенние вредных и опасных факторов и условий работ'"));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруПечатиТабДокДействияМОБезНоменклатуры_29н(Приказ)
	
	Возврат Справочники.ДействияМедосмотра.СтруктураПечатиДействийМОБезНоменклатуры_29н(Приказ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоЭлементов()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПереченьВредныхФакторовИРабот.Ссылка) КАК Ссылка
	               |ИЗ
	               |	Справочник.ПереченьВредныхФакторовИРабот КАК ПереченьВредныхФакторовИРабот
	               |ГДЕ
	               |	ПереченьВредныхФакторовИРабот.Приказ = ЗНАЧЕНИЕ(Справочник.ПриказыМедосмотров.Приказ29н)";
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
	
		Возврат Выборка.Ссылка;	
	
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

#КонецОбласти