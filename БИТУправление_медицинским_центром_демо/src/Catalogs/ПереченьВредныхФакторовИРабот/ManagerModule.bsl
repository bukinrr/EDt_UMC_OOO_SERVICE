#Область ОбработчикиСобытий

Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ВыполнитьСтандартноеПолучениеДанныхВыбора") Тогда
		Возврат;
	Иначе
		СтандартнаяОбработка = Ложь;
		
		Если Не Параметры.Отбор.Свойство("ПометкаУдаления") Тогда
			Параметры.Отбор.Вставить("ПометкаУдаления",Ложь);
		КонецЕсли;
		
		Параметры.Вставить("ВыполнитьСтандартноеПолучениеДанныхВыбора");
		ДанныеВыбора = Справочники.ПереченьВредныхФакторовИРабот.ПолучитьДанныеВыбора(Параметры);
		
		Если ДанныеВыбора.Количество() <> 0 Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ДанныеВыбора);
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПереченьВредныхФакторовИРабот.Ссылка КАК Ссылка,
			|	ПереченьВредныхФакторовИРабот.Приказ.Код КАК ПриказКод,
			|	ПереченьВредныхФакторовИРабот.Наименование КАК Наименование,
			|	ПереченьВредныхФакторовИРабот.НомерПП КАК НомерПП
			|ИЗ
			|	Справочник.ПереченьВредныхФакторовИРабот КАК ПереченьВредныхФакторовИРабот
			|ГДЕ
			|	ПереченьВредныхФакторовИРабот.Ссылка В(&Ссылка)";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				
				Если ЗначениеЗаполнено(Выборка.НомерПП) Тогда
					Представление = СокрЛП(Выборка.НомерПП) + " (" + СокрЛП(Выборка.ПриказКод) +")"; 
				Иначе
					Представление = Выборка.Наименование; 
				КонецЕсли;
				
				ЭлементСписка = ДанныеВыбора.НайтиПоЗначению(Выборка.Ссылка);
				ЭлементСписка.Представление = Представление;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
