#Область ОписаниеПеременных
&НаКлиенте
Перем мСписокВидовСрокаДействия;

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыполнитьНачальнуюПодготовкуФормы();
	
	ЗаполнитьВидыСертификатов();
	Элементы.ВидСрока.СписокВыбора.Добавить(0, "месяцев");
	Элементы.ВидСрока.СписокВыбора.Добавить(Дата(1,1,1), "до даты");
	
	Если ЗначениеЗаполнено(Объект.СрокДействия) Тогда
		ВидСрока = ?(ТипЗнч(Объект.СрокДействия) = Тип("Число"), 0, Дата(1,1,1));
	КонецЕсли;
	
	Элементы.Номинал.Доступность = ВычислитьДоступностьРедактированияНоминала(Объект.ТипСертификата,
																			  Объект.НоминалРавенСтоимости,
																			  Объект.КомплексныйСертификат);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьЗаголовокФормы();
	
	СрокДействияПриИзменении(Неопределено);
	
	ОбработкаИзмененияТипаСрока(Истина);
	НастроитьЭлементыФормы();
	
	НастроитьПоляПополненияСертификата();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.КомплексныйСертификат 
		И Объект.ТипСертификата = Перечисления.ТипыСертификатов.НаУслуги Тогда
		
		ТекущийОбъект.Номинал = Объект.Услуги.Итог("Количество");
	КонецЕсли;
	
	Если Объект.СпособРасчетаЦеныПриВозврате = Перечисления.СпособыРасчетаЦеныСертификатаПриВозврате.ПоРозничнойЦене Тогда
	
		Если Не Объект.КомплексныйСертификат
			И Объект.Услуги.Количество() > 1
		Тогда
			ШаблонОшибки = НСтр("ru='Не допускается использовать способ расчета суммы возврата ""%1"", если это не комплексный сертификат с несколькими допустимыми услугами'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ШаблонОшибки, Строка(Объект.СпособРасчетаЦеныПриВозврате)));
			Отказ = Истина;
		КонецЕсли;
		
		Для Каждого СтрокаУслуги Из Объект.Услуги Цикл
			Если СтрокаУслуги.Фильтр.ЭтоГруппа Тогда
				ШаблонОшибки = НСтр("ru='Не допускается использовать способ расчета суммы возврата ""%1"", если среди услуг сертификата есть группа услуг: %2'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ШаблонОшибки, Строка(Объект.СпособРасчетаЦеныПриВозврате), СтрокаУслуги.Фильтр));
				Отказ = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВключатьВыполнениеРаботВВыработкуПриИзменении(Элемент)
	
	ЭтоНаУслуги = Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги");
	Элементы.СпособРасчетаСуммыВыработки.Доступность = ЭтоНаУслуги И Объект.ВключатьВыполнениеРаботВВыработку;
	
КонецПроцедуры
	
&НаКлиенте
Процедура СпособРасчетаСуммыВыработкиПриИзменении(Элемент)
	
	ЭтоНаУслуги = Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги");
	Элементы.Прейскурант.Доступность = ЭтоНаУслуги
		И Объект.ВключатьВыполнениеРаботВВыработку 
		И Объект.СпособРасчетаСуммыВыработки = 
		ПредопределенноеЗначение("Перечисление.СпособыРасчетаСтоимостиВыработкиПоРаботеАбонемента.ПоОтдельномуПрейскуранту");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаИзмененияТипаСрока(ПриОткрытии = Ложь)
	
	Если ВидСрока = Неопределено Тогда
		Если ТипЗнч(Объект.СрокДействия) = Тип("Число") Тогда
			ВидСрока = 0;
		Иначе
			ВидСрока = Дата(1,1,1);
		КонецЕсли;
	КонецЕсли;

	Элементы.СрокДействия.ОграничениеТипа = Новый ОписаниеТипов(Строка(ТипЗнч(ВидСрока)));
	Если Не ПриОткрытии Или Объект.Ссылка.Пустая() Тогда
		Объект.СрокДействия = Элементы.СрокДействия.ОграничениеТипа.ПривестиЗначение(Объект.СрокДействия);
	КонецЕсли;
	СрокДействияПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокДействияПриИзменении(Элемент)
	Элементы.ОписаниеСрокаДействия.Видимость = Не ЗначениеЗаполнено(Объект.СрокДействия);
КонецПроцедуры

&НаКлиенте
Процедура ВидСрокаПриИзменении(Элемент)
	ОбработкаИзмененияТипаСрока();
КонецПроцедуры

&НаКлиенте
Процедура КомплексныйСертификатПриИзменении(Элемент)
	
	Если Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги") Тогда
		Элементы.УслугиКоличество.Видимость = Объект.КомплексныйСертификат;
	Иначе
		Элементы.УслугиКоличество.Видимость = Ложь;		
	КонецЕсли;
	
	Элементы.Номинал.Доступность = ВычислитьДоступностьРедактированияНоминала(Объект.ТипСертификата,
																			  Объект.НоминалРавенСтоимости,
																			  Объект.КомплексныйСертификат);
	НастроитьПоляПополненияСертификата();
	
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	Объект.Номинал = Объект.Услуги.Итог("Количество");
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	ОбновитьОтметкуНезаполненногоНоменклатуры();
КонецПроцедуры

&НаКлиенте
Процедура ОграничиватьПоДнямНеделиПриИзменении(Элемент)
	УстановитьВидимостьСтраницыДнейНедели();
	
	Если Объект.ОграничиватьПоДнямНедели Тогда
		ЗаполнениеТаблДатВремени();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтраницыДнейНедели()
	Элементы.ГруппаДниНедели.Видимость = Объект.ОграничиватьПоДнямНедели;
КонецПроцедуры

&НаКлиенте
Процедура НоминалРавенСтоимостиПриИзменении(Элемент)
	Элементы.Номинал.Доступность = ВычислитьДоступностьРедактированияНоминала(Объект.ТипСертификата,
																			  Объект.НоминалРавенСтоимости,
																			  Объект.КомплексныйСертификат);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВычислитьДоступностьРедактированияНоминала(ТипСертификата, НоминалРавенСтоимости, КомплексныйСертификат)
	
	Если ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги") Тогда
		Возврат Не КомплексныйСертификат;
	Иначе
		Возврат Не НоминалРавенСтоимости;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПополняемыйСертификатПриИзменении(Элемент)
	
	НастроитьПоляПополненияСертификата();

КонецПроцедуры

&НаКлиенте
Процедура НастроитьПоляПополненияСертификата()
	
	АктуаленПризнакПополненияТолькоНоменклатуройСертификата = Объект.ПополняемыйСертификат И Объект.КомплексныйСертификат;
	
	Элементы.ПополнятьТолькоНоменклатуройСертификата.Доступность = АктуаленПризнакПополненияТолькоНоменклатуройСертификата;

	АктуаленПризнакПополненияПоЦенеСертификата = Объект.ПополняемыйСертификат И НЕ Объект.КомплексныйСертификат И Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги");
	Элементы.ПополнениеПоЦенеСертификата.Доступность = АктуаленПризнакПополненияПоЦенеСертификата;

	Если Не ЭтаФорма.ТолькоПросмотр Тогда
		Объект.ПополнятьТолькоНоменклатуройСертификата = Объект.ПополнятьТолькоНоменклатуройСертификата И АктуаленПризнакПополненияТолькоНоменклатуройСертификата;
		Объект.ПополнениеПоЦенеСертификата = Объект.ПополнениеПоЦенеСертификата И АктуаленПризнакПополненияПоЦенеСертификата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтметкуНезаполненногоНоменклатуры()
	
	Элементы.Номенклатура.ОтметкаНезаполненного = Не ЗначениеЗаполнено(Объект.Номенклатура)
												И Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПрименитьОбщееВремя(Команда)
	
	Если Объект.ВремяПоДнямНедели.Количество() = 0 Тогда
		ЗаполнениеТаблДатВремени();
	КонецЕсли;
	ИзменитьВремя();
	
КонецПроцедуры                                     

&НаКлиенте
Процедура ЗаполнениеТаблДатВремени()
	
	Если Объект.ВремяПоДнямНедели.Количество() = 0 Тогда
		Для Каждого ДеньНедели Из ПолучитьДниНеделиПеречисление() Цикл
			НовСтр = Объект.ВремяПоДнямНедели.Добавить();
			НовСтр.ДеньНедели = ДеньНедели;
			НовСтр.Выбран = Истина;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДниНеделиПеречисление()
	
	ДниНедели = Новый Массив;
	
	Для Каждого ДеньНедели Из Перечисления.ДниНедели Цикл
		ДниНедели.Добавить(ДеньНедели);
	КонецЦикла;
	
	Возврат ДниНедели;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ВыполнитьНачальнуюПодготовкуФормы()
	
	Если Объект.Ссылка.Пустая() Тогда
		Если Не ЗначениеЗаполнено(Объект.ТипСертификата) Тогда
			Объект.ТипСертификата = Перечисления.ТипыСертификатов.НаУслуги;
		КонецЕсли;
		Объект.ВключатьВыполнениеРаботВВыработку = Истина;
		Объект.СпособРасчетаСуммыВыработки = Перечисления.СпособыРасчетаСтоимостиВыработкиПоРаботеАбонемента.ПоЦенеПродажи;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВидыСертификатов()
	ТипыСертификатов = ПолучитьТипыСертификата();
	
	Для Каждого ТипСертификата Из ТипыСертификатов Цикл
		НоваяКоманда = Команды.Добавить(ТипСертификата.Имя);
		НоваяКоманда.Действие  = "ВыборВидаОперации";
		НоваяКоманда.ИзменяетСохраняемыеДанные = Истина;
		НоваяКнопка = Элементы.Добавить(ТипСертификата.Имя, Тип("КнопкаФормы"), Элементы.ДополнительныеКоманды);
		НоваяКнопка.Заголовок = ТипСертификата.Синоним;
		НоваяКнопка.ИмяКоманды = ТипСертификата.Имя;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьТипыСертификата()
	Типы = Перечисления.ТипыСертификатов.ПустаяСсылка().Метаданные().ЗначенияПеречисления;	
	Возврат Типы;	        
КонецФункции

&НаКлиенте
Процедура УстановитьЗаголовокФормы()
	ТекущийВидСертификата = Нрег(Строка(Объект.ТипСертификата));
	ЭтаФорма.Заголовок = "Сертификат " + ТекущийВидСертификата;         
КонецПроцедуры

&НаКлиенте
Процедура ВыборВидаОперации(Кнопка)
	
	СтарыйТипСертификата = Объект.ТипСертификата;
	
	Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов." + Кнопка.Имя);
	
	Если Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги") Тогда
		
		Элементы.Номинал.Заголовок = "Количество услуг";	
		Если СтарыйТипСертификата <> Объект.ТипСертификата Тогда
			Объект.СпособРасчетаСуммыВыработки = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСтоимостиВыработкиПоРаботеАбонемента.ПоПрейскурантуДокумента");
		КонецЕсли;
	Иначе
		
		Элементы.Номинал.Заголовок = "Сумма сертификата:";	
		Если СтарыйТипСертификата <> Объект.ТипСертификата Тогда
			Объект.СпособРасчетаСуммыВыработки = ПредопределенноеЗначение("Перечисление.СпособыРасчетаСтоимостиВыработкиПоРаботеАбонемента.ПустаяСсылка");
			Объект.СпособРасчетаЦеныПриВозврате = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	УстановитьЗаголовокФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьЭлементыФормы()
	
	ЭтоНаУслуги = Объект.ТипСертификата = ПредопределенноеЗначение("Перечисление.ТипыСертификатов.НаУслуги");
	
	Элементы.Услуги.Доступность								= ЭтоНаУслуги;
	Элементы.ВключатьВыполнениеРаботВВыработку.Доступность	= ЭтоНаУслуги;
	Элементы.КомплексныйСертификат.Доступность				= ЭтоНаУслуги;
	Элементы.ПорогПредупрежденияОкончания.Доступность		= ЭтоНаУслуги;
	Элементы.СпособРасчетаЦеныПриВозврате.Доступность		= ЭтоНаУслуги;
	Элементы.НоминалРавенСтоимости.Доступность 				= Не ЭтоНаУслуги;
	
	Элементы.Номинал.Заголовок = ?(ЭтоНаУслуги,"Количество услуг","Сумма сертификата");
	
	ВключатьВыполнениеРаботВВыработкуПриИзменении(Неопределено);
	КомплексныйСертификатПриИзменении(Неопределено);
	УстановитьВидимостьСтраницыДнейНедели();
	
	ОбновитьОтметкуНезаполненногоНоменклатуры();
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьВремя()
	
	Для Каждого СтрокаДня Из Объект.ВремяПоДнямНедели Цикл
		СтрокаДня.ВремяНачала = ОбщееВремяНачала;
		СтрокаДня.ВремяОкончания = ОбщееВремяОкончания;
		СтрокаДня.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры // ИзменитьВремя()

#КонецОбласти


