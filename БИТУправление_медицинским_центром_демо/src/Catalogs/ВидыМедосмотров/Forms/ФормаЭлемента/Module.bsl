#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьПриказ(Команда)
	//ОповещениеПродолжения = Новый ОписаниеОповещения("ДобавитьПриказПродолжение", ЭтотОбъект);
	//ОткрытьФорму("Справочник.ПриказыМедосмотров.ФормаВыбора",,ЭтотОбъект,,,,ОповещениеПродолжения);
	ОповещениеПродолжения = Новый ОписаниеОповещения("ДобавитьПриказПродолжение", ЭтотОбъект);
	ФиксНастройки = ПолучитьФиксНастройкиПриказы(ЭтаФорма.УникальныйИдентификатор);
	ПараметрыФормы = Новый Структура("ФиксированныеНастройки", ФиксНастройки);
	ОткрытьФорму("Справочник.ПриказыМедосмотров.ФормаВыбора", ПараметрыФормы, ЭтотОбъект,,,,ОповещениеПродолжения);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСправкуИлиИнойМедосмотр(Команда)
	ОповещениеПродолжения = Новый ОписаниеОповещения("ДобавитьПриказПродолжение", ЭтотОбъект);
	ФиксНастройки = ПолучитьФиксНастройкиВредныеФакторы(ЭтаФорма.УникальныйИдентификатор);
	ПараметрыФормы = Новый Структура("ФиксированныеНастройки", ФиксНастройки);
	ОткрытьФорму("Справочник.ПереченьВредныхФакторовИРабот.Форма.ФормаВыбораБезОтбора", ПараметрыФормы, ЭтотОбъект,,,,ОповещениеПродолжения);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПриказыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Приказ);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьФиксНастройкиВредныеФакторы(УникальныйИдентификаторФормы)

	Схема = Новый СхемаКомпоновкиДанных;
	
	Источник = Схема.ИсточникиДанных.Добавить();
	Источник.Имя = "Источник1";
	Источник.ТипИсточникаДанных = "local";
	
	Набор = Схема.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	Набор.Запрос = "ВЫБРАТЬ * ИЗ Справочник.ПереченьВредныхФакторовИРабот КАК ПереченьВредныхФакторовИРабот";
	Набор.Имя = "Запрос1";
	Набор.ИсточникДанных ="Источник1";
	Набор.АвтоЗаполнениеДоступныхПолей = Истина;

	АдресСхемы = ПоместитьВоВременноеХранилище(Схема, УникальныйИдентификаторФормы);

	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));

	Элт = КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Элт.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Приказ.Родитель");
	Элт.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	Элт.Использование = Истина;
	Элт.ПравоеЗначение = МедосмотрыСервер.ПолучитьГруппуПриказовСправок();

	Возврат КомпоновщикНастроек.ФиксированныеНастройки

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьФиксНастройкиПриказы(УникальныйИдентификаторФормы)

	Схема = Новый СхемаКомпоновкиДанных;
	
	Источник = Схема.ИсточникиДанных.Добавить();
	Источник.Имя = "Источник1";
	Источник.ТипИсточникаДанных = "local";
	
	Набор = Схема.НаборыДанных.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
	Набор.Запрос = "ВЫБРАТЬ * ИЗ Справочник.ПриказыМедосмотров КАК ПриказыМедосмотров";
	Набор.Имя = "Запрос1";
	Набор.ИсточникДанных ="Источник1";
	Набор.АвтоЗаполнениеДоступныхПолей = Истина;

	АдресСхемы = ПоместитьВоВременноеХранилище(Схема, УникальныйИдентификаторФормы);

	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	Элт = КомпоновщикНастроек.ФиксированныеНастройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	Элт.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	Элт.ВидСравнения = ВидСравненияКомпоновкиДанных.НеВИерархии;
	Элт.Использование = Истина;
	Элт.ПравоеЗначение = МедосмотрыСервер.ПолучитьГруппуПриказовСправок();

	Возврат КомпоновщикНастроек.ФиксированныеНастройки

КонецФункции

&НаКлиенте
Процедура ДобавитьПриказПродолжение(Результат, Контекст) Экспорт
	
	Если Результат <> Неопределено Тогда
		НайденныеСтроки = Объект.Приказы.НайтиСтроки(Новый Структура("Приказ", Результат));
		Если НайденныеСтроки.Количество() > 0 Тогда
			Если ТипЗнч(Результат) = Тип("СправочникСсылка.ПриказыМедосмотров") Тогда
				ТекстСообщения = "Выбранный приказ был добавлен ранее";
			Иначе
				ТекстСообщения = "Выбранный вредный фактор был добавлен ранее";
			КонецЕсли;
			
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		Иначе
			НовыйПриказ = Объект.Приказы.Добавить();
			НовыйПриказ.Приказ = Результат;
			НовыйПриказ.НеИспользоватьБезВФ = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


