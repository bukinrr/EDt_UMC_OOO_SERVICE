#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ПрохождениеМедосмотра) Тогда
		Если ЗначениеЗаполнено(Параметры.ТипМедосмотра) Тогда
			ТипМедосмотра = Параметры.ТипМедосмотра;
		КонецЕсли;
		Клиент = Параметры.Клиент;
		
		ВредныеФакторы.Параметры.УстановитьЗначениеПараметра("Ссылка", Параметры.ПрохождениеМедосмотра);
		
		Если Параметры.Свойство("Диагноз") И ЗначениеЗаполнено(Параметры.Диагноз) Тогда
			ДиагнозПриема = Параметры.Диагноз;
		КонецЕсли;
		
		ЗаполнитьДеревоПротивопоказаний();
		
	Иначе
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)

	Если Элементы.ДеревоПротивопоказаний.ТекущиеДанные <> Неопределено Тогда
		ОбработкаВыбораЗначения(Элементы.ДеревоПротивопоказаний.ТекущаяСтрока, Ложь);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоПротивопоказанийВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОбработкаВыбораЗначения(ВыбраннаяСтрока, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВредныеФакторыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ОткрытьЗначение(ТекДанные.ПереченьВредныхФакторовИРабот);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьДеревоПротивопоказаний()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Параметры.ПрохождениеМедосмотра);
	Запрос.УстановитьПараметр("ИспользоватьОтборПоТипуМедсосмотра",ЗначениеЗаполнено(ТипМедосмотра));
	Запрос.УстановитьПараметр("ТипМедосмотра", ТипМедосмотра);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПрохождениеМедосмотраФакторыИУсловияРаботы.Фактор КАК ПереченьВредныхФакторовИРабот
	|ПОМЕСТИТЬ ВредныеФакторыКлиентов
	|ИЗ
	|	Документ.ПрохождениеМедосмотра.ФакторыИУсловияРаботы КАК ПрохождениеМедосмотраФакторыИУсловияРаботы
	|ГДЕ
	|	ПрохождениеМедосмотраФакторыИУсловияРаботы.Ссылка = &Ссылка
	|	И ПрохождениеМедосмотраФакторыИУсловияРаботы.Фактор.НомерПП <> """"
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Противопоказания.ПереченьВредныхФакторовИРабот КАК ВредныйФактор,
	|	Противопоказания.ПереченьВредныхФакторовИРаботНомерППиПриказа КАК ВредныйФакторНомерПП,
	|	Противопоказания.ПереченьВредныхФакторовИРаботНаименованиеПолное КАК ВредныйФакторНаименованиеПолное,
	|	Противопоказания.Противопоказание КАК Противопоказание,
	|	Противопоказания.Противопоказание.НаименованиеПолное КАК ПротивопоказаниеНаименованиеПолное,
	|	Противопоказания.Противопоказание.НомерПротивопоказания КАК ПротивопоказаниеНомерПротивопоказания,
	|	МедицинскиеПротивопоказанияДиагнозы.Диагноз КАК Диагноз,
	|	МедицинскиеПротивопоказанияДиагнозы.Диагноз.НаименованиеПолное КАК ДиагнозНаименованиеПолное,
	|	МедицинскиеПротивопоказанияДиагнозы.Диагноз.КодДиагноза КАК ДиагнозКодДиагноза,
	|	Противопоказания.Противопоказание.ДиагнозыСтрока КАК ДиагнозыСтрока
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВредныеФакторыКлиентов.ПереченьВредныхФакторовИРабот КАК ПереченьВредныхФакторовИРабот,
	|		ВредныеФакторыКлиентов.ПереченьВредныхФакторовИРабот.НомерПП КАК ПереченьВредныхФакторовИРаботНомерППиПриказа,
	|		ВредныеФакторыКлиентов.ПереченьВредныхФакторовИРабот.НаименованиеПолное КАК ПереченьВредныхФакторовИРаботНаименованиеПолное,
	|		ПереченьВредныхФакторовИРаботМедицинскиеПротивопоказания.Противопоказание КАК Противопоказание
	|	ИЗ
	|		ВредныеФакторыКлиентов КАК ВредныеФакторыКлиентов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПереченьВредныхФакторовИРабот.МедицинскиеПротивопоказания КАК ПереченьВредныхФакторовИРаботМедицинскиеПротивопоказания
	|			ПО ВредныеФакторыКлиентов.ПереченьВредныхФакторовИРабот = ПереченьВредныхФакторовИРаботМедицинскиеПротивопоказания.Ссылка
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА НЕ ПереченьВредныхФакторовИРаботМедицинскиеПротивопоказания.ТипМедосмотра = ЗНАЧЕНИЕ(Перечисление.ТипыМедосмотров.ПустаяСсылка)
	|						И &ИспользоватьОтборПоТипуМедсосмотра
	|					ТОГДА ВЫБОР
	|							КОГДА ПереченьВредныхФакторовИРаботМедицинскиеПротивопоказания.ТипМедосмотра = &ТипМедосмотра
	|								ТОГДА ИСТИНА
	|							ИНАЧЕ ЛОЖЬ
	|						КОНЕЦ
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		НЕОПРЕДЕЛЕНО,
	|		"""",
	|		""ОБЩИЕ"",
	|		ОбщиеПротивопоказанияМедосмотров.Противопоказание
	|	ИЗ
	|		РегистрСведений.ОбщиеПротивопоказанияМедосмотров КАК ОбщиеПротивопоказанияМедосмотров
	|	ГДЕ
	|		ВЫБОР
	|				КОГДА &ПоПриказу29н
	|					ТОГДА ОбщиеПротивопоказанияМедосмотров.Противопоказание.НомерПротивопоказания <> """"
	|							И (ОбщиеПротивопоказанияМедосмотров.ГруппаОпасныхВеществ = ЗНАЧЕНИЕ(Перечисление.ГруппыОпасныхВеществ.ПустаяСсылка)
	|								ИЛИ ОбщиеПротивопоказанияМедосмотров.ГруппаОпасныхВеществ В
	|									(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|										ПереченьВредныхФакторовИРаботГруппыВредныхВеществ.ГруппаВредныхВеществ КАК ГруппаВредныхВеществ
	|									ИЗ
	|										ВредныеФакторыКлиентов КАК ВредныеФакторыКлиентов
	|											ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ПереченьВредныхФакторовИРабот.ГруппыВредныхВеществ КАК ПереченьВредныхФакторовИРаботГруппыВредныхВеществ
	|											ПО
	|												ВредныеФакторыКлиентов.ПереченьВредныхФакторовИРабот = ПереченьВредныхФакторовИРаботГруппыВредныхВеществ.Ссылка))
	|				ИНАЧЕ ОбщиеПротивопоказанияМедосмотров.Противопоказание.НомерПротивопоказания = """"
	|			КОНЕЦ) КАК Противопоказания
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.МедицинскиеПротивопоказания.Диагнозы КАК МедицинскиеПротивопоказанияДиагнозы
	|		ПО Противопоказания.Противопоказание = МедицинскиеПротивопоказанияДиагнозы.Ссылка
	|ГДЕ
	|	ВЫБОР
	|			КОГДА НЕ &Режим29н
	|					И &ПоДиагнозу
	|				ТОГДА МедицинскиеПротивопоказанияДиагнозы.Диагноз = &Диагноз
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|ИТОГИ ПО
	|	ВредныйФактор,
	|	Противопоказание"
	;
	
	Запрос.УстановитьПараметр("Режим29н", Режим29н);
	Запрос.УстановитьПараметр("ПоПриказу29н", Режим29н);
	Запрос.УстановитьПараметр("ПоДиагнозу", ЗначениеЗаполнено(ДиагнозПриема));
	Запрос.УстановитьПараметр("Диагноз", ДиагнозПриема);
	
	Дерево = РеквизитФормыВЗначение("ДеревоПротивопоказаний");
	
	ВыбВредность = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ДиагнозыПоПротивопоказаниям = Новый ТаблицаЗначений;
	ДиагнозыПоПротивопоказаниям.Колонки.Добавить("Противопоказание", Новый ОписаниеТипов("СправочникСсылка.МедицинскиеПротивопоказания"));
	ДиагнозыПоПротивопоказаниям.Колонки.Добавить("НачалоДиапазона", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));
	ДиагнозыПоПротивопоказаниям.Колонки.Добавить("КонецДиапазона", Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(10)));
	
	СтрокиДереваПоПротивопоказаниям = Новый Соответствие;
	
	УникальныеСтрокиДиагнозов = Новый Массив;
	ДиапазоныДиагнозов = Новый Структура("Диапазоны1, Диапазоны2", Новый Массив, Новый Массив);
	Диагнозы = Новый Массив;
	
	КодДиагноза = ДиагнозПриема.КодДиагноза;
	ВредностиПо29нНеСодержащиеПротивопоказания = Новый Массив;
	
	Пока ВыбВредность.Следующий() Цикл
		
		ВредностьПо29нСодержитПротивопоказания = Ложь;
		
		СтрокаВредность = Дерево.Строки.Добавить();	
		СтрокаВредность.Значение = ВыбВредность.ВредныйФактор;
		
		ВыбДет = ВыбВредность.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"");
		ВыбДет.Следующий();
		СтрокаВредность.Представление = ВыбДет.ВредныйФакторНомерПП + " " + ВыбДет.ВредныйФакторНаименованиеПолное;
		СтрокаВредность.Уровень = 1;
		
		ВыбПротивопоказания = ВыбВредность.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыбПротивопоказания.Следующий() Цикл
			
			Если Режим29н И Не ПустаяСтрока(ВыбПротивопоказания.ДиагнозыСтрока) И ЗначениеЗаполнено(КодДиагноза) Тогда
				Если СтрокаДиагнозовСодержитДиагноз(ВыбПротивопоказания.ДиагнозыСтрока, КодДиагноза) Тогда
					СтрокаПротивопоказания = ДобавитьСтрокуПротивопоказания(СтрокаВредность, ВыбПротивопоказания);
					ВредностьПо29нСодержитПротивопоказания = Истина;
				КонецЕсли;
			Иначе
				СтрокаПротивопоказания = ДобавитьСтрокуПротивопоказания(СтрокаВредность, ВыбПротивопоказания);
				
				Если Не ПустаяСтрока(ВыбПротивопоказания.ДиагнозыСтрока) Тогда
					СтрокиДиагнозовПротивопоказания = ПолучитьДиагнозыПоСтрокеДиагнозов(ВыбПротивопоказания.ДиагнозыСтрока, УникальныеСтрокиДиагнозов, ДиапазоныДиагнозов, Диагнозы);
					Если СтрокиДереваПоПротивопоказаниям.Получить(СтрокаПротивопоказания.Значение) = Неопределено Тогда
						МассивСтрок = Новый Массив;
						МассивСтрок.Добавить(СтрокаПротивопоказания);
						СтрокиДереваПоПротивопоказаниям.Вставить(СтрокаПротивопоказания.Значение, МассивСтрок);
					Иначе
						СтрокиДереваПоПротивопоказаниям[СтрокаПротивопоказания.Значение].Добавить(СтрокаПротивопоказания);
					КонецЕсли;
					
					Для Каждого СтрокаДиагнозаПротивопоказания Из СтрокиДиагнозовПротивопоказания Цикл
						НоваяСтрока = ДиагнозыПоПротивопоказаниям.Добавить();
						НоваяСтрока.Противопоказание = СтрокаПротивопоказания.Значение;
						НоваяСтрока.НачалоДиапазона = СтрокаДиагнозаПротивопоказания.НачалоДиапазона;
						НоваяСтрока.КонецДиапазона = СтрокаДиагнозаПротивопоказания.КонецДиапазона;
					КонецЦикла;
				Иначе
					ВыбДиагнозы = ВыбПротивопоказания.Выбрать();
					Пока ВыбДиагнозы.Следующий() Цикл
						Если ЗначениеЗаполнено(ВыбДиагнозы.Диагноз) Тогда
							СтрокаДиагноза = СтрокаПротивопоказания.Строки.Добавить();
							СтрокаДиагноза.Значение = ВыбДиагнозы.Диагноз;
							Если ЗначениеЗаполнено(ВыбДиагнозы.ДиагнозКодДиагноза) Тогда
								СтрокаДиагноза.Представление = СокрЛП(ВыбДиагнозы.ДиагнозКодДиагноза) + " " + ВыбДиагнозы.ДиагнозНаименованиеПолное;
							Иначе
								СтрокаДиагноза.Представление = ВыбДиагнозы.ДиагнозНаименованиеПолное;
							КонецЕсли;
							
							СтрокаДиагноза.Уровень = 3;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ВредностьПо29нСодержитПротивопоказания Тогда
			ВредностиПо29нНеСодержащиеПротивопоказания.Добавить(СтрокаВредность);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Режим29н И ЗначениеЗаполнено(КодДиагноза) Тогда
		Для Каждого ВредностьКУдалению Из ВредностиПо29нНеСодержащиеПротивопоказания Цикл
			Дерево.Строки.Удалить(ВредностьКУдалению);
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнениеДиагнозов(ДиагнозыПоПротивопоказаниям, ДиапазоныДиагнозов, Диагнозы, СтрокиДереваПоПротивопоказаниям);
	
	ЗначениеВРеквизитФормы(Дерево, "ДеревоПротивопоказаний");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДобавитьСтрокуПротивопоказания(СтрокаВредность, ВыбПротивопоказания)
	
	СтрокаПротивопоказания = СтрокаВредность.Строки.Добавить();
	СтрокаПротивопоказания.Значение = ВыбПротивопоказания.Противопоказание;
	
	СтрокаПротивопоказания.Представление = ВыбПротивопоказания.ПротивопоказаниеНаименованиеПолное;
	Если ЗначениеЗаполнено(ВыбПротивопоказания.ПротивопоказаниеНомерПротивопоказания) Тогда
		НомерПП = "(" + ВыбПротивопоказания.ПротивопоказаниеНомерПротивопоказания + ")";
		Если СтрДлина(НомерПП) < 4 Тогда
			НомерПП = НомерПП + Символы.Таб;
		КонецЕсли;
		СтрокаПротивопоказания.Представление = НомерПП + Символы.Таб + СтрокаПротивопоказания.Представление;
	КонецЕсли;
	
	СтрокаПротивопоказания.Уровень = 2;
	Возврат СтрокаПротивопоказания;
	
КонецФункции

&НаСервере
Процедура ЗаполнениеДиагнозов(ДиагнозыПоПротивопоказаниям, ДиапазоныДиагнозов, Диагнозы, СтрокиДереваПоПротивопоказаниям)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДиагнозыПоПротивопоказаниям.Противопоказание КАК Противопоказание,
		|	ДиагнозыПоПротивопоказаниям.НачалоДиапазона КАК НачалоДиапазона,
		|	ДиагнозыПоПротивопоказаниям.КонецДиапазона КАК КонецДиапазона
		|ПОМЕСТИТЬ ДиагнозыПоПротивопоказаниям
		|ИЗ
		|	&ДиагнозыПоПротивопоказаниям КАК ДиагнозыПоПротивопоказаниям
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДиагнозыПоПротивопоказаниям.Противопоказание, Диагнозы.Ссылка КАК Ссылка,
		|	Диагнозы.КодДиагноза КАК КодДиагноза,
		|	Диагнозы.НаименованиеПолное КАК НаименованиеПолное
		|ИЗ
		|	Справочник.Диагнозы КАК Диагнозы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДиагнозыПоПротивопоказаниям КАК ДиагнозыПоПротивопоказаниям
		|		ПО Диагнозы.КодДиагноза >= ДиагнозыПоПротивопоказаниям.НачалоДиапазона
		|			И Диагнозы.КодДиагноза <= ДиагнозыПоПротивопоказаниям.КонецДиапазона И Диагнозы.ЭтоГруппа = ЛОЖЬ
		|ГДЕ
		|	Диагнозы.ПометкаУдаления = ЛОЖЬ
		|	И Диагнозы.Архив = ЛОЖЬ
		|	И Диагнозы.ЭтоГруппа = ЛОЖЬ
		|";
		
	Запрос.УстановитьПараметр("ДиагнозыПоПротивопоказаниям", ДиагнозыПоПротивопоказаниям);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаДерева Из СтрокиДереваПоПротивопоказаниям Цикл
		Для Каждого СтрокаМассива Из СтрокаДерева.Значение Цикл
			СтрокаАдресаДиагнозов = СтрокаМассива.Строки.Добавить();
			СтрокаАдресаДиагнозов.Значение = ПоместитьВоВременноеХранилище(Результат.НайтиСтроки(Новый Структура("Противопоказание", СтрокаДерева.Ключ)), ЭтаФорма.УникальныйИдентификатор);
			СтрокаАдресаДиагнозов.Представление = СтрокаАдресаДиагнозов.Значение;
			СтрокаАдресаДиагнозов.Уровень = 3;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораЗначения(ВыбраннаяСтрока, РазворачиватьУзлыПротивопоказаний = Ложь)
	
	СтрокаДерева = ДеревоПротивопоказаний.НайтиПоИдентификатору(ВыбраннаяСтрока);
	
	Если ТипЗнч(СтрокаДерева.Значение) = Тип("СправочникСсылка.МедицинскиеПротивопоказания") Тогда
		Если СтрокаДерева.ПолучитьЭлементы().Количество() > 0
			И РазворачиватьУзлыПротивопоказаний
		Тогда
		Иначе
			ВыполнитьВыборЗначения(СтрокаДерева.Значение, СтрокаДерева.ПолучитьРодителя().Значение);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(СтрокаДерева.Значение) = Тип("СправочникСсылка.Диагнозы") Тогда
		
		УзелПротивопоказания = СтрокаДерева.ПолучитьРодителя();
		ВыполнитьВыборЗначения(УзелПротивопоказания.Значение, УзелПротивопоказания.ПолучитьРодителя().Значение, СтрокаДерева.Значение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыборЗначения(Противопоказание, ВредныйФактор = Неопределено, Диагноз = Неопределено)
	
	Если Диагноз = Неопределено Тогда
		Диагноз = ПредопределенноеЗначение("Справочник.Диагнозы.ПустаяСсылка");
	КонецЕсли;
	
	Оповестить("ВыборМедицинскогоПротивопоказанияИДиагноза", 
				Новый Структура("Противопоказание, ВредныйФактор, Диагноз, ВладелецФормы",
								 Противопоказание, ВредныйФактор, Диагноз, ЭтаФорма.ВладелецФормы));
	Закрыть();
				
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДиагнозыПоСтрокеДиагнозов(Знач СтрокаДиагнозов, УникальныеСтрокиДиагнозов, ДиапазоныДиагнозов, Диагнозы)
	
	СтрокиДиагнозовПротивопоказания = Новый Массив;
	
	Для Каждого ЧастьСтрокиДиагноза Из СтрРазделить(СтрокаДиагнозов, ";", Ложь) Цикл
		СтрокаДиагноза = СокрЛП(ЧастьСтрокиДиагноза);
		
		Если СтрНайти(СтрокаДиагноза, "-") <> 0 Или СтрНайти(СтрокаДиагноза, ".") = 0 Тогда
			//Группа
			ГраницыДиапазона = СтрРазделить(СтрокаДиагноза,"-",Ложь);
			НачалоДиапазона	= СокрЛП(ГраницыДиапазона[0]);
			КонецДиапазона = СокрЛП(ГраницыДиапазона[?(ГраницыДиапазона.Количество() > 1, 1, 0)]) + ".99";
			
			СтруктураДиапазона = Новый Структура("НачалоДиапазона, КонецДиапазона", НачалоДиапазона, КонецДиапазона);
			Если УникальныеСтрокиДиагнозов.Найти(СтрокаДиагноза) = Неопределено Тогда
				УникальныеСтрокиДиагнозов.Добавить(СтрокаДиагноза);
				
				Если ГраницыДиапазона.Количество() > 1 Тогда
					// Диапазон1
					ДиапазоныДиагнозов.Диапазоны1.Добавить(СтруктураДиапазона);
				Иначе
					// Диапазон2
					ДиапазоныДиагнозов.Диапазоны2.Добавить(СтруктураДиапазона);
				КонецЕсли;
			КонецЕсли;
			СтрокиДиагнозовПротивопоказания.Добавить(СтруктураДиапазона);
		Иначе
			Если УникальныеСтрокиДиагнозов.Найти(СтрокаДиагноза) = Неопределено Тогда
				УникальныеСтрокиДиагнозов.Добавить(СтрокаДиагноза);
				
				Диагнозы.Добавить(Новый Структура("НачалоДиапазона, КонецДиапазона", СтрокаДиагноза, СтрокаДиагноза));
			КонецЕсли;
			СтрокиДиагнозовПротивопоказания.Добавить(Новый Структура("НачалоДиапазона, КонецДиапазона", СтрокаДиагноза, СтрокаДиагноза));
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокиДиагнозовПротивопоказания;
	
КонецФункции

&НаСервереБезКонтекста
Функция СтрокаДиагнозовСодержитДиагноз(Знач СтрокаДиагнозов, КодДиагноза)
	
	Для Каждого ЧастьСтрокиДиагноза Из СтрРазделить(СтрокаДиагнозов, ";", Ложь) Цикл
		СтрокаДиагноза = СокрЛП(ЧастьСтрокиДиагноза);
		
		Если СтрНайти(СтрокаДиагноза, "-") <> 0 Или СтрНайти(СтрокаДиагноза, ".") = 0 Тогда
			// Группа
			ГраницыДиапазона = СтрРазделить(СтрокаДиагноза,"-",Ложь);
			НачалоДиапазона	= СокрЛП(ГраницыДиапазона[0]);
			КонецДиапазона = СокрЛП(ГраницыДиапазона[?(ГраницыДиапазона.Количество() > 1, 1, 0)]) + ".99";
		Иначе
			НачалоДиапазона	= СтрокаДиагноза;
			КонецДиапазона = СтрокаДиагноза;
		КонецЕсли;
		
		Если КодДиагноза >= НачалоДиапазона И КодДиагноза <= КонецДиапазона Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивДиагнозов(Адрес)
	
	МассивДиагнозов = Новый Массив;
	СтрокиТаблицы = ПолучитьИзВременногоХранилища(Адрес);
	
	Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
		МассивДиагнозов.Добавить(Новый Структура("Ссылка, КодДиагноза, НаименованиеПолное", СтрокаТаблицы.Ссылка, СтрокаТаблицы.КодДиагноза, СтрокаТаблицы.НаименованиеПолное));
	КонецЦикла;
	
	Возврат МассивДиагнозов;
	
КонецФункции

&НаКлиенте
Процедура ДеревоПротивопоказанийПередРазворачиванием(Элемент, Строка, Отказ)
	
	Строки = ДеревоПротивопоказаний.НайтиПоИдентификатору(Строка).ПолучитьЭлементы();
	Если Строки.Количество() = 1 И ТипЗнч(Строки[0].Значение) = Тип("Строка") Тогда
		МассивДиагнозов = ПолучитьМассивДиагнозов(Строки[0].Значение);
		Строки.Очистить();
		Для Каждого Диагноз Из МассивДиагнозов Цикл
			НоваяСтрока = Строки.Добавить();
			НоваяСтрока.Значение = Диагноз.Ссылка;
			НоваяСтрока.Представление = Диагноз.КодДиагноза + " " + Диагноз.НаименованиеПолное;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти