#Область ПрограммныйИнтерфейс

// Очередной порядковый номер для автоприсвоения разделу медкарты.
//
// Параметры:
//  ТипМедкарты - ПеречислениеСсылка.ТипыМедицинскихКарт - тип карты.
//  РазделСсылка - СправочникСсылка.РазделыМедицинскихКарт - раздел.
//
// Возвращаемое значение:
//  Число.
//
Функция ПолучитьПорядковыйНомер(ТипМедкарты, РазделСсылка) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МАКСИМУМ(РазделыМедицинскихКарт.Порядок) КАК Порядок
	               |ИЗ
	               |	Справочник.РазделыМедицинскихКарт КАК РазделыМедицинскихКарт
	               |ГДЕ
	               |	НЕ РазделыМедицинскихКарт.ПометкаУдаления
	               |	И РазделыМедицинскихКарт.ТипМедкарты = &ТипМедкарты
	               |	И РазделыМедицинскихКарт.Ссылка <> &РазделСсылка";
	
	Запрос.УстановитьПараметр("ТипМедкарты", ТипМедкарты);
	Запрос.УстановитьПараметр("РазделСсылка", РазделСсылка);
	
	ВыборкаРезультатаЗапроса = Запрос.Выполнить().Выбрать();
	Если ВыборкаРезультатаЗапроса.Следующий() Тогда
		Если ЗначениеЗаполнено(ВыборкаРезультатаЗапроса.Порядок) Тогда 
			Возврат ВыборкаРезультатаЗапроса.Порядок + 1;
		КонецЕсли;	
	КонецЕсли;	
	
	Возврат 1;

КонецФункции

// Распределяет загруженные встроенные шаблоны по разделам медкарт согласно предустановленной настройке.
//
Процедура ОбновитьШаблоныРазделовМедкарт() Экспорт
	
	МакетыСправочника = Метаданные.Справочники.РазделыМедицинскихКарт.Макеты;
	
	Для Каждого МакетМетаданные Из МакетыСправочника Цикл
		
		Если СтрНачинаетсяС("ШаблоныРазделовМедкарт", МакетМетаданные.Имя) Тогда
			ДвоичныеДанныеВыгрузки = Справочники.РазделыМедицинскихКарт.ПолучитьМакет(МакетМетаданные.Имя);
			Если ТипЗнч(ДвоичныеДанныеВыгрузки) = Тип("ДвоичныеДанные") Тогда
				ОбщегоНазначенияСервер.ВыполнитьЗагрузкуУниверсальнымОбменомXML(ДвоичныеДанныеВыгрузки);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти