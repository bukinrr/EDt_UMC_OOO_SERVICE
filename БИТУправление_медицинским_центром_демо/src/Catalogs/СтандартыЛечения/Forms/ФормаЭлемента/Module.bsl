#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузитьНазначения();
	
	РаботаСФормамиСервер.УстановитьОтборСписка("СтандартЛечения", Объект.Ссылка, СвязанныеДиагнозы);
	РаботаСФормамиСервер.НастройкаПодбораПриСоздании(ЭтотОбъект, Ложь, "Назначения", "Услуга");
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.РучноеРедактирование = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьВидимость();
	РаботаСФормамиКлиент.ОчиститьЛишниеКомандыПобор(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ВыгрузитьНазначения(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.УстановитьОтборСписка("СтандартЛечения",   Объект.Ссылка, СвязанныеДиагнозы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьНазначение(Команда)
	
	Если Команда.Имя = "ДобавитьМедикаменты" Тогда
		ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Медикаменты");
	Иначе
		Если Объект.ВидСтандарта Тогда
			ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование");
		Иначе
			ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура");
		КонецЕсли;
	КонецЕсли;
	
	ДобавитьСтрокуНазначения(ВидНазначения);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)

	РаботаСФормамиКлиент.КнопкаПодборПриНажатии(ЭтотОбъект, "Назначения");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Подключаемый_ВыборПодбор(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		ПоказатьПредупреждение(,НСтр("ru = 'Добавление услуг возможно только после записи элемента справочника.'"));
		Возврат;
	КонецЕсли;		
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Назначения.ТекущиеДанные;
	
	ДобавитьНовуюСтроку = (ТекущиеДанные = Неопределено);
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если Объект.ВидСтандарта // Регламентированный 
			Или Не ЗначениеЗаполнено(ТекущиеДанные.Назначение)
		Тогда
			// Заполнение / смена номенклатуры.
			ТекущиеДанные.Назначение = ВыбранноеЗначение;
			
		ИначеЕсли ТекущиеДанные.Назначение = ВыбранноеЗначение Тогда
			// Количество + 1
			ТекущиеДанные.Количество = ТекущиеДанные.Количество + 1;
		Иначе
			ДобавитьНовуюСтроку = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ДобавитьНовуюСтроку Тогда
		
		// Выбираем вид назначения
		Если ТекущиеДанные <> Неопределено
			И ЗначениеЗаполнено(ТекущиеДанные.ВидНазначения)
		Тогда
			ВидНазначения = ТекущиеДанные.ВидНазначения;
		ИначеЕсли Объект.ВидСтандарта Тогда // Регламентированный.
			ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование");
		Иначе // Внутренний.
			ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура");
		КонецЕсли;
		
		ДобавитьСтрокуНазначения(ВидНазначения, ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНазначения(ВидНазначения, Назначение = Неопределено)
	
	НоваяСтрока = Назначения.ПолучитьЭлементы().Добавить();
	НоваяСтрока.Количество = 1;
	НоваяСтрока.Частота = 1;
	НоваяСтрока.ИдентификаторНазначения = Новый УникальныйИдентификатор;
	НоваяСтрока.ВидНазначения = ВидНазначения;
	
	Если Назначение <> Неопределено Тогда
		НоваяСтрока.Назначение = Назначение;
	Иначе
		НоваяСтрока.Назначение = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
	КонецЕсли;
	
	Элементы.Назначения.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.Назначения.ИзменитьСтроку();
	
	Если Объект.ВидСтандарта Тогда // Регламентированный стандарт.
		Элементы.Назначения.ТекущийЭлемент = Элементы.НоменклатураМедицинскихУслуг;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущаяОперация = Элементы.Назначения.ТекущиеДанные.ВидНазначения;
	Если Не ЗначениеЗаполнено(Элементы.Назначения.ТекущиеДанные.ВидНазначения) Тогда
		Возврат;
	КонецЕсли;
	Если ТекущаяОперация = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование")
		Или ТекущаяОперация = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура")
	Тогда
		НоваяРабота = РаботаСФормамиКлиент.ВыбратьЭлементНоменклатурыПоВиду(Истина, Элементы.Назначения.ТекущиеДанные.Назначение, ЭтаФорма, Ложь); 
		Если НоваяРабота <> Неопределено Тогда
			Элементы.Назначения.ТекущиеДанные.Назначение = НоваяРабота;
		КонецЕсли;
	ИначеЕсли ТекущаяОперация = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Прием") Тогда
		НоваяПрием = ПолучитьФорму("Справочник.КатегорииВыработки.ФормаВыбора").ОткрытьМодально();
		Если НоваяПрием <> Неопределено Тогда
			Элементы.Назначения.ТекущиеДанные.Назначение = НоваяПрием;
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Элементы.Назначения.ТекущиеДанные.ИдентификаторНазначения) Тогда
		Элементы.Назначения.ТекущиеДанные.ИдентификаторНазначения = Новый УникальныйИдентификатор;
	КонецЕсли;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодставитьВрачаИзПриемаПриИзменении(Элемент)
	
	Если Элементы.Назначения.ТекущиеДанные.ПодставитьВрачаИзПриема Тогда
	
		Элементы.Назначения.ТекущиеДанные.Сотрудник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка");
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НазначенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
		
	Если Не Копирование Тогда
		Отказ = Истина;
		НоваяСтрока = Назначения.ПолучитьЭлементы().Добавить();
		НоваяСтрока.Количество = 1;
		НоваяСтрока.ИдентификаторНазначения = Новый УникальныйИдентификатор;
		НоваяСтрока.ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура");
		НоваяСтрока.Назначение = ПредопределенноеЗначение("Справочник.Номенклатура.ПустаяСсылка");
		Элементы.Назначения.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
		Элементы.Назначения.ИзменитьСтроку();
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущаяОперация = Строка(Элементы.Назначения.ТекущиеДанные.ВидНазначения);
	
	// Открытие отдельной формы для выбора медикаментов.
	Если ТекущаяОперация = "Медикаменты" Тогда
		
		КолонкиСпискаНазначений = СтрРазделить(ПоляНазначенийМедикаментов(),",");
		ДанныеСтроки = Элементы.Назначения.ТекущиеДанные;
		ДанныеЗаполнения = Новый Структура();
		Для Каждого Строка Из КолонкиСпискаНазначений Цикл
			ДанныеЗаполнения.Вставить(Строка,ДанныеСтроки[Строка]);
		КонецЦикла;
		ПараметрыФормы = Новый Структура("ДанныеЗаполнения, НоваяСтрока, Источник", ДанныеЗаполнения, ДанныеСтроки.НоваяСтрока, "СтандартыЛечения");
		Оповещение = Новый ОписаниеОповещения("РедактированиеМедикаментозногоНазначенияЗавершение", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.РедактированиеМедикаментозныхНазначений", ПараметрыФормы,,,,,Оповещение);
		ДанныеСтроки.НоваяСтрока = Ложь;
		ПодключитьОбработчикОжидания("ЗакончитьРедактированиеСтрокиНазначения", 0.1, Истина);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСтандартаПриИзменении(Элемент)
	
	УстановитьДоступностьВидимость();
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуДокументаОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьМакет();
КонецПроцедуры

&НаКлиенте
Процедура НазначенияВидНазначенияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Элементы.Назначения.ТекущиеДанные.ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура")
		Или Элементы.Назначения.ТекущиеДанные.ВидНазначения = ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование")
	Тогда
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура"));
		ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучноеРедактированиеПриИзменении(Элемент)
	
	Если Объект.РучноеРедактирование Тогда
		ТекстВопроса = НСтр("ru='Стандарты с ручным редактированием не будут актуализированы при обновлении справочника стандартов лечения.'");
	Иначе
		ТекстВопроса = НСтр("ru='При обновлении справочника стандартов лечения будут удалены внесенные вручную изменения.'");
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаИзменениеРучноеРедактирование", ЭтотОбъект);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура СвязанныеДиагнозыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)

	Отказ = НЕ РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка 						=	Ложь;
	ДиалогВыбораФайла							=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок					=	"Выберите файл шаблона";
	ДиалогВыбораФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра				=	0;
	ДиалогВыбораФайла.Фильтр="Текстовые документы (*.dot, *.doc, *.docx, *.rtf)|*.dot; *.doc; *.docx; *.rtf";
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Попытка
			ФайлДокумента = Новый Файл(ДиалогВыбораФайла.ПолноеИмяФайла);
			ДанныеФайла = Новый ДвоичныеДанные(ДиалогВыбораФайла.ПолноеИмяФайла);
			ЗаписатьФайлМакета(ДанныеФайла, ФайлДокумента.Имя, ФайлДокумента.Расширение);
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("" + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПутьКФайлуДокументаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	#Если НЕ ВебКлиент И НЕ МобильныйКлиент Тогда
		Если ЗначениеЗаполнено(Объект.РасширениеФайлаДокумента) Тогда
			СодержаниеОшибки = "";
			ДвоичныеДанные = ПолучитьДвоичныеДанныеШаблона();
			Если ДвоичныеДанные <> Неопределено Тогда
				ПолноеИмяФайла = ПолучитьИмяВременногоФайла(Объект.РасширениеФайлаДокумента);
				ДвоичныеДанные.Записать(ПолноеИмяФайла);
				ЗапуститьПриложение(ПолноеИмяФайла);
			КонецЕсли;
		КонецЕсли;
	#КонецЕсли

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузитьНазначения()
	
	// Получаем коллекцию групп элементов(назначений) плана лечения
	ГруппыНазначений = Назначения.ПолучитьЭлементы();
	
	// Добавляем группы элементов(назначений)
	ВидыНазначений = Объект.Назначения.Выгрузить();
	ВидыНазначений.Свернуть("ВидНазначения");
	
	Если Объект.Назначения.Количество() <> 0 Тогда
		// Заполняем группы назначениями
		Для Каждого ГруппаНазначений Из ВидыНазначений Цикл
			ПараметрыОтбора = Новый Структура("ВидНазначения", ГруппаНазначений.ВидНазначения);			
			СписокНазначений = Объект.Назначения.Выгрузить(ПараметрыОтбора);
			СписокНазначений.Сортировать("ПорядковыйНомер");
			Для Каждого Назначение Из СписокНазначений Цикл
				ЭлементГруппы = Назначения.ПолучитьЭлементы().Добавить();
				ЭлементГруппы.ВидНазначения = Назначение.ВидНазначения;
				ЭлементГруппы.ИдентификаторНазначения = Назначение.ИдентификаторНазначения;
				ЭлементГруппы.Назначение = Назначение.Назначение;
				ЭлементГруппы.СмещениеОтДатыПриема = Назначение.СмещениеОтДатыПриема;
				ЭлементГруппы.ПодставитьВрачаИзПриема = Назначение.ПодставитьВрачаИзПриема;
				ЭлементГруппы.Сотрудник = Назначение.Сотрудник;
				ЭлементГруппы.Количество = Назначение.Количество;
				ЭлементГруппы.Комментарий = Назначение.Комментарий;
				
				ЭлементГруппы.НоменклатураМедицинскихУслуг = Назначение.НоменклатураМедицинскихУслуг;
				ЭлементГруппы.Частота = Назначение.Частота;
				
				ЭлементГруппы.ЕдиницаИзмерения = Назначение.ЕдиницаИзмерения;
				ЭлементГруппы.ПриемовВДень = Назначение.ПриемовВДень;
				ЭлементГруппы.РазоваяДоза = Назначение.РазоваяДоза;
				РассчитатьДозыСтрокиМедикаментов(ЭлементГруппы);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	// Удалим группировку Прием, если в ней нет Специализаций
	ПараметрыОтбора = Новый Структура("ВидНазначения", Перечисления.ВидыНазначений.Прием);			
	СписокНазначений = Объект.Назначения.НайтиСтроки(ПараметрыОтбора);	
	Если СписокНазначений.Количество() = 0 Тогда
		Для Каждого ГруппаНазначений Из ГруппыНазначений Цикл
			Если ГруппаНазначений.ВидНазначения = Перечисления.ВидыНазначений.Прием Тогда 
				Назначения.ПолучитьЭлементы().Удалить(ГруппаНазначений);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНазначения(ТекущийОбъект)
	
	ТекущийОбъект.Назначения.Очистить();
	
	ПорядковыйНомер = 1;
	Для Каждого Назначение Из Назначения.ПолучитьЭлементы() Цикл 
		НоваяЗапись = ТекущийОбъект.Назначения.Добавить();
		НоваяЗапись.Назначение = Назначение.Назначение;
		НоваяЗапись.ВидНазначения = Назначение.ВидНазначения;
		НоваяЗапись.ИдентификаторНазначения = Назначение.ИдентификаторНазначения;
		НоваяЗапись.СмещениеОтДатыПриема = Назначение.СмещениеОтДатыПриема;
		НоваяЗапись.ПодставитьВрачаИзПриема = Назначение.ПодставитьВрачаИзПриема;
		НоваяЗапись.Сотрудник = ?(Назначение.ПодставитьВрачаИзПриема, Справочники.Сотрудники.ПустаяСсылка(), Назначение.Сотрудник);
		НоваяЗапись.Количество = Назначение.Количество;
		НоваяЗапись.ПорядковыйНомер = ПорядковыйНомер;
		НоваяЗапись.Комментарий = Назначение.Комментарий;
		
		НоваяЗапись.ЕдиницаИзмерения = Назначение.ЕдиницаИзмерения;
		НоваяЗапись.ПриемовВДень = Назначение.ПриемовВДень;
		НоваяЗапись.РазоваяДоза  = Назначение.РазоваяДоза;
		
		НоваяЗапись.НоменклатураМедицинскихУслуг = Назначение.НоменклатураМедицинскихУслуг;
		НоваяЗапись.Частота = Назначение.Частота;
		
		ПорядковыйНомер = ПорядковыйНомер + 1;
	КонецЦикла;
	
	Объект.Назначения.Загрузить(ТекущийОбъект.Назначения.Выгрузить());
	
КонецПроцедуры

&НаСервере
Функция ЗаписатьФайлМакета(ДанныеФайла, ИмяФайла, Расширение)
	ДокОб = РеквизитФормыВЗначение("Объект");
	ДокОб.ФайлДокумента = Новый ХранилищеЗначения(ДанныеФайла, Новый СжатиеДанных);
	ДокОб.РасширениеФайлаДокумента = Расширение;
	ДокОб.ИмяФайлаДокумента = ИмяФайла;	
	ДокОб.Записать();
	ЗначениеВРеквизитФормы(ДокОб,"Объект");
КонецФункции

&НаСервере
Функция ПолучитьДвоичныеДанныеШаблона()
	ДокОб = РеквизитФормыВЗначение("Объект");
	Возврат ДокОб.ФайлДокумента.Получить();
КонецФункции

&НаСервере
Процедура ОчиститьМакет()
	ДокОб = РеквизитФормыВЗначение("Объект");
	ДокОб.ФайлДокумента = Неопределено;
	ДокОб.РасширениеФайлаДокумента = "";
	ДокОб.ИмяФайлаДокумента = "";
	ДокОб.Записать();
	ЗначениеВРеквизитФормы(ДокОб,"Объект");	
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеМедикаментозногоНазначенияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		КолонкиСпискаНазначений = СтрРазделить(ПоляНазначенийМедикаментов(),",");
		ДанныеСтроки = Элементы.Назначения.ТекущиеДанные;
		Для Каждого ИмяПоля Из КолонкиСпискаНазначений Цикл
			Если Результат.Свойство(ИмяПоля) Тогда
				ДанныеСтроки[ИмяПоля] = Результат[ИмяПоля];
			КонецЕсли;
		КонецЦикла;
		РассчитатьДозыСтрокиМедикаментов(ДанныеСтроки);
		Модифицированность = Истина;
		ПодключитьОбработчикОжидания("ЗакончитьРедактированиеСтрокиНазначения", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакончитьРедактированиеСтрокиНазначения();
	Элементы.Назначения.ЗакончитьРедактированиеСтроки(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьВидимость()
	
	// Видимы, если Регламентированный стандарт
	Элементы.НоменклатураМедицинскихУслуг.Видимость		= Объект.ВидСтандарта;
	Элементы.Частота.Видимость							= Объект.ВидСтандарта;
	Элементы.НаименованиеОфициальное.Видимость			= Объект.ВидСтандарта;
	Элементы.КодНМУ.Видимость							= Объект.ВидСтандарта;
	Элементы.ДатаОбновления.Видимость					= Объект.ВидСтандарта;
	Элементы.РучноеРедактирование.Видимость				= Объект.ВидСтандарта;
	Элементы.Назначение.Видимость						= Объект.ВидСтандарта;
	Элементы.ТипРегламентированногоСтандарта.Видимость	= Объект.ВидСтандарта;
	
	// Видимы, если Внутренний стандарт
	Элементы.КнопкаДобавитьМедикаменты.Видимость = Не Объект.ВидСтандарта;
	Элементы.ПодставитьВрачаИзПриема.Видимость	 = Не Объект.ВидСтандарта;
	Элементы.СмещениеОтДатыПриема.Видимость		 = Не Объект.ВидСтандарта;
	Элементы.Сотрудник.Видимость				 = Не Объект.ВидСтандарта;
	Элементы.НазначениеВнутр.Видимость			 = Не Объект.ВидСтандарта;
	
	Элементы.НазначенияКолонкиМедикамента.Видимость = Не Объект.ВидСтандарта;
	
	Если ЗначениеЗаполнено(Объект.ДатаОбновления) Тогда
		Элементы.ВидСтандарта.Доступность = Ложь;
	КонецЕсли;
	
	// Запрет редактирования реквизитов Регламентированного стандарта, если не включено ручное редактирование.
	Для Каждого Колонка Из Элементы.Назначения.ПодчиненныеЭлементы Цикл
		Если Колонка.Имя <> "Назначение" Тогда
			Колонка.ТолькоПросмотр = Не Объект.РучноеРедактирование И Объект.ВидСтандарта;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементКоманднойПанели Из Элементы.Назначения.КоманднаяПанель.ПодчиненныеЭлементы Цикл
		ЭлементКоманднойПанели.Доступность = (Объект.РучноеРедактирование Или Не Объект.ВидСтандарта);
	КонецЦикла;
	
	Элементы.Назначения.ИзменятьПорядокСтрок = Объект.РучноеРедактирование Или Не Объект.ВидСтандарта;
	Элементы.Назначения.ИзменятьСоставСтрок	 = Объект.РучноеРедактирование Или Не Объект.ВидСтандарта;
	
	Элементы.ПараметрыРегламентированногоСтандарта.ТолькоПросмотр = Не Объект.РучноеРедактирование;
	Элементы.НаименованиеОфициальное.ТолькоПросмотр = Не Объект.РучноеРедактирование;
	
	Элементы.СвязанныеДиагнозы.ТолькоПросмотр = Объект.ВидСтандарта И Не Объект.РучноеРедактирование;
	Элементы.ТипРегламентированногоСтандарта.ТолькоПросмотр = Не Объект.РучноеРедактирование;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаИзменениеРучноеРедактирование(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		УстановитьДоступностьВидимость();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РассчитатьДозыСтрокиМедикаментов(СтрокаНазначения)
	
	СтрокаНазначения.СуточнаяДоза = СтрокаНазначения.РазоваяДоза * СтрокаНазначения.ПриемовВДень;
	СтрокаНазначения.КурсоваяДоза = СтрокаНазначения.РазоваяДоза * СтрокаНазначения.Количество;
	
КонецПроцедуры

&НаКлиенте
Функция ПоляНазначенийМедикаментов()
	
	Возврат "Назначение,ЕдиницаИзмерения,Количество,РазоваяДоза,ПриемовВДень,Комментарий,СмещениеОтДатыПриема,ПодставитьВрачаИзПриема,Сотрудник";
	
КонецФункции

#КонецОбласти