#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.ВидШаблона = Перечисления.ВидыШаблонов.ТабличныйДокумент;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТабДок = РеквизитФормыВЗначение("Объект").ТабличныйДокумент.Получить();
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ТабДок = Параметры.ЗначениеКопирования.ТабличныйДокумент.Получить();
	КонецЕсли;
	Если ТипЗнч(ТабДок) = Тип("ТабличныйДокумент") Тогда
		ТабличныйДокумент = ТабДок;
	КонецЕсли;
	
	ТабличныйДокумент.Макет = Истина;
	
	// СЭМД
	ЗаполнитьКешПараметров();
	ИспользуетсяИнтеграцияРЭМД = ИнтеграцияЕГИСЗСерверПовтИсп.ИспользуетсяИнтеграцияРЭМД();
	Элементы.ВидДокумента.Видимость = ИспользуетсяИнтеграцияРЭМД;
	Элементы.СтраницаСЭМД.Видимость = ИспользуетсяИнтеграцияРЭМД;
	
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(Новый ПараметрВыбора("Отбор.УИДЕГИСЗ", Справочники.РегистрируемыеЭлектронныеМедДокументы.ПолучитьИдентификаторыДоступныеРЭМД(Истина)));
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элементы.ВидДокумента.ПараметрыВыбора = НовыеПараметры;	
	
	ИспользуетсяЭП = ЭЦП_УМЦ_Сервер.ИспользоватьЭлектронныеПодписиЭМК();
	
	мРасположения = Справочники.ШаблоныHTML.РасположенияПодписи(Объект.ВидШаблона);
	Элементы.РасположениеПодписи.СписокВыбора.ЗагрузитьЗначения(мРасположения);
	
	Если Не ЗначениеЗаполнено(Объект.РасположениеПодписи) Тогда
		Объект.РасположениеПодписи = Перечисления.РасположениеПодписи.ПослеДокумента;
	КонецЕсли;
	
	Если Не (ИспользуетсяЭП
			И (Объект.РасположениеПодписи = Перечисления.РасположениеПодписи.ПоЗаданнымКоординатам
				Или Объект.РасположениеПодписи = Перечисления.РасположениеПодписи.ПослеДокумента))
	Тогда
		Элементы.НастроитьРасположениеЭЦП.Видимость = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка)
		И Объект.РолиПодписей.Количество() = 0
	Тогда
		РольПредседателя = Объект.РолиПодписей.Добавить();
		РольПредседателя.Роль = Перечисления.РолиПодписей.РольПредседательМедкомиссии(); // Председатель.
		РольПредседателя.Обязательная = Истина;
		РольПредседателя.РежимНастройкиДоступности = Перечисления.РежимыНастройкиДоступностиРоли.АвторДокумента;
		РольПредседателя.ИдентификаторРоли = Новый УникальныйИдентификатор;
		
		РольМедицинскойОрганизации = Объект.РолиПодписей.Добавить();
		РольМедицинскойОрганизации.Роль = Перечисления.РолиПодписей.МедицинскаяОрганизация;
		РольМедицинскойОрганизации.Обязательная = Истина;
		РольМедицинскойОрганизации.РежимНастройкиДоступности = Перечисления.РежимыНастройкиДоступностиРоли.МедицинскаяОрганизация;
		РольМедицинскойОрганизации.ИдентификаторРоли = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СЭМД
	ВидДокументаПриИзменении(Неопределено);
	ЗаполнитьПредставленияТаблицПараметров();
	ОбновитьФлагиИспользованДляТаблицыLocalid();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	ЭтоСтруктурированныйФорматЭМД = ЗначениеЗаполнено(Объект.ВидДокумента) И ФорматДокументаCDA(Объект.ВидДокумента);
	
	Если ИспользуетсяИнтеграцияРЭМД И Модифицированность И ЭтоСтруктурированныйФорматЭМД Тогда
		
		ТекстОшибки = ИнтеграцияЕГИСЗ_СЭМДКлиент.СформироватьТекстОшибок(ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Объект.СоответствияПараметрам, Объект.СоответствияТаблицамШаблонов, Объект.ВидШаблона);
		Если ЗначениеЗаполнено(ТекстОшибки) Тогда
			СтрокиТекстаВопроса = Новый Массив;
			СтрокиТекстаВопроса.Добавить(НСтр("ru='Обнаружены ошибки при заполнении страницы СЭМД!"));
			СтрокиТекстаВопроса.Добавить(ТекстОшибки);
			СтрокиТекстаВопроса.Добавить(НСтр("ru='Продолжить запись?'"));
			
			Ответ = Вопрос(СтрСоединить(СтрокиТекстаВопроса, Символы.ПС), РежимДиалогаВопрос.ДаНет);
			Отказ = Ответ = КодВозвратаДиалога.Нет;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ТабличныйДокумент = Новый ХранилищеЗначения(ТабличныйДокумент);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьПредставленияТаблицПараметров();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьКешПараметров();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаполнитьИменаПараметров(Команда = Неопределено)
	
	ИменаПараметров = ОбщегоНазначенияКлиентСервер.ПолучитьСписокПараметровТабличногоДокумента(ТабличныйДокумент,,, Ложь);
	
	ПроверятьПоLocalid = ИспользуетсяИнтеграцияРЭМД И ЗначениеЗаполнено(Объект.ВидДокумента);
	
	мОбрИнд = Объект.СоответствияПараметрам.Количество()-1;
	Для Сч = 0 По мОбрИнд Цикл
		СтрокаТЧ = Объект.СоответствияПараметрам[мОбрИнд-Сч];
		Если ИменаПараметров.Найти(СтрокаТЧ.Наименование) = Неопределено
			И Не (ПроверятьПоLocalid И ТаблицаLocalidМакета.НайтиСтроки(Новый Структура("localid", СтрокаТЧ.Наименование)).Количество() > 0 И ЗначениеЗаполнено(СтрокаТЧ.localid))
		Тогда
			Объект.СоответствияПараметрам.Удалить(мОбрИнд-Сч);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ИмяПараметра Из ИменаПараметров Цикл
		Если Объект.СоответствияПараметрам.НайтиСтроки(Новый Структура("Наименование", ИмяПараметра)).Количество() = 0 Тогда
			ПараметрШаблона = Объект.СоответствияПараметрам.Добавить();
			ПараметрШаблона.Наименование = ИмяПараметра;
		КонецЕсли;
	КонецЦикла;
	
	Если ПроверятьПоLocalid Тогда
		ОбновитьФлагиИспользованДляТаблицыLocalid();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРасположениеЭЦП(Команда)
	
	ОповещениеОЗавершенииНастройкиРасположенияЭЦП = Новый ОписаниеОповещения("ЗавершениеНастройкиРасположенияЭЦП", ЭтотОбъект);
	ПараметрыОткрытия = Новый Структура("ТабличныйДокумент, РасположениеПодписи, ПараметрыЭЦПТабличногоШаблона", ТабличныйДокумент, Объект.РасположениеПодписи, Объект.ПараметрыЭЦПТабличногоШаблона);
	ОткрытьФорму("Справочник.ШаблоныHTML.Форма.НастройкаЭЦПТабличногоДокумента", ПараметрыОткрытия, ЭтотОбъект, УникальныйИдентификатор,,, ОповещениеОЗавершенииНастройкиРасположенияЭЦП);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТабличныйДокументПриИзменении(Элемент)
	
	ЗаполнитьИменаПараметров();
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПараметрамПриИзменении(Элемент)
	
	ЭтаФорма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура РасположениеПодписиПриИзменении(Элемент)
	
	Элементы.НастроитьРасположениеЭЦП.Видимость = Объект.РасположениеПодписи = ПредопределенноеЗначение("Перечисление.РасположениеПодписи.ПоЗаданнымКоординатам")
												Или Объект.РасположениеПодписи = ПредопределенноеЗначение("Перечисление.РасположениеПодписи.ПослеДокумента");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗавершениеНастройкиРасположенияЭЦП(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено
		Или Объект.ПараметрыЭЦПТабличногоШаблона = Результат
	Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	Объект.ПараметрыЭЦПТабличногоШаблона = Результат;
	
КонецПроцедуры

#КонецОбласти

#Область СЭМД

#Область ОбработчикиСобытийЭлементовСЭМД

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	
	Если ИспользуетсяИнтеграцияРЭМД И ЗначениеЗаполнено(Объект.ВидДокумента) И ФорматДокументаCDA(Объект.ВидДокумента) Тогда
		Элементы.СтраницаСЭМД.Видимость = Истина;
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		ИнтеграцияЕГИСЗ_СЭМДКлиент.ЗаполнитьТаблицуLocalid(ТаблицаLocalidМакета, Объект.ВидДокумента, Объект.КонстантыCDAДокумента, Элементы);
		ЗаполнитьПредставленияТаблицПараметров();
		ОбновитьФлагиИспользованДляТаблицыLocalid();
	Иначе
		Элементы.СтраницаСЭМД.Видимость = Ложь;
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаLocalidМакетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаLocalidМакетаВыбор(Элементы, ТаблицаLocalidМакета, Объект.СоответствияПараметрам);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТаблицыПриИзмененииПредставления(Элемент)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ПолеТаблицыПриИзмененииПредставления(Элемент, ТаблицаLocalidМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокВыбораLocalid(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ЗаполнитьСписокВыбораLocalid(Элемент, ТаблицаLocalidМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеТаблицыПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ПолеТаблицыПредставлениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка, Объект.СоответствияПараметрам, ТаблицаLocalidМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппирующееПолеПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ГруппирующееПолеПредставлениеНачалоВыбора(Элемент, Объект.СоответствияПараметрам, ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбъединяющееПолеПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ОбъединяющееПолеПредставлениеНачалоВыбора(Элемент, Объект.СоответствияПараметрам, Объект.КонстантыCDAДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура КлассификацияПоляНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.КлассификацияПоляНачалоВыбора(Элемент, СтандартнаяОбработка, ТаблицаLocalidМакета, Объект.СоответствияПараметрам);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантПередУдалением(Элемент, Отказ)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаКонстантПередУдалением(Элемент, ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Объект.СоответствияПараметрам);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантПриИзменении(Элемент)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаLocalidКонстантыПриИзменении(ЭтотОбъект, Объект.КонстантыCDAДокумента, ТаблицаLocalidМакета, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаLocalidМакетаПриАктивизацииСтроки(Элемент)
	
	ОбновитьДоступностьКнопкиДобавленияПараметра();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПриАктивизацииСтроки(Элемент)
	
	ТекДанныеПараметров = Элементы.ТаблицаПараметров.ТекущиеДанные;
	Элементы.ТаблицаПараметровСЭМД_УдалитьПараметр.Доступность = ТекДанныеПараметров <> Неопределено И ЗначениеЗаполнено(ТекДанныеПараметров.localid);
	
КонецПроцедуры

&НаКлиенте
Процедура СоответствияПараметрамПараметрПриИзменении(Элемент)
	
	СтрокаПараметра = Элементы.СоответствияПараметрам.ТекущиеДанные;
	Если СтрокаПараметра <> Неопределено Тогда
		ТипЗначенияПараметра = ПолучитьТипЗначенияПараметра(СтрокаПараметра.Параметр);
		ЗаполнитьЗначенияСвойств(СтрокаПараметра, ТипЗначенияПараметра);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаКонстантЗначениеНачалоВыбора(Элемент, ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Элемент.Родитель.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантЗначениеПриИзменении(Элемент)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаКонстантЗначениеПриИзменении(Объект.КонстантыCDAДокумента, ТаблицаLocalidМакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПараметровПриИзменении(Элемент)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаПараметровПриИзменении(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКонстантЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ТаблицаКонстантЗначениеАвтоПодбор(Элемент, ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Элемент.Родитель.ТекущиеДанные);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандСЭМД

&НаКлиенте
Процедура ДобавитьВКонстантыCDAДокумента(Команда)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ДобавитьВКонстанты(ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьКлассификациюВПолеЭМД(Команда)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.УстановитьКлассификациюВПолеЭМД(Элементы, ТаблицаLocalidМакета, Объект.СоответствияПараметрам, Объект.КонстантыCDAДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьНекорректныеСопоставления(Команда)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ОчиститьНекорректныеСопоставления(ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Объект.СоответствияПараметрам, Объект.СоответствияТаблицамШаблонов, Объект.ВидШаблона);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьОшибкиСЭМД(Команда)
	
	ИнтеграцияЕГИСЗ_СЭМДКлиент.ПроверитьОшибкиСЭМД(ТаблицаLocalidМакета, Объект.КонстантыCDAДокумента, Объект.СоответствияПараметрам, Объект.СоответствияТаблицамШаблонов, Объект.ВидШаблона);
	
КонецПроцедуры

&НаКлиенте
Процедура СЭМД_ДобавитьПараметр(Команда)
	
	СтрокаLocalid = Элементы.ТаблицаLocalidМакета.ТекущиеДанные;
	Если СтрокаLocalid <> Неопределено Тогда
		ДобавитьПараметрПоLocalid(СтрокаLocalid);
	КонецЕсли;
	
	ОбновитьДоступностьКнопкиДобавленияПараметра();
	
КонецПроцедуры

&НаКлиенте
Процедура СЭМД_ДобавитьНедостающиеПараметры(Команда)
	
	ДобавленыНовыеПараметры = Ложь;
	Для Каждого СтрокаLocalid Из ТаблицаLocalidМакета Цикл
		Если СтрокаLocalid.Обязательное И СтрокаLocalid.Использован = 0 Тогда
			ДобавитьПараметрПоLocalid(СтрокаLocalid);
			ДобавленыНовыеПараметры = Истина;
		КонецЕсли;
	КонецЦикла;
	ЗаполнитьПредставленияТаблицПараметров();
	
	Если ДобавленыНовыеПараметры Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.СтраницаСправка;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СЭМД_УдалитьПараметр(Команда)
	
	Если Элементы.ТаблицаПараметров.ТекущиеДанные <> Неопределено Тогда
		ТекущийLocalid = Элементы.ТаблицаПараметров.ТекущиеДанные.localid;
		СтрокаПараметра = Объект.СоответствияПараметрам.НайтиПоИдентификатору(Элементы.ТаблицаПараметров.ТекущаяСтрока);
		Объект.СоответствияПараметрам.Удалить(СтрокаПараметра);
		ИнтеграцияЕГИСЗ_СЭМДКлиент.УстановитьФлагИспользованДляLocalid(ТекущийLocalid, Ложь, ТаблицаLocalidМакета);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункцииСЭМД

&НаСервере
Процедура ЗаполнитьКешПараметров()
	
	Для Каждого СтрокаПараметр Из Объект.СоответствияПараметрам Цикл	
		СтрокаПараметр.ТипЗначения = СтрокаПараметр.Параметр.ТипЗначения;
		СтрокаПараметр.ВидКлассификатора = СтрокаПараметр.Параметр.ВидКлассификатора;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФлагиИспользованДляТаблицыLocalid()
	
	Для каждого СтрокаLocalid Из ТаблицаLocalidМакета Цикл
		ПараметрыОтбора = Новый Структура("localid", СтрокаLocalid.localid);
		ВКонстантах = Объект.КонстантыCDAДокумента.НайтиСтроки(ПараметрыОтбора).Количество();
		ВСопостовлениях = Объект.СоответствияПараметрам.НайтиСтроки(ПараметрыОтбора).Количество();
		СтрокаLocalid.Использован = ВКонстантах + ВСопостовлениях;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПредставленияТаблицПараметров()
	
	ЗаполнитьПредставленияТаблицы(Объект.СоответствияПараметрам);
	ЗаполнитьПредставленияТаблицы(Объект.КонстантыCDAДокумента);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПредставленияТаблицы(ТаблицаПараметров)
	
	Для Каждого СтрокаПараметра Из ТаблицаПараметров Цикл
		СтрокаПараметра.localidПредставление = ИнтеграцияЕГИСЗ_СЭМДКлиент.ПолучитьПредставлениеLocalid(СтрокаПараметра, ТаблицаLocalidМакета);
		ЗаполнитьПредставлениеГруппирующегоПоля(СтрокаПараметра);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПредставлениеГруппирующегоПоля(СтрокаПараметра)
	
	Если СтрокаПараметра.ГруппирующееПоле <> Неопределено Тогда
		Если ТипЗнч(СтрокаПараметра.ГруппирующееПоле) = Тип("Число") Тогда
			СтрокаПараметра.ГруппирующееПолеПредставление = СтрШаблон("Константа №%1", Строка(Объект.КонстантыCDAДокумента[СтрокаПараметра.ГруппирующееПоле].НомерСтроки));
		Иначе
			СтрокаПараметра.ГруппирующееПолеПредставление = "Параметр: " + Строка(СтрокаПараметра.ГруппирующееПоле);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция МожноИспользоватьLocalid(СтрокаLocalid)
	
	Возврат ИнтеграцияЕГИСЗ_СЭМДКлиент.МожноИспользоватьLocalid(СтрокаLocalid, ТаблицаLocalidМакета);
	
КонецФункции

&НаСервереБезКонтекста
Функция ФорматДокументаCDA(ВидДокумента)
	
	Возврат ИнтеграцияЕГИСЗСервер.ПолучитьЗначениеАтрибутаЭлементаКлассификатора(ВидДокумента, "FORMAT") = "2";
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДоступностьКнопкиДобавленияПараметра()
	
	ТекДанные = Элементы.ТаблицаLocalidМакета.ТекущиеДанные;
	ДоступностьДобавленияПараметра = ТекДанные <> Неопределено И (ТекДанные.Использован = 0 Или ТекДанные.Множественное);
	
	Элементы.ТаблицаLocalidМакетаСЭМД_ДобавитьПараметр.Доступность					= ДоступностьДобавленияПараметра;
	Элементы.ТаблицаLocalidМакетаКонтекстноеМенюСЭМД_ДобавитьПараметр.Доступность	= ДоступностьДобавленияПараметра;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПараметрПоLocalid(СтрокаLocalid)
	
	НоваяСтрокаПараметра = Объект.СоответствияПараметрам.Добавить();
	НоваяСтрокаПараметра.Наименование = СтрокаLocalid.localid;
	НоваяСтрокаПараметра.localid = СтрокаLocalid.localid;
	ИнтеграцияЕГИСЗ_СЭМДКлиент.УстановитьФлагИспользованДляLocalid(СтрокаLocalid.localid, Истина, ТаблицаLocalidМакета);
	НоваяСтрокаПараметра.localidПредставление = ИнтеграцияЕГИСЗ_СЭМДКлиент.ПолучитьПредставлениеLocalid(СтрокаLocalid, ТаблицаLocalidМакета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипЗначенияПараметра(ПараметрСтрокиПараметра)
	
	Возврат Новый Структура("ТипЗначения, ВидКлассификатора", ПараметрСтрокиПараметра.ТипЗначения, ПараметрСтрокиПараметра.ВидКлассификатора)
	
КонецФункции

#КонецОбласти

#КонецОбласти