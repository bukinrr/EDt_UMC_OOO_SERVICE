#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписокДанныхНоменклатурНаСервере();
			
	СоздаватьНовуюНоменклатуру = Истина;
	ОбновлятьРеквизитыНоменклатурыПриПовторнойЗагрузке = Истина;
	ИзменятьГруппуНоменклатурыПриПовторнойЗагрузке = Истина;
	
	Лаборатории = Справочники.Лаборатории.Выбрать();
	Пока Лаборатории.Следующий() Цикл
		Если Лаборатории.ВнешняяЛаборатория = Перечисления.ВнешниеЛаборатории.Invitro Тогда
			Лаборатория = Лаборатории.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.Подразделение.СписокВыбора.ЗагрузитьЗначения(invИнвитроСервер.ВернутьМсПодразделенийСНастройками());
	Если Элементы.Подразделение.СписокВыбора.Количество() > 0 Тогда
		Подразделение = Элементы.Подразделение.СписокВыбора[0].Значение;
		Если Номенклатура.ПолучитьЭлементы().Количество() = 0 Тогда
			Элементы.Страницы.ТекущаяСтраница = Элементы.РаботаСоСправочникамиИнвитро;
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ни для одного подразделения не заданы настройки интеграции с Инвитро!'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НадписьКодыПродуктовCOVID19Нажатие(Элемент)

	ОткрытьФорму("Справочник.invПродукт.Форма.КодыПродуктовCOVID19",, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
#Область РаботаСТЧПродуктов
&НаКлиенте
Процедура СнятьФлажки(Команда)
	УстановитьЗначениеФлажков(Ложь);	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	УстановитьЗначениеФлажков(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПометкаПриИзменении(Элемент)
	
	ТекущаяСтрока = Номенклатура.НайтиПоИдентификатору(Элементы.Номенклатура.ТекущаяСтрока);
	УстановитьЗначениеФлажков(ТекущаяСтрока.Пометка, ТекущаяСтрока.ПолучитьЭлементы())
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеФлажков(ЗначениеУстанавливаемойПометки, СтрокиДерева = Неопределено)
	Попытка
		Если СтрокиДерева = Неопределено Тогда
			СтрокиДерева = Номенклатура.ПолучитьЭлементы();
		КонецЕсли;		
		Для Каждого Строка Из СтрокиДерева Цикл
			// Вызвать реккурсию
			Строка.Пометка = ЗначениеУстанавливаемойПометки;
			УстановитьЗначениеФлажков(ЗначениеУстанавливаемойПометки,Строка.ПолучитьЭлементы());
		КонецЦикла;
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось!'"));
	КонецПопытки	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНоменклатуру(Команда)
	
	Если ПоляЗаполнены() Тогда
		ДобавитьНоменклатуруНаСервере();
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не все поля заполнены'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПоляЗаполнены()
	  Возврат ЗначениеЗаполнено(Лаборатория) И ЗначениеЗаполнено(ГруппаЗагрузкиНоменклатуры) И ЗначениеЗаполнено(СпециализацияНоменклатуры)
КонецФункции

&НаСервере
Процедура ДобавитьНоменклатуруНаСервере()
	
	НачатьТранзакцию();
	Для Каждого СтрокаДерева Из Номенклатура.ПолучитьЭлементы() Цикл
		// Отдельная процедура для выполнения всего переноса в транзакции.
		ДобавитьНоменклатуруНаСервереПодстроки(СтрокаДерева);
	КонецЦикла;
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНоменклатуруНаСервереПодстроки(СтрокаДерева = Неопределено)
	
	СтрокиДерева = СтрокаДерева.ПолучитьЭлементы();
	Если СтрокиДерева.Количество() = 0 Тогда 
		ЭтоГруппа = Ложь;
	Иначе
		ЭтоГруппа = Истина;
	КонецЕсли;
	
	Если СтрокаДерева.Пометка Тогда
		Если ЗначениеЗаполнено(СтрокаДерева.Номенклатура) Тогда 
			НоменклатураОбъект = СтрокаДерева.Номенклатура.ПолучитьОбъект();
		ИначеЕсли СоздаватьНовуюНоменклатуру Тогда
			НоменклатураОбъект = ?(ЭтоГруппа,Справочники.Номенклатура.СоздатьГруппу(),Справочники.Номенклатура.СоздатьЭлемент());
		КонецЕсли;	
		
		Если НоменклатураОбъект <> Неопределено Тогда
			// Заполним общие реквизиты для группы и элемента.
			Если НоменклатураОбъект.Ссылка.Пустая()
				Или ОбновлятьРеквизитыНоменклатурыПриПовторнойЗагрузке
			Тогда
				НаименованиеНоменклатуры = СтрокаДерева.Продукт.ПолноеНаименование;
				Если ПустаяСтрока(НаименованиеНоменклатуры) Тогда
					НаименованиеНоменклатуры = Строка(СтрокаДерева.Продукт);
				КонецЕсли;
				НоменклатураОбъект.Наименование = НаименованиеНоменклатуры;
			КонецЕсли;
			
			РодительПродукт = СтрокаДерева.ПолучитьРодителя();
			ЭтоВерхнийУровень = СтрокаДерева.ПолучитьРодителя() = Неопределено;
			Если ЭтоВерхнийУровень Тогда
				РодительНоменклатура = ГруппаЗагрузкиНоменклатуры;
			Иначе
				РодительНоменклатура = ?(СтрокаДерева.ПолучитьРодителя().Номенклатура = Неопределено, ГруппаЗагрузкиНоменклатуры, СтрокаДерева.ПолучитьРодителя().Номенклатура);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаДерева.Номенклатура) Или ИзменятьГруппуНоменклатурыПриПовторнойЗагрузке Тогда
				НоменклатураОбъект.Родитель = invИнвитроСервер.ПолучитьГруппуНоменклатурыАнализа(РодительПродукт, РодительНоменклатура, СтрокаДерева.Продукт, ИзменятьГруппуНоменклатурыПриПовторнойЗагрузке);	
			КонецЕсли;
			
			Если Не ЭтоГруппа Тогда
				Если ОбновлятьРеквизитыНоменклатурыПриПовторнойЗагрузке
					Или НоменклатураОбъект.Ссылка.Пустая()
				Тогда
					НоменклатураОбъект.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Услуга;
					НоменклатураОбъект.Анализ = Истина;
					НоменклатураОбъект.НаименованиеПолное	= НоменклатураОбъект.Наименование;
					НоменклатураОбъект.Комментарий			= СтрокаДерева.Продукт.Преаналитика;	
					НоменклатураОбъект.КатегорияВыработки	= СпециализацияНоменклатуры;
					НоменклатураОбъект.Артикул 				= СтрокаДерева.КодПродукта;
				КонецЕсли;
			КонецЕсли;
			
			НоменклатураОбъект.Записать();
			invИнвитроСервер.ЗаписатьСоответствиеНоменклатурыАнализа(НоменклатураОбъект.Ссылка,СтрокаДерева.Продукт);
			СтрокаДерева.Номенклатура = НоменклатураОбъект.Ссылка;
			Если Не ЭтоГруппа Тогда
				Запись = РегистрыСведений.НоменклатураАнализов.СоздатьМенеджерЗаписи();
				Запись.Номенклатура 			= СтрокаДерева.Номенклатура;
				Запись.Лаборатория	 			= Лаборатория;
				Запись.ID 						= СтрокаДерева.КодПродукта;
				Запись.Записать();
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;

	// Обойдём подчинённые элементы.
	Для Каждого Строка Из СтрокиДерева Цикл
		ДобавитьНоменклатуруНаСервереПодстроки(Строка)
	КонецЦикла;
	
КонецПроцедуры
	
#КонецОбласти 

#Область УстаревшиеПродукты
&НаКлиенте
Процедура УстановитьЗначениеФлажковУстаревшие(ЗначениеУстанавливаемойПометки)
	Для каждого УстаревшийПродукт Из НоменклатураУстаревшая Цикл
		УстаревшийПродукт.Пометка =  ЗначениеУстанавливаемойПометки;
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиУстаревшие(Команда)
	УстановитьЗначениеФлажковУстаревшие(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажкиУстаревшие(Команда)
	УстановитьЗначениеФлажковУстаревшие(Истина);
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПометитьНаУдалениеНаСервере(МсНоменклатура, Лаборатория)
	Возврат invИнвитроСервер.ПометитьНаУдалениеУстаревшуюНоменклатура(МсНоменклатура, Лаборатория);		
КонецФункции

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	МсНоменклатура = Новый Массив;
	Для каждого УстаревшаяНоменклатура Из НоменклатураУстаревшая Цикл
		Если УстаревшаяНоменклатура.Пометка Тогда
			МсНоменклатура.Добавить(УстаревшаяНоменклатура.Номенклатура);
		КонецЕсли;
	КонецЦикла;	 
	
	МсНеудаленные = ПометитьНаУдалениеНаСервере(МсНоменклатура, Лаборатория);
	НоменклатураУстаревшая.Очистить();
	Для каждого НеудаленнаяНоменклатура Из МсНеудаленные Цикл
	  НовСтр = НоменклатураУстаревшая.Добавить();
	  НовСтр.Пометка = Истина;
	  НовСтр.Номенклатура = НеудаленнаяНоменклатура;
	КонецЦикла;
	
	Если НоменклатураУстаревшая.Количество() = 0 Тогда
		Элементы.УстаревшиеПродукты.Видимость = Ложь;
		Элементы.СтраницыПродукты.ТекущаяСтраница = Элементы.Продукты;
	КонецЕсли;

КонецПроцедуры
	
#КонецОбласти 


// Очистка информации Инвитро
&НаКлиенте
Процедура ОчиститьСправочники(Команда)
	invИнвитроСервер.ОчиститьСправочникиНаСервере();
КонецПроцедуры

// Получение информации Инвитро.
&НаКлиенте
Процедура ПолучитьПродуктыИДопИнформацию(Команда)
	Если ЗначениеЗаполнено(Подразделение) Тогда
		invИнвитроСервер.ПолучитьДопИнформациюИПродуктыНаСервере(Подразделение);	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Укажите подразделение!'"));
	КонецЕсли;
	ОбновитьСписокДанныхНоменклатурНаСервере();
	Элементы.Страницы.ТекущаяСтраница = Элементы.ЗагрузкаНоменклатуры;
КонецПроцедуры

Процедура ОбновитьСписокДанныхНоменклатурНаСервере()
	ДанныеНомен = invИнвитроСервер.ПолучитьДанныеНоменклатурыАнализов();
	ЗначениеВРеквизитФормы(ДанныеНомен.ДеревоНоменклатуры,"Номенклатура");
		
	НоменклатураУстаревшая.Загрузить(ДанныеНомен.Устаревшие);
	Если НоменклатураУстаревшая.Количество() > 0 Тогда
		Элементы.СтраницыПродукты.ТекущаяСтраница = Элементы.УстаревшиеПродукты;
	Иначе
		Элементы.УстаревшиеПродукты.Видимость = Ложь;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СохранитьЦены(Команда)
	
	Если НЕ ЗначениеЗаполнено(Подразделение) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Заполните подразделение!'"),, "Подразделение");
		Возврат;
	КонецЕсли;
	
	ДокументУстановкиЦен = invИнвитроСервер.ОбновитьЦеныПродуктов(Подразделение);
	
	Если ДокументУстановкиЦен <> Неопределено Тогда
		ПоказатьЗначение(Неопределено, ДокументУстановкиЦен);
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти