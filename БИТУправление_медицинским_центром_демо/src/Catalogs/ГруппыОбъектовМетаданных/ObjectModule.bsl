#Область ПрограммныйИнтерфейс

// Процедура Дополнить
Процедура Дополнить() Экспорт
	ТекущиеНастройки = Новый Массив;
	Для каждого Стр Из Состав Цикл
		ТекущиеНастройки.Добавить(Стр.ИмяМетаданных);	
	КонецЦикла;
	
	Исключения = Новый Массив;
	
	НовыеНастройки = Новый Массив;
	
	Для каждого СправочникМетаданные Из Метаданные.Справочники Цикл
		НовыеНастройки.Добавить(СправочникМетаданные.ПолноеИмя());	
	КонецЦикла;
	Для каждого ДокументМетаданные Из Метаданные.Документы Цикл
		НовыеНастройки.Добавить(ДокументМетаданные.ПолноеИмя());
	КонецЦикла;
	Для каждого РегистрСведенийМетаданные Из Метаданные.РегистрыСведений Цикл
		Если Строка(РегистрСведенийМетаданные.РежимЗаписи) = "Независимый" Тогда
			НовыеНастройки.Добавить(РегистрСведенийМетаданные.ПолноеИмя());	
		КонецЕсли;
	КонецЦикла;
	Для каждого ПланВидовХарактеристикМетаданные Из Метаданные.ПланыВидовХарактеристик Цикл
		НовыеНастройки.Добавить(ПланВидовХарактеристикМетаданные.ПолноеИмя());
	КонецЦикла;
	Для каждого ПланСчетовМетаданные Из Метаданные.ПланыСчетов Цикл
		НовыеНастройки.Добавить(ПланСчетовМетаданные.ПолноеИмя());
	КонецЦикла;
	Для каждого ПланВидовРасчетаМетаданные Из Метаданные.ПланыВидовРасчета Цикл
		НовыеНастройки.Добавить(ПланВидовРасчетаМетаданные.ПолноеИмя());
	КонецЦикла;
	
	Для каждого Элем Из ТекущиеНастройки Цикл
		Если НовыеНастройки.Найти(Элем) = Неопределено Тогда
			СтрТаб = Состав.Найти(Элем, "ИмяМетаданных");
			Если СтрТаб <> Неопределено Тогда
				Состав.Удалить(СтрТаб);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Элем Из НовыеНастройки Цикл
		Если ТекущиеНастройки.Найти(Элем) = Неопределено Тогда
			НовСтр = Состав.Добавить();
			НовСтр.ИмяМетаданных = Элем;
		КонецЕсли;
	КонецЦикла;
	Состав.Сортировать("ИмяМетаданных");
КонецПроцедуры
#КонецОбласти