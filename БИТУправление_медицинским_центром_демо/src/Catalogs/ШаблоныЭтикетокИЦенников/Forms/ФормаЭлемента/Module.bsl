#Область ОписаниеПеременных
&НаКлиенте
Перем мИмяПараметраШтрихкод;

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнение доступных полей
	СхемаКомпоновкиДанных = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет("ПоляШаблонаНовый");
	АдресВХранилище = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор);
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресВХранилище));
	
	СтруктураШаблона = СтруктураШаблона();
	
	Если СтруктураШаблона <> Неопределено Тогда
		// Загрузка шаблона.
		СтруктураШаблона.Свойство("РедакторТабличныйДокумент", ПолеТабличногоДокумента);
		СтруктураШаблона.Свойство("ТипКода"                  , ТипКода);
		СтруктураШаблона.Свойство("ОтображатьТекст"          , ОтображатьТекст);
		СтруктураШаблона.Свойство("РазмерШрифта"             , РазмерШрифта);
		СтруктураШаблона.Свойство("УголПоворота"             , УголПоворота);
	Иначе
		// Создание нового шаблона.
		ПолеТабличногоДокумента = Новый ТабличныйДокумент;
		
		ПолеТабличногоДокумента.ПолеСверху = 0;
		ПолеТабличногоДокумента.ПолеСлева = 0;
		ПолеТабличногоДокумента.ПолеСнизу = 0;
		ПолеТабличногоДокумента.ПолеСправа = 0;
		ПолеТабличногоДокумента.АвтоМасштаб = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мИмяПараметраШтрихкод = ИмяПараметраШтрихкод();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если (ПолеТабличногоДокумента.ВыделенныеОбласти[0].Лево <> 0 И ПолеТабличногоДокумента.ВыделенныеОбласти[0].Верх <> 0)
		И ПолеТабличногоДокумента.ВыделенныеОбласти.Количество() = 1
		И ТипЗнч(ПолеТабличногоДокумента.ВыделенныеОбласти[0]) = Тип("ОбластьЯчеекТабличногоДокумента")
	Тогда
		ПолеТабличногоДокумента.ОбластьПечати = ПолеТабличногоДокумента.Область(1,1,ПолеТабличногоДокумента.ВысотаТаблицы,ПолеТабличногоДокумента.ШиринаТаблицы);
	КонецЕсли;
	
	Если ПолеТабличногоДокумента.ОбластьПечати = Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Не установлена область печати'"), ЭтаФорма, "ПолеТабличногоДокумента",,Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ПолеТабличногоДокумента.ОбластьПечати = Неопределено Тогда
		ТекущийОбъект.Шаблон = Неопределено;
	Иначе
		ТекущийОбъект.Шаблон = Новый ХранилищеЗначения(СтруктураМакетаШаблона());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ВыбратьДоступнуюСтрокуВШаблон(ВыбраннаяСтрока)

	// Перед началом добавления необходимо выделить область в табличном документе.
	Если ТипЗнч(ПолеТабличногоДокумента.ТекущаяОбласть) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Для переноса поля шаблона нужно выделить ячейку или область ячеек!'"));
		Возврат;
	Иначе
		ТекущаяОбласть = ПолеТабличногоДокумента.ТекущаяОбласть;
		ОбъединитьОбластьЯчеекШаблонаСервер(ТекущаяОбласть.Имя);
	КонецЕсли;

	// Подготовка данных.
	ИмяПоляВШаблоне = Строка(КомпоновщикНастроек.Настройки.ДоступныеПоляПорядка.ПолучитьОбъектПоИдентификатору(ВыбраннаяСтрока).Поле);
	
	// Размещение поля в шаблоне.
	Если ИмяПоляВШаблоне = мИмяПараметраШтрихкод Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ТекущаяОбласть", ТекущаяОбласть);
			ДополнительныеПараметры.Вставить("ИмяПоляВШаблоне", ИмяПоляВШаблоне);
			Ответ = Вопрос(НСтр("ru = 'Добавить штрихкод, как картинку?'"),РежимДиалогаВопрос.ДаНет,0);
			ОповещениеДобавитьШтрихкод (Ответ, ДополнительныеПараметры);
		
	Иначе
		
		ТекущаяОбласть.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон;
		ТекущаяОбласть.Текст = ТекущаяОбласть.Текст + "["+ИмяПоляВШаблоне+"]";
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьВШаблонДоступнуюСтроку(Команда)
	ТекущаяСтрока = Элементы.ДоступныеПоля.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ВыбратьДоступнуюСтрокуВШаблон(ТекущаяСтрока);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбъединитьОбластьЯчеекШаблона(Команда)
	
	Если ПолеТабличногоДокумента.ВыделенныеОбласти.Количество() = 1
		И ТипЗнч(ПолеТабличногоДокумента.ВыделенныеОбласти[0]) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		
		ТекущаяОбласть = ПолеТабличногоДокумента.ТекущаяОбласть;
		ОбъединитьОбластьЯчеекШаблонаСервер(ТекущаяОбласть.Имя);
		
	Иначе
		
		ОчиститьСообщения();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Некорректная область!'");
		Сообщение.Поле = "ПолеТабличногоДокумента";
		Сообщение.Сообщить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазъединитьОбластьЯчеекШаблона(Команда)
		Если ПолеТабличногоДокумента.ВыделенныеОбласти.Количество() = 1
		И ТипЗнч(ПолеТабличногоДокумента.ВыделенныеОбласти[0]) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		
		ТекущаяОбласть = ПолеТабличногоДокумента.ТекущаяОбласть;
		РазъединитьОбластьЯчеекШаблонаСервер(ТекущаяОбласть.Имя);
		
	Иначе
		
		ОчиститьСообщения();
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Некорректная область!'");
		Сообщение.Поле = "ПолеТабличногоДокумента";
		Сообщение.Сообщить();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДоступныеПоляВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
		
	Если ЭтаФорма.ТолькоПросмотр Тогда
		Возврат;
	КонецЕсли;

	Модифицированность = Истина;
	ВыбратьДоступнуюСтрокуВШаблон(ВыбраннаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьШаблонЭтикеткиПоУмолчанию(Команда)
	
	Ответ = Вопрос(НСтр("ru = 'Редактируемый шаблон будет заменен на шаблон по умолчанию, продолжить?'"), РежимДиалогаВопрос.ДаНет, 0);
	ОповещениеЗаполнитьШаблонЭтикеткиПоУмолчанию(Ответ, ДополнительныйРежимОтображения)

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьШаблонЦенникаПоУмолчанию(Команда)
	Ответ = Вопрос(НСтр("ru = 'Редактируемый шаблон будет заменен на шаблон по умолчанию, продолжить?'"), РежимДиалогаВопрос.ДаНет);
	ОповещениеЗаполнитьШаблонЦенникаПоУмолчанию(Ответ, ДополнительныйРежимОтображения)

КонецПроцедуры

&НаКлиенте
Процедура ИмпортироватьШаблонИзФайла(Команда)
	
	Ответ = Вопрос(НСтр("ru = 'Текущий шаблон будет потерян. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	ОповещениеИмпортироватьШаблонИзФайла(Ответ, Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭкспортШаблонаВФайл(Команда)
	
	Режим = РежимДиалогаВыбораФайла.Сохранение;
	ДиалогСохраненияФайла = Новый ДиалогВыбораФайла(Режим);
	
	ДиалогСохраненияФайла.Заголовок = "Сохранить шаблон";
	ДиалогСохраненияФайла.ПолноеИмяФайла = "";
	ДиалогСохраненияФайла.ПредварительныйПросмотр = Ложь;
	ДиалогСохраненияФайла.Фильтр = "Шаблоны MXL|*.mxl";
	
	Если ДиалогСохраненияФайла.Выбрать() Тогда
		
		ЭкспортШаблонаВФайлСервер(ДиалогСохраненияФайла.ПолноеИмяФайла);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеЗаполнитьШаблонЭтикеткиПоУмолчанию(Результат, ДополнительныеПараметры) 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоместитьВТабличныйДокументШаблонПоУмолчанию("ЭталонныйМакетЭтикетка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеЗаполнитьШаблонЦенникаПоУмолчанию(Результат, ДополнительныеПараметры) 
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ПоместитьВТабличныйДокументШаблонПоУмолчанию("ЭталонныйМакетЦенник");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеИмпортироватьШаблонИзФайла(Ответ, ДополнительныеПараметры) 
	
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	
	ДиалогОткрытияФайла.Заголовок = "Открыть шаблон";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Ложь;
	ДиалогОткрытияФайла.Фильтр = "Шаблоны MXL|*.mxl";
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ИмпортироватьШаблонИзФайлаСервер(ДиалогОткрытияФайла.ПолноеИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеДобавитьШтрихкод(Ответ, ДополнительныеПараметры) 
	
	ТекущаяОбласть = ДополнительныеПараметры.ТекущаяОбласть;
	ИмяПоляВШаблоне = ДополнительныеПараметры.ИмяПоляВШаблоне;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ВставитьВШаблонРисунокШтрихкода(ТекущаяОбласть.Имя);
		
	Иначе
		
		ТекущаяОбласть.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон;
		ТекущаяОбласть.Текст = ТекущаяОбласть.Текст + "["+ИмяПоляВШаблоне+"]";
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СтруктураШаблона()
	
	ШаблонОбъекта = РеквизитФормыВЗначение("Объект").Шаблон.Получить();
	СтруктураШаблона = Неопределено;
	
	Если ТипЗнч(ШаблонОбъекта) = Тип("Структура") Тогда
		СтруктураШаблона = ШаблонОбъекта;
	Иначе
		ЗначениеКопирования = Неопределено;
		Параметры.Свойство("ЗначениеКопирования", ЗначениеКопирования);
		Если ЗначениеКопирования <> Неопределено Тогда
			СтруктураШаблона = ЗначениеКопирования.Шаблон.Получить();
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураШаблона;
	
КонецФункции

&НаСервере
Функция СтруктураМакетаШаблона()
	
	Возврат Справочники.ШаблоныЭтикетокИЦенников.СтруктураМакетаШаблона(ЭтаФорма);
	
КонецФункции

&НаСервере
Процедура ВставитьВШаблонРисунокШтрихкода(ИмяТекущейОбласти)
	
	// Получим рисунок штрихкода из дополнительного макета.
	МакетШтрихкода = Новый Картинка(Справочники.ШаблоныЭтикетокИЦенников.ПолучитьМакет("КартинкаШтрихкода"));
	
	РисунокШтрихкода = ПолеТабличногоДокумента.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка);
	Индекс = ПолеТабличногоДокумента.Рисунки.Индекс(РисунокШтрихкода);
	ПолеТабличногоДокумента.Рисунки[Индекс].Картинка = МакетШтрихкода;
	ПолеТабличногоДокумента.Рисунки[Индекс].Имя = ИмяПараметраШтрихкод()+СтрЗаменить(Новый УникальныйИдентификатор,"-","_");
	ПолеТабличногоДокумента.Рисунки[Индекс].РазмерКартинки = РазмерКартинки.РеальныйРазмер;
	ПолеТабличногоДокумента.Рисунки[Индекс].Расположить(ПолеТабличногоДокумента.Область(ИмяТекущейОбласти));
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИмяПараметраШтрихкод()
	
	Возврат Справочники.ШаблоныЭтикетокИЦенников.ИмяПараметраШтрихкод();
	
КонецФункции

&НаСервере
Процедура ОбъединитьОбластьЯчеекШаблонаСервер(ИмяОбласти)
	
	Область = ПолеТабличногоДокумента.Область(ИмяОбласти);
	Область.Объединить();
	
КонецПроцедуры

&НаСервере
Процедура РазъединитьОбластьЯчеекШаблонаСервер(ИмяОбласти)
	
	Область = ПолеТабличногоДокумента.Область(ИмяОбласти);
	Область.Разъединить();
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьВТабличныйДокументШаблонПоУмолчанию(ИмяШаблона)
	
	ШаблонПоУмолчанию = Обработки.ПечатьЭтикетокИЦенников.ПолучитьМакет(ИмяШаблона);
	
	ПолеТабличногоДокумента = ШаблонПоУмолчанию;
	
КонецПроцедуры

&НаСервере
Процедура ИмпортироватьШаблонИзФайлаСервер(ИмяФайла)
	
	ПолеТабличногоДокумента.Очистить();
	ПолеТабличногоДокумента.Прочитать(ИмяФайла);
	
КонецПроцедуры

&НаКлиенте
// Процедура ЭкспортШаблонаВФайлСервер.
//
// Параметры:
//  ИмяФайла - Строка
//
Процедура ЭкспортШаблонаВФайлСервер(ИмяФайла)
	
	ПолеТабличногоДокумента.Записать(ИмяФайла);
	
КонецПроцедуры

#КонецОбласти


