#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Заполнение дерева встроенных образцов параметров.
	ТаблицаОбразцов = Новый ТаблицаЗначений;
	ТаблицаОбразцов.Колонки.Добавить("ИмяПараметра", Новый ОписаниеТипов("Строка"));
	ТаблицаОбразцов.Колонки.Добавить("Алгоритм",	 Новый ОписаниеТипов("Строка"));
	ТаблицаОбразцов.Колонки.Добавить("Описание",	 Новый ОписаниеТипов("Строка"));
	ТаблицаОбразцов.Колонки.Добавить("Группа",		 Новый ОписаниеТипов("Строка"));
	ТаблицаОбразцов.Колонки.Добавить("Группа2ур",	 Новый ОписаниеТипов("Строка"));
	
	ТабДокОбразцы = Справочники.ШаблоныПечати.ПолучитьМакет("ОбразцыПараметровШаблонаПечати");
	Для Сч = 1 По ТабДокОбразцы.ВысотаТаблицы Цикл
		
		ИмяПараметра = ТабДокОбразцы.Область(Сч, 1, Сч, 1).Текст;
		Если ПустаяСтрока(ИмяПараметра) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаТЗ = ТаблицаОбразцов.Добавить();
		СтрокаТЗ.ИмяПараметра = ИмяПараметра;
		СтрокаТЗ.Алгоритм	  = ТабДокОбразцы.Область(Сч, 2).Текст;
		СтрокаТЗ.Описание	  = ТабДокОбразцы.Область(Сч, 3).Текст;
		ТабДокГруппа		  = ТабДокОбразцы.Область(Сч, 4).Текст;
		
		Группы = СтрРазделить(ТабДокГруппа, ".");
		СтрокаТЗ.Группа = СокрЛП(Группы[0]);
		Если Группы.Количество() > 1 Тогда
			СтрокаТЗ.Группа2ур = СокрЛП(Группы[1]);
		КонецЕсли;
		
	КонецЦикла;
	
	ДеревоОбразцов = ОбщегоНазначенияСервер.ТаблицуЗначенийВДеревоЗначений(ТаблицаОбразцов, "Группа, Группа2Ур", Истина);
	// Перенос трёхуровневого дерева в реквизит формы.
	Для Каждого СтрокаУр1 Из ДеревоОбразцов.Строки Цикл
		СтрокаФормыУр1 = ОбразцыПараметров.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаФормыУр1, СтрокаУр1);
		СтрокаФормыУр1.ЭтоГруппа = Не ЗначениеЗаполнено(СтрокаФормыУр1.ИмяПараметра);
		
		Для Каждого СтрокаУр2 Из СтрокаУр1.Строки Цикл
			СтрокаФормыУр2 = СтрокаФормыУр1.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаФормыУр2, СтрокаУр2);
			СтрокаФормыУр2.Группа = СтрокаФормыУр2.Группа2Ур;
			СтрокаФормыУр2.ЭтоГруппа = Не ЗначениеЗаполнено(СтрокаФормыУр2.ИмяПараметра);
			
			Для Каждого СтрокаУр3 Из СтрокаУр2.Строки Цикл
				ЗаполнитьЗначенияСвойств(СтрокаФормыУр2.ПолучитьЭлементы().Добавить(), СтрокаУр3);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда = Неопределено)
	
	ТекущиеДанные = Элементы.СписокПараметров.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И ЗначениеЗаполнено(ТекущиеДанные.ИмяПараметра)
	Тогда
		РезультатВыбора = Новый Структура;
		РезультатВыбора.Вставить("ИмяПараметра", ТекущиеДанные.ИмяПараметра);
		РезультатВыбора.Вставить("Алгоритм",	 ТекущиеДанные.Алгоритм);
		РезультатВыбора.Вставить("Описание",	 ТекущиеДанные.Описание);
		
		ЭтаФорма.Закрыть(РезультатВыбора);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СписокПараметровВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Выбрать();
КонецПроцедуры

&НаКлиенте
Процедура АлгоритмОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Алгоритм = Элементы.СписокПараметров.ТекущиеДанные.Алгоритм;
	Если ЗначениеЗаполнено(Алгоритм) Тогда
		ПараметрыФормы = Новый Структура("Алгоритм, ТолькоПросмотр", Алгоритм, Истина);
		ОткрытьФорму("Справочник.ШаблоныПечати.Форма.ЗаполнениеАлгоритмаПараметраШаблона", ПараметрыФормы, ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти