#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПечатьБезПредварительногоПросмотраПриИзменении(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИмяФайлаМакетаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Модифицированность	 = Ложь;
	
	ДиалогВыбораФайла							=	Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок					=	"Выберите файл шаблона";
	ДиалогВыбораФайла.ПредварительныйПросмотр	=	Ложь;
	ДиалогВыбораФайла.ИндексФильтра				=	0;
	Попытка		
		Если мУчетнаяПолитика.РежимПечатиПоШаблонуWORD = ПредопределенноеЗначение("Перечисление.РежимыПечатиПоШаблонуWORD.ФормироватьНаКлиентеВOpenOffice") Тогда 
			ДиалогВыбораФайла.Фильтр="Файлы Open Office (*.odt, *.doc, *.docx)|*.odt; *.doc; *.docx";
		Иначе 
			ДиалогВыбораФайла.Фильтр="Файлы Word (*.doc, *.docx)|*.doc; *.docx";
		КонецЕсли;
	
	Если ДиалогВыбораФайла.Выбрать() Тогда
		Попытка
			Адрес = ПоместитьВоВременноеХранилище(новый ДвоичныеДанные(ДиалогВыбораФайла.ПолноеИмяФайла));
			ЗаписатьФайлМакета(Адрес);
			
			Объект.ИмяФайлаМакета = Сред(ДиалогВыбораФайла.ПолноеИмяФайла, СтрДлина(ДиалогВыбораФайла.Каталог) + 1);
			Модифицированность = Истина;
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("" + ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Исключение
		ПоказатьПредупреждение(, НСтр("ru='Укажите в учетной политике формат печати документов. Параметр: Режим печати по шаблону WORD'"));	
	КонецПопытки;

КонецПроцедуры

&НаСервере
Функция ЗаписатьФайлМакета(Адрес)
	СправочникОбъект = РеквизитФормыВЗначение("Объект");
	СправочникОбъект.ФайлМакета = Новый ХранилищеЗначения(ПолучитьИзВременногоХранилища(Адрес), Новый СжатиеДанных);
	СправочникОбъект.Записать();
	ЗначениеВРеквизитФормы(СправочникОбъект, "Объект");
КонецФункции

&НаКлиенте
Процедура ИмяФайлаМакетаОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьМакет();
КонецПроцедуры

&НаСервере
Процедура ОчиститьМакет()
	ДокОб = РеквизитФормыВЗначение("Объект");
	ДокОб.ФайлМакета = Неопределено;
	ДокОб.ИмяФайлаМакета = "";
	ДокОб.Записать();
	ЗначениеВРеквизитФормы(ДокОб,"Объект");	
КонецПроцедуры

&НаКлиенте
Процедура ИмяФайлаМакетаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Объект.ИмяФайлаМакета) Тогда
		
		СодержаниеОшибки = "";
		ДвоичныеДанные = ПолучитьДвоичныеДанныеШаблона();
		Если ДвоичныеДанные <> Неопределено Тогда
			ПолноеИмяФайла = РаботаСШаблонамиПечатиКлиент.СоздатьВременныйФайлШаблона(ДвоичныеДанные,Объект.ИмяФайлаМакета,СодержаниеОшибки);
			Если Не ЗначениеЗаполнено(СодержаниеОшибки) Тогда
				ЗапуститьПриложение(ПолноеИмяФайла);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДвоичныеДанныеШаблона()
	ДокОб = РеквизитФормыВЗначение("Объект");
	Возврат ДокОб.ФайлМакета.Получить();
КонецФункции

&НаКлиенте
Процедура ПослеРедактированияТекстаАлгоритмаПараметра(Алгоритм, ДополнительныеПараметры) Экспорт
	
	Если Алгоритм <> Неопределено Тогда
		Элементы.ПараметрыПечати.ТекущиеДанные.Значение = Алгоритм;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБезПредварительногоПросмотраПриИзменении(Элемент)
	Элементы.КоличествоЭкземпляров.Видимость = Объект.ПечатьБезПредварительногоПросмотра;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПринадлежности(Элемент, СсылкаОбъекта = Неопределено, РежимПодбора = Ложь)
	
	Отказ = Истина;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("УжеВыбранные", ПолучитьТекущиеОбъектыПринадлежности(Объект.Принадлежность));
	ОткрытьФорму("Справочник.ШаблоныПечати.Форма.ФормаВыбораПринадлежностиУпр", ПараметрыФормы, Элементы.Принадлежность, ЭтотОбъект,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекущиеОбъектыПринадлежности(Знач Принадлежность)
	
	Результат = Новый СписокЗначений;
	Для Каждого СтрокаПринадлежности Из Принадлежность Цикл
		Попытка
			Результат.Добавить(СтрокаПринадлежности.СсылкаОбъекта.Метаданные().Имя);
		Исключение КонецПопытки;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ПринадлежностьОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СписокЗначений") Тогда
		Возврат;	
	КонецЕсли;
	
	Если ТипЗНЧ(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			
			ИмяМетаданных = ЭлементСписка.Значение.Имя;
			
			Если ДопСерверныеФункции.ЭтоДокумент(ИмяМетаданных) Тогда
				
				СсылкаОбъекта = ПредопределенноеЗначение("Документ." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				ПредставлениеОбъекта = "Документ """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			ИначеЕсли ДопСерверныеФункции.ЭтоСправочник(ЭлементСписка.Значение.Имя) Тогда
				
				СсылкаОбъекта = ПредопределенноеЗначение("Справочник." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				ПредставлениеОбъекта = "Справочник """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			Иначе
				Продолжить;
			КонецЕсли;
			
			ТекущаяПринадлежность = Объект.Принадлежность.НайтиСтроки(Новый Структура("СсылкаОбъекта", СсылкаОбъекта));
			Если ТекущаяПринадлежность.Количество() = 0 Тогда
				СтрокаПринадлежности = Объект.Принадлежность.Добавить();
			Иначе
				СтрокаПринадлежности = ТекущаяПринадлежность[0];
			КонецЕсли;
			
			СтрокаПринадлежности.СсылкаОбъекта = СсылкаОбъекта;
			СтрокаПринадлежности.ПредставлениеОбъекта = ПредставлениеОбъекта;
		КонецЦикла;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПринадлежностьПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	ОткрытьФормуВыбораПринадлежности(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Экспортировать(Команда)
	
	Если РаботаСДиалогамиКлиент.ПроверитьМодифицированностьВФорме(ЭтаФорма) Тогда
		УИД = ЭтаФорма.УникальныйИдентификатор;
		ДиалогФыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		
		ДиалогФыбораФайла.Фильтр = "(*.xml)|*.xml"; 
		
		ДиалогФыбораФайла.Заголовок = "Выберите файл";
		
		Если ДиалогФыбораФайла.Выбрать() Тогда
			АдресХранилища = ЭкспортироватьСервер(Объект.Ссылка, УИД);
			ДанныеДляВыгрузки = ПолучитьИзВременногоХранилища(АдресХранилища);
			ДанныеДляВыгрузки.Записать(ДиалогФыбораФайла.ПолноеИмяФайла); 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭкспортироватьСервер(Шаблон, УИД)
	
	ДвоичныеДанные = Справочники.ШаблоныПечати.Экспортировать(Шаблон);
	Адрес = ПоместитьВоВременноеХранилище(ДвоичныеДанные,УИД);
	Возврат Адрес;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьИзОбразцов(Команда)
	Оповещение = Новый ОписаниеОповещения("ДобавитьПараметрПослеВыбора", ЭтотОбъект);
	ОткрытьФорму("Справочник.ШаблоныПечати.Форма.ВыборВстроенногоАлгоритмаПараметра",,ЭтотОбъект,,,,Оповещение,);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СделатьИмяПараметраУникальным(Имя, СчетчикПовторов = 0)
	
	Для Каждого СтрокаПарметра Из Объект.ПараметрыПечати Цикл
		
		Если СтрокаПарметра.ИмяПараметра = Имя Тогда
			
			СчетчикПовторов = СчетчикПовторов + 1;
			
			Если ОбщегоНазначенияКлиентСервер.ЭтоЦифра(Прав(Имя, 1)) Тогда
				Имя = Лев(Имя, СтрДлина(Имя)-1) + СчетчикПовторов;
			Иначе 
				Имя = Имя + СчетчикПовторов;
			КонецЕсли;
			
			СделатьИмяПараметраУникальным(Имя, СчетчикПовторов);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Имя;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьПараметрПослеВыбора(ЗначениеВыбора, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеВыбора <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.ПараметрыПечати.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено
			И ПустаяСтрока(ТекущиеДанные.ИмяПараметра)
			И ПустаяСтрока(ТекущиеДанные.Значение)
		Тогда
			СтрокаПараметра = ТекущиеДанные;
		Иначе
			СтрокаПараметра = Объект.ПараметрыПечати.Добавить();
		КонецЕсли;
		
		ИмяПараметра = СделатьИмяПараметраУникальным(ЗначениеВыбора.ИмяПараметра);
		
		СтрокаПараметра.ИмяПараметра = ИмяПараметра;
		СтрокаПараметра.Значение = ЗначениеВыбора.Алгоритм;
		СтрокаПараметра.Описание = ЗначениеВыбора.Описание;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблоныРеквизитовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ШаблоныРеквизитовЗначение Тогда
		СтандартнаяОбработка = Ложь;
		
		Оповещение = Новый ОписаниеОповещения("ПослеРедактированияТекстаАлгоритмаПараметра", ЭтотОбъект);
		ПараметрыФормы = Новый Структура("Алгоритм", Элемент.ТекущиеДанные.Значение);
		ОткрытьФорму("Справочник.ШаблоныПечати.Форма.ЗаполнениеАлгоритмаПараметраШаблона", ПараметрыФормы,ЭтотОбъект,,,,Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти