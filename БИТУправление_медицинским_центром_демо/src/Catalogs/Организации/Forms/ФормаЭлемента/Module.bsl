#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастроитьТабличныеЧасти();
	ЗаполнитьДанныеЛицензии();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	НастроитьТабличныеЧасти();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонтактнаяИнформацияИзменение" Тогда
		Если Параметр = Объект.Ссылка Тогда
			Элементы.КонтактнаяИнформация.Обновить();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Основная(Команда)
	
	Если Элементы.КонтактнаяИнформация.ТекущиеДанные <> Неопределено Тогда
		// Устанавливаем информацию по умолчанию
		Если Элементы.КонтактнаяИнформация.ТекущиеДанные.ЗначениеПоУмолчанию = Ложь Тогда
			
			ТекДанные = Новый Структура;
			ТекДанные.Вставить("Тип", Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип);
			ТекДанные.Вставить("Вид", Элементы.КонтактнаяИнформация.ТекущиеДанные.Вид);
			ТекДанные.Вставить("Представление", Элементы.КонтактнаяИнформация.ТекущиеДанные.Представление);
			
			КонтактнаяИнформацияСервер.СброситьОсновнуюЗапись(Объект.Ссылка, ТекДанные);
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Истина;
			Элементы.КонтактнаяИнформация.Обновить();
			
			// Сбрасываем информацию по умолчанию, если она была ранее выбрана как по умолчанию.
		Иначе
			КонтактнаяИнформацияСервер.СброситьОсновнуюЗапись(Объект.Ссылка);
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Ложь;	
			Элементы.КонтактнаяИнформация.Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КИСоздать(Команда)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломДобавления(Элементы.КонтактнаяИнформация, Ложь, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КИИзменить(Команда)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломИзменения(Элементы.КонтактнаяИнформация, ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура КИУдалить(Команда)
	КонтактнаяИнформацияКлиент.УдалитьКИ(Объект, Элементы.КонтактнаяИнформация);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.ЗначениеПоУмолчанию = Истина Тогда
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Истина;
		Иначе	
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломДобавления(Элемент, Отказ, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломИзменения(Элемент, Отказ)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломИзменения(Элементы.КонтактнаяИнформация, ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	
	Объект.ИНН = СокрЛП(Объект.ИНН);
	
	// Если Россия, то подсказываем пользователю некоррекный ИНН, заполняем КПП.
	Если УправлениеНастройками.ПараметрУчета("ОсновнаяСтрана") = ПредопределенноеЗначение("Справочник.СтраныМира.Россия") Тогда
		ТекстСообщения = "";
		Если Не ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ИННСоответствуетТребованиям(Объект.ИНН, СтрДлина(Объект.ИНН) <> 12, ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект.Ссылка,,"Объект.ИНН");
		Иначе
			ОбщегоНазначенияКлиентСервер.ЗаполнитьКППпоИНН(Объект.ИНН, Объект.КПП);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДанныеЛицензииНажатие(Элемент)
	
	Если Не ДопСерверныеФункцииПовтИсп.ЕстьПравоДоступа("Просмотр", "РегистрСведений.ЛицензииМедицинскойДеятельности") Тогда
		ПоказатьПредупреждение(, НСтр("ru='Нет права доступа на изменение лицензии'"));
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("Филиал", Объект.Ссылка));
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ПараметрыФормы.Отбор);
	
	ОповещениеОЗакрытии = Новый ОписаниеОповещения("ДанныеЛицензииНажатие_ПослеЗакрытияФормы", ЭтотОбъект);
	
	Если НетДанныхЛицензииНаМедДеятельность Тогда
		ОткрытьФорму("РегистрСведений.ЛицензииМедицинскойДеятельности.ФормаЗаписи", ПараметрыФормы, , Объект.Ссылка.УникальныйИдентификатор(),,,ОповещениеОЗакрытии);
	Иначе
		ОткрытьФорму("РегистрСведений.ЛицензииМедицинскойДеятельности.ФормаСписка", ПараметрыФормы, , Объект.Ссылка.УникальныйИдентификатор(),,,ОповещениеОЗакрытии);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьТабличныеЧасти()
	
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("Объект", Объект.Ссылка);
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("ИмяМетаданных", "Организации");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеЛицензии()
	
	СтруктураЛицензии = РегистрыСведений.ЛицензииМедицинскойДеятельности.ПолучитьСтруктуруДанныхЛицензии(Объект.Ссылка, ТекущаяДата());
	
	Если СтруктураЛицензии = Неопределено Тогда
		Элементы.ДанныеЛицензии.Заголовок = НСтр("ru='Лицензия не указана'");
		НетДанныхЛицензииНаМедДеятельность = Истина;
	Иначе
		НетДанныхЛицензииНаМедДеятельность = Ложь;
		
		ШаблонЗаголовка = НСтр("ru=	'Лицензия: №%1
									|Орган, выдавший лицензию: %2
									|Дата регистрации: %3'");
		Элементы.ДанныеЛицензии.Заголовок = СтрШаблон(ШаблонЗаголовка,	СтруктураЛицензии.НомерЛицензии,
																		СтруктураЛицензии.ВыдавшийЛицензиюОрган,
																		Формат(СтруктураЛицензии.Период, "ДЛФ=Д"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеЛицензииНажатие_ПослеЗакрытияФормы(Результат, ДополнительныеПараметры) Экспорт
	
	ЗаполнитьДанныеЛицензии();
	
КонецПроцедуры

#КонецОбласти