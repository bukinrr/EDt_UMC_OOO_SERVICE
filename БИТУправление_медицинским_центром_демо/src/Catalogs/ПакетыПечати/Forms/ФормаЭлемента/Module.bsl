#Область ОписаниеПеременных
&НаКлиенте
Перем мТекущаяСтрока;

&НаКлиенте
Перем мСписокВыбораПФ;

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.НадписьПечатьБезПредпросмотраНаСервере.Видимость = ВычислитьВидимостьНадписьПечатьБезПредпросмотраНаСервере(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мСписокВыбораПФ = МестоВызоваПриИзмененииСервер();
	РассчитатьВидыПФ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	РассчитатьВидыПФ();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура МестоВызоваПриИзменении(Элемент)
	
	Объект.СоставПакета.Очистить();
	мСписокВыбораПФ = МестоВызоваПриИзмененииСервер();
	
	ЭтаФорма.Модифицированность = Истина;

КонецПроцедуры

&НаСервере
Функция МестоВызоваПриИзмененииСервер()
	
	Если Объект.МестоВызоваСсылка <> Неопределено Тогда
	
		Попытка
			СтруктураВнутреннихПечатныхФорм = ПечатьДокументовСервер.ПолучитьСтруктуруПечатныхФормСервер(Объект.МестоВызоваСсылка);
		Исключение
			СтруктураВнутреннихПечатныхФорм = Новый Структура;
		КонецПопытки;
		
		Дерево = УниверсальныеМеханизмыСервер.ПолучитьДеревоМакетовПечати(Объект.МестоВызоваСсылка, СтруктураВнутреннихПечатныхФорм,,,Ложь);
		
		СписокВыбора = Новый СписокЗначений;
		
		Для Каждого ТекущаяСтрока Из Дерево.Строки Цикл
			Если Не ТипЗнч(ТекущаяСтрока.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати") Тогда
				
				СтруктураПечатнойФормы = Новый Структура("Имя, Расшифровка, СсылкаНаВнешнююОбработку, ПредставлениеОбъекта, ВидОбъекта");
				ЗаполнитьЗначенияСвойств(СтруктураПечатнойФормы, ТекущаяСтрока);
				СтруктураПечатнойФормы.ПредставлениеОбъекта = ТекущаяСтрока.Текст;
				
				Если ТипЗнч(ТекущаяСтрока.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ШаблоныПечати") Тогда
					СтруктураПечатнойФормы.ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ШаблонПечати");
				Иначе
					СтруктураПечатнойФормы.ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ПечатнаяФорма");
				КонецЕсли;

				СписокВыбора.Добавить(СтруктураПечатнойФормы,ТекущаяСтрока.Текст);
				
				КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокВыбора;
		
КонецФункции

&НаКлиенте
Процедура МестоВызоваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФормуВыбораПринадлежности(Элементы.СоставПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораПринадлежности(Элемент, СсылкаОбъекта = Неопределено, РежимПодбора = Ложь)
	
	Форма = ПолучитьФорму("Справочник.ПакетыПечати.Форма.ФормаВыбораМестаВызоваУпр", 
						  Новый Структура("РежимВыбора", Истина),
						  ЭтаФорма.Элементы.МестоВызова);
	
	Если Форма.Открыта() Тогда
		Форма.СписокДокументов.Очистить();
	КонецЕсли;
	Форма.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВызоваНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура МестоВызоваОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ВыбранноеЗначение) <> Тип("СписокЗначений") Тогда
		
		Если мТекущаяСтрока = Неопределено Тогда
			НоваяСтрока = Объект.СоставПакета.Добавить();
		Иначе
			НоваяСтрока = мТекущаяСтрока;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("ЭлементСпискаЗначений") Тогда // Выбрали ТЧ
		
		НоваяСтрока.ТабличнаяЧастьИмя           = ВыбранноеЗначение.Значение;
		НоваяСтрока.ТабличнаяЧастьПредставление = ВыбранноеЗначение.Представление;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("СписокЗначений") Тогда
		
		Для Каждого ЭлементСписка Из ВыбранноеЗначение Цикл
			
			Если ДопСерверныеФункции.ЭтоДокумент(ЭлементСписка.Значение.Имя) Тогда
				
				Объект.МестоВызоваСсылка = ПредопределенноеЗначение("Документ." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				Объект.МестоВызоваПредставление = "Документ """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			ИначеЕсли ДопСерверныеФункции.ЭтоСправочник(ЭлементСписка.Значение.Имя) Тогда
				
				Объект.МестоВызоваСсылка = ПредопределенноеЗначение("Справочник." + ЭлементСписка.Значение.Имя + ".ПустаяСсылка");
				Объект.МестоВызоваПредставление = "Справочник """ + ?(ЭлементСписка.Значение.Синоним = "", ЭлементСписка.Значение.Имя, ЭлементСписка.Значение.Синоним)+"""";
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		Если ДопСерверныеФункции.ЭтоДокумент(ВыбранноеЗначение.Имя) Тогда
			НоваяСтрока.СсылкаОбъекта 		 = ДопСерверныеФункции.ПустаяСсылкаПоТипуДокумента(ВыбранноеЗначение.Имя);
			НоваяСтрока.ПредставлениеОбъекта = "Документ """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
			
		ИначеЕсли ДопСерверныеФункции.ЭтоСправочник(ВыбранноеЗначение.Имя) Тогда
			НоваяСтрока.СсылкаОбъекта = ДопСерверныеФункции.ПустаяСсылкаПоТипуСправочника(ВыбранноеЗначение.Имя);
			НоваяСтрока.ПредставлениеОбъекта = "Справочник """ + ?(ВыбранноеЗначение.Синоним="", ВыбранноеЗначение.Имя, ВыбранноеЗначение.Синоним)+"""";
			
		Иначе
			НоваяСтрока.ТабличнаяЧастьИмя           = ВыбранноеЗначение.Имя;
			НоваяСтрока.ТабличнаяЧастьПредставление = ВыбранноеЗначение.Синоним;
			
		КонецЕсли;	
		

	КонецЕсли;
	
	МестоВызоваПриИзменении(ЭтаФорма.Элементы.МестоВызова);

	
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаПриИзменении(Элемент)
	
	Если Элементы.СоставПакета.ТекущиеДанные <> Неопределено Тогда 
		Если ТипЗнч(Элементы.СоставПакета.ТекущиеДанные.ПредставлениеОбъекта) = Тип("СправочникСсылка.ВидыДоговоров") Тогда 
			Элементы.СоставПакета.ТекущиеДанные.ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ДоговорСКлиентом");
			Элементы.СоставПакета.ТекущиеДанные.СсылкаНаВнешнююОбработку = Элементы.СоставПакета.ТекущиеДанные.ПредставлениеОбъекта;
		КонецЕсли;
		Если Элементы.СоставПакета.ТекущиеДанные.КолЭкз = 0 Тогда 
			Элементы.СоставПакета.ТекущиеДанные.КолЭкз = 1;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьВидыПФ()
	
	Для Каждого СтрокаСостава Из Объект.СоставПакета Цикл
		Если ТипЗнч(СтрокаСостава.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ВидыДоговоров") Тогда
			СтрокаСостава.ВидПФ = "ВидДоговора";
		Иначе
			СтрокаСостава.ВидПФ = "ПечатнаяФорма";
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаВидПФПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СоставПакета.ТекущиеДанные;
	Если (ТекущиеДанные.ВидПФ = "ВидДоговора") <> ТипЗнч(ТекущиеДанные.ПредставлениеОбъекта) = Тип("СправочникСсылка.ВидыДоговоров")
	Тогда
		ТекущиеДанные.СсылкаНаВнешнююОбработку = Неопределено;
		ТекущиеДанные.ПредставлениеОбъекта = "";
		ТекущиеДанные.Имя = "";
	КонецЕсли;

	НастроитьПолеВводаФормыПоВидуПФ(ТекущиеДанные);

КонецПроцедуры

&НаКлиенте
Процедура НастроитьПолеВводаФормыПоВидуПФ(ТекущиеДанные)
	
	Если ТекущиеДанные.ВидПФ = "ВидДоговора" Тогда
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ВидыДоговоров");
		ТекущиеДанные.ПредставлениеОбъекта = ОписаниеТипа.ПривестиЗначение(ТекущиеДанные.ПредставлениеОбъекта);
		Элементы.СоставПакетаПредставлениеОбъекта.СписокВыбора.Очистить();
		Элементы.СоставПакетаПредставлениеОбъекта.РедактированиеТекста = Истина;
	ИначеЕсли  ТекущиеДанные.ВидПФ = "ПечатнаяФорма" Тогда
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		ТекущиеДанные.ПредставлениеОбъекта = ОписаниеТипа.ПривестиЗначение(ТекущиеДанные.ПредставлениеОбъекта);
		
		Элементы.СоставПакетаПредставлениеОбъекта.СписокВыбора.Очистить();
		Если мСписокВыбораПФ <> Неопределено Тогда
			Для Каждого ПФДляВыбора Из мСписокВыбораПФ Цикл
				Элементы.СоставПакетаПредставлениеОбъекта.СписокВыбора.Добавить(ПФДляВыбора.Значение, ПФДляВыбора.Представление);
			КонецЦикла;
		КонецЕсли;

		Элементы.СоставПакетаПредставлениеОбъекта.РедактированиеТекста = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаВидПФОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаПредставлениеОбъектаОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.СоставПакета.ТекущиеДанные;
		ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранноеЗначение);
		Элементы.НадписьПечатьБезПредпросмотраНаСервере.Видимость = ВычислитьВидимостьНадписьПечатьБезПредпросмотраНаСервере(Объект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		ТекущиеДанные = Элементы.СоставПакета.ТекущиеДанные;
		ТекущиеДанные.ВидПФ = "ПечатнаяФорма";
		НастроитьПолеВводаФормыПоВидуПФ(ТекущиеДанные);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставПакетаПредставлениеОбъектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СоставПакета.ТекущиеДанные;
	Если ТекущиеДанные.ВидПФ = "ПечатнаяФорма"
		И мСписокВыбораПФ <> Неопределено
	Тогда
		ВыбранноеЗначение = ВыбратьИзСписка(мСписокВыбораПФ, Элементы.СоставПакетаПредставлениеОбъекта);
		Если ВыбранноеЗначение <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, ВыбранноеЗначение.Значение);
			Элементы.СоставПакета.ЗакончитьРедактированиеСтроки(Ложь);
			Элементы.НадписьПечатьБезПредпросмотраНаСервере.Видимость = ВычислитьВидимостьНадписьПечатьБезПредпросмотраНаСервере(Объект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВычислитьВидимостьНадписьПечатьБезПредпросмотраНаСервере(Знач Объект)
	
	ЕстьШаблоныWord = Ложь;
	Для Каждого СтрокаПакета Из Объект.СоставПакета Цикл
		Если ЗначениеЗаполнено(СтрокаПакета.СсылкаНаВнешнююОбработку)
			И (ТипЗнч(СтрокаПакета.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ВидыДоговоров")
				Или ТипЗнч(СтрокаПакета.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ШаблоныПечати"))
		Тогда
			ЕстьШаблоныWord = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ЕстьШаблоныWord	И УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("РежимПечатиПоШаблонуWORD")
								= ПредопределенноеЗначение("Перечисление.РежимыПечатиПоШаблонуWORD.ФормироватьНаСервереRTF");
	
КонецФункции

&НаКлиенте
Процедура СоставПакетаПослеУдаления(Элемент)

	Элементы.НадписьПечатьБезПредпросмотраНаСервере.Видимость = ВычислитьВидимостьНадписьПечатьБезПредпросмотраНаСервере(Объект);

КонецПроцедуры

#КонецОбласти