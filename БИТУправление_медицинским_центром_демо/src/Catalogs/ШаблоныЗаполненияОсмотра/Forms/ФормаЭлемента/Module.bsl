#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Все реквизиты добавляются тут
	НастройкаРеквизитовФормыПриСоздании();
	
	Если Параметры.Свойство("ЗначенияПараметровШаблона") Тогда
		Объект.ЗначенияЗаполнения.Очистить();
		Для Каждого Элемент Из Параметры.ЗначенияПараметровШаблона Цикл
			Стр = Объект.ЗначенияЗаполнения.Добавить();
			Стр.Параметр = Элемент.Ключ;
			Стр.ЗначениеНаФорме = Элемент.Значение;
		КонецЦикла;
	Иначе
		Если Объект.Ссылка.Пустая() Тогда
			ПерезаполнитьПараметрыСервер();
		КонецЕсли;
		
		ЗаполнитьРеквизитЗначениеВФорме();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	МаксДлинаСтрокиПараметра = Метаданные.ПланыВидовХарактеристик.ПараметрыHTML.Тип.КвалификаторыСтроки.Длина;
	
	Если ТекущийОбъект.Ссылка.Пустая() Тогда
		УИД = Новый УникальныйИдентификатор;
		Ссылка = Справочники.ШаблоныЗаполненияОсмотра.ПолучитьСсылку(УИД);
		ТекущийОбъект.УстановитьСсылкуНового(Ссылка);
	Иначе
		Ссылка = ТекущийОбъект.Ссылка;
	КонецЕсли;
	
	Для Каждого СтрокаЗаполнения Из Объект.ЗначенияЗаполнения Цикл
		
		Если ТипЗнч(СтрокаЗаполнения["ЗначениеНаФорме"]) = Тип("Строка")
			И СтрДлина(СтрокаЗаполнения["ЗначениеНаФорме"]) > МаксДлинаСтрокиПараметра
		Тогда
			СтрокаЗаполнения.Значение = МедицинскаяДеятельность.СформироватьСтрокуЭМКНеограниченнойДлины(Ссылка,
																						СтрокаЗаполнения.Параметр,
																						СтрокаЗаполнения["ЗначениеНаФорме"],
																						ТекущийОбъект.ПометкаУдаления);
		Иначе
			СтрокаЗаполнения.Значение = СтрокаЗаполнения["ЗначениеНаФорме"];
		КонецЕсли;
	КонецЦикла;
	ТекущийОбъект.ЗначенияЗаполнения.Загрузить(Объект.ЗначенияЗаполнения.Выгрузить(, "Параметр, Значение"));
	
	// Удаление строк неограниченной длины, ставших ненужными в новой версии шаблона заполнения (сократили значение).
	Если Не ТекущийОбъект.ЭтоНовый() Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Владелец", Ссылка);
		Запрос.УстановитьПараметр("ИспользуемыеСтрокиЭМК", ТекущийОбъект.ЗначенияЗаполнения.ВыгрузитьКолонку("Значение"));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтрокиЭМКНеограниченнойДлины.Ссылка
		|ИЗ
		|	Справочник.СтрокиЭМКНеограниченнойДлины КАК СтрокиЭМКНеограниченнойДлины
		|ГДЕ
		|	СтрокиЭМКНеограниченнойДлины.ВладелецСтроки = &Владелец
		|	И НЕ СтрокиЭМКНеограниченнойДлины.Ссылка В (&ИспользуемыеСтрокиЭМК)"
		;
		Выб = Запрос.Выполнить().Выбрать();
		Пока Выб.Следующий() Цикл
			Выб.Ссылка.ПолучитьОбъект().УстановитьПометкуУдаления(Истина);
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ЗаполнитьРеквизитЗначениеВФорме();	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ЗначенияЗаполненияЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЗначенияЗаполнения.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные["ЗначениеНаФорме"]) = Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("ИсходноеЗначение",ТекущиеДанные["ЗначениеНаФорме"]);
		
		Результат = ОткрытьФормуМодально("Справочник.ШаблоныЗаполненияОсмотра.Форма.ФормаВводаСтроки", ПараметрыФормы);
		Если Результат <> Неопределено Тогда
			ТекущиеДанные["ЗначениеНаФорме"] = Результат;
			ЭтаФорма.Модифицированность = Истина;
		КонецЕсли;
    КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияЗаполненияПриАктивизацииСтроки(Элемент)
	УстановитьОграничениеТипаТекущегоЗначенияПараметра();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОграничениеТипаТекущегоЗначенияПараметра()
	
	ТекущиеДанные = Элементы.ЗначенияЗаполнения.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Параметр) Тогда
			Элементы["ЗначенияЗаполненияЗначениеНаФорме"].ОграничениеТипа = ПолучитьОписаниеТипаПараметра(ТекущиеДанные.Параметр);
		Иначе
			Элементы["ЗначенияЗаполненияЗначениеНаФорме"].ОграничениеТипа = Новый ОписаниеТипов;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеТипаПараметра(Параметр)
	
	ТипыПараметра = Параметр.ТипЗначения.Типы();
	Если ТипыПараметра.Количество() > 0 Тогда
		ТипПараметра = ТипыПараметра[0];
		Если ТипПараметра = Тип("Строка") Тогда
			Возврат Новый ОписаниеТипов("Строка");
		Иначе
			Возврат Параметр.ТипЗначения;	
		КонецЕсли;
	Иначе
		Возврат Параметр.ТипЗначения;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура ЗначенияЗаполненияПараметрПриИзменении(Элемент)
	УстановитьОграничениеТипаТекущегоЗначенияПараметра();
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияЗаполненияТаблицЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ЗначенияЗаполненияТаблиц.ТекущиеДанные;
	Если ТипЗнч(ТекущиеДанные.ЗначениеНаФорме) = Тип("Строка") Тогда
		СтандартнаяОбработка = Ложь;
		ПараметрыФормы = Новый Структура("ИсходноеЗначение",ТекущиеДанные.ЗначениеНаФорме);
		
		Результат = ОткрытьФормуМодально("Справочник.ШаблоныЗаполненияОсмотра.Форма.ФормаВводаСтроки", ПараметрыФормы);
		Если Результат <> Неопределено Тогда
			ТекущиеДанные.ЗначениеНаФорме = Результат;
			ЭтаФорма.Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПерезаполнитьПараметры(Команда)
	ПерезаполнитьПараметрыСервер();
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьПараметрыСервер()
	
	Значения = Объект.ЗначенияЗаполнения.Выгрузить();
	Объект.ЗначенияЗаполнения.Очистить();
	
	ПараметрыШаблона = Объект.Владелец.СоответствияПараметрам.ВыгрузитьКолонку("Параметр");
	Для Каждого ПараметрШаблона Из ПараметрыШаблона Цикл
		НоваяСтрока = Объект.ЗначенияЗаполнения.Добавить();
		НоваяСтрока.Параметр = ПараметрШаблона;
		СтрокаСЗначением = Значения.Найти(ПараметрШаблона);
		Если СтрокаСЗначением <> Неопределено Тогда
			НоваяСтрока.Значение = СтрокаСЗначением.Значение;
		КонецЕсли;
	КонецЦикла;
	
	//Значения = Объект.ЗначенияЗаполненияТаблиц.Выгрузить();
	Объект.ЗначенияЗаполненияТаблиц.Очистить();
	
	СоответствияТаблицамШаблонов = Объект.Владелец.СоответствияТаблицамШаблонов;
	Для Каждого Строка Из СоответствияТаблицамШаблонов Цикл
		НоваяСтрока = Объект.ЗначенияЗаполненияТаблиц.Добавить();
		НоваяСтрока.Параметр = Строка.Параметр;
		НоваяСтрока.ТаблицаШаблонов = Строка.ТаблицаШаблонов;
		НоваяСтрока.НомерСтрокиТаблицы = 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьРеквизитЗначениеВФорме()
	
	Для Каждого СтрокаЗаполнения Из Объект.ЗначенияЗаполнения Цикл
		Если ТипЗнч(СтрокаЗаполнения.Значение) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
			СтрокаЗаполнения["ЗначениеНаФорме"] = СтрокаЗаполнения.Значение.Значение;
		Иначе
			СтрокаЗаполнения["ЗначениеНаФорме"] = СтрокаЗаполнения.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаЗаполнения Из Объект.ЗначенияЗаполненияТаблиц Цикл
		Если ТипЗнч(СтрокаЗаполнения.Значение) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
			СтрокаЗаполнения.ЗначениеНаФорме = СтрокаЗаполнения.Значение.Значение;
		Иначе
			СтрокаЗаполнения.ЗначениеНаФорме = СтрокаЗаполнения.Значение;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура НастройкаРеквизитовФормыПриСоздании()
	
	ДобавляемыеРеквизиты = Новый Массив;
	
	// Описываем реквизит "ЗначениеНаФорме" для таблицы ЗначениеЗаполнения как замену предыдущего
	ТипРеквизитаЗначениеНаФорме = Новый ОписаниеТипов(Метаданные.ПланыВидовХарактеристик.ПараметрыHTML.Тип,,,, Новый КвалификаторыСтроки());
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗначениеНаФорме", ТипРеквизитаЗначениеНаФорме, "Объект.ЗначенияЗаполнения", "Значение", Истина));
	
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Добавляем элемент
	ДобавляемыеЭлементы = Элементы.Вставить("ЗначенияЗаполненияЗначениеНаФорме", Тип("ПолеФормы"), Элементы.ЗначенияЗаполнения);
	ДобавляемыеЭлементы.Вид = ВидПоляФормы.ПолеВвода;
	ДобавляемыеЭлементы.ПутьКДанным = "Объект.ЗначенияЗаполнения.ЗначениеНаФорме";
	ДобавляемыеЭлементы.УстановитьДействие("НачалоВыбора", "ЗначенияЗаполненияЗначениеНачалоВыбора");
	ДобавляемыеЭлементы.Ширина = 30;
	ДобавляемыеЭлементы.Заголовок = "Значение";
	
	СвязиПараметраВыбора = Новый Массив;
	СвязиПараметраВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.ЗначенияЗаполнения.ТекущиеДанные.Параметр"));
	ДобавляемыеЭлементы.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметраВыбора);
	ДобавляемыеЭлементы.СвязьПоТипу = Новый СвязьПоТипу("Элементы.ЗначенияЗаполнения.ТекущиеДанные.Параметр");
	ДобавляемыеЭлементы.КнопкаВыбора = Истина;

КонецПроцедуры

#КонецОбласти