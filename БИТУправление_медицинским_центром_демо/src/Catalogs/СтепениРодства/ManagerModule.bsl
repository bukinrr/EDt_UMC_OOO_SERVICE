
#Область ПрограммныйИнтерфейс

// Заполняет справочник по классификатору.
Процедура НачальноеЗаполнениеСтепенейРодства() Экспорт	
	
	ТекстXML	= Справочники.СтепениРодства.ПолучитьМакет("ПервоначальноеЗаполнение").ПолучитьТекст();
	ТаблицаОКИН	= ОбщегоНазначенияСервер.ПрочитатьXMLВТаблицу(ТекстXML).Данные;
	
	Для Каждого СтрокаОКИН Из ТаблицаОКИН Цикл
		Если ЗначениеЗаполнено(СтрокаОКИН.КодФСС) Тогда
			ТекущийЭлементСсылка = НайтиПоРеквизиту("КодФСС", СтрокаОКИН.КодФСС);
		ИначеЕсли ЗначениеЗаполнено(СтрокаОКИН.КодОКИН) Тогда
			ТекущийЭлементСсылка = НайтиПоРеквизиту("КодОКИН", СтрокаОКИН.КодОКИН);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(ТекущийЭлементСсылка) Тогда
			ТекущийЭлемент = ТекущийЭлементСсылка.ПолучитьОбъект();
		Иначе
			ТекущийЭлемент = СоздатьЭлемент();	
		КонецЕсли;                                                
		
		ЗаполнитьЗначенияСвойств(ТекущийЭлемент, СтрокаОКИН);
		ТекущийЭлемент.Записать();
	КонецЦикла;
	  
КонецПроцедуры

// Проставить код типа родственной связи в ФР НСИ ЕГИСЗ.
Процедура СопоставитьСКодамиЕГИСЗ() Экспорт 
	
	МакетТаблицы = Справочники.СтепениРодства.ПолучитьМакет("СопоставлениеСКодамиЕГИСЗ");
	ВысотаТаблицы = МакетТаблицы.ВысотаТаблицы;
	Для Сч = 2 По ВысотаТаблицы Цикл
		КодФССЯчейки  = МакетТаблицы.Область(Сч,1,Сч,1).Текст;
		КодОКИНЯчейки = МакетТаблицы.Область(Сч,2,Сч,2).Текст;
		КодЕГИСЗЯчейки = МакетТаблицы.Область(Сч,3,Сч,3).Текст; 
		
		Если ЗначениеЗаполнено(КодЕГИСЗЯчейки) Тогда 
			Если ЗначениеЗаполнено(КодФССЯчейки) Тогда
				ТекущийЭлементСсылка = НайтиПоРеквизиту("КодФСС", КодФССЯчейки);
			ИначеЕсли ЗначениеЗаполнено(КодОКИНЯчейки) Тогда
				ТекущийЭлементСсылка = НайтиПоРеквизиту("КодОКИН", КодОКИНЯчейки);
			КонецЕсли;
			Если ЗначениеЗаполнено(ТекущийЭлементСсылка) Тогда
				ТекущийЭлемент = ТекущийЭлементСсылка.ПолучитьОбъект();	
				ТекущийЭлемент.КодЕГИСЗ = КодЕГИСЗЯчейки; 
				ТекущийЭлемент.Записать();			
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
	
КонецПроцедуры

// Если для родственника есть соответствующее ответное родство, возвращает его.
//
// Параметры:
//  ТипСвязи - СправочникСсылка.СтепениРодства - Исходный тип родственной связи.
//	ПолРодственника - ПеречислениеСсылка.ПолФизическихЛиц - пол.
// 
// Возвращаемое значение:
// 	СправочникСсылка.СтепениРодства.
//
Функция ПолучитьОтветнуюРодственнуюСвязь(ТипСвязи, ПолРодственника) Экспорт
	
	РезультатПоиска = Справочники.СтепениРодства.ПустаяСсылка();
	
	МакетТаблицы = Справочники.СтепениРодства.ПолучитьМакет("ОбратноеРодство");
	ВысотаТаблицы = МакетТаблицы.ВысотаТаблицы;
	
	Если ЗначениеЗаполнено(ПолРодственника) Тогда
		
		ЭтоМужчина = ПолРодственника = Перечисления.ПолФизическихЛиц.Мужской;
	
		Для Сч = 2 По ВысотаТаблицы Цикл
			КодФССЯчейки  = МакетТаблицы.Область(Сч,1,Сч,1).Текст;
			КодОКИНЯчейки = МакетТаблицы.Область(Сч,2,Сч,2).Текст;
			Если (ЗначениеЗаполнено(ТипСвязи.КодФСС) И ТипСвязи.КодФСС = КодФССЯчейки) 
				Или (ЗначениеЗаполнено(ТипСвязи.КодОКИН) И ТипСвязи.КодОКИН = КодОКИНЯчейки)
			Тогда
				Если ЭтоМужчина Тогда
					КодФСССвязи  = МакетТаблицы.Область(Сч,3,Сч,3).Текст;
					КодОКИНСвязи = МакетТаблицы.Область(Сч,4,Сч,4).Текст;			
				Иначе
					КодФСССвязи  = МакетТаблицы.Область(Сч,5,Сч,5).Текст;
					КодОКИНСвязи = МакетТаблицы.Область(Сч,6,Сч,6).Текст;	
				КонецЕсли;
				
				Если ЗначениеЗаполнено(КодОКИНСвязи) Тогда
					РезультатПоиска = Справочники.СтепениРодства.НайтиПоРеквизиту("КодОКИН",КодОКИНСвязи);
				КонецЕсли;
				
				Если Не ЗначениеЗаполнено(РезультатПоиска)
					И ЗначениеЗаполнено(КодФСССвязи)
				Тогда
					РезультатПоиска = Справочники.СтепениРодства.НайтиПоРеквизиту("КодФСС",КодФСССвязи);
				КонецЕсли;
				
				Прервать;
				
			КонецЕсли; 	
		КонецЦикла;
	КонецЕсли;
	
	Возврат РезультатПоиска;
	
КонецФункции

// Процедура - Удалить обратную родственную связь.
//
// Параметры:
//  Клиент	 - СправочникСсылка.Клиенты	 - Клиент, у которого удаляем связь.
//  Клиент2	 - СправочникСсылка.Клиенты	 - Клиент, связь с которым удаляем.
//
Процедура УдалитьРодственнуюСвязь(Клиент, Клиент2) Экспорт
	
	Запись = РегистрыСведений.СвязиМеждуКлиентами.СоздатьМенеджерЗаписи();
	Запись.Клиент	= Клиент;
	Запись.Клиент2	= Клиент2;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти