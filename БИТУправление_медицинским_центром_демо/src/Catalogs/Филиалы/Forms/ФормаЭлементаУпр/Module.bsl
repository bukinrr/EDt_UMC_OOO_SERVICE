#Область РазделОписанияПеременных

&НаКлиенте
Перем мЗаголовокНастройкаСводногоОтчетаОбщая;
&НаКлиенте
Перем мЗаголовокНастройкаСводногоОтчетаСвоя;

#КонецОбласти

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая()
		И Не ЗначениеЗаполнено(Объект.Организация)
	Тогда
		Объект.Организация = Справочники.Организации.ЕдинственнаяОрганизация();
		Если Не ЗначениеЗаполнено(Объект.Организация) Тогда
			Объект.Организация = Справочники.Организации.ОрганизацияПоУмолчанию();
		КонецЕсли;
	КонецЕсли;
	
	НастроитьТабличныеЧасти();
	РаботаСФормамиСервер.УстановитьУсловноеОформлениеПоляКонтактнойИнфомрации(КонтактнаяИнформация);
	ПолучитьЗначениеНастроекФилиала();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	мЗаголовокНастройкаСводногоОтчетаОбщая = НСтр("ru='Используется основная настройка базы'");
	мЗаголовокНастройкаСводногоОтчетаСвоя  = НСтр("ru='Задана собственная настройка'");
	Элементы.СводныйОтчетНадписьНастройка.Заголовок = ?(Элементы.СводныйОтчетУдалитьНастройки.Доступность, мЗаголовокНастройкаСводногоОтчетаСвоя, мЗаголовокНастройкаСводногоОтчетаОбщая);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	НастроитьТабличныеЧасти();
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "КонтактнаяИнформацияИзменение" Тогда
		Если Параметр = Объект.Ссылка Тогда
			Элементы.КонтактнаяИнформация.Обновить();
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Основная(Команда)
	
	Если Элементы.КонтактнаяИнформация.ТекущиеДанные <> Неопределено Тогда
		// Устанавливаем информацию по умолчанию
		Если Элементы.КонтактнаяИнформация.ТекущиеДанные.ЗначениеПоУмолчанию = Ложь Тогда
			
			ТекДанные = Новый Структура;
			ТекДанные.Вставить("Тип", Элементы.КонтактнаяИнформация.ТекущиеДанные.Тип);
			ТекДанные.Вставить("Вид", Элементы.КонтактнаяИнформация.ТекущиеДанные.Вид);
			ТекДанные.Вставить("Представление", Элементы.КонтактнаяИнформация.ТекущиеДанные.Представление);
			
			КонтактнаяИнформацияСервер.СброситьОсновнуюЗапись(Объект.Ссылка, ТекДанные);
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Истина;
			Элементы.КонтактнаяИнформация.Обновить();
			
			// Сбрасываем информацию по умолчанию, если она была ранее выбрана как по умолчанию.
		Иначе
			КонтактнаяИнформацияСервер.СброситьОсновнуюЗапись(Объект.Ссылка);
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Ложь;	
			Элементы.КонтактнаяИнформация.Обновить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КИСоздать(Команда)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломДобавления(Элементы.КонтактнаяИнформация, Ложь, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КИИзменить(Команда)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломИзменения(Элементы.КонтактнаяИнформация, ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура КИУдалить(Команда)
	КонтактнаяИнформацияКлиент.УдалитьКИ(Объект, Элементы.КонтактнаяИнформация);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьНастройкуСводногоОтчета(Команда)
	
	Если ОбщегоНазначения.ЕстьПравоДоступа("Просмотр", "РегистрСведений.СерииРецептов") Тогда
		ОчиститьНастройкуОтчета();
		Элементы.СводныйОтчетУдалитьНастройки.Доступность = Ложь;
		Элементы.СводныйОтчетНадписьНастройка.Заголовок = мЗаголовокНастройкаСводногоОтчетаОбщая;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСводныйОтчет(Команда)
	
	Если ОбщегоНазначения.ЕстьПравоДоступа("Просмотр", "РегистрСведений.УчетнаяПолитикаФилиалов") Тогда
		Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтотОбъект) Тогда
			Оповещение = Новый ОписаниеОповещения("НастроитьСводныйОтчетЗавершение", ЭтотОбъект);
			ОткрытьФорму("Отчет.СводныйОтчетЗаСуткиУпр.ФормаВарианта", Новый Структура("Филиал", Объект.Ссылка),,,,,Оповещение);
			Элементы.СводныйОтчетУдалитьНастройки.Доступность = Истина;
			Элементы.СводныйОтчетНадписьНастройка.Заголовок = мЗаголовокНастройкаСводногоОтчетаСвоя;
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСерииРецептов(Команда)
	
	Если ОбщегоНазначения.ЕстьПравоДоступа("Просмотр", "РегистрСведений.СерииРецептов") Тогда
		Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
			ПараметрыФормы = Новый Структура("Филиал", Объект.Ссылка);
			ОткрытьФорму("РегистрСведений.СерииРецептов.Форма.УстановкаСерийРецепта",
							ПараметрыФормы,,,,,,
							РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Недостаточно прав для выполнения операции'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КонтактнаяИнформацияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		Если Элемент.ТекущиеДанные.ЗначениеПоУмолчанию = Истина Тогда
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Истина;
		Иначе	
			Элементы.КонтактнаяИнформацияКИОсновная.Пометка = Ложь;
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломДобавления(Элемент, Отказ, ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КонтактнаяИнформацияПередНачаломИзменения(Элемент, Отказ)
	КонтактнаяИнформацияКлиент.КонтактнаяИнформацияСписокПередНачаломИзменения(Элементы.КонтактнаяИнформация, ЭтотОбъект, Объект);
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКППпоИНН(Объект.ИНН,Объект.КПП);
КонецПроцедуры

&НаКлиенте
Процедура ПрейскурантПриИзменении(Элемент)
	
	Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		ЗаписатьЗначениеНастройкиНаСервере(Объект.Ссылка,"ОсновнойПрейскурант",Прейскурант);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПрефиксМедицинскойКартыПриИзменении(Элемент)
	
	Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		ЗаписатьЗначениеНастройкиНаСервере(Объект.Ссылка,"ПрефиксМедицинскойКарты",ПрефиксМедицинскойКарты);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьТабличныеЧасти()
	
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("Объект", Объект.Ссылка);
	КонтактнаяИнформация.Параметры.УстановитьЗначениеПараметра("ИмяМетаданных","Филиалы");
	РаботаСФормамиСервер.УстановитьОтборСписка("Объект", Объект.Ссылка, КонтактнаяИнформация);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьЗначениеНастроекФилиала()

	Выб = РегистрыСведений.УчетнаяПолитикаФилиалов.Выбрать(Новый Структура("Филиал",Объект.Ссылка));
	Если Выб.Следующий() Тогда 
		Прейскурант = Выб.ОсновнойПрейскурант;
		ПрефиксМедицинскойКарты = Выб.ПрефиксМедицинскойКарты;
		НастройкаОтчета = Выб.НастройкаСводногоОтчетаЗаСутки.Получить();
		АвторРеестраФСС_ЭЛН = Выб.АвторРеестраФСС_ЭЛН;
		Если ТипЗнч(НастройкаОтчета) = Тип("НастройкиКомпоновкиДанных") Тогда
			Элементы.СводныйОтчетУдалитьНастройки.Доступность = Истина;
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	Элементы.СводныйОтчетУдалитьНастройки.Доступность = Ложь;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЗначениеНастройкиНаСервере(Филиал, Настройка, ЗначениеНастройки)
	
	СтруктураЗначений = Новый Структура(Настройка,ЗначениеНастройки);
	СтруктураЗначений.Вставить("Филиал",Филиал);
	
	НаборЗаписей = РегистрыСведений.УчетнаяПолитикаФилиалов.Выбрать(Новый Структура("Филиал",Филиал));
	
	Если НаборЗаписей.Следующий() Тогда 
		ЗаписьРегистра = НаборЗаписей.ПолучитьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра,СтруктураЗначений);
 		ЗаписьРегистра.Записать(Истина);
	Иначе 
	    ЗаписьРегистра = РегистрыСведений.УчетнаяПолитикаФилиалов.СоздатьМенеджерЗаписи();
		ЗаполнитьЗначенияСвойств(ЗаписьРегистра,СтруктураЗначений);
	    ЗаписьРегистра.Период = ТекущаяДата();
		ЗаписьРегистра.Записать(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьСводныйОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		Элементы.СводныйОтчетУдалитьНастройки.Доступность = Истина;
		Элементы.СводныйОтчетНадписьНастройка.Заголовок = мЗаголовокНастройкаСводногоОтчетаСвоя;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНастройкуОтчета()
	Выб = РегистрыСведений.УчетнаяПолитикаФилиалов.Выбрать(Новый Структура("Филиал",Объект.Ссылка));
	Если Выб.Следующий() Тогда 
		МенеджерЗаписи = Выб.ПолучитьМенеджерЗаписи();
		МенеджерЗаписи.НастройкаСводногоОтчетаЗаСутки = Неопределено; 
		МенеджерЗаписи.Записать();
	КонецЕсли;		
КонецПроцедуры

&НаКлиенте
Процедура АвторРеестраФСС_ЭЛНПриИзменении(Элемент)
		Если РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		ЗаписатьЗначениеНастройкиНаСервере(Объект.Ссылка,"АвторРеестраФСС_ЭЛН", АвторРеестраФСС_ЭЛН);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти