&НаКлиенте
Перем КлиентВладелецСсылка;

// Процедура итображает картинку, которая в данный момент находится в хранилище.
// Параметры:
//  Нет
// Возвращаемые значения
//  Нет.
&НаСервере
Процедура ОтображениеИзображения(КлиентВладелецСсылка = Неопределено)
	
	ДанныеКартинки = объект.Ссылка.Хранилище.Получить(); // Получаем данные картинки
	// Помещаем в реквизит формы для отображения.
	ПолеИзображения = ПоместитьВоВременноеХранилище(ДанныеКартинки, УникальныйИдентификатор);
	
КонецПроцедуры

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекОснИзображение = Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка();
	
	Если Объект.Ссылка.Пустая()
		И Параметры.Свойство("ЗначенияЗаполнения")
		И Параметры.ЗначенияЗаполнения.Свойство("Объект")
	Тогда
		Объект.Объект = Параметры.ЗначенияЗаполнения.Объект;
	КонецЕсли;
	
	Если Параметры.Свойство("ФотоЗаполнено") Тогда
		Если Параметры.ФотоЗаполнено Тогда
			ОсновноеИзображениеПриОткрытии = ЭтаФорма.Параметры.Ключ;
			ТекОснИзображение = ОсновноеИзображениеПриОткрытии;
		КонецЕсли;	
	КонецЕсли;
	
	СписокФото.Параметры.УстановитьЗначениеПараметра("ТекОснИзображение", ТекОснИзображение);
	УстановитьУсловноеОформление();
	Элементы.СписокФото.Обновить();
	Модифицированность = Ложь;
	
	Элементы.Наименование.ТолькоПросмотр = Объект.ВФайле;
	
	Элементы.СписокФотоДобавитьИзображение.Доступность = ЗначениеЗаполнено(Объект.Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборТабличнойЧасти();
	
	Если ВладелецФормы = Неопределено Тогда
		КлиентВладелецСсылка = Объект.Объект;
	ИначеЕсли ТипЗнч(ВладелецФормы) = Тип("ТаблицаФормы") Тогда
		КлиентВладелецСсылка = Объект.Объект;
	ИначеЕсли ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		КлиентВладелецСсылка = ВладелецФормы.Объект.Клиент;
	Иначе
		КлиентВладелецСсылка = Объект.Объект;
	КонецЕсли;                                                     
	
	КлиентВладелецСсылкаСервер = КлиентВладелецСсылка;
	
	Элементы.Объект.Заголовок = ПолучитьНазваниеОбъекта(КлиентВладелецСсылка);
	
	Если ТипЗнч(КлиентВладелецСсылка) = Тип("СправочникСсылка.Клиенты") Тогда
		
		Попытка
			Если ЗначениеЗаполнено(ОсновноеИзображениеПриОткрытии) И НЕ (ТипЗнч(ОсновноеИзображениеПриОткрытии)=Тип("Строка")) Тогда
				Элементы.СписокФото.ТекущаяСтрока = ОсновноеИзображениеПриОткрытии;
			КонецЕсли;
		Исключение
		КонецПопытки;
		
	КонецЕсли;
	
	ОтображениеИзображения(КлиентВладелецСсылка);
	
	ТекОснИзображение = Объект.Ссылка;
	
	СписокФото.Параметры.УстановитьЗначениеПараметра("ТекОснИзображение", ТекОснИзображение);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если  НЕ ЗначениеЗаполнено(ПолеИзображения) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Выберите изображение.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Объект.Объект = Неопределено ИЛИ Объект.Объект.Пустая() Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Укажите владельца изображения.'"));
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ТипЗнч(КлиентВладелецСсылка) = Тип("СправочникСсылка.Клиенты") Тогда
		
		Если ПроверитьНаличиеСсылки(КлиентВладелецСсылка) Тогда
			
			Попытка
				Если ТипЗнч(ВладелецФормы.Объект.Ссылка) = Тип("СправочникСсылка.Клиенты") Тогда
					Оповестить("ОбновитьФотографию", Новый Структура("Фотография, ВладелецФормы, Модифицированность", ТекОснИзображение, ВладелецФормы, Ложь), Объект);
				КонецЕсли;
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
		Иначе
			Оповестить("ОбновитьФотографию", Новый Структура("Фотография, ВладелецФормы, Модифицированность",  Элементы.СписокФото.ТекущиеДанные.Ссылка, ВладелецФормы, Ложь), Объект);
		КонецЕсли;
		
	КонецЕсли;
	ЭтаФорма.Прочитать();
	ОтображениеИзображения();
	ЭтаФорма.Элементы.СписокФото.Обновить();
	ЭтаФорма.ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	ПолеИзображения = ПолучитьНавигационнуюСсылку(ТекущийОбъект.Ссылка, "Фотография");
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ЭтоАдресВременногоХранилища(ПолеИзображения) Тогда
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(ПолеИзображения);
		
		Фото = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных());
		
		Попытка
			об = Объект.Ссылка.ПолучитьОбъект();
			об.Хранилище = Фото;
			об.Записать();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		КонецПопытки;
		ЗначениеВРеквизитФормы(об, "Объект");
		
		ПолеИзображения = ПоместитьВоВременноеХранилище(Фото, УникальныйИдентификатор); 
	КонецЕсли;
	
	Если ЭтоАдресВременногоХранилища(ПолеИзображения) Тогда
		УдалитьИзВременногоХранилища(ПолеИзображения);
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

&НаСервере
Функция  ПолучитьНазваниеОбъекта(КлиентВладелецСсылка)
	Возврат ?(КлиентВладелецСсылка = Неопределено, "Объект: ", КлиентВладелецСсылка.ПолучитьОбъект().Метаданные().ПредставлениеОбъекта);	
КонецФункции	

Процедура УстановитьОтборТабличнойЧасти()
	РаботаСФормамиСервер.УстановитьОтборСписка("Объект", Объект.Объект, СписокФото);
КонецПроцедуры

&НаСервере
Функция ПроверитьНаличиеСсылки(КлиентВладелецСсылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Объект", КлиентВладелецСсылка);
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХранилищеДополнительнойИнформации.Ссылка
	|ИЗ
	|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	|ГДЕ
	|	ХранилищеДополнительнойИнформации.Объект = &Объект
	|	И Ссылка <> &Ссылка"
	;
	Рез = Запрос.Выполнить();
	
	Возврат НЕ Рез.Пустой();
	
КонецФункции	

#Область ОбработчикиДействийКомандныхПанелейФормы
// 

// Процедура изменяет текущее изображение на выбираемое из диалога выбора файлов.
// Параметры:
//  Кнопка - кнопка формы
// Возвращаемые значения
//  Нет.
&НаКлиенте
Процедура ИзменитьИзображение(Кнопка)
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.ПредварительныйПросмотр = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл с фотографией";
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр = РаботаСФормамиКлиент.ПолучитьФильтрИзображений();
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		ВыбранноеФото = Новый Картинка(ДиалогОткрытияФайла.ПолноеИмяФайла, Ложь);
		ПолеИзображения = ПоместитьВоВременноеХранилище(ВыбранноеФото, УникальныйИдентификатор);	
	Иначе
		Возврат;
	КонецЕсли;
	
	Элементы.СписокФото.Обновить();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзображение(Команда)
	
	// Добавление картинки в хранилище доп. ин. для объекта.
	Записать();
	
	Если ЗначениеЗаполнено(Объект.Объект) Тогда
		ОсновнаяФотография(Неопределено);	
	КонецЕсли;
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	Текст = "ru = ""Текст""; en = ""Text""";
	
	ДиалогОткрытияФайла.МножественныйВыбор = Истина;
	ДиалогОткрытияФайла.Заголовок = "Выберите файлы";
	ДиалогОткрытияФайла.Фильтр = РаботаСФормамиКлиент.ПолучитьФильтрИзображений();
	
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			Если РаботаСФайламиКлиент.ПроверитьРазмерФайла(ИмяФайла) Тогда
				Элементы.СписокФото.ТекущаяСтрока = ПолучитьСсылкуНаКартинку(ИмяФайла, Новый Картинка(ИмяФайла), Объект.Объект);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры
	
&НаСервереБезКонтекста
Функция ПолучитьСсылкуНаКартинку(ИмяФайла, Картинка, ОбъектВладелец)
	
	ХранилищеКартинки = Новый ХранилищеЗначения(Картинка);
	
	НовЭлемент = Справочники.ХранилищеДополнительнойИнформации.СоздатьЭлемент();
	НовЭлемент.Объект = ОбъектВладелец;
	ВремФ = Новый Файл(ИмяФайла);
	ОбрезИмя = ВремФ.Имя;
	НовЭлемент.Наименование = ОбрезИмя;
	НовЭлемент.Хранилище = ХранилищеКартинки;
	НовЭлемент.Записать();
	Возврат НовЭлемент.Ссылка;
	
КонецФункции	

&НаКлиенте
Процедура ОсновнаяФотография(Команда)
	
	Оповестить("ОбновитьФотографию", Новый Структура("Фотография, ВладелецФормы, Модифицированность", Элементы.СписокФото.ТекущиеДанные.Ссылка, ВладелецФормы, Истина), Объект);
	ТекОснИзображение = Элементы.СписокФото.ТекущиеДанные.Ссылка;
	
	СписокФото.Параметры.УстановитьЗначениеПараметра("ТекОснИзображение", ТекОснИзображение);
	Элементы.СписокФото.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеИзображение(Команда)
	
	Ссылка = Элементы.СписокФото.ТекущаяСтрока;
	
	Попытка
		рез = ПоставитьПометкуУдаления(Ссылка, КлиентВладелецСсылка);
		Если рез <> Неопределено Тогда
			Оповестить("ОбновитьФотографию", Новый Структура("Фотография, ВладелецФормы, Модифицированность", рез, ВладелецФормы, Истина), Объект);
		КонецЕсли;	
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
	
	Элементы.СписокФото.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ПоставитьПометкуУдаления(ссылка, КлиентВладелецСсылка)
	мОбъект = ссылка.ПолучитьОбъект();
	мОбъект.ПометкаУдаления = Не мОбъект.ПометкаУдаления;
	мОбъект.Записать();
	Если ссылка = КлиентВладелецСсылка.Фотография 
		И мОбъект.ПометкаУдаления 
		Тогда
		Попытка
			Если ТипЗнч(ВладелецФормы.Ссылка) = Тип("СправочникСсылка.Клиенты") Тогда
				Возврат Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка()
			КонецЕсли;
		Исключение
			Возврат Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка();
		КонецПопытки;
		
	КонецЕсли;
	Возврат Неопределено;
КонецФункции	

&НаКлиенте
Процедура СохранитьИзображение(Команда)
	
	ЗаписываемаяКартинка = ПолучитьИзВременногоХранилища(ПолеИзображения);
	Если ЗаписываемаяКартинка.Вид <> ВидКартинки.Пустая Тогда
		
		ДиалогЗаписиФайла                             = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
		ДиалогЗаписиФайла.Заголовок                   = "Укажите имя файла";
		ДиалогЗаписиФайла.ПолноеИмяФайла              = "";
		ДиалогЗаписиФайла.Фильтр                      = ЗаписываемаяКартинка.ФильтрИменФайлов(); // картинки
		ДиалогЗаписиФайла.ПроверятьСуществованиеФайла = Истина;
		
		Если Не ДиалогЗаписиФайла.Выбрать() Тогда
			Возврат;
		КонецЕсли;
		
		Попытка
			ЗаписываемаяКартинка.Записать(ДиалогЗаписиФайла.ПолноеИмяФайла);
		Исключение
			ПоказатьПредупреждение(,
				НСтр("ru = 'Ошибка при записи файла: '") + ДиалогЗаписиФайла.ПолноеИмяФайла
					+ Символы.ПС + ОписаниеОшибки()
					+ Символы.ПС + НСтр("ru = 'Файл не записан.'"));
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокФотоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоменятьОбъект(ВыбраннаяСтрока, КлиентВладелецСсылка); 
	
	ОтображениеИзображения(КлиентВладелецСсылка);
КонецПроцедуры

&НаКлиенте
Процедура СписокФотоПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущаяСтрока <> Неопределено Тогда
		Если Элемент.ТекущаяСтрока <> Объект.Ссылка Тогда
			ПоменятьОбъект(Элемент.ТекущаяСтрока, КлиентВладелецСсылка);
		КонецЕсли;	
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ПоменятьОбъект(мСсылка, КлиентВладелецСсылка)
	
	ЗначениеВРеквизитФормы(мСсылка.Получитьобъект(),"Объект");
	ОтображениеИзображения(КлиентВладелецСсылка);
	
КонецПроцедуры	

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	// Ожирнить срочку
	
	УО = СписокФото.УсловноеОформление.Элементы;
	
	Если УО.Количество() > 0 Тогда
		ЭлементУО = УО[0];
	Иначе
		ЭлементУО = УО.Добавить();
	КонецЕсли;
	
	ЭлементУО.Отбор.Элементы.Очистить();
	ЭлементУсловия  = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста",WebЦвета.Черный);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый  Шрифт(WindowsШрифты.ШрифтДиалоговИМеню, , , Истина, , , ) );
	
	// Условие форматирования
	
	ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Основная");
	ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Истина;
	
	// Оформляемое поле
	ЭлементУО.Поля.Элементы.Очистить();
	ОформлПоле1 = ЭлементУО.Поля.Элементы.Добавить();
	ОформлПоле1.Поле = Новый ПолеКомпоновкиДанных("Наименование");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	Элементы.СписокФото.Обновить();
КонецПроцедуры

#КонецОбласти

#КонецОбласти
