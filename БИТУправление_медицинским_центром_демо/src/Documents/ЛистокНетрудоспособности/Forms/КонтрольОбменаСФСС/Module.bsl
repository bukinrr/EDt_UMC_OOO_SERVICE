#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	
	Если ЗначениеЗаполнено(Филиал) Тогда
		ДанныеОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(Филиал);
		ОГРН = ДанныеОрганизации.ОГРН;
	КонецЕсли;
	
	КонтурРаботы = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("РабочийРежимОбменаСФСС");
	ЗаполнитьТаблицуОбмена(КонтурРаботы);
	ЗаполнитьТаблицыЧерновиков(КонтурРаботы);
	ЗаполнитьТаблицуНезакрытые(КонтурРаботы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьЭЦПМедОгранизации();
	Если Не ЗначениеЗаполнено(ПериодВДняхДляНезакрытых) Тогда
		ПериодВДняхДляНезакрытых = 10;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаОбмена
&НаКлиенте
Процедура ТаблицаОбменаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтруктураЗаписи = Новый Структура("Объект", Элемент.ТекущиеДанные.ЛистНетрудоспособности);
	МассивСтруктураЗаписи = Новый Массив;
	МассивСтруктураЗаписи.Добавить(СтруктураЗаписи);
	КлючЗаписи = Новый ("РегистрСведенийКлючЗаписи.СтатусыОбменаФСС", МассивСтруктураЗаписи);
	                              
	Параметрыформы = Новый Структура("Ключ", КлючЗаписи);
	ОткрытьФорму("РегистрСведений.СтатусыОбменаФСС.Форма.ФормаЗаписи",Параметрыформы,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЧерновиковВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЛистНетрудоспосбности = Элемент.ТекущиеДанные.ЛистНетрудоспособности;
	ОткрытьЗначение(ЛистНетрудоспосбности);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЧерновиковНеподписанныеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЛистНетрудоспосбности = Элемент.ТекущиеДанные.ЛистНетрудоспособности;
	ОткрытьЗначение(ЛистНетрудоспосбности);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаНезакрытыеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЛистНетрудоспосбности = Элемент.ТекущиеДанные.ЛистНетрудоспособности;
	ОткрытьЗначение(ЛистНетрудоспосбности);
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаЧерновиковПродленныхНеподписанныхВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ТаблицаЧерновиковПродленныхНеподписанных.ТекущиеДанные.ЛистНетрудоспособности;
	Если ТекДанные <> Неопределено Тогда
		ОткрытьЗначение(ТекДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалПриИзменении(Элемент)
	Обновить(Неопределено);
	ЗаполнитьЭЦПМедОгранизации();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьОбменДляСтроки(Команда)
	ТекДанные = Элементы.ТаблицаОбмена.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ВыполнитьОбмен(ТекДанные);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменДляВсех(Команда)
	ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма);
	МассивПараметров = Новый Массив;
	Для Каждого СтрокаОбмена Из ТаблицаОшибок Цикл
		ПараметрыЗапроса = Новый Структура;
		Если СтрокаОбмена.Операция = "Отправка" Тогда
			ПараметрыЗапроса.Вставить("Операция",1);
		ИначеЕсли СтрокаОбмена.Операция = "Обновление" Тогда 
			ПараметрыЗапроса.Вставить("Операция",2);
		ИначеЕсли СтрокаОбмена.Операция = "Аннулирование" Тогда
			ПараметрыЗапроса.Вставить("Операция",3);
		КонецЕсли;
		ПараметрыЗапроса.Вставить("СНИЛС",СтрокаОбмена.СНИЛС);	
		ПараметрыЗапроса.Вставить("Номер",СтрокаОбмена.Номер);
		ПараметрыЗапроса.Вставить("Комментарий", "");
		ПараметрыЗапроса.Вставить("Причина", "010");
		ПараметрыЗапроса.Вставить("ОГРН", ОГРН);
		ПараметрыЗапроса.Вставить("Документ", СтрокаОбмена.ЛистНетрудоспособности);
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
	КонецЦикла; 
	
	ОбменФССКлиент.ВыполнитьНесколькоЗапросов(МассивПараметров,ОбработчикЗавершения,СертификатПодписиМО);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменДляПодписанных(Команда)
	ТекДанные = Элементы.ТаблицаЧерновиков.ТекущиеДанные;
	ТекДанные.Операция = "Отправка";
	Если ТекДанные <> Неопределено Тогда
		ВыполнитьОбмен(ТекДанные);	
	КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменДляВсехПодписанных(Команда)
	ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма);
	МассивПараметров = Новый Массив;
	Для Каждого СтрокаОбмена Из ТаблицаЧерновиковПодписанных Цикл
		ПараметрыЗапроса = Новый Структура;
		ПараметрыЗапроса.Вставить("Операция", 1);
		ПараметрыЗапроса.Вставить("СНИЛС",СтрокаОбмена.СНИЛС);	
		ПараметрыЗапроса.Вставить("Номер",СтрокаОбмена.Номер);
		ПараметрыЗапроса.Вставить("Комментарий", "");
		ПараметрыЗапроса.Вставить("Причина", "010");
		ПараметрыЗапроса.Вставить("ОГРН", ОГРН);
		ПараметрыЗапроса.Вставить("Документ", СтрокаОбмена.ЛистНетрудоспособности);
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
	КонецЦикла; 
	
	ОбменФССКлиент.ВыполнитьНесколькоЗапросов(МассивПараметров,ОбработчикЗавершения,СертификатПодписиМО);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьЭЦПМедОгранизации()
	
	СертификатыФилиала = ОбменФСС.ПолучитьСертификатыМО(Филиал);
	
	Элементы.СертификатПодписиМО.СписокВыбора.Очистить();
	Элементы.СертификатПодписиМО.СписокВыбора.ЗагрузитьЗначения(СертификатыФилиала);
	Если АвтоЭЦП Тогда
		Если СертификатыФилиала.Количество() > 0 Тогда
			СертификатПодписиМО = СертификатыФилиала[0];
		Иначе
			СертификатПодписиМО = ПредопределенноеЗначение("Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.ПустаяСсылка");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Данные)
	
	Если Данные.Результат = "Успешно" Тогда
		Возврат;	
	КонецЕсли; 
	
	Данные.Результат = нСтр("ru='Выполняется...'", "ru");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("ОГРН", ОГРН);
	
	Если Данные.Операция = "Отправка" Тогда
		ПараметрыЗапроса.Вставить("Документ", Данные.ЛистНетрудоспособности);
		ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма, Данные);
		ПараметрыЗапроса.Вставить("ОбработчикРезультата", ОбработчикЗавершения);
		Если ЗначениеЗаполнено(СертификатПодписиМО) Тогда
			ПараметрыЗапроса.Вставить("Сертификат", СертификатПодписиМО);	
		КонецЕсли; 
		ОбменФССКлиент.ОтправитьЭЛН(ПараметрыЗапроса);
	ИначеЕсли Данные.Операция = "Обновление" Тогда 
		ПараметрыЗапроса.Вставить("Номер", Данные.Номер);
		ПараметрыЗапроса.Вставить("СНИЛС", Данные.СНИЛС);
		ПараметрыЗапроса.Вставить("Документ", Данные.ЛистНетрудоспособности);
		ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма, Данные);
		ПараметрыЗапроса.Вставить("ОбработчикРезультата", ОбработчикЗавершения);
		Если ЗначениеЗаполнено(СертификатПодписиМО) Тогда
			ПараметрыЗапроса.Вставить("Сертификат", СертификатПодписиМО);	
		КонецЕсли; 
		ОбменФССКлиент.ОбновитьЭЛН(ПараметрыЗапроса);
	ИначеЕсли Данные.Операция = "Аннулирование" Тогда 
		ПараметрыЗапроса.Вставить("Номер", Данные.Номер);
		ПараметрыЗапроса.Вставить("СНИЛС", Данные.СНИЛС);
		ПараметрыЗапроса.Вставить("Причина", "010");
		ПараметрыЗапроса.Вставить("Комментарий", "");
		ПараметрыЗапроса.Вставить("Документ", Данные.ЛистНетрудоспособности);
		ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма, Данные);
		ПараметрыЗапроса.Вставить("ОбработчикРезультата", ОбработчикЗавершения);
		Если ЗначениеЗаполнено(СертификатПодписиМО) Тогда
			ПараметрыЗапроса.Вставить("Сертификат", СертификатПодписиМО);	
		КонецЕсли; 
		ОбменФССКлиент.АннулироватьЭЛН(ПараметрыЗапроса);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменЗавершение(Результат, Данные) Экспорт
	Если Результат.Успех Тогда
		ТаблицаОшибок.Очистить();
		ТаблицаНезакрытые.Очистить();
		ТаблицаЧерновиковНеподписанные.Очистить();
		ТаблицаЧерновиковПодписанных.Очистить();
		КонтурРаботы = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("РабочийРежимОбменаСФСС");
		ЗаполнитьТаблицуОбмена(КонтурРаботы);
		ЗаполнитьТаблицыЧерновиков(КонтурРаботы);
		ЗаполнитьТаблицуНезакрытые(КонтурРаботы);
	ИначеЕсли Данные <> Неопределено Тогда 
		Данные.Результат = Результат.ТекстОшибки; 	
	КонецЕсли; 
			 	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуОбмена(РабочийКонтур)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыОбменаФСС.Объект КАК ЛистНетрудоспособности,
	               |	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС,
	               |	СтатусыОбменаФСС.Статус КАК Статус,
	               |	СтатусыОбменаФСС.Операция КАК Операция,
	               |	СтатусыОбменаФСС.ТекстОшибки КАК Результат,
	               |	СтатусыОбменаФСС.Дата КАК Дата,
	               |	СтатусыОбменаФСС.Объект.Номер КАК Номер,
	               |	СтатусыОбменаФСС.Объект.СНИЛС КАК СНИЛС
	               |ИЗ
	               |	РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
	               |ГДЕ
	               |	СтатусыОбменаФСС.Операция <> 0
	               |	И НЕ СтатусыОбменаФСС.Объект.ПометкаУдаления
	               |	И СтатусыОбменаФСС.Объект.РабочийКонтур = &РабочийКонтур
	               |	И СтатусыОбменаФСС.Объект.Филиал = &Филиал";
	
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("РабочийКонтур", РабочийКонтур);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаОшибок.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
		Если НоваяСтрока.Операция = "1" Тогда
			НоваяСтрока.Операция = "Отправка";
		ИначеЕсли НоваяСтрока.Операция = "2" Тогда 
			НоваяСтрока.Операция = "Обновление";
		ИначеЕсли НоваяСтрока.Операция = "3" Тогда
			НоваяСтрока.Операция = "Аннулирование";
		КонецЕсли; 	
	КонецЦикла; 
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьТаблицыЧерновиков(РабочийКонтур)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочийКонтур", РабочийКонтур);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыОбменаФСС.Объект КАК ЛистНетрудоспособности,
	               |	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС,
	               |	СтатусыОбменаФСС.Статус КАК Статус,
	               |	СтатусыОбменаФСС.Операция КАК Операция,
	               |	СтатусыОбменаФСС.ТекстОшибки КАК Результат,
	               |	СтатусыОбменаФСС.Дата КАК Дата,
	               |	СтатусыОбменаФСС.Объект.Номер КАК Номер,
	               |	СтатусыОбменаФСС.Объект.СНИЛС КАК СНИЛС,
	               |	КОЛИЧЕСТВО(ЭлектронныеПодписи.Объект) КАК КоличествоПодписей,
	               |	СтатусыОбменаФСС.Объект.Запись1Врач КАК ОбъектЗапись1Врач,
	               |	СтатусыОбменаФСС.Объект.Запись2Врач КАК ОбъектЗапись2Врач,
	               |	СтатусыОбменаФСС.Объект.Запись3Врач КАК ОбъектЗапись3Врач,
	               |	СтатусыОбменаФСС.Объект.Запись1ПредседательВК КАК ОбъектЗапись1ПредседательВК,
	               |	СтатусыОбменаФСС.Объект.Запись2ПредседательВК КАК ОбъектЗапись2ПредседательВК,
	               |	СтатусыОбменаФСС.Объект.Запись3ПредседательВК КАК ОбъектЗапись3ПредседательВК
	               |ИЗ
	               |	РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
	               |		ПО СтатусыОбменаФСС.Объект = ЭлектронныеПодписи.Объект
	               |			И (НЕ СтатусыОбменаФСС.Объект.ПометкаУдаления)
	               |			И (СтатусыОбменаФСС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.Черновик)
	               |				ИЛИ СтатусыОбменаФСС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.Редактируется)
	               |					И СтатусыОбменаФСС.СтатусФСС = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.ЭЛНОткрыт)
	               |				ИЛИ СтатусыОбменаФСС.СтатусФСС = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.ЭЛНПродлен)
	               |				ИЛИ СтатусыОбменаФСС.СтатусФСС ЕСТЬ NULL)
	               |			И (СтатусыОбменаФСС.Объект.РабочийКонтур = &РабочийКонтур)
	               |			И (СтатусыОбменаФСС.Объект.Филиал = &Филиал)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СтатусыОбменаФСС.Объект,
	               |	СтатусыОбменаФСС.СтатусФСС,
	               |	СтатусыОбменаФСС.Статус,
	               |	СтатусыОбменаФСС.ТекстОшибки,
	               |	СтатусыОбменаФСС.Дата,
	               |	СтатусыОбменаФСС.Операция,
	               |	СтатусыОбменаФСС.Объект.Номер,
	               |	СтатусыОбменаФСС.Объект.СНИЛС,
	               |	СтатусыОбменаФСС.Объект.Запись1Врач,
	               |	СтатусыОбменаФСС.Объект.Запись2Врач,
	               |	СтатусыОбменаФСС.Объект.Запись3Врач,
	               |	СтатусыОбменаФСС.Объект.Запись1ПредседательВК,
	               |	СтатусыОбменаФСС.Объект.Запись2ПредседательВК,
	               |	СтатусыОбменаФСС.Объект.Запись3ПредседательВК";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоздатьСтроку = Ложь;
		СоздатьСтрокуПродленных = Ложь;
		
		Если Выборка.Статус = Перечисления.СтатусыФСС.Черновик Тогда
			СоздатьСтроку = Истина;
			
		ИначеЕсли Выборка.СтатусФСС = Перечисления.СтатусыФСС.ЭЛНОткрыт Тогда
			Если Не ЗначениеЗаполнено(Выборка.ОбъектЗапись1ПредседательВК) Тогда
				НеобходимоеМинКолПодписей = 2;
			Иначе
				НеобходимоеМинКолПодписей = 3;
			КонецЕсли;
			Если Выборка.КоличествоПодписей >= НеобходимоеМинКолПодписей Тогда
				СоздатьСтроку = Истина;
			ИначеЕсли ЗначениеЗаполнено(Выборка.ЛистНетрудоспособности.Запись2ДатаНачала) Тогда
				СоздатьСтрокуПродленных = Истина;	
			КонецЕсли;
			
		ИначеЕсли Выборка.СтатусФСС = Перечисления.СтатусыФСС.ЭЛНПродлен Тогда
			
			Если Не ЗначениеЗаполнено(Выборка.ОбъектЗапись1ПредседательВК) Тогда
				НеобходимоеМинКолПодписей = 3;
			Иначе
				НеобходимоеМинКолПодписей = 4;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ОбъектЗапись2ПредседательВК) Тогда
				НеобходимоеМинКолПодписей = НеобходимоеМинКолПодписей + 1;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Выборка.ОбъектЗапись3ПредседательВК) Тогда
				НеобходимоеМинКолПодписей = НеобходимоеМинКолПодписей + 1;
			КонецЕсли;
			
			Если Выборка.КоличествоПодписей >= НеобходимоеМинКолПодписей 
				И Выборка.Статус = Перечисления.СтатусыФСС.Редактируется 
			Тогда
				СоздатьСтроку = Истина;
			ИначеЕсли ЗначениеЗаполнено(Выборка.ЛистНетрудоспособности.Запись3ДатаНачала) 
				И Выборка.КоличествоПодписей < НеобходимоеМинКолПодписей 	
			Тогда   
				СоздатьСтрокуПродленных = Истина;			
			КонецЕсли;
			
		КонецЕсли;
		
		Если СоздатьСтроку Тогда
			НоваяСтрока = ТаблицаЧерновиковПодписанных.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка); 
		КонецЕсли;
		
		Если СоздатьСтрокуПродленных Тогда
			НоваяСтрока = ТаблицаЧерновиковПродленныхНеподписанных.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка); 	
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочийКонтур", РабочийКонтур);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СтатусыОбменаФСС.Объект КАК ЛистНетрудоспособности,
	               |	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС,
	               |	СтатусыОбменаФСС.Статус КАК Статус,
	               |	СтатусыОбменаФСС.Операция КАК Операция,
	               |	СтатусыОбменаФСС.ТекстОшибки КАК Результат,
	               |	СтатусыОбменаФСС.Дата КАК Дата,
	               |	СтатусыОбменаФСС.Объект.Номер КАК Номер,
	               |	СтатусыОбменаФСС.Объект.СНИЛС КАК СНИЛС
	               |ИЗ
	               |	РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
	               |ГДЕ
	               |	НЕ СтатусыОбменаФСС.Объект В (&СписокПодписанных)
	               |	И СтатусыОбменаФСС.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.Черновик)
	               |	И НЕ СтатусыОбменаФСС.Объект.ПометкаУдаления
	               |	И СтатусыОбменаФСС.Объект.РабочийКонтур = &РабочийКонтур
	               |	И СтатусыОбменаФСС.Объект.Филиал = &Филиал";
	
	Запрос.УстановитьПараметр("СписокПодписанных", ТаблицаЧерновиковПодписанных.Выгрузить( , "ЛистНетрудоспособности"));
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаЧерновиковНеподписанные.Добавить();	
		ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуНезакрытые(РабочийКонтур)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РабочийКонтур", РабочийКонтур);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.Текст = "ВЫБРАТЬ
	               |	СтатусыОбменаФСС.Объект КАК ЛистНетрудоспособности,
	               |	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС,
	               |	СтатусыОбменаФСС.Операция КАК Операция,
	               |	СтатусыОбменаФСС.ТекстОшибки КАК ТекстОшибки,
	               |	СтатусыОбменаФСС.Дата КАК Дата,
	               |	СтатусыОбменаФСС.Статус КАК Статус,
	               |	ВЫБОР
	               |		КОГДА СтатусыОбменаФСС.Объект.Запись3ДатаОкончания > СтатусыОбменаФСС.Объект.Запись2ДатаОкончания
	               |			ТОГДА СтатусыОбменаФСС.Объект.Запись3ДатаОкончания
	               |		КОГДА СтатусыОбменаФСС.Объект.Запись2ДатаОкончания > СтатусыОбменаФСС.Объект.Запись1ДатаОкончания
	               |			ТОГДА СтатусыОбменаФСС.Объект.Запись2ДатаОкончания
	               |		ИНАЧЕ СтатусыОбменаФСС.Объект.Запись1ДатаОкончания
	               |	КОНЕЦ КАК ДатаОкончания,
	               |	СтатусыОбменаФСС.Объект.Номер КАК Номер,
	               |	СтатусыОбменаФСС.Объект.СНИЛС КАК СНИЛС
	               |ИЗ
	               |	РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
	               |ГДЕ
	               |	(СтатусыОбменаФСС.СтатусФСС = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.ЭЛНОткрыт)
	               |			ИЛИ СтатусыОбменаФСС.СтатусФСС = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.ЭЛНПродлен))
	               |	И СтатусыОбменаФСС.Объект.РабочийКонтур = &РабочийКонтур
	               |	И СтатусыОбменаФСС.Объект.Филиал = &Филиал";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл	
		Если НачалоДня(ТекущаяДата()) - Выборка.ДатаОкончания >= ПериодВДняхДляНезакрытых * 86400 Тогда
			НоваяСтрока = ТаблицаНезакрытые.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Выборка);
			НоваяСтрока.Операция = "Обновление";
		КонецЕсли; 	
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменОбновлениеНезакрытых(Команда)
	ТекДанные = Элементы.ТаблицаНезакрытые.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ВыполнитьОбмен(ТекДанные);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбменОбновлениеВсехНезакрытых(Команда)
	ОбработчикЗавершения = Новый ОписаниеОповещения("ВыполнитьОбменЗавершение", ЭтаФорма);
	МассивПараметров = Новый Массив;
	Для каждого СтрокаОбмена Из ТаблицаНезакрытые Цикл
		ПараметрыЗапроса = Новый Структура; 
		ПараметрыЗапроса.Вставить("Операция",2);
		ПараметрыЗапроса.Вставить("СНИЛС",СтрокаОбмена.СНИЛС);	
		ПараметрыЗапроса.Вставить("Номер",СтрокаОбмена.Номер);
		ПараметрыЗапроса.Вставить("Комментарий", "");
		ПараметрыЗапроса.Вставить("Причина", "010");
		ПараметрыЗапроса.Вставить("ОГРН", ОГРН);
		ПараметрыЗапроса.Вставить("Документ", СтрокаОбмена.ЛистНетрудоспособности);
		
		МассивПараметров.Добавить(ПараметрыЗапроса);
	КонецЦикла; 
	
	ОбменФССКлиент.ВыполнитьНесколькоЗапросов(МассивПараметров,ОбработчикЗавершения,СертификатПодписиМО);

КонецПроцедуры

&НаКлиенте
Процедура ПериодВДняхДляНезакрытыхПриИзменении(Элемент)
	КонтурРаботы = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("РабочийРежимОбменаСФСС");
	ТаблицаНезакрытые.Очистить();
	ЗаполнитьТаблицуНезакрытые(КонтурРаботы);
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ТаблицаОшибок.Очистить();
	ТаблицаНезакрытые.Очистить();
	ТаблицаЧерновиковНеподписанные.Очистить();
	ТаблицаЧерновиковПодписанных.Очистить();
	ТаблицаЧерновиковПродленныхНеподписанных.Очистить();
	КонтурРаботы = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("РабочийРежимОбменаСФСС");
	ЗаполнитьТаблицуОбмена(КонтурРаботы);
	ЗаполнитьТаблицыЧерновиков(КонтурРаботы);
	ЗаполнитьТаблицуНезакрытые(КонтурРаботы);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЧерновик(Команда)
	ТекДанные = ?(Элементы.ГруппаРазделы.ТекущаяСтраница.Имя = "ТаблицаЧерновиковНеподписанные",
				  Элементы.ТаблицаЧерновиковНеподписанные.ТекущиеДанные, Элементы.ТаблицаЧерновиковПродленныхНеподписанных.ТекущиеДанные);
	Если ТекДанные <> Неопределено Тогда			  
		ОткрытьЗначение(ТекДанные.ЛистНетрудоспособности);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеЧерновик(Команда)
	ТекДанные = Элементы.ТаблицаЧерновиковНеподписанные.ТекущиеДанные;
	ПометитьНаУдалениеНаСервере(ТекДанные.ЛистНетрудоспособности);
	ТаблицаЧерновиковНеподписанные.Удалить(ТаблицаЧерновиковНеподписанные.Индекс(ТекДанные));
	Элементы.ТаблицаЧерновиковНеподписанные.Обновить();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПометитьНаУдалениеНаСервере(Документ)
	
	 Документ = Документ.ПолучитьОбъект();
	 Документ.ПометкаУдаления = Истина;
	 Документ.Записать();
	 
КонецПроцедуры
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ИзменениеЛистка" Тогда
		Обновить("");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОГРННачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОГРНЗавершениеВыбора", ЭтаФорма);
	ОткрытьФорму("Справочник.Филиалы.ФормаВыбора", , ЭтаФорма, , , ,ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОГРНЗавершениеВыбора(Результат, Данные) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ОГРН = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Результат, "ОГРН");
		Обновить(Неопределено);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти