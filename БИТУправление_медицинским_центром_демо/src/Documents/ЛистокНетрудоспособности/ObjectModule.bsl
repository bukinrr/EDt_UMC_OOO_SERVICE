#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	// Заполняем служебный реквизит ДатаОкончания автоматически
	ДатаОкончания = Макс(Запись1ДатаОкончания, Запись2ДатаОкончания, Запись3ДатаОкончания);
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Обмен ФСС
	Если ЭтотОбъект.ЭлектронныйБольничный Тогда	
		РегистрыСведений.ПулыНомеровЭЛН.ЗафиксироватьНомерВПуле(Номер);	
	КонецЕсли;
	
	// Нужно для того, чтобы при первоначальном заполнении не выполнять проверки.
	Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка)
		И Не ЗначениеЗаполнено(ЭтотОбъект.Ссылка.ПервичныйЛисток)
		И (ЭтотОбъект.МестоРаботыВидЗанятости = 1
			Или ЭтотОбъект.Дубликат 
			Или Не ЭтотОбъект.Первичный)
	Тогда
		Возврат;
	КонецЕсли;
	
	// Заполняем реквизит ПервичныйЛисток
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ПервичныйЛисток) Тогда
		// Нужно определить листок, на основании которого создан этот.
		Если ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование) 
			И ТипЗнч(ЭтотОбъект.ДокументОснование) = Тип("ДокументСсылка.ЛистокНетрудоспособности") 
		Тогда
			ЭтотОбъект.ПервичныйЛисток = ?(ЗначениеЗаполнено(ЭтотОбъект.ДокументОснование),
				ЭтотОбъект.ДокументОснование.ПервичныйЛисток,
				ЭтотОбъект.ДокументОснование.Ссылка);
		ИначеЕсли ТипЗнч(ЭтотОбъект.ДокументОснование) = Тип("Строка") Тогда
			Попытка
				ЭтотОбъект.ПервичныйЛисток = Число(ЭтотОбъект.ДокументОснование);
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект.Дубликат Тогда
		СвернутьДанныеОсвобожденияОтРаботы();
	КонецЕсли;
		
	Если ПометкаУдаления И РабочийКонтур Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Объект", Ссылка);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС
		|ИЗ
		|	РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
		|ГДЕ
		|	СтатусыОбменаФСС.Объект = &Объект";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			Если ЗначениеЗаполнено(Выборка.СтатусФСС)
				И Выборка.СтатусФСС <> Перечисления.СтатусыФСС.ДействияПрекращены
			Тогда
				Отказ = Истина;
				ОбщегоНазначения.СообщитьПользователю("Невозможно удалить отправленный в ФСС документ");
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДиагнозПоМКБ10) Тогда
		ДиагнозПоМКБ10 = Справочники.Диагнозы.ПустаяСсылка();
	КонецЕсли;
	
	Для Каждого Эл Из ДанныеПоУходуЗаРодственниками Цикл
		Если Не ЗначениеЗаполнено(Эл.ДиагнозПоМКБ10) Тогда
			Эл.ДиагнозПоМКБ10 = Справочники.Диагнозы.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЭтотОбъект.ЭлектронныйБольничный = Истина;
	ЭтотОбъект.ЭлектронныеПодписиОбменаФСС.Очистить();
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения <> Неопределено Тогда
		Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения);
			Если Не ЗначениеЗаполнено(Прием) Тогда
				ДанныеЗаполнения.Свойство("Основание", Прием);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ЭтотОбъект.Пол) Тогда
				ЭтотОбъект.Пол = ЭтотОбъект.Клиент.Пол;	
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ЭтотОбъект.СНИЛС) Тогда
				ЭтотОбъект.СНИЛС = ЭтотОбъект.Клиент.СНИЛС;	
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ЛистокНетрудоспособности") Тогда
			
			НеКопируемыеПоляЗаписи = "Запись1Врач, Запись1ВрачДолжность, Запись1ДатаНачала, Запись1ДатаОкончания, Запись1ПредседательВК
									|,Запись2Врач, Запись2ВрачДолжность, Запись2ДатаНачала, Запись2ДатаОкончания, Запись2ПредседательВК
									|,Запись3Врач, Запись3ВрачДолжность, Запись3ДатаНачала, Запись3ДатаОкончания, Запись3ПредседательВК
									|,СтационарДатаНачала, СтационарДатаОкончания";
			
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеЗаполнения,,"Номер, Дата, Ответственный, Статус, ДатаЗакрытия, Дубликат, ВзаменРанееВыданного" + "," + НеКопируемыеПоляЗаписи);
			ЭтотОбъект.ДокументОснование = ДанныеЗаполнения.Ссылка;
			ЭтотОбъект.Первичный = Ложь;
			
			Если ЗначениеЗаполнено(ДанныеЗаполнения.Клиент)
				И ОбщегоНазначенияКлиентСервер.ПолучитьПолноеЧислоЛетСДаты(ЭтотОбъект.Клиент.ДатаРождения, ЭтотОбъект.Дата) < 18 
			Тогда
				Для Каждого СтрокаУхода Из ДанныеЗаполнения.ДанныеПоУходуЗаРодственниками Цикл
					ЗаполнитьЗначенияСвойств(ДанныеПоУходуЗаРодственниками.Добавить(), СтрокаУхода);	
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ЭтотОбъект.Запись1ДатаНачала = ТекущаяДатаСеанса();
	ЭтотОбъект.Дата = ТекущаяДатаСеанса();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	// Нужно для того, чтобы при первоначальном заполнении не выполнять проверки.
	Если ЗначениеЗаполнено(ЭтотОбъект.Ссылка)
		И Не ЗначениеЗаполнено(ЭтотОбъект.Ссылка.ПервичныйЛисток)
		И (ЭтотОбъект.МестоРаботыВидЗанятости = 1 Или ЭтотОбъект.Дубликат Или Не ЭтотОбъект.Первичный)
	Тогда
		Возврат;
	КонецЕсли;
	
	НомерУникален = ПроверитьУникальностьНомераЛисткаНетрудоспособности();
	Если Не ЭтотОбъект.ЭлектронныйБольничный И Не НомерУникален Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru='Листок нетрудоспособности с номером « "+ЭтотОбъект.Номер+" » уже введен в базу.    
		|Проверьте правильность ввода.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
	Если ТипЗнч(ЭтотОбъект.ПервичныйЛисток) = Тип("Число") И ЗначениеЗаполнено(ЭтотОбъект.ПервичныйЛисток) Тогда
		// Проверим контрольную сумму номера предыдущего листка
		Ответ = Документы.ЛистокНетрудоспособности.ПроверитьСуществованиеНомераЛисткаВИнформационнойБазе(ЭтотОбъект.ПервичныйЛисток);
		Если Ответ <> Неопределено Тогда
			Отказ = Истина;
			ТекстСообщения = НСтр("ru='Номер предыдущего листка нетрудоспособности уже используется в документе « "+Ответ+" ».    
			|Для создания продолжения листка нетрудоспособности воспользуйтесь кнопкой «Создать на основании» в списке документов.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;		
	
	// Возраст - от 14 до 99
	Если ЗначениеЗаполнено(ЭтотОбъект.ДатаРождения) Тогда
		ВозрастЛет = Год(ЭтотОбъект.Дата) - Год(ЭтотОбъект.ДатаРождения) 
			- ?(ДеньГода(ЭтотОбъект.Дата) < ДеньГода(ЭтотОбъект.ДатаРождения),1,0);
		Если ВозрастЛет < 14 ИЛИ ВозрастЛет > 100 Тогда
			ТекстСообщения = НСтр("ru='Возраст пациента должен быть от 14 до 99.'");
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "ДатаРождения";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Текст = "Возраст пациента должен быть от 14 до 99.";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.ЛПУОГРН) Тогда
		Если НЕ (СтрДлина(ЭтотОбъект.ЛПУОГРН) = 15 ИЛИ СтрДлина(ЭтотОбъект.ЛПУОГРН) = 13) Тогда
			ТекстСообщения = НСтр("ru='ОГРН должен быть 13 или 15 символов.'");
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Поле = "ЛПУОГРН";
			Сообщение.УстановитьДанные(ЭтотОбъект);
			Сообщение.Текст = "ОГРН должен быть 13 или 15 символов.";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ЛПУИмя) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""ЛПУ"" не заполнено";
		Отказ = Истина;
		Сообщение.Сообщить();
	КонецЕсли; 
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.ЛПУАдрес) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Адрес"" не заполнено";
		Отказ = Истина;
		Сообщение.Сообщить();
	КонецЕсли;
	
	Родственник1Заполнен = ДанныеПоУходуЗаРодственниками.Количество()>0;
	
	Если (ЭтотОбъект.ПричинаНетрудоспособности.Код = "09"
			ИЛИ ЭтотОбъект.ПричинаНетрудоспособности.Код = "13"
			ИЛИ ЭтотОбъект.ПричинаНетрудоспособности.Код = "14"
			ИЛИ ЭтотОбъект.ПричинаНетрудоспособности.Код = "15")
										И НЕ Родственник1Заполнен Тогда
		ПолеСтр = "Родственник";
		ТекстСообщения = НСтр("ru='Для выбранной причины нетрудоспособности необходимо заполнить данные хотя бы по одному родственнику.'");
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Поле = ПолеСтр;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Запись1ДатаОкончания) И Не ЗначениеЗаполнено(ЭтотОбъект.Запись1ДатаНачала)
		ИЛИ ЗначениеЗаполнено(ЭтотОбъект.Запись1ДатаОкончания) 
				И ЗначениеЗаполнено(ЭтотОбъект.Запись1ДатаНачала) 
				И ЭтотОбъект.Запись1ДатаНачала > ЭтотОбъект.Запись1ДатаОкончания Тогда
		ТекстСообщения = НСтр("ru='Некорректно задан период освобождения от работы. Должны быть введены обе даты, и дата окончания должна быть больше даты начала.'");
		Сообщение = Новый СообщениеПользователю;
		ПолеСтр = "Запись1ДатаОкончания";
		Сообщение.Поле = ПолеСтр;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаОкончания) И Не ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаНачала)
		ИЛИ Не ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаОкончания) И ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаНачала)
		ИЛИ ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаОкончания) 
				И ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаНачала) 
				И ЭтотОбъект.Запись2ДатаНачала > ЭтотОбъект.Запись2ДатаОкончания Тогда
		ТекстСообщения = НСтр("ru='Некорректно задан период освобождения от работы. Должны быть введены обе даты, и дата окончания должна быть больше даты начала.'");
		Сообщение = Новый СообщениеПользователю;
		ПолеСтр = "Запись2ДатаОкончания";
		Сообщение.Поле = ПолеСтр;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаОкончания) И Не ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаНачала)
		ИЛИ Не ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаОкончания) И ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаНачала)
		ИЛИ ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаОкончания) 
				И ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаНачала) 
				И ЭтотОбъект.Запись3ДатаНачала > ЭтотОбъект.Запись3ДатаОкончания Тогда
		ТекстСообщения = НСтр("ru='Некорректно задан период освобождения от работы. Должны быть введены обе даты, и дата окончания должна быть больше даты начала.'");
		Сообщение = Новый СообщениеПользователю;
		ПолеСтр = "Запись3ДатаОкончания";
		Сообщение.Поле = ПолеСтр;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если (ЭтотОбъект.ВидЛистка = Перечисления.ВидыЛистковНетрудоспособности.ДругогоЛПУ Или
		ЭтотОбъект.ВидЛистка = Перечисления.ВидыЛистковНетрудоспособности.ПродолжениеДругогоЛПУ) И
		НЕ ЗначениеЗаполнено(ЭтотОбъект.Филиал)
	Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо указать медицинскую организацию, выдавшую  листок нетрудоспособности.";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	// Проверяем даты
	Если ЗначениеЗаполнено(ЭтотОбъект.СтационарДатаОкончания)
			И ЗначениеЗаполнено(ЭтотОбъект.ДатаНачалаРаботы)
			И ЭтотОбъект.СтационарДатаОкончания > ЭтотОбъект.ДатаНачалаРаботы Тогда
			
		ТекстСообщения = НСтр("ru='Дата окончания нахождения в стационаре должна быть раньше даты «Приступить к работе».'");
		Сообщение = Новый СообщениеПользователю;
		ПолеСтр = "СтационарДатаОкончания";
		Сообщение.Поле = ПолеСтр;
		Сообщение.УстановитьДанные(ЭтотОбъект);
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЭтотОбъект.СНИЛС) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""СНИЛС"" не заполнено";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭлектронныйБольничный 
		И ВидЛистка <> Перечисления.ВидыЛистковНетрудоспособности.Первичный 
		И ТипЗнч(ДокументОснование) = Тип("Строка")
		И СтрДлина(ДокументОснование) <> 12
	Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Предыдущий ЛН"" заполнено некорректно: длина номера должна быть 12 цифр";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли;
	
	Если ЭлектронныйБольничный 
		И ВидЛистка <> Перечисления.ВидыЛистковНетрудоспособности.Первичный 
		И Не ЗначениеЗаполнено(ДокументОснование)
	Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Поле ""Предыдущий ЛН"" не заполнено";
		Сообщение.Сообщить();
		Отказ = Истина;
	КонецЕсли; 
	
	// Проверка целостности периода нетрудоспособности
	ПричинаНетрудоспособности10 = Справочники.ПричиныНетрудоспособности.НайтиПоКоду(10);	
	Если ЭлектронныйБольничный 
		И ЗначениеЗаполнено(ПричинаНетрудоспособности10) 
		И ПричинаНетрудоспособности <> ПричинаНетрудоспособности10 
	Тогда
		Если (ЗначениеЗаполнено(Запись2ДатаНачала)
	    	И НачалоДня(Запись2ДатаНачала) <> НачалоДня(Запись1ДатаОкончания) + 86400)
			Или (ЗначениеЗаполнено(Запись3ДатаНачала)
	    	И НачалоДня(Запись3ДатаНачала) <> НачалоДня(Запись2ДатаОкончания) + 86400)
		Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Освобождение от работы может иметь промежутки между периодами только при коде нетрудоспособности 10!";
			Сообщение.Сообщить();
			Отказ = Истина;
		КонецЕсли;
		
		Если ВидЛистка <> Перечисления.ВидыЛистковНетрудоспособности.Первичный
			И ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ЛистокНетрудоспособности")		
		Тогда
			ДатаОкончанияОснования = ?(ЗначениеЗаполнено(ДокументОснование.Запись2ДатаОкончания), ДокументОснование.Запись2ДатаОкончания, ДокументОснование.Запись1ДатаОкончания);
			ДатаОкончанияОснования = ?(ЗначениеЗаполнено(ДокументОснование.Запись3ДатаОкончания),ДокументОснование.Запись3ДатаОкончания, ДатаОкончанияОснования);
			
			ДатаОкончанияПериодаНетрудоспособности = ?(ЗначениеЗаполнено(Запись2ДатаОкончания), Запись2ДатаОкончания, Запись1ДатаОкончания);
			ДатаОкончанияПериодаНетрудоспособности = ?(ЗначениеЗаполнено(Запись3ДатаОкончания),Запись3ДатаОкончания, ДатаОкончанияПериодаНетрудоспособности);	
			Если НачалоДня(ДатаОкончанияПериодаНетрудоспособности) <> НачалоДня(ДатаОкончанияОснования) + 86400 Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Между датой окончания периода нетрудоспособности предыдущего листа и датой начала периода нетрудоспособности этого листа существует промежуток!";
				Сообщение.Сообщить();						  
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

Функция ЗависимыйЛН(БезУчетаИспорченных = Ложь) Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЛистокНетрудоспособности.Ссылка
	|ИЗ
	|	Документ.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
	|ГДЕ
	|	ЛистокНетрудоспособности.ПервичныйЛисток = &ПервичныйЛисток
	|	И (&БезУчетаИспорченных
	|			ИЛИ ЛистокНетрудоспособности.Статус <> ЗНАЧЕНИЕ(Перечисление.СтатусыЛистковНетрудоспособности.Испорчен))";
	
	Запрос.УстановитьПараметр("ПервичныйЛисток", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("БезУчетаИспорченных", БезУчетаИспорченных);
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда 
		Возврат ВыборкаДетальныеЗаписи.Ссылка;
	Иначе
		Возврат Документы.ЛистокНетрудоспособности.ПустаяСсылка();
	КонецЕсли;

КонецФункции

Процедура ИзменениеДанныхВЗависимыхЛН(ОстальныеДанные, Знач ОбработанныеЛН) Экспорт
	
	Если ОстальныеДанные.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЛН.Ссылка,
		|	ВЫБОР
		|		КОГДА ЛН.МестоРаботыВидЗанятости = 1
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ПоСовместительству,
		|	ЛН.Дубликат
		|ИЗ
		|	Документ.ЛистокНетрудоспособности КАК ЛН
		|ГДЕ
		|	ЛН.ПервичныйЛисток = &ПервичныйЛисток
		|	И НЕ ЛН.Ссылка В (&СписокЛН)"
	;
	Запрос.УстановитьПараметр("ПервичныйЛисток", ЭтотОбъект.Ссылка.ПервичныйЛисток);
	Запрос.УстановитьПараметр("СписокЛН", ОбработанныеЛН);
	Выборка = Запрос.Выполнить().Выбрать();
	
	// В л/н по совместительству не обновляем "место работы" и "на учете в орг зан".
	ДанныеДляЛНПоСовместительству = Новый Структура;
	Для Каждого Эл Из ОстальныеДанные Цикл
		Если Эл.Ключ <> "НаУчетеВОрганахЗанятости" И
			Эл.Ключ <> "МестоРаботы" Тогда
			ДанныеДляЛНПоСовместительству.Вставить(Эл.Ключ, Эл.Значение);
		КонецЕсли;
	КонецЦикла;
	
	// Формируем строки из имен реквизитов, которые будут обновлены в листках.
	Стр1 = "";
	Стр2 = "";
	Если Выборка.Количество() > 0 Тогда
		Для Каждого Эл Из ОстальныеДанные Цикл
			Стр1 = Стр1 + "«" + Эл.Ключ + "», ";
			Если Эл.Ключ <> "МестоРаботы" И Эл.Ключ <> "НаУчетеВОрганахЗанятости" Тогда
				Стр2 = Стр2 + "«" + Эл.Ключ + "», "; 
			КонецЕсли;
		КонецЦикла;
		Стр1 = Сред(Стр1, 1, СтрДлина(Стр1) - 2);
		Стр2 = Сред(Стр2, 1, СтрДлина(Стр2) - 2);
	КонецЕсли; 
	
	// Цикл по обновляемым л/н
	Пока Выборка.Следующий() Цикл
		Если ОбработанныеЛН.Найти(Выборка.Ссылка) <> Неопределено 
				ИЛИ Выборка.Дубликат И ОстальныеДанные.Количество() = 0 
				ИЛИ Выборка.ПоСовместительству И ДанныеДляЛНПоСовместительству.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			НачатьТранзакцию();
			ЛН = Выборка.Ссылка.ПолучитьОбъект();
			ЗаполнитьЗначенияСвойств(ЛН, ?(Выборка.ПоСовместительству, ДанныеДляЛНПоСовместительству, ОстальныеДанные));
			
			// Обрабатываем ситуацию: когда полностью удалили вторую (третью) строчку освобождения от работы, 
			// то в дубликате нужно обновить дату окончания в первой (второй) строчке.
			Если ЛН.Дубликат Тогда
				Если ОстальныеДанные.Свойство("Запись2ДатаОкончания") 
						И Не ЗначениеЗаполнено(ЭтотОбъект.Запись2ДатаОкончания) Тогда
					ЛН.Запись1ДатаОкончания = ЭтотОбъект.Запись1ДатаОкончания;
					Стр2 = Стр2 + ", «Запись1ДатаОкончания»";
				ИначеЕсли ОстальныеДанные.Свойство("Запись3ДатаОкончания") 
						И Не ЗначениеЗаполнено(ЭтотОбъект.Запись3ДатаОкончания) Тогда
					ЛН.Запись1ДатаОкончания = ЭтотОбъект.Запись2ДатаОкончания;
					Стр2 = Стр2 + ", «Запись1ДатаОкончания»"; 
				КонецЕсли;
			КонецЕсли;
			
			ЛН.Записать();
			// Выводим сообщения, что изменили
			ТекстСообщения = НСтр("ru='В документе « "+ЛН.Ссылка+" » были обновлены данные: '"+ ?(Выборка.ПоСовместительству, Стр2, Стр1)+".");
			Сообщение = Новый СообщениеПользователю;
			Сообщение.КлючДанных = ЛН.Ссылка; 
			Сообщение.Текст = ТекстСообщения;
			Сообщение.Сообщить();
			
			ОбработанныеЛН.Добавить(ЛН.Ссылка);
			// Если это л/н дубликат или по совместительству, тогда обновляем данные в зависимых л/н.
			Если (Выборка.Дубликат И ОстальныеДанные.Количество() > 0) 
					ИЛИ (Выборка.ПоСовместительству И ДанныеДляЛНПоСовместительству.Количество() > 0) Тогда	
				ЛН.ИзменениеДанныхВЗависимыхЛН(
					?(Выборка.ПоСовместительству, ДанныеДляЛНПоСовместительству, ОстальныеДанные), 
					ОбработанныеЛН
				);
			КонецЕсли;
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
		КонецПопытки;
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПроверитьУникальностьНомераЛисткаНетрудоспособности()
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЛистокНетрудоспособности.Ссылка
		|ИЗ
		|	Документ.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
		|ГДЕ
		|	ЛистокНетрудоспособности.Номер = &Номер
		|	И ЛистокНетрудоспособности.Номер <> 0
		|	И ЛистокНетрудоспособности.Ссылка <> &Ссылка"
	;
	Запрос.УстановитьПараметр("Номер", ЭтотОбъект.Номер);
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат (Результат.Количество() = 0);
	
КонецФункции

Процедура СвернутьДанныеОсвобожденияОтРаботы()
	Если Не ЭтотОбъект.Дубликат Тогда
		Возврат;
	КонецЕсли;
	ЭтотОбъект.Запись1ДатаОкончания = Макс(ЭтотОбъект.Запись1ДатаОкончания, 
										ЭтотОбъект.Запись2ДатаОкончания, ЭтотОбъект.Запись3ДатаОкончания);
	// Очищаем вторую и третью строчки освобождения от работы 
	ЭтотОбъект.Запись2ДатаНачала = Дата(1, 1, 1);
	ЭтотОбъект.Запись2ДатаОкончания = Дата(1, 1, 1);
	ЭтотОбъект.Запись2Врач = "";
	ЭтотОбъект.Запись2ПредседательВК = "";
	ЭтотОбъект.Запись3ДатаНачала = Дата(1, 1, 1);
	ЭтотОбъект.Запись3ДатаОкончания = Дата(1, 1, 1);
	ЭтотОбъект.Запись3Врач = "";
	ЭтотОбъект.Запись3ПредседательВК = "";
КонецПроцедуры

#КонецОбласти
