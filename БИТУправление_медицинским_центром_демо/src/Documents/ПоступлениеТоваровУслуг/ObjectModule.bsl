#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ВариантПолучателяЗатрат = Перечисления.ВариантыПолучателяПоступившихЗатрат.НоменклатураЗатраты Тогда
		Для Каждого СтрокаУслуги Из Услуги Цикл 
			Если ЗначениеЗаполнено(СтрокаУслуги.НоменклатураПолучатель) Тогда 
				СтрокаУслуги.НоменклатураПолучатель = Справочники.Номенклатура.ПустаяСсылка();
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;		
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Если ИнтеграцияМДЛПВызовСервера_БИТ.ВедетсяУчетМДЛП()
			И Склад.ТипСклада = Перечисления.ТипыСкладов.Отделение
		Тогда
			Для Каждого СтрокаТоваров Из Товары Цикл
				Если СтрокаТоваров.СерияНоменклатуры.СерияПромаркированаДляЦелейМДЛП Тогда
					Отказ = Истина;
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Нельзя оформлять поступления серий маркированных лекарств на склад отделения!'"));
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Перем ТаблицаПоТоварам;
	
	ПроведениеДокументов.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = НСтр("ru='Проведение документа'");
	Заголовок = Заголовок + " """ + СокрЛП(Ссылка) + """: ";
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	СтруктураОбязательныхПолей = Новый Структура;
	Если Товары.Количество() > 0 Тогда
		СтруктураОбязательныхПолей.Вставить("Склад");
	КонецЕсли;
	ПроведениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	ПроверитьЗаполнениеТабличнойЧастиТовары(Товары.Выгрузить(), СтруктураШапкиДокумента, Отказ, Заголовок, "Товары");	
	
	СтруктураОбязательныхПолей = Новый Структура();
	СтруктураОбязательныхПолей.Вставить("СтатьяЗатрат");
	СтруктураОбязательныхПолей.Вставить("Сумма");
	ПроведениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Услуги", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		
		// Движения по регистру ПартииТоваровНаСкладах
		ПроведениеДокументов.ПодготовитьТаблицуТоварыДокумента(ЭтотОбъект, ТаблицаПоТоварам);
		ПартионныйУчет.пуОприходованиеПартийТоваров(СтруктураШапкиДокумента, ТаблицаПоТоварам, Движения.ПартииТоваровНаСкладах);
		
		// Движения по регистру ВзаиморасчетыСКонтрагентами
		Движение = Движения.ВзаиморасчетыСКонтрагентами.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Контрагент = Контрагент;
		Движение.Сумма = СуммаДокумента;
		
		// Движения по регистру затрат
		Для Каждого ТекСтрокаУслуги Из Услуги Цикл
			
			Движение = Движения.Затраты.Добавить();
			Движение.Регистратор  = Ссылка;
			Движение.Период		  = Дата;
			ЗаполнитьЗначенияСвойств(Движение,ТекСтрокаУслуги,,"НомерСтроки");
			
			Если ВариантПолучателяЗатрат = Перечисления.ВариантыПолучателяПоступившихЗатрат.НоменклатураЗатраты Тогда 
				Движение.НоменклатураПолучатель = ТекСтрокаУслуги.Номенклатура; 	
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ОбработкаПроведения

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.УведомлениеОПриемкеМДЛП") Тогда
		ЗаполнитьДокументНаОснованииУведомленияОПриемке(ДанныеЗаполнения);
	ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.УведомлениеОбОприходованииМДЛП") Тогда
		ЗаполнитьДокументНаОснованииУведомленияОбОприходовании(ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьЗаполнениеТабличнойЧастиТовары(ТаблицаПоТоварам, СтруктураШапкиДокумента, Отказ, Заголовок, ИмяТабличнойЧасти = "Товары")

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Количество, ЕдиницаИзмерения, Сумма");
	                                                        
	// Общая процедура проверки.
	ПроведениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, ИмяТабличнойЧасти, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Здесь услуг быть не должно.
	РаботаСДокументамиСервер.ПроверитьЧтоНетУслуг(ЭтотОбъект, ИмяТабличнойЧасти, ТаблицаПоТоварам, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

#Область МДЛП

Процедура ЗаполнитьДокументНаОснованииУведомленияОПриемке(ДокументОснование)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДанныеДокумента.Ссылка КАК Основание,
	                      |	ДанныеДокумента.Организация КАК ОрганизацияМДЛП,
	                      |	ДанныеДокумента.МестоДеятельности КАК МестоДеятельности,
	                      |	ДанныеДокумента.Грузоотправитель КАК КонтрагентМДЛП,
	                      |	ДанныеДокумента.МестоДеятельностиГрузоотправителя КАК МестоДеятельностиКонтрагента,
	                      |	ДанныеДокумента.НомерДокумента КАК НомерВходящегоДокумента,
	                      |	ДанныеДокумента.ДатаДокумента КАК ДатаВходящегоДокумента,
	                      |	ИСТИНА КАК ЦенаВключаетНДС,
	                      |	НЕ ДанныеДокумента.Проведен КАК ЕстьОшибкиПроведен
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП КАК ДанныеДокумента
	                      |ГДЕ
	                      |	ДанныеДокумента.Ссылка = &ДокументОснование
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	УпаковкиТовара.ИдентификаторСтроки КАК ИдентификаторСтроки,
	                      |	КОЛИЧЕСТВО(1) КАК Количество
	                      |ПОМЕСТИТЬ ПринятыеУпаковкиТовара
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК УпаковкиТовара
	                      |ГДЕ
	                      |	УпаковкиТовара.Ссылка = &ДокументОснование
	                      |	И НЕ УпаковкиТовара.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется))
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	УпаковкиТовара.ИдентификаторСтроки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	                      |	ТаблицаТовары.Номенклатура КАК Номенклатура,
	                      |	ТаблицаТовары.Серия КАК СерияНоменклатуры,
	                      |	ПринятыеУпаковкиТовара.Количество КАК КоличествоВЕдиницахИзмерения,
	                      |	ТаблицаТовары.Количество КАК КоличествоУпаковокПоДокументу,
	                      |	ТаблицаТовары.Номенклатура.Упаковка КАК ЕдиницаИзмерения,
	                      |	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	                      |	ТаблицаТовары.Количество КАК Количество,
	                      |	ТаблицаТовары.Цена КАК Цена,
	                      |	ТаблицаТовары.Сумма КАК Сумма,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаТовары.СуммаНДС = 0
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	                      |		ИНАЧЕ ТаблицаТовары.Номенклатура.ВидСтавкиНДС
	                      |	КОНЕЦ КАК ВидСтавкиНДС,
	                      |	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	                      |	ТаблицаТовары.Сумма КАК СуммаСНДС,
	                      |	ЕдиницыИзмерения.СостоитИзДругихУпаковок КАК СостоитИзДругихУпаковок,
	                      |	ЕдиницыИзмерения.Коэффициент КАК ЕмкостьУпаковки,
	                      |	ЕдиницыИзмерения.КоличествоВУпаковке КАК КоличествоВУпаковке,
	                      |	ЕдиницыИзмерения.ВложеннаяУпаковка КАК ВложеннаяУпаковка,
	                      |	ЕдиницыИзмерения.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ТаблицаТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |		ПО ТаблицаТовары.Номенклатура.Упаковка = ЕдиницыИзмерения.Ссылка
	                      |			И ТаблицаТовары.Номенклатура = ЕдиницыИзмерения.Владелец
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПринятыеУпаковкиТовара КАК ПринятыеУпаковкиТовара
	                      |		ПО ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	                      |ГДЕ
	                      |	ТаблицаТовары.Ссылка = &ДокументОснование
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ТаблицаТовары.ИдентификаторСтроки,
	                      |	ТаблицаТовары.Номенклатура,
	                      |	ТаблицаТовары.Серия,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Номенклатура.Упаковка,
	                      |	ЕдиницыИзмерения.Коэффициент,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Цена,
	                      |	ТаблицаТовары.Сумма,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаТовары.СуммаНДС = 0
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	                      |		ИНАЧЕ ТаблицаТовары.Номенклатура.ВидСтавкиНДС
	                      |	КОНЕЦ,
	                      |	ТаблицаТовары.СуммаНДС * ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Сумма,
	                      |	ЕдиницыИзмерения.СостоитИзДругихУпаковок,
	                      |	ЕдиницыИзмерения.Коэффициент,
	                      |	ЕдиницыИзмерения.КоличествоВУпаковке,
	                      |	ЕдиницыИзмерения.ВложеннаяУпаковка,
	                      |	ЕдиницыИзмерения.БазоваяЕдиницаИзмерения
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |		ПО ТаблицаТовары.Номенклатура.Упаковка = ЕдиницыИзмерения.Ссылка
	                      |			И ТаблицаТовары.Номенклатура = ЕдиницыИзмерения.Владелец
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ПринятыеУпаковкиТовара
	                      |		ПО ТаблицаТовары.Ссылка = ПринятыеУпаковкиТовара.Ссылка
	                      |			И ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	                      |			И (НЕ ПринятыеУпаковкиТовара.СостояниеПодтверждения В (ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется)))
	                      |ГДЕ
	                      |	ТаблицаТовары.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(РеквизитыШапки.Основание, РеквизитыШапки.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
	
	Субъект = ИнтеграцияМДЛПМедицина_БИТ.ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.ОрганизацияМДЛП, РеквизитыШапки.МестоДеятельности, Истина);
	Филиал		= Субъект.Организация;
	Склад		= Субъект.Склад;
	
	// Учет в разрезе мест деятельности контрагентов не ведется, значит определяем только по контрагентуМДЛП
	Субъект	= ИнтеграцияМДЛПМедицина_БИТ.ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.КонтрагентМДЛП, , Ложь);
	Контрагент	= Субъект.Организация;
	
	ВыборкаТовары = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТовара = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ВыборкаТовары);
		
		// Считаем, что стандартным интерфейсом пользователь не способен сделать Упаковку, ссылающуюся на неактуальную ЕХО данной Номенклатуры
		ЕХО = СтрокаТовара.Номенклатура.ЕдиницаХраненияОстатков;
		КоэффициентЕХО = ЕХО.Коэффициент;
		КоэфициентУпаковки = ПолучитьКоэффициентУпаковки(ВыборкаТовары.ЕдиницаИзмерения);		
		
		СтрокаТовара.ЕдиницаИзмерения	= ЕХО;
		СтрокаТовара.Коэффициент	= КоэффициентЕХО;
		СтрокаТовара.Количество		= СтрокаТовара.Количество * КоэфициентУпаковки;
		СтрокаТовара.Цена			= ?(СтрокаТовара.Количество = 0, СтрокаТовара.Цена, СтрокаТовара.Сумма / СтрокаТовара.Количество);
	КонецЦикла;
	
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

Процедура ЗаполнитьДокументНаОснованииУведомленияОбОприходовании(ДокументОснование)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ДанныеДокумента.Ссылка КАК Основание,
	                      |	ДанныеДокумента.Организация КАК ОрганизацияМДЛП,
	                      |	ДанныеДокумента.МестоДеятельности КАК МестоДеятельности,
	                      |	ДанныеДокумента.Грузоотправитель КАК КонтрагентМДЛП,
	                      |	ДанныеДокумента.МестоДеятельностиГрузоотправителя КАК МестоДеятельностиКонтрагента,
	                      |	ДанныеДокумента.НомерДокумента КАК НомерВходящегоДокумента,
	                      |	ДанныеДокумента.ДатаДокумента КАК ДатаВходящегоДокумента,
	                      |	ИСТИНА КАК ЦенаВключаетНДС,
	                      |	НЕ ДанныеДокумента.Проведен КАК ЕстьОшибкиПроведен
	                      |ИЗ
	                      |	Документ.УведомлениеОбОприходованииМДЛП КАК ДанныеДокумента
	                      |ГДЕ
	                      |	ДанныеДокумента.Ссылка = &ДокументОснование
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	УпаковкиТовара.ИдентификаторСтроки КАК ИдентификаторСтроки,
	                      |	КОЛИЧЕСТВО(1) КАК Количество
	                      |ПОМЕСТИТЬ ПринятыеУпаковкиТовара
	                      |ИЗ
	                      |	Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК УпаковкиТовара
	                      |ГДЕ
	                      |	УпаковкиТовара.Ссылка = &ДокументОснование
	                      |	И НЕ УпаковкиТовара.СостояниеПолученияИнформации В (ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется))
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	УпаковкиТовара.ИдентификаторСтроки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	                      |	ТаблицаТовары.Номенклатура КАК Номенклатура,
	                      |	ТаблицаТовары.Серия КАК СерияНоменклатуры,
	                      |	ПринятыеУпаковкиТовара.Количество КАК КоличествоВЕдиницахИзмерения,
	                      |	ТаблицаТовары.Количество КАК КоличествоУпаковокПоДокументу,
	                      |	ТаблицаТовары.Номенклатура.Упаковка КАК ЕдиницаИзмерения,
	                      |	ЕдиницыИзмерения.Коэффициент КАК Коэффициент,
	                      |	ТаблицаТовары.Количество КАК Количество,
	                      |	ТаблицаТовары.Цена КАК Цена,
	                      |	ТаблицаТовары.Сумма КАК Сумма,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаТовары.СуммаНДС = 0
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	                      |		ИНАЧЕ ТаблицаТовары.Номенклатура.ВидСтавкиНДС
	                      |	КОНЕЦ КАК ВидСтавкиНДС,
	                      |	ТаблицаТовары.СуммаНДС КАК СуммаНДС,
	                      |	ТаблицаТовары.Сумма КАК СуммаСНДС,
	                      |	ЕдиницыИзмерения.СостоитИзДругихУпаковок КАК СостоитИзДругихУпаковок,
	                      |	ЕдиницыИзмерения.Коэффициент КАК ЕмкостьУпаковки,
	                      |	ЕдиницыИзмерения.КоличествоВУпаковке КАК КоличествоВУпаковке,
	                      |	ЕдиницыИзмерения.ВложеннаяУпаковка КАК ВложеннаяУпаковка,
	                      |	ЕдиницыИзмерения.БазоваяЕдиницаИзмерения КАК БазоваяЕдиницаИзмерения
	                      |ИЗ
	                      |	Документ.УведомлениеОбОприходованииМДЛП.Товары КАК ТаблицаТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |		ПО ТаблицаТовары.Номенклатура.Упаковка = ЕдиницыИзмерения.Ссылка
	                      |			И ТаблицаТовары.Номенклатура = ЕдиницыИзмерения.Владелец
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПринятыеУпаковкиТовара КАК ПринятыеУпаковкиТовара
	                      |		ПО ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	                      |ГДЕ
	                      |	ТаблицаТовары.Ссылка = &ДокументОснование
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ТаблицаТовары.ИдентификаторСтроки,
	                      |	ТаблицаТовары.Номенклатура,
	                      |	ТаблицаТовары.Серия,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Номенклатура.Упаковка,
	                      |	ЕдиницыИзмерения.Коэффициент,
	                      |	ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Цена,
	                      |	ТаблицаТовары.Сумма,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаТовары.СуммаНДС = 0
	                      |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС)
	                      |		ИНАЧЕ ТаблицаТовары.Номенклатура.ВидСтавкиНДС
	                      |	КОНЕЦ,
	                      |	ТаблицаТовары.СуммаНДС * ТаблицаТовары.Количество,
	                      |	ТаблицаТовары.Сумма,
	                      |	ЕдиницыИзмерения.СостоитИзДругихУпаковок,
	                      |	ЕдиницыИзмерения.Коэффициент,
	                      |	ЕдиницыИзмерения.КоличествоВУпаковке,
	                      |	ЕдиницыИзмерения.ВложеннаяУпаковка,
	                      |	ЕдиницыИзмерения.БазоваяЕдиницаИзмерения
	                      |ИЗ
	                      |	Документ.УведомлениеОбОприходованииМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |		ПО ТаблицаТовары.Номенклатура.Упаковка = ЕдиницыИзмерения.Ссылка
	                      |			И ТаблицаТовары.Номенклатура = ЕдиницыИзмерения.Владелец
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОбОприходованииМДЛП.ТранспортныеУпаковки КАК ПринятыеУпаковкиТовара
	                      |		ПО ТаблицаТовары.Ссылка = ПринятыеУпаковкиТовара.Ссылка
	                      |			И ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	                      |			И (НЕ ПринятыеУпаковкиТовара.СостояниеПолученияИнформации В (ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем), ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется)))
	                      |ГДЕ
	                      |	ТаблицаТовары.Ссылка = &ДокументОснование");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(РеквизитыШапки.Основание, РеквизитыШапки.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыШапки);
	
	Субъект = ИнтеграцияМДЛПМедицина_БИТ.ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.ОрганизацияМДЛП, РеквизитыШапки.МестоДеятельности, Истина);
	Филиал		= Субъект.Организация;
	Склад		= Субъект.Склад;
	
	// Учет в разрезе мест деятельности контрагентов не ведется, значит определяем только по контрагентуМДЛП
	Субъект	= ИнтеграцияМДЛПМедицина_БИТ.ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.КонтрагентМДЛП, , Ложь);
	Контрагент	= Субъект.Организация;
	
	ВыборкаТовары = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТовара = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ВыборкаТовары);
		
		// Считаем, что стандартным интерфейсом пользователь не способен сделать Упаковку, ссылающуюся на неактуальную ЕХО данной Номенклатуры
		ЕХО = СтрокаТовара.Номенклатура.ЕдиницаХраненияОстатков;
		КоэффициентЕХО = ЕХО.Коэффициент;
		КоэфициентУпаковки = ПолучитьКоэффициентУпаковки(ВыборкаТовары.ЕдиницаИзмерения);		
		
		СтрокаТовара.ЕдиницаИзмерения	= ЕХО;
		СтрокаТовара.Коэффициент	= КоэффициентЕХО;
		СтрокаТовара.Количество		= СтрокаТовара.Количество * КоэфициентУпаковки;
		СтрокаТовара.Цена			= ?(СтрокаТовара.Количество = 0, СтрокаТовара.Цена, СтрокаТовара.Сумма / СтрокаТовара.Количество);
	КонецЦикла;
	
	СуммаДокумента = Товары.Итог("Сумма");
	
КонецПроцедуры

Функция ПолучитьКоэффициентУпаковки(Упаковка) 
	Если ЗначениеЗаполнено(Упаковка) И Упаковка.СостоитИзДругихУпаковок Тогда
		Возврат Упаковка.КоличествоВУпаковке * ПолучитьКоэффициентУпаковки(Упаковка.ВложеннаяУпаковка);
	Иначе
		Возврат Упаковка.Коэффициент;
	КонецЕсли;
КонецФункции

Функция ПолучитьЕдиницуИзмеренияВложеннойУпаковки(Упаковка) 
	Если ЗначениеЗаполнено(Упаковка) И Упаковка.СостоитИзДругихУпаковок Тогда
		Возврат ПолучитьЕдиницуИзмеренияВложеннойУпаковки(Упаковка.ВложеннаяУпаковка);
	Иначе
		Возврат Упаковка.БазоваяЕдиницаИзмерения;
	КонецЕсли;
КонецФункции

#КонецОбласти // МДЛП

#КонецОбласти