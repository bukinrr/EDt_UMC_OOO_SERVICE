#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыИФункцииДляОбеспеченияПроведения

Процедура ПроверитьЗаполнениеТабличныхЧастей(ТаблицаПоТоварам, ТаблицаПоСертификатам, Отказ)

	// Общую процедуру проверки в этом документе звать нельзя, потому что номер строки в форме документа
	// отличается от системного.
	Для Каждого СтрокаТаблицы Из ТаблицаПоТоварам Цикл

		СтрокаНачалаСообщенияОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В строке табличной части Номенклатура номер %1 табличной части'"),
				СокрЛП(таблицаПоТоварам.Индекс(СтрокаТаблицы)+ 1)
			);
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " ";
		// Номенклатура.
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не заполнена Номенклатура.'"), Отказ);
		КонецЕсли;

		// Единица для товаров.
		Если ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура)		И
		  Не ЗначениеЗаполнено(СтрокаТаблицы.ЕдиницаИзмерения)	И 
		  	 СтрокаТаблицы.Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал
		Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не заполнена единица измерения.'"), Отказ);
		КонецЕсли;
	КонецЦикла;     
	
	Для Каждого СтрокаТаблицы Из ТаблицаПоСертификатам Цикл

		СтрокаНачалаСообщенияОбОшибке = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='В строке табличной части Сертификаты номер %1 табличной части'"),
				СокрЛП(ТаблицаПоСертификатам.Индекс(СтрокаТаблицы)+ 1)
			);
		СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " ";
		// Сертификат.
		Если Не ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + НСтр("ru='не заполнен Сертификат.'"), Отказ);;
		КонецЕсли;

	КонецЦикла;

КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

Процедура ДвиженияПоРегистрам(ТаблицаПоТоварам, ТаблицаПоСертификатам,Отказ)
	
	НаборДвижений   = Движения.ЦеныНоменклатуры;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
 	// Формирование движений по т/ч "Номенклатура"
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоТоварам, ТаблицаДвижений);
		
 	// Формирование движений по т/ч "Сертификаты"
	Если ВидОперации <> Перечисления.ВидыОперацийУстановкиЦен.ЦеныКонтрагентов Тогда
		ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоСертификатам, ТаблицаДвижений);
	КонецЕсли;
	
	НаборДвижений.мПериод          = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		НаборДвижений.ВыполнитьДвижения();
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам

#КонецОбласти

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		
		Для Каждого СтрокаПоступления Из Основание.Товары Цикл
			СтрокаЦен = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЦен,СтрокаПоступления);
		КонецЦикла;
		
		Для Каждого СтрокаПоступления Из Основание.Услуги Цикл
			СтрокаЦен = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЦен,СтрокаПоступления);
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		Контрагент = Справочники.Контрагенты.ПустаяСсылка();
		НесколькоКонтрагентов = Ложь;
		
		Для Каждого СтрокаПоступления Из Основание.Товары Цикл
			
			СтрокаЦен = Номенклатура.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаЦен,СтрокаПоступления);
			Если Контрагент <> СтрокаПоступления.Поставщик
				И ЗначениеЗаполнено(Контрагент)
			Тогда
				НесколькоКонтрагентов = Истина;
			ИначеЕсли Не ЗначениеЗаполнено(Контрагент) Тогда
				Контрагент = СтрокаПоступления.Поставщик;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не НесколькоКонтрагентов
			И ЗначениеЗаполнено(Контрагент)
		Тогда
			ВидОперации = Перечисления.ВидыОперацийУстановкиЦен.ЦеныКонтрагентов;
			Прейскурант = Контрагент;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОприходованиеТоваров") Тогда
		
		ВидОперации = Перечисления.ВидыОперацийУстановкиЦен.ЦеныПрейскурантов;
		
		Для Каждого СтрокаПоступления Из Основание.Товары Цикл
			
			СтрокаЦен = Номенклатура.Добавить();
			СтрокаЦен.Номенклатура = СтрокаПоступления.Номенклатура;
			СтрокаЦен.ХарактеристикаНоменклатуры = СтрокаПоступления.ХарактеристикаНоменклатуры;
			СтрокаЦен.ЕдиницаИзмерения = СтрокаПоступления.ЕдиницаИзмерения;
			СтрокаЦен.Цена = СтрокаПоступления.Цена;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Укажем обязательные к заполнению поля:
	Заголовок = НСтр("ru='Проведение документа'") + " """ + СокрЛП(Ссылка) + """: ";
	
	СтруктураОбязательныхПолей = Новый Структура();
	Если ВидОперации <> Перечисления.ВидыОперацийУстановкиЦен.ЦеныКонтрагентов Тогда
		СтруктураОбязательныхПолей.Вставить("Прейскурант");
	КонецЕсли;
	ПроведениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	СтруктураПолей = Новый Структура;
	СтруктураПолей.Вставить("Номенклатура",					"Номенклатура");
	СтруктураПолей.Вставить("ХарактеристикаНоменклатуры",	"ХарактеристикаНоменклатуры");
	СтруктураПолей.Вставить("Цена",							"Цена");
	СтруктураПолей.Вставить("ЕдиницаИзмерения",				"ЕдиницаИзмерения");
	СтруктураПолей.Вставить("Прейскурант",					"Ссылка.Прейскурант");
	
	СтруктураПолейСертификаты = Новый Структура;
	СтруктураПолейСертификаты.Вставить("Номенклатура",	"ВидСертификата");
    СтруктураПолейСертификаты.Вставить("Цена",			"Цена");
	СтруктураПолейСертификаты.Вставить("Прейскурант",	"Ссылка.Прейскурант");

	РезультатЗапросаПоТоварам = ПроведениеДокументов.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Номенклатура", СтруктураПолей);
	ТаблицаПоТоварам          = РезультатЗапросаПоТоварам.Выгрузить();
	
	РезультатЗапросаПоСертификатам	= ПроведениеДокументов.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Сертификаты", СтруктураПолейСертификаты);
	ТаблицаПоСертификатам			= РезультатЗапросаПоСертификатам.Выгрузить();

	ПроверитьЗаполнениеТабличныхЧастей(ТаблицаПоТоварам, ТаблицаПоСертификатам, Отказ);

	Если Не Отказ Тогда
		ДвиженияПоРегистрам(ТаблицаПоТоварам, ТаблицаПоСертификатам,Отказ);
	КонецЕсли;

КонецПроцедуры	// ОбработкаПроведения

#КонецОбласти
