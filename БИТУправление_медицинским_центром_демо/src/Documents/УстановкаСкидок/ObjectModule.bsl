
#Область ПрограммныйИнтерфейс

// Истина, если это накопительная скидка.
//
// Возвращаемое значение:
//  Булево.
//
Функция ТипСкидкиНакопления() Экспорт 
	
	ПВА = Перечисления.ТипыСкидок;
	Возврат ВидСкидки.ТипСкидки = ПВА.Бонусы Или ВидСкидки.ТипСкидки = ПВА.НакопительнаяСкидка;
	
КонецФункции

// Истина, если это бонусная скидка.
//
// Возвращаемое значение:
//  Булево.
//
Функция ТипСкидкиИмеетРазмерНакопления() Экспорт
	
	ПВА = Перечисления.ТипыСкидок;
	Возврат ВидСкидки.ТипСкидки = ПВА.Бонусы;
	
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Перем Заголовок;
	
	Заголовок = НСтр("ru='Проведение документа'") + " """ + СокрЛП(Ссылка) + """: ";
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ВидСкидки");
	ПроведениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	// Движения действия скидок
	Если ПоВсемФилиалам Тогда
		ДобавитьДвижениеДействияСкидок(Справочники.Филиалы.ПустаяСсылка())
	Иначе
		Для Каждого ФилиалСкидки Из Филиалы Цикл
			ДобавитьДвижениеДействияСкидок(ФилиалСкидки.Филиал);
		КонецЦикла;
	КонецЕсли;
	Движения.ДействиеСкидок.Записать();
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	ОбновитьПовторноИспользуемыеЗначения();
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ВидСкидки.ВидПолучателя <> Перечисления.ВидПолучателя.ВсеКлиенты Тогда
		ПроверяемыеРеквизиты.Добавить("Получатель");
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьДвижениеДействияСкидок(Филиал)
	
	Если ЕстьПересечениеСкидок(ВидСкидки, Получатель, Филиал) Тогда  
	КонецЕсли;
	
	Запись = Движения.ДействиеСкидок.Добавить();
	Запись.Период	 	= НачалоДня(Дата);
	Запись.Регистратор	= Ссылка;
	Запись.ВидСкидки	= ВидСкидки;
	Запись.Получатель = Получатель;
	Запись.ДатаНачалаДействия = ДатаНачалаСкидки;
	Запись.ДатаОкончанияДействия = ДатаОкончанияСкидки;
	Запись.Филиал = Филиал;
	
КонецПроцедуры

Функция ЕстьПересечениеСкидок(ВидСкидки, Получатель, Филиал)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДействиеСкидок.НомерСтроки,
	|	ДействиеСкидок.ДатаНачалаДействия,
	|	ДействиеСкидок.ДатаОкончанияДействия
	|ИЗ
	|	РегистрСведений.ДействиеСкидок КАК ДействиеСкидок
	|ГДЕ
	|	ДействиеСкидок.Филиал = &Филиал
	|	И ДействиеСкидок.Получатель = &Получатель
	|	И ДействиеСкидок.ВидСкидки = &ВидСкидки
	|	И (ДействиеСкидок.ДатаНачалаДействия <= &ДатаОкончания
	|				И ДействиеСкидок.ДатаНачалаДействия >= &ДатаНачала
	|			ИЛИ ДействиеСкидок.ДатаОкончанияДействия >= &ДатаНачала
	|				И ДействиеСкидок.ДатаОкончанияДействия <= &ДатаОкончания
	|			ИЛИ ДействиеСкидок.ДатаНачалаДействия <= &ДатаНачала
	|				И ДействиеСкидок.ДатаОкончанияДействия >= &ДатаОкончания)";
	
	Запрос.УстановитьПараметр("ВидСкидки", ВидСкидки);
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачалаСкидки);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончанияСкидки);
	Запрос.УстановитьПараметр("Получатель", Получатель);
	Если Филиал = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст,"ДействиеСкидок.Филиал = &Филиал
												|	И","");	
	Иначе
		Запрос.УстановитьПараметр("Филиал", Филиал);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
		
		ВыборкаДетальныеЗаписи.Сбросить();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='Филиал %1: обнаружено пересечение периодов действия скидок. 
							|Найдена скидка ""%2"" для получателя ""%3"" с %4 по %5'"),
					Филиал,
					ВидСкидки,
					Получатель,
					Формат(ВыборкаДетальныеЗаписи.ДатаНачалаДействия, "ДФ=dd.MM.yyyy"),
					Формат(ВыборкаДетальныеЗаписи.ДатаОкончанияДействия, "ДФ=dd.MM.yyyy"))
				); 
		КонецЦикла;	
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции	

#КонецОбласти