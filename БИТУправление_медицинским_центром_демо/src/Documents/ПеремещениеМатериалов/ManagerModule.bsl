#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Ведомость","Перемещение товаров");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "Ведомость" Тогда

		// Печать упр. формы документа
		ТабДокумент = ПечатьПеремещениеМатериалов(СсылкаНаОбъект);
	КонецЕсли;
	
	Возврат ТабДокумент;
		
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьПеремещениеМатериалов(СсылкаНаОбъект)

	ПараметрыПечати = ПолучитьДанныеДляПечатиПеремещенияМатериалов(СсылкаНаОбъект);	

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПеремещениеМатериалов_Накладная";
	Макет       = ПолучитьМакет("Накладная");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если Не ПараметрыПечати.РазличныеОтправители Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	Если Не ПараметрыПечати.РазличныеПолучатели Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	// Вывести табличную часть
	ИмяШапки  = "ШапкаТаблицы";
	ИмяСтроки = "Строка";

	ОбластьНомера  = Макет.ПолучитьОбласть(ИмяШапки + "|НомерСтроки");
	ОбластьКодов   = Макет.ПолучитьОбласть(ИмяШапки + "|КолонкаКодов");
	ОбластьТовар   = Макет.ПолучитьОбласть(ИмяШапки + "|Товар");
	ОбластьДанных  = Макет.ПолучитьОбласть(ИмяШапки + "|Данные");
	
	Если ПараметрыПечати.РазличныеОтправители Тогда
	ОбластьОтправитель = Макет.ПолучитьОбласть(ИмяШапки + "|Отправитель");
	КонецЕсли;
	Если ПараметрыПечати.РазличныеПолучатели Тогда
		ОбластьПолучатель = Макет.ПолучитьОбласть(ИмяШапки + "|Получатель");
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьНомера);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ОбластьКодов.Параметры.ИмяКолонкиКодов = ПараметрыПечати.ИмяКолонкиКодов;
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	ОбластьКолонкаТовар = Макет.Область("Товар");
	ТабДокумент.Присоединить(ОбластьДанных);
	
	Если ПараметрыПечати.РазличныеОтправители Тогда
		ТабДокумент.Присоединить(ОбластьОтправитель);
	КонецЕсли;
	Если ПараметрыПечати.РазличныеПолучатели Тогда
		ТабДокумент.Присоединить(ОбластьПолучатель);
	КонецЕсли;

	ОбластьНомера = Макет.ПолучитьОбласть(ИмяСтроки + "|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть(ИмяСтроки + "|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть(ИмяСтроки + "|Товар");
	ОбластьДанных = Макет.ПолучитьОбласть(ИмяСтроки + "|Данные");
		
	Если ПараметрыПечати.РазличныеОтправители Тогда
		ОбластьОтправитель = Макет.ПолучитьОбласть(ИмяСтроки + "|Отправитель");
	КонецЕсли;
	Если ПараметрыПечати.РазличныеПолучатели Тогда
		ОбластьПолучатель = Макет.ПолучитьОбласть(ИмяСтроки + "|Получатель");
	КонецЕсли;

	// Выборка товаров
	Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл

		Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			ТекстСообщения = НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.'"); 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;

		ОбластьНомера.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Вывести(ОбластьНомера);

		Если ПараметрыПечати.ВыводитьКоды Тогда
			ОбластьКодов.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ОбластьТовар.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьТовар);

		ОбластьДанных.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьДанных);
		
	Если ПараметрыПечати.РазличныеОтправители Тогда
		ОбластьОтправитель.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьОтправитель);
	КонецЕсли;	
	Если ПараметрыПечати.РазличныеПолучатели Тогда	
		ОбластьПолучатель.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Присоединить(ОбластьПолучатель);
	КонецЕсли;
	
	КонецЦикла;
    	
	// Вывести подвал
	ОбластьНомера = Макет.ПолучитьОбласть("Подвал|НомерСтроки");
	ОбластьКодов  = Макет.ПолучитьОбласть("Подвал|КолонкаКодов");
	ОбластьТовар  = Макет.ПолучитьОбласть("Подвал|Товар");
	ОбластьДанных = Макет.ПолучитьОбласть("Подвал|Данные");
	
	Если ПараметрыПечати.РазличныеОтправители Тогда
		ОбластьОтправитель = Макет.ПолучитьОбласть("Подвал|Отправитель");
	КонецЕсли;
	Если ПараметрыПечати.РазличныеПолучатели Тогда
		ОбластьПолучатель = Макет.ПолучитьОбласть("Подвал|Получатель");
	КонецЕсли;

	ТабДокумент.Вывести(ОбластьНомера);
	Если ПараметрыПечати.ВыводитьКоды Тогда
		ТабДокумент.Присоединить(ОбластьКодов);
	КонецЕсли;
	ТабДокумент.Присоединить(ОбластьТовар);
	ТабДокумент.Присоединить(ОбластьДанных);

	Если ПараметрыПечати.РазличныеОтправители Тогда
		ТабДокумент.Присоединить(ОбластьОтправитель);
	КонецЕсли;
	Если ПараметрыПечати.РазличныеПолучатели Тогда
		ТабДокумент.Присоединить(ОбластьПолучатель);
	КонецЕсли;

	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьПеремещениеТоваров()

Функция ПолучитьДанныеДляПечатиПеремещенияМатериалов(СсылкаНаОбъект)
	
	ПараметрыПечати = Новый Структура;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПеремещениеМатериалов.Номер КАК Номер,
	|	ПеремещениеМатериалов.Дата КАК Дата,
	|	ПеремещениеМатериалов.СкладОтправитель КАК СкладОтправитель,
	|	ПеремещениеМатериалов.СкладОтправитель.Представление КАК Поставщик,
	|	ПеремещениеМатериалов.СкладПолучатель КАК СкладПолучатель,
	|	ПеремещениеМатериалов.СкладПолучатель.Представление КАК Покупатель,
	|	ПеремещениеМатериалов.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.Артикул КАК Артикул,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СкладОтправитель КАК СкладОтправительСтрока,
	|		СкладПолучатель КАК СкладПолучательСтрока
	|	) КАК Товары
	|ИЗ
	|	Документ.ПеремещениеМатериалов КАК ПеремещениеМатериалов
	|ГДЕ
	|	ПеремещениеМатериалов.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПеремещениеМатериалов.Товары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПеремещениеМатериаловТовары.СкладОтправитель) КАК СкладОтправительРазличные
	|ИЗ
	|	Документ.ПеремещениеМатериалов.Товары КАК ПеремещениеМатериаловТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериалов КАК ПеремещениеМатериалов
	|		ПО ПеремещениеМатериаловТовары.Ссылка = ПеремещениеМатериалов.Ссылка
	|			И (ПеремещениеМатериаловТовары.Ссылка = &ТекущийДокумент)
	|			И (ПеремещениеМатериалов.Ссылка = &ТекущийДокумент)
	|			И (ПеремещениеМатериаловТовары.СкладОтправитель <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))
	|			И (ПеремещениеМатериаловТовары.СкладОтправитель <> ПеремещениеМатериалов.СкладОтправитель)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПеремещениеМатериаловТовары.СкладПолучатель) КАК СкладПолучательРазличные
	|ИЗ
	|	Документ.ПеремещениеМатериалов.Товары КАК ПеремещениеМатериаловТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеМатериалов КАК ПеремещениеМатериалов
	|		ПО ПеремещениеМатериаловТовары.Ссылка = ПеремещениеМатериалов.Ссылка
	|			И (ПеремещениеМатериаловТовары.Ссылка = &ТекущийДокумент)
	|			И (ПеремещениеМатериалов.Ссылка = &ТекущийДокумент)
	|			И (ПеремещениеМатериаловТовары.СкладПолучатель <> ПеремещениеМатериалов.СкладПолучатель)
	|			И (ПеремещениеМатериаловТовары.СкладПолучатель <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";

	Выборка = Запрос.ВыполнитьПакет();
	Шапка = Выборка[0].Выбрать();
	Отпр = Выборка[1].Выбрать();
	Получ = Выборка[2].Выбрать();
	Отпр.Следующий();
	Получ.Следующий();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();  
	
	// Выводим шапку накладной
	ТекстЗаголовка = НСтр("ru='Накладная на перемещение'"); 
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, ТекстЗаголовка));
	
	Если Отпр.СкладОтправительРазличные > 0 Тогда
		ПараметрыПечати.Вставить("РазличныеОтправители", Истина);
	Иначе
		ПараметрыПечати.Вставить("РазличныеОтправители", Ложь);
	КонецЕсли;
	
	Если Получ.СкладПолучательРазличные > 0 Тогда
		ПараметрыПечати.Вставить("РазличныеПолучатели", Истина);
	Иначе
		ПараметрыПечати.Вставить("РазличныеПолучатели", Ложь);
	КонецЕсли;	
	
	ПараметрыПечати.Вставить("ПредставлениеПоставщика", Шапка.Поставщик);
	ПараметрыПечати.Вставить("Поставщик", Шапка.СкладОтправитель);
	
	ПараметрыПечати.Вставить("ПредставлениеПолучателя", Шапка.Покупатель);
	ПараметрыПечати.Вставить("Получатель", Шапка.СкладПолучатель);

	// Вывести табличную часть
	ПараметрыПечати.Вставить("ВыводитьКоды", Истина);
	ТекстАртикул = НСтр("ru='Артикул'"); 
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", ТекстАртикул);
	
	Позиции = Новый Массив;
	Ном = 0;

	// Выборка товаров
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);		
		
		Ном = Ном + 1;

		ПараметрыПозиции.Вставить("НомерСтроки", Ном);

		ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
	 Если Не ВыборкаСтрокТовары.Характеристика.Наименование = "" Тогда
       	ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + Символы.ПС +"(" +ВыборкаСтрокТовары.Характеристика.Наименование + ")" );
	    Иначе
		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар)
	 КонецЕсли;	
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
			
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.СкладОтправительСтрока) Тогда
			ПараметрыПозиции.Вставить("СкладОтправительСтрока", Шапка.СкладОтправитель);
		Иначе
			ПараметрыПозиции.Вставить("СкладОтправительСтрока", ВыборкаСтрокТовары.СкладОтправительСтрока);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.СкладПолучательСтрока) Тогда
			ПараметрыПозиции.Вставить("СкладПолучательСтрока", Шапка.СкладПолучатель);
		Иначе
			ПараметрыПозиции.Вставить("СкладПолучательСтрока", ВыборкаСтрокТовары.СкладПолучательСтрока);
		КонецЕсли;	

		Позиции.Добавить(ПараметрыПозиции);
		ПараметрыПечати.Вставить("Позиции", Позиции);
	КонецЦикла;
	
	Возврат ПараметрыПечати;
	
КонецФункции 

#КонецОбласти