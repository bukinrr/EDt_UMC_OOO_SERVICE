#Область РазделОписанияПеременных

&НаКлиенте
Перем мАвтоматическиЗаполнятьМатериалы Экспорт; // Заполнять ли автоматически материалы при открытии нового документа.

&НаКлиенте
Перем мУчетнаяПолитика;

&НаКлиенте
Перем мСписокРаботДокумента;

#КонецОбласти

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	РаботаСФормамиСервер.НастройкаПодбораПриСоздании(ЭтаФорма);
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если ЗначениеЗаполнено(Объект.Рекламация) И Объект.Рекламация.Отклонена Тогда
			ТекстСообщения = НСтр("ru = 'Внимание! Выбранная рекламация отклонена.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект.СкладМатериалов) И ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
			Объект.СкладМатериалов = УправлениеНастройками.ПолучитьЗначениеСотрудникаПоУмолчанию(Объект.Исполнитель,"ОсновнойСкладМатериалов");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	НастроитьРежимРедактированияТабличногоПоляМатериалов();
	
	// Видимость характеристик
	мВестиУчетПоХарктеристикам =  мУчетнаяПолитика.ВестиУчетПоХарактеристикам;
	Элементы.РаботыХарактеристикаНоменклатуры.Видимость = мВестиУчетПоХарктеристикам;
	Элементы.МатериалыХарактеристикаНоменклатуры.Видимость = мВестиУчетПоХарктеристикам;
	
	НастроитьДоступностьФлагаВычетаВыработки();
	
	РаботаСФормамиКлиент.ОчиститьЛишниеКомандыПобор(ЭтаФорма);
	
	ОбновитьСписокРаботДокумента();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(ТекущийОбъект,,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора) 
	
	Перем Действие;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ВыбранноеЗначение.Свойство("Действие", Действие);
		
		Если Действие = "ПодборРаботы" Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРаботы;
			
			Если ДопСерверныеФункции.ПолучитьРеквизит(ВыбранноеЗначение.Номенклатура, "ВидНоменклатуры") = ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Услуга") Тогда
				СтрокаРаботы = Объект.Работы.Добавить();
				СтрокаРаботы.Номенклатура = ВыбранноеЗначение.Номенклатура;
				СтрокаРаботы.ХарактеристикаНоменклатуры = ВыбранноеЗначение.ХарактеристикаНоменклатуры;
				СтрокаРаботы.Количество = ВыбранноеЗначение.Количество;
				Элементы.Работы.ТекущаяСтрока = СтрокаРаботы.ПолучитьИдентификатор();
				
				РаботыНоменклатураПриИзменении(Неопределено);
				Элементы.Работы.ЗакончитьРедактированиеСтроки(Ложь);
			Иначе
				СоставНабора = ОбщегоНазначенияСервер.ПолучитьСоставНабора(ВыбранноеЗначение.Номенклатура);
				Для Инд = 0 По СоставНабора.Количество()-1 Цикл
					СтрокаРаботы = Объект.Работы.Добавить();
					СтрокаРаботы.Номенклатура = СоставНабора[Инд].Комплектующая;
					СтрокаРаботы.ХарактеристикаНоменклатуры = СоставНабора[Инд].ХарактеристикаКомплектующей;
					СтрокаРаботы.Количество = СоставНабора[Инд].Количество * ВыбранноеЗначение.Количество;
					Элементы.Работы.ТекущаяСтрока = СтрокаРаботы.ПолучитьИдентификатор();
					РаботыНоменклатураПриИзменении(Неопределено);
					Элементы.Работы.ЗакончитьРедактированиеСтроки(Ложь);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли Действие = "ПодборМатериала" Тогда
			
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаМатериалы;
			
			НовыйМатериал = Объект.Материалы.Добавить();
			НовыйМатериал.Номенклатура = ВыбранноеЗначение.Номенклатура;
			НовыйМатериал.ХарактеристикаНоменклатуры = ВыбранноеЗначение.ХарактеристикаНоменклатуры;
			НовыйМатериал.Количество = ВыбранноеЗначение.Количество;
			НовыйМатериал.ЕдиницаИзмерения = ВыбранноеЗначение.ЕдиницаИзмерения;
			Если НЕ ВыбранноеЗначение.СерияНоменклатуры = Неопределено Тогда
				НовыйМатериал.СерияНоменклатуры = ВыбранноеЗначение.СерияНоменклатуры;
			КонецЕсли;
			
			// Подставить номенклатуру работы, если она одна в документе.
			Если мСписокРаботДокумента.Количество() = 1 Тогда
				Для Каждого СтрокаРаботы Из Объект.Работы Цикл
					Если СтрокаРаботы.КлючСтроки = мСписокРаботДокумента[0].Значение Тогда
						НовыйМатериал.Работа = СтрокаРаботы.Номенклатура;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборРаботыНажатие(Кнопка)
	
	РаботаСФормамиКлиент.КнопкаПодборПриНажатии(ЭтаФорма, "Работы", "Услуга");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборМатериалыНажатие(Кнопка)
		
	РаботаСФормамиКлиент.КнопкаПодборПриНажатии(ЭтаФорма, "Материалы", "Материал");
		
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВывестиДвиженияДокумента(Команда)
	РаботаСДиалогамиКлиент.ВывестиДвиженияДокумента(Объект.Ссылка, Команда);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоНормам(Команда)
	
	// Вопрос об очистке.
	Если Объект.Материалы.Количество() <> 0 Тогда
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	ЗаполнитьМатериалыПоНормамРаботСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Перезаполнить(Команда)
	
	ТекстВопроса = НСтр("ru = 'Перед заполнением таблица будет очищена. Заполнить?'");
	Если Объект.Работы.Количество() > 0 
		И Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет 
	Тогда
		Возврат;
	КонецЕсли;
	
	ПерезаполнитьНаСервере(мАвтоматическиЗаполнятьМатериалы);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура РекламацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Рекламация) Тогда
		
		СтруктураРеквизитов = 
			ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Объект.Рекламация, "Клиент, Исполнитель, ИсполнительНовый, Отклонена");
		Объект.Клиент = СтруктураРеквизитов.Клиент;
		Объект.Исполнитель = 
			?(ЗначениеЗаполнено(СтруктураРеквизитов.ИсполнительНовый), СтруктураРеквизитов.ИсполнительНовый, СтруктураРеквизитов.Исполнитель);
			
		Если СтруктураРеквизитов.Отклонена Тогда
			ТекстСообщения = НСтр("ru = 'Внимание! Выбранная рекламация отклонена.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
			
		ИсполнительПриИзменении(Элементы.Исполнитель);
			
		Если Не ЗначениеЗаполнено(Объект.Основание) Или ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.Рекламация") Тогда 
			Объект.Основание = Объект.Рекламация;	
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсполнительПриИзменении(Элемент)
	
	НастроитьДоступностьФлагаВычетаВыработки();
		
	Если Не ЗначениеЗаполнено(Объект.СкладМатериалов) И ЗначениеЗаполнено(Объект.Исполнитель) Тогда 
		Объект.СкладМатериалов = УправлениеНастройками.ПолучитьЗначениеСотрудникаПоУмолчанию(Объект.Исполнитель,"ОсновнойСкладМатериалов");
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура РаботыНоменклатураПриИзменении(Элемент)
	
	ДанныеЗаполнения = ПолучитьДанныеЗаполненияСтрокиСоставаПриИзмененииНоменклатуры(Объект, Элементы.Работы.ТекущаяСтрока);	
	ЗаполнитьЗначенияСвойств(Элементы.Работы.ТекущиеДанные, ДанныеЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	Если мАвтоматическиЗаполнятьМатериалы Тогда
		ЗаполнитьМатериалыПоНормамРаботСервер();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыКоличествоПриИзменении(Элемент)
	
	РаботыКоличествоЦенаПриИзменении(Элементы.Работы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыЦенаПриИзменении(Элемент)
	
	РаботыКоличествоЦенаПриИзменении(Элементы.Работы.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекДанные = Элемент.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если НоваяСтрока И Элемент.ТекущиеДанные <> Неопределено Тогда
		
		ТекДанные.КлючСтроки = ОбщегоНазначенияКлиентСервер.ПолучитьМаксимумМинимумСвойстваВКоллекции(Объект.Работы, "КлючСтроки", Истина, 0) + 1;
		ТекДанные.Количество = 1;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	УдалитьМатериалыУдаленныхРабот();
	Если мАвтоматическиЗаполнятьМатериалы Тогда
		ЗаполнитьМатериалыПоНормамРаботСервер();
	КонецЕсли;
	ОбновитьСписокРаботДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РаботыПослеУдаления(Элемент)
	
	УдалитьМатериалыУдаленныхРабот();
	Если мАвтоматическиЗаполнятьМатериалы Тогда
		ЗаполнитьМатериалыПоНормамРаботСервер();
	КонецЕсли;
	ОбновитьСписокРаботДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыРаботаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ВыбранныйЭлемент = ВыбратьИзСписка(мСписокРаботДокумента);
	Если ВыбранныйЭлемент <> Неопределено Тогда
		ТекущаяСтрока = Элементы.Материалы.ТекущиеДанные;
		ТекущаяСтрока.КлючСтрокиРаботы = ВыбранныйЭлемент.Значение;
		Для Каждого СтрокаРаботы Из Объект.Работы Цикл 
			Если СтрокаРаботы.КлючСтроки = ТекущаяСтрока.КлючСтрокиРаботы Тогда
				ТекущаяСтрока.Работа = СтрокаРаботы.Номенклатура;
				Модифицированность = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыНоменклатураПриИзменении(Элемент)
	
	ТекСтрока = Элементы.Материалы.ТекущиеДанные;
	ТекСтрока.ЕдиницаИзмерения = ДопСерверныеФункции.ПолучитьРеквизит(ТекСтрока.Номенклатура, "ЕдиницаХраненияОстатков");
	
КонецПроцедуры

&НаКлиенте
Процедура МатериалыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Элемент.ТекущиеДанные <> Неопределено И Не Копирование Тогда
		
		Если Элемент.ТекущиеДанные.Количество = 0 Тогда
			Элемент.ТекущиеДанные.Количество = 1;
		КонецЕсли;
		
		Если мСписокРаботДокумента.Количество() = 1 Тогда
			Для Каждого СтрокаРаботы Из Объект.Работы Цикл
				Если СтрокаРаботы.КлючСтроки = мСписокРаботДокумента[0].Значение Тогда
					Элемент.ТекущиеДанные.Работа = СтрокаРаботы.Номенклатура;
					Элементы.Материалы.ТекущийЭлемент = Элементы.МатериалыНоменклатура;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РучнаяКорректировкаМатериаловПриИзменении(Элемент)
	
	НастроитьРежимРедактированияТабличногоПоляМатериалов();
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыборПодбор(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если Ложь Тогда ЗапрашиватьКоличество = Ложь; ЗапрашиватьЦену = Ложь; ЗапрашиватьХарактеристику = Ложь; ЗапрашиватьСерию = Ложь; КонецЕсли; 
	СтандартнаяОбработка = Ложь;
	
	Если НЕ ДопСерверныеФункции.ПолучитьРеквизит(ВыбранноеЗначение, "ЭтоГруппа") Тогда 
		
		Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаРаботы Тогда
			Действие = "ПодборРаботы";
		ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаМатериалы Тогда
			Действие = "ПодборМатериала";
		Иначе
			Возврат;
		КонецЕсли;
		
		Результат = РаботаСФормамиКлиент.ВыборПодборОбработка(ВыбранноеЗначение, ЗапрашиватьКоличество, ЗапрашиватьЦену, ЗапрашиватьХарактеристику, ЗапрашиватьСерию, Действие, ЭтаФорма);

		Если Результат <> Неопределено Тогда
			ОбработкаВыбора(Результат, Неопределено);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если	Элементы.МатериалыПодбор.Пометка
		Или	Элементы.РаботыПодбор.Пометка
	Тогда
		Если ТекущаяСтраница = Элементы.ГруппаМатериалы  Тогда 
			РаботаСФормамиКлиент.ОбновитьОтборПодбора(ЭтаФорма, "Материалы", "Материал");
		ИначеЕсли ТекущаяСтраница = Элементы.ГруппаРаботы Тогда
			РаботаСФормамиКлиент.ОбновитьОтборПодбора(ЭтаФорма, "Работы", "Услуга");
		КонецЕсли;
		ПодключитьОбработчикОжидания("ОбновитьСписокПодбора", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьДоступностьФлагаВычетаВыработки()
	
	Виновник = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Объект.Рекламация, "Исполнитель");
	Элементы.ВычитатьИзВыработкиВиновника.Доступность = 
		ЗначениеЗаполнено(Объект.Исполнитель) И 
		ЗначениеЗаполнено(Объект.Рекламация) И
		ЗначениеЗаполнено(Виновник) И
		Объект.Исполнитель <> Виновник;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеЗаполненияСтрокиСоставаПриИзмененииНоменклатуры(Знач Объект, ТекущаяСтрока)
	
	СтрокаТабличнойЧасти = Объект.Работы.НайтиПоИдентификатору(ТекущаяСтрока);
	Результат = Новый Структура("Цена, Сумма");	
	дкУстановитьЦенуСтрокиТабЧасти(ДанныеФормыВЗначение(Объект, Тип("ДокументОбъект.РаботыПоРекламации")), "Работы", СтрокаТабличнойЧасти);	
	
	Результат.Вставить("СуммаБезСкидок", Результат.Сумма);	
	
	ЗаполнитьЗначенияСвойств(Результат, СтрокаТабличнойЧасти);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура РаботыКоличествоЦенаПриИзменении(ТекущиеДанные)
	
	ТекущиеДанные.Сумма = ТекущиеДанные.Количество * ТекущиеДанные.Цена;
	ТекущиеДанные.СуммаБезСкидок = ТекущиеДанные.Сумма;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМатериалыПоНормамРаботСервер()
	
	ОбъектКопия = Объект;
	Документы.РаботыПоРекламации.ЗаполнитьМатериалыПоНормамРабот(ОбъектКопия);
		
КонецПроцедуры

&НаКлиенте
Процедура НастроитьРежимРедактированияТабличногоПоляМатериалов()
	
	Если мУчетнаяПолитика.ВестиУчетРасходаМатериаловНаУслуги Тогда
		
		мАвтоматическиЗаполнятьМатериалы = Не Объект.РучнаяКорректировкаМатериалов;

		Элементы.Материалы.ИзменятьСоставСтрок			= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.Материалы.КоманднаяПанель.Доступность	= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.МатериалыПодбор.Доступность			= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.МатериалыНоменклатура.Доступность		= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.МатериалыРабота.Доступность			= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.МатериалыКоличество.Доступность		= Не мАвтоматическиЗаполнятьМатериалы;
		Элементы.МатериалыЕдиницаИзмерения.Доступность	= Не мАвтоматическиЗаполнятьМатериалы;
		
		Элементы.РучнаяКорректировкаМатериалов.ТолькоПросмотр = Объект.РучнаяКорректировкаМатериалов; // Запрет на снятие взведенного ручного редактирования.

	Иначе
		мАвтоматическиЗаполнятьМатериалы = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьМатериалыУдаленныхРабот()
	
	МахОбрИнд = Объект.Материалы.Количество()-1;
	Для сч = 0 по МахОбрИнд Цикл
		СтрокаМатериалов = Объект.Материалы[МахОбрИнд-сч];
		Если ЗначениеЗаполнено(СтрокаМатериалов.Работа) Тогда
			флУдалять = Истина;
			Для Каждого ЭлементСписка из мСписокРаботДокумента Цикл
				Если ЭлементСписка.Значение = СтрокаМатериалов.КлючСтрокиРаботы Тогда
					флУдалять = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если флУдалять Тогда
				Объект.Материалы.Удалить(СтрокаМатериалов);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокРаботДокумента()
	
	мСписокРаботДокумента = Новый СписокЗначений;
	
	Для Каждого СтрокаРаботы Из Объект.Работы Цикл
		
		мСписокРаботДокумента.Добавить(СтрокаРаботы.КлючСтроки, Строка(СтрокаРаботы.Номенклатура) + " " +Строка(СтрокаРаботы.ХарактеристикаНоменклатуры));
		
	КонецЦикла;
	#Если НЕ ВебКлиент И НЕ МобильныйКлиент Тогда	
		Элементы.МатериалыРабота.СписокВыбора.ДоступныеЗначения = мСписокРаботДокумента;
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокПодбора()
	РаботаСФормамиКлиент.ОбновитьДинамическийСписокПринудительно(ЭтаФорма.РеквизитСписокПодбор);
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьНаСервере(АвтоматическиЗаполнятьМатериалы)
	
	ОбъектКопия = Объект;
	Документы.РаботыПоРекламации.ПерезаполнитьРаботыПоРекламации(ОбъектКопия, АвтоматическиЗаполнятьМатериалы);
	
КонецПроцедуры

#КонецОбласти
