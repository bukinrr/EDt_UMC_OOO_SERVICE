#Область ОбработчикиСобытий

&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	мсПФ = Новый Массив;
	
	Если ТипЗнч(ПараметрКоманды) = Тип("Массив") Тогда
		спПМО = КоличествоПМО(ПараметрКоманды);
		Если спПМО.Количество() > 0 Тогда
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Будут начато прохождений медосмотра: %1. На каждое прохождение медосмотра будут распечатаны выбранные документы'"),
			Строка(спПМО.Количество()));
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
			
			Если Ответ = КодВозвратаДиалога.Да Тогда
				ПМОДляВыбораПечатныхФорм = НайтиПМОСНеобходимымВидомМО(ПараметрКоманды);
				Если ЗначениеЗаполнено(ПМОДляВыбораПечатныхФорм) Тогда 
					мсПФ = ОткрытьФормуВыбораПечатныхФормОбъектаМножественнаяПечать(ПМОДляВыбораПечатныхФорм, ПараметрыВыполненияКоманды.Источник);
				Иначе
					мсПФ = УниверсальныеМеханизмыКлиент.ОткрытьФормуВыбораПечатныхФормОбъектаМножественнаяПечать(ПредопределенноеЗначение("Документ.ПрохождениеМедосмотра.ПустаяСсылка"), ПараметрыВыполненияКоманды.Источник);
				КонецЕсли;
				Если мсПФ.Количество() > 0 Тогда
					СоздатьДокументыПоСписку(СпПМО, мсПФ);
				Иначе
					Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаСозданиеБезПФ", ЭтотОбъект, спПМО);
					ПоказатьВопрос(Оповещение,НСтр("ru='Не выбрано ни одной печатной формы. Продолжить создание документов?'"), РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет)
				КонецЕсли;
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(,НСтр("ru='Для всех работников списка уже созданы документы прохождения.'"));
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДокументыПоСписку(СпПМО, мсПФ = Неопределено)
	
	счетчик = 1;
	Для Каждого эл Из спПМО Цикл
		инд = счетчик * 100 / спПМО.Количество(); 
		ОбработкаПрерыванияПользователя();
		Состояние(НСтр("ru='Прохождение медосмотра для пользователя'") + " " + Строка(эл.Клиент),инд);
		ПМОБылоСоздано = Ложь; 
		Попытка
			Если ЗначениеЗаполнено(Эл.СсылкаПМО) Тогда 
				ПМО = Эл.СсылкаПМО;
				ПровестиПМО(ПМО);
			Иначе
				ПМО = СоздатьПМО(эл);
				ПМОБылоСоздано = Истина;
			КонецЕсли;
			Если мсПФ <> Неопределено И ЗначениеЗаполнено(ПМО) Тогда 
				УниверсальныеМеханизмыКлиент.ПечатьДокументовМножественнаяПечать(мсПФ, ПМО, РежимИспользованияДиалогаПечати.НеИспользовать);
			КонецЕсли;
		Исключение
			ТекстСообщения = "";
			Если ПМОБылоСоздано Тогда 
				УдалитьПМО(ПМО);
			Иначе
				Если ОбщегоНазначения.ПолучитьЗначениеРеквизита(ПМО, "Проведен") Тогда
					Попытка 
						ОтменитьПроведениеПМО(ПМО);
					Исключение 
						ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											НСтр("ru='Для %1 из списка %2 не удалось напечатать документы, прожождение медосмотра было начато.'"),
											Строка(эл.Клиент),
											Строка(эл.СПМО)); 
					КонецПопытки;
				КонецЕсли;
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ТекстСообщения) Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
									НСтр("ru='Для клиента %1 из списка %2 прохождение медосмотра не было начато.'"),
									Строка(эл.Клиент),
									Строка(эл.СПМО));
			КонецЕсли;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения + Символы.ПС + ОписаниеОшибки());
			Ответ = Вопрос(ТекстСообщения + " " + НСтр("ru='Продолжить работу?'"), РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Нет Тогда 
				Прервать;
			КонецЕсли;
		КонецПопытки;
		счетчик = счетчик + 1;
	КонецЦикла;
	
	ПоказатьПредупреждение(, НСтр("ru='Операция завершена.'"));
	Оповестить("СозданиеПМО");

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаСозданиеБезПФ(Ответ, СпПМО) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СоздатьДокументыПоСписку(СпПМО);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция КоличествоПМО(СсылкаНаОбъект)
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("СписокНаПрохождениеМедосмотра", СсылкаНаОбъект);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокНаПрохождениеМедосмотраКлиенты.Клиент КАК Клиент,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка КАК СПМО,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.Дата КАК Дата,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.Филиал КАК Филиал,
		|	СписокНаПрохождениеМедосмотраКлиенты.Профессия КАК Профессия,
		|	СписокНаПрохождениеМедосмотраКлиенты.ЦехУчасток КАК ЦехУчасток,
		|	СписокНаПрохождениеМедосмотраКлиенты.ФИОКлиента КАК ФИОКлиента,
		|	СписокНаПрохождениеМедосмотраКлиенты.ТипМедосмотра КАК ТипМедосмотра,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.ВидМО КАК ВидМО,
		|	МАКСИМУМ(ПрохождениеМедосмотра.Ссылка) КАК СсылкаПМО
		|ИЗ
		|	Документ.СписокНаПрохождениеМедосмотра.Клиенты КАК СписокНаПрохождениеМедосмотраКлиенты
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрохождениеМедосмотра КАК ПрохождениеМедосмотра
		|		ПО СписокНаПрохождениеМедосмотраКлиенты.Ссылка = ПрохождениеМедосмотра.СписокНаПрохождениеМедосмотра
		|			И СписокНаПрохождениеМедосмотраКлиенты.Клиент = ПрохождениеМедосмотра.Клиент
		|			И (ПрохождениеМедосмотра.ПометкаУдаления = ЛОЖЬ)
		|ГДЕ
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка В(&СписокНаПрохождениеМедосмотра)
		|	И СписокНаПрохождениеМедосмотраКлиенты.ПричинаНеявки = ЗНАЧЕНИЕ(Справочник.ПричиныНеявкиНаМедосмотр.ПустаяСсылка)
		|	И (ПрохождениеМедосмотра.Ссылка ЕСТЬ NULL
		|			ИЛИ НЕ ПрохождениеМедосмотра.Проведен)
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокНаПрохождениеМедосмотраКлиенты.ЦехУчасток,
		|	СписокНаПрохождениеМедосмотраКлиенты.ФИОКлиента,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка,
		|	СписокНаПрохождениеМедосмотраКлиенты.ТипМедосмотра,
		|	СписокНаПрохождениеМедосмотраКлиенты.Клиент,
		|	СписокНаПрохождениеМедосмотраКлиенты.Профессия,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.Дата,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.Филиал,
		|	СписокНаПрохождениеМедосмотраКлиенты.Ссылка.ВидМО"
		;
		Выборка = Запрос.Выполнить().Выгрузить();
		
		РезультатМассив = Новый Массив;
		
		Для Каждого Строка Из Выборка Цикл
			СтруктураСтрока = Новый Структура;
			Для Каждого Колонка Из Выборка.Колонки Цикл
				СтруктураСтрока.Вставить(Колонка.Имя, Строка[Колонка.Имя]);
			КонецЦикла;
			РезультатМассив.Добавить(СтруктураСтрока);
		КонецЦикла;
		
		Возврат РезультатМассив;
		
КонецФункции

&НаСервере
Функция СоздатьПМО(элементСтруктуры)
	
	Возврат Документы.ПрохождениеМедосмотра.СоздатьПрохождениеМедосмотра(элементСтруктуры);	
	
КонецФункции

&НаСервере
Процедура УдалитьПМО(элементСтруктуры)
	
	элементСтруктуры.ПолучитьОбъект().Удалить();	
	
КонецПроцедуры

&НаСервере
Процедура ПровестиПМО(ПМО)
	
	ПМООбъект = ПМО.ПолучитьОбъект();
	ПМООбъект.Записать(РежимЗаписиДокумента.Проведение);
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьПроведениеПМО(ПМО)
	
	ПМООбъект = ПМО.ПолучитьОбъект();
	ПМООбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	
КонецПроцедуры

&НаСервере
Функция НайтиПМОСНеобходимымВидомМО(МассивСПМО)
	
	Если МассивСПМО.Количество() > 0 Тогда 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ПрохождениеМедосмотра.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.ПрохождениеМедосмотра КАК ПрохождениеМедосмотра
		|ГДЕ
		|	ПрохождениеМедосмотра.ВидМО = &ВидМО";
		
		Запрос.УстановитьПараметр("ВидМО", МассивСПМО[0].ВидМО);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			Возврат ВыборкаДетальныеЗаписи.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Документы.ПрохождениеМедосмотра.ПустаяСсылка();
	
КонецФункции

&НаКлиенте
Функция ОткрытьФормуВыбораПечатныхФормОбъектаМножественнаяПечать(Объект, ФормаВладелец) Экспорт
	
	мсСостав = Новый Массив;
	
	Попытка
		НаПринтер = Истина;
		ДокСсылка = Объект;
		
		// Открыть форму выбора печатных форм
		Форма = ПолучитьФорму("Справочник.ПриказыМедосмотров.Форма.ФормаВыбораПечатныхФормУпр", ,ФормаВладелец);
		Форма.ДокументСсылка = ДокСсылка;
		Форма.ТолькоПечать = НаПринтер;
			
		Если ТипЗнч(Форма.ОткрытьМодально()) <> Тип("Структура") Тогда
			Возврат мсСостав;
		КонецЕсли;
		
		Для Каждого Строка Из Форма.Элементы.ДеревоМакетовПечати.ВыделенныеСтроки Цикл
			СтрокаКнопки = Форма.Элементы.ДеревоМакетовПечати.ДанныеСтроки(Строка);
			Если ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати")  Тогда
				мсСостав = ПечатьДокументовСервер.ПередатьСоставВКлиент(СтрокаКнопки.СсылкаНаВнешнююОбработку, ПредопределенноеЗначение("Документ.ПрохождениеМедосмотра.ПустаяСсылка"));
			Иначе 
				мсСостав.Добавить(УниверсальныеМеханизмыКлиент.СоставПакетаПоКнопке(СтрокаКнопки));
			КонецЕсли;
		КонецЦикла;

	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
		
	Возврат мсСостав;
		
КонецФункции

#КонецОбласти

