#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.СПМО) Тогда
		ОбновитьСписокНаСервере();
		ОтборСертификатов.ЗагрузитьЗначения(ЭЦП_УМЦ_Сервер.ПолучитьСертификатыМОПользователя(Параметры.СПМО[ПроцедурыСпециализацииПоставки.ИмяРеквизитаФилиалДокументов()]));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьСнятьОтображениеВыборДокументов(Истина);
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзменилисьПодписи"
		И ДокументыПМО.НайтиСтроки(Новый Структура("ПМО", Параметр)).Количество() > 0
	Тогда
		ОбновитьСписокНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	УстановитьСнятьОтображениеВыборДокументов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьСнятьОтображениеВыборДокументов(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ПодписатьОтмеченныеДокументы(Команда)
	
	ПодписатьФайлЭМДВРоли();
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКПодписям(Команда)
	
	ТекДанные = Элементы.ДокументыПМО.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		Если ТекДанные.Завершен Тогда
			ЭЦП_УМЦ_Клиент.ПерейтиКПодписаниюЭМД(ЭтотОбъект, Истина, Истина, Ложь, ТекДанные.ПМО);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru='По документу не сделано заключение!'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписок(Команда)
	
	ОбновитьСписокНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыПМОВыбранПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПодписейПМО(ПМО)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПМО.Ссылка КАК ПМО,
		|	ВЫБОР
		|		КОГДА ПМО.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ПМО.ПредседательМедКомиссии = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Завершен,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА рсРолиИПодписиЭМД.РольПодписи = &РольПредседателя
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ПодписанПредседателем,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА рсРолиИПодписиЭМД.РольПодписи = ЗНАЧЕНИЕ(Перечисление.РолиПодписей.МедицинскаяОрганизация)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ПодписанМО
		|ИЗ
		|	Документ.ПрохождениеМедосмотра КАК ПМО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК рсРолиИПодписиЭМД
		|		ПО (рсРолиИПодписиЭМД.Документ = ПМО.Ссылка)
		|ГДЕ
		|	ПМО.Ссылка = &ПМО
		|
		|СГРУППИРОВАТЬ ПО
		|	ПМО.Ссылка,
		|	ВЫБОР
		|		КОГДА ПМО.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ПМО.ПредседательМедКомиссии = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ";
	
	Запрос.УстановитьПараметр("РольПредседателя", Перечисления.РолиПодписей.РольПредседательМедкомиссии());
	Запрос.УстановитьПараметр("ПМО", ПМО);
	ДанныеПодписей = Новый Структура("ПМО, Завершен, ПодписанПредседателем, ПодписанМО");
	ЗаполнитьЗначенияСвойств(ДанныеПодписей, Запрос.Выполнить().Выгрузить()[0]);
	
	Возврат ДанныеПодписей;
	
КонецФункции

&НаКлиенте
Процедура УстановитьСнятьОтображениеВыборДокументов(Выбран)
	
	Для Каждого СтрокаПМО Из ДокументыПМО Цикл
		СтрокаПМО.Выбран = СтрокаПМО.ПодписанПредседателем И Не СтрокаПМО.ПодписанМО И Выбран;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументыПМОВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ДокументыПМОПМО" Тогда
		ПоказатьЗначение(, Элементы.ДокументыПМО.ТекущиеДанные.ПМО);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДДФайла(ПМО)
	
	ДанныеФайловЭМД = бит_РаботаСФайлами.ПолучитьДанныеФайловЭМД(ПМО, , ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
	
	Если ДанныеФайловЭМД.Количество() > 0 Тогда
		Возврат ДанныеФайловЭМД.Получить(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()).ДвоичныеДанные;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПодписатьФайлЭМДВРоли()
	
	СтрокиВыбранныхКПодписаниюДокументов = ДокументыПМО.НайтиСтроки(Новый Структура("Выбран", Истина));
	
	Если СтрокиВыбранныхКПодписаниюДокументов.Количество() = 0 Тогда
		ОбновитьСписокНаСервере();
		Возврат;
	КонецЕсли;
	
	МедицинскийДокумент = СтрокиВыбранныхКПодписаниюДокументов[0].ПМО;
	ДД = ПолучитьДДФайла(МедицинскийДокумент);
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Объект",			МедицинскийДокумент);
	ПараметрыОбработчика.Вставить("РольПодписи",	ПредопределенноеЗначение("Перечисление.РолиПодписей.МедицинскаяОрганизация"));
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПодписатьФайлЭМДВРолиЗавершение", ЭтотОбъект, ПараметрыОбработчика);
	
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(ДД);
	
	НаборДанных = Новый Массив;
	МассивДанныхОбъектов = Новый Массив;
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ОбработчикЗавершения", ОбработчикЗавершения);
	ПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыВыполнения.Вставить("МассивДанныхОбъектов", МассивДанныхОбъектов);
	
	Для Каждого ОбъектМ Из МассивОбъектов Цикл
		
		МассивДанныхОбъектов.Добавить(ОбъектМ);
		
		ТекущиеПараметрыВыполнения = Новый Структура;
		ТекущиеПараметрыВыполнения.Вставить("ИдентификаторФормы", УникальныйИдентификатор);
		ТекущиеПараметрыВыполнения.Вставить("ПодписываемыеДанные", ОбъектМ);
		
		ЭлементДанных = Новый Структура;
		ЭлементДанных.Вставить("Представление", МедицинскийДокумент);
		ЭлементДанных.Вставить("Данные", ОбъектМ);
		ЭлементДанных.Вставить("Объект",
			Новый ОписаниеОповещения("ПриПолученииПодписи", ОбщегоНазначенияКлиент.ОбщийМодуль("бит_СертификатыЭЦПКлиент"), ТекущиеПараметрыВыполнения));
		НаборДанных.Добавить(ЭлементДанных);
		
	КонецЦикла;
	
	Операция = НСтр("ru = 'Подписание'");
	ЗаголовкиСтруктура = Новый Структура;
	ЗаголовкиСтруктура.Вставить("ЗаголовокДанных");
	ЗаголовокДанных = ЗаголовкиСтруктура.ЗаголовокДанных;
	ЗаголовокДанных = НСтр("ru = 'Объект'");
	ПредставлениеНабора = ЗаголовокДанных;
	
	ОписаниеДанных = Новый Структура;
	ОписаниеДанных.Вставить("ПоказатьКомментарий", Истина);
	ОписаниеДанных.Вставить("ИдентификаторФормы",	УникальныйИдентификатор);
	ОписаниеДанных.Вставить("Операция",				Операция);
	ОписаниеДанных.Вставить("ЗаголовокДанных",		ЗаголовокДанных);
	ОписаниеДанных.Вставить("НаборДанных",			НаборДанных);
	ОписаниеДанных.Вставить("ПредставлениеНабора",	ПредставлениеНабора);
	ОписаниеДанных.Вставить("БезПодтверждения",		Истина);
	ОписаниеДанных.Вставить("ОтборСертификатов",	ОтборСертификатов.ВыгрузитьЗначения());
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ПослеПодписанияОбъектов", ОбщегоНазначенияКлиент.ОбщийМодуль("бит_СертификатыЭЦПКлиент"), ПараметрыВыполнения);
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	МодульЭлектроннаяПодписьКлиент.Подписать(ОписаниеДанных, , ОбработчикПродолжения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьФайлЭМДВРолиЗавершение(Результат, Параметры) Экспорт
	
	Если Не Результат.Успех Тогда
		Сообщить("Не удалось подписать ");
		Возврат;
	КонецЕсли;
	бит_СертификатыЭЦПКлиент.ПослеПодписанияОбъекта(Результат, Параметры);
	
	Если СохранитьИзмененияВРолиИПодписиЭМД(Параметры.Объект, Параметры) Тогда
		Для Каждого СтрокаПМО Из ДокументыПМО Цикл
			Если СтрокаПМО.ПМО = Параметры.Объект Тогда
				СтрокаПМО.Выбран = Ложь;
			КонецЕсли;
		КонецЦикла;
		ПодписатьФайлЭМДВРоли();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СохранитьИзмененияВРолиИПодписиЭМД(Документ, ПараметрыЭЦП)
	
	РезультатСохранения = Новый Структура("ЗаписьУспешна, РольПодписи, УИД_ЭЦП, СтатусЭП", Ложь, Неопределено, "", 0);
	Если Не ЗначениеЗаполнено(Документ) Тогда
		Возврат РезультатСохранения;
	КонецЕсли;
	
	УИД_ЭЦП = "";
	Для Каждого СтрокаЭЦП Из ПараметрыЭЦП.УИДыЭЦП Цикл
		УИД_ЭЦП = СтрокаЭЦП.ПолученныйУИДЭЦП;
		СтрРИП = РегистрыСведений.РолиИПодписиЭМД.СоздатьМенеджерЗаписи();
		
		СтрРИП.УИД_ЭЦП = УИД_ЭЦП;
		СтрРИП.Документ = Документ;
		СтрРИП.РольПодписи = ПараметрыЭЦП.РольПодписи;
		СтрРИП.Пользователь = СтрокаЭЦП.Пользователь;
		СтрРИП.Записать();
		Возврат Истина;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ОбновитьСписокНаСервере()
	
	ВыбранныеДокументы = Новый Массив;
	Для Каждого ВыбранныйДокумент Из ДокументыПМО.НайтиСтроки(Новый Структура("Выбран", Истина)) Цикл
		ВыбранныеДокументы.Добавить(ВыбранныйДокумент.ПМО);
	КонецЦикла;
	
	ДокументыПМО.Очистить();
	
	ПредставленияСтатусов = Новый Соответствие;
	ПредставленияСтатусов.Вставить(0, "Не завершен");
	ПредставленияСтатусов.Вставить(1, "Обе подписи поставлены");
	ПредставленияСтатусов.Вставить(2, "Нет подписи председателя");
	ПредставленияСтатусов.Вставить(3, "Нет подписи медицинской организации");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПМО.Ссылка КАК Ссылка,
		|	ВЫБОР
		|		КОГДА ПМО.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ПМО.ПредседательМедКомиссии = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК Завершен,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РСРолиИПодписиЭМД.РольПодписи = &РольПредседателя
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ПодписанПредседателем,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА РСРолиИПодписиЭМД.РольПодписи = ЗНАЧЕНИЕ(Перечисление.РолиПодписей.МедицинскаяОрганизация)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ) КАК ПодписанМО
		|ПОМЕСТИТЬ ПМО
		|ИЗ
		|	Документ.ПрохождениеМедосмотра КАК ПМО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК РСРолиИПодписиЭМД
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|			ПО (ЭП.УникальныйИдентификатор = РСРолиИПодписиЭМД.УИД_ЭЦП)
		|		ПО (РСРолиИПодписиЭМД.Документ = ПМО.Ссылка)
		|ГДЕ
		|	ПМО.СписокНаПрохождениеМедосмотра = &СПМО
		|
		|СГРУППИРОВАТЬ ПО
		|	ПМО.Ссылка,
		|	ВЫБОР
		|		КОГДА ПМО.ДатаЗавершения = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ ПМО.ПредседательМедКомиссии = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПМО.Ссылка КАК ПМО,
		|	ПМО.Завершен КАК Завершен,
		|	ПМО.ПодписанПредседателем КАК ПодписанПредседателем,
		|	ПМО.ПодписанМО КАК ПодписанМО,
		|	ВЫБОР
		|		КОГДА НЕ ПМО.Завершен
		|			ТОГДА 0
		|		КОГДА ПМО.ПодписанПредседателем
		|				И ПМО.ПодписанМО
		|			ТОГДА 1
		|		КОГДА НЕ ПМО.ПодписанПредседателем
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК Статус
		|ИЗ
		|	ПМО КАК ПМО
		|
		|УПОРЯДОЧИТЬ ПО
		|	Статус УБЫВ";
	
	Запрос.УстановитьПараметр("РольПредседателя", Перечисления.РолиПодписей.РольПредседательМедкомиссии());
	Запрос.УстановитьПараметр("СПМО", Параметры.СПМО);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрокаПМО = ДокументыПМО.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПМО, Выборка);
		НоваяСтрокаПМО.ПредставлениеСтатуса = ПредставленияСтатусов.Получить(НоваяСтрокаПМО.Статус);
		Если ВыбранныеДокументы.Найти(НоваяСтрокаПМО.ПМО) <> Неопределено
			И НоваяСтрокаПМО.Завершен
			И НоваяСтрокаПМО.ПодписанПредседателем
			И Не НоваяСтрокаПМО.ПодписанМО
		Тогда
			НоваяСтрокаПМО.Выбран = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодписанныеДокументы(Команда)
	
	СохранитьВизуализации = Команда.Имя = "СохранитьПодписанныеДокументы";
	
	КоличествоПодписанныхПМО = ДокументыПМО.НайтиСтроки(Новый Структура("ПодписанМО, ПодписанПредседателем", Истина, Истина)).Количество();
	Если КоличествоПодписанныхПМО = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Отсутствуют документы, подписанные обеими подписями.'"));
	ИначеЕсли КоличествоПодписанныхПМО < ДокументыПМО.Количество() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранитьПодписанныеДокументыВопрос", ЭтотОбъект, Новый Структура("СохранитьВизуализации", СохранитьВизуализации));
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Не все документы имеют обе подписи. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		СохранитьПодписанныеДокументыПродолжение(СохранитьВизуализации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодписанныеДокументыВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьПодписанныеДокументыПродолжение(Параметры.СохранитьВизуализации);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодписанныеДокументыПродолжение(СохранитьВизуализации)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = "Выберите файл для сохранения";
	ИмяФайла = ОбщегоНазначенияСервер.УдалитьЗапрещенныеСимволыИмени(Строка(Параметры.СПМО));
	Диалог.ПолноеИмяФайла = ИмяФайла  + " " + ?(СохранитьВизуализации, "Версия для печати", "ЭМД");
	Диалог.Фильтр = "(*.zip)|*.zip";
	ОповещениеЗавершения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект, Новый Структура("СохранитьВизуализации", СохранитьВизуализации));
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйФайл = Неопределено
		Или ВыбранныйФайл.Количество() = 0
	Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеПараметры.СохранитьВизуализации Тогда
		ДД = СформироватьФайлыДляСохранения();
	Иначе
		ДД = СформироватьФайлыСПодписямиДляСохранения(ЭлектроннаяПодписьКлиент.ПерсональныеНастройки().РасширениеДляФайловПодписи);
	КонецЕсли;
	
	Если ДД <> Неопределено Тогда
		ДД.Записать(ВыбранныйФайл[0]);
		Сообщить(СтрШаблон(НСтр("ru='Файл сохранён. %1'"), ВыбранныйФайл[0]));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьФайлыДляСохранения()
	
	ИмяВременногоКаталога = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
		ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов()) + "document_" + Строка(Параметры.СПМО.УникальныйИдентификатор()));
	
	ФайлКаталог = Новый Файл(ИмяВременногоКаталога);
	Если ФайлКаталог.Существует() Тогда
		УдалитьФайлы(ИмяВременногоКаталога);
	КонецЕсли;
	СоздатьКаталог(ИмяВременногоКаталога);
	
	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьZipФайла = Новый ЗаписьZipФайла();
	
	Для Каждого ПодписанныйПМО Из ДокументыПМО.НайтиСтроки(Новый Структура("ПодписанМО, ПодписанПредседателем", Истина, Истина)) Цикл
		
		ДанныеФайловЭМД = бит_РаботаСФайлами.ПолучитьДанныеФайловЭМД(ПодписанныйПМО.ПМО, Истина, ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
		Если ДанныеФайловЭМД.Количество() > 0 Тогда
			ПутьДоФайлаЭМД = ДанныеФайловЭМД.Получить(ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
			ИмяФайлаПМО = СтрШаблон(НСтр("ru='%1 %2 заключение от %3'"), СокрЛП(ПодписанныйПМО.ПМО.Клиент), СокрЛП(ПодписанныйПМО.ПМО.Номер), Формат(ПодписанныйПМО.ПМО.ДатаЗавершения,"ДФ=dd.MM.yyyy"));
			ИмяФайлаПМО = ОбщегоНазначенияСервер.УдалитьЗапрещенныеСимволыИмени(ИмяФайлаПМО);
			ПутьДоЭМД = СтрШаблон("%1%2.pdf", ИмяВременногоКаталога, ИмяФайлаПМО);
			КопироватьФайл(ПутьДоФайлаЭМД, ПутьДоЭМД);
			ЗаписьZipФайла.Добавить(ПутьДоЭМД);
		КонецЕсли;
	КонецЦикла;
	
	ДД = ЗаписьZipФайла.ПолучитьДвоичныеДанные();
	УдалитьФайлы(ИмяВременногоКаталога);
	
	Возврат ДД;
	
КонецФункции

&НаСервере
Функция СформироватьФайлыСПодписямиДляСохранения(РасширениеДляФайловПодписи)
	
	КаталогВременныхФайлов = СтандартныеПодсистемыСервер.СоздатьКаталогВременныхФайлов(Строка(Новый УникальныйИдентификатор));
	
	ПотокВПамяти = Новый ПотокВПамяти();
	ЗаписьZipФайла = Новый ЗаписьZipФайла();
	
	мПодписанныеПМО = Новый Массив;
	Для Каждого ПодписанныйПМО Из ДокументыПМО.НайтиСтроки(Новый Структура("ПодписанМО, ПодписанПредседателем", Истина, Истина)) Цикл
		мПодписанныеПМО.Добавить(ПодписанныйПМО.ПМО);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыЭМД.Документ КАК Документ,
		|	ФайлыЭМД.ЭМД КАК ЭМД,
		|	РолиИПодписиЭМД.РольПодписи КАК РольПодписи,
		|	ЭП.Подпись КАК Подпись,
		|	ФайлыЭМД.Документ.Клиент.Представление КАК КлиентПредставление,
		|	ФайлыЭМД.Документ.Номер КАК ДокументНомер,
		|	ФайлыЭМД.Документ.ДатаЗавершения КАК ДатаЗавершения,
		|	ФайлыЭМД.ПутьКФайлу КАК ПутьКФайлу
		|ИЗ
		|	РегистрСведений.ФайлыЭМД КАК ФайлыЭМД
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|		ПО (РолиИПодписиЭМД.Документ = ФайлыЭМД.Документ)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|		ПО (ЭП.УникальныйИдентификатор = РолиИПодписиЭМД.УИД_ЭЦП)
		|ГДЕ
		|	ФайлыЭМД.Документ В(&ПМО)
		|ИТОГИ ПО
		|	Документ";
	
	Запрос.УстановитьПараметр("ПМО", мПодписанныеПМО);
	
	ВыборкаПМО = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПутьКАрхивуЭМД = УправлениеНастройкамиМедицинскогоУчета.ПолучитьПараметрУчетнойПолитики("ПутьКАрхивуЭМД");
	
	Пока ВыборкаПМО.Следующий() Цикл
		
		ИмяФайлаПМО = СтрШаблон(НСтр("ru='%1 %2 заключение от %3'"), СокрЛП(ВыборкаПМО.КлиентПредставление), СокрЛП(ВыборкаПМО.ДокументНомер), Формат(ВыборкаПМО.ДатаЗавершения,"ДФ=dd.MM.yyyy"));
		ИмяФайлаПМО = ОбщегоНазначенияСервер.УдалитьЗапрещенныеСимволыИмени(ИмяФайлаПМО);
		
		ЗаписьZipФайлаПМО = Новый ЗаписьZipФайла(СтрШаблон("%1%2.zip", КаталогВременныхФайлов, ИмяФайлаПМО));
		
		КаталогВременныхФайловПМО = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов + ИмяФайлаПМО);
		ВыборкаПодписи = ВыборкаПМО.Выбрать();
		ЭМДДобавлен = Ложь;
		Если ВыборкаПодписи.Количество() < 2 Тогда
			Продолжить;
		КонецЕсли;
		
		Пока ВыборкаПодписи.Следующий() Цикл
			Если Не ЭМДДобавлен Тогда
				ПутьДоЭМД = Неопределено;
				Если ЗначениеЗаполнено(ВыборкаПодписи.ПутьКФайлу) Тогда
					ПутьДоЭМДВАрхиве = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКАрхивуЭМД) + ВыборкаПодписи.ПутьКФайлу;
					Если Не бит_РаботаСФайлами.ФайлСуществует(ПутьДоЭМДВАрхиве) Тогда
						ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(СтрШаблон(НСтр("ru='Не удалось получить доступ к файлу ЭМД по указанному пути: ""%1""'"), ПутьДоЭМДВАрхиве));
					КонецЕсли;
					ПутьДоЭМД = СтрШаблон("%1%2.pdf", КаталогВременныхФайлов, ИмяФайлаПМО);
					КопироватьФайл(ПутьДоЭМДВАрхиве, ПутьДоЭМД);
				Иначе
					ДДЭМД = ВыборкаПодписи.ЭМД.Получить();
					ПутьДоЭМД = КаталогВременныхФайловПМО + ИмяФайлаПМО + ".pdf";
					ДДЭМД.Записать(ПутьДоЭМД);
				КонецЕсли;
				
				ЭМДДобавлен = Истина;
				
				Если ПутьДоЭМД <> Неопределено Тогда
					ЗаписьZipФайлаПМО.Добавить(ПутьДоЭМД);
				КонецЕсли;
			КонецЕсли;
			
			ПодписьДД = ВыборкаПодписи.Подпись.Получить();
			ПутьДоПодписи = КаталогВременныхФайловПМО + Строка(ВыборкаПодписи.РольПодписи) + "." + РасширениеДляФайловПодписи;
			ПодписьДД.Записать(ПутьДоПодписи);
			
			ЗаписьZipФайлаПМО.Добавить(ПутьДоПодписи);
			
		КонецЦикла;
		ЗаписьZipФайлаПМО.Записать();
		ЗаписьZipФайла.Добавить(КаталогВременныхФайлов + ИмяФайлаПМО + ".zip");
	КонецЦикла;
	
	// Запись файла.
	ДД = ЗаписьZipФайла.ПолучитьДвоичныеДанные();
	
	СтандартныеПодсистемыСервер.ОчиститьКаталогВременныхФайлов(КаталогВременныхФайлов);
	
	Возврат ДД;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность()
	
	Элементы.ФормаПодписатьОтмеченныеДокументы.Доступность = ДокументыПМО.НайтиСтроки(Новый Структура("Выбран", Истина)).Количество() > 0;
	
КонецПроцедуры

#КонецОбласти