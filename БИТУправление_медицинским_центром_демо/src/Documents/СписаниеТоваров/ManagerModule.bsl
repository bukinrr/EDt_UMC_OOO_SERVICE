#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Ведомость","Акт списания товаров");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Ведомость" Тогда
		
		// Печать упр. формы документа
		ТабДокумент = ПечатьСписаниеТоваров(СсылкаНаОбъект);
	КонецЕсли;
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьСписаниеТоваров(СсылкаНаОбъект)
	
	ПараметрыПечати = ПолучитьДанныеДляПечатиСписанияТоваров(СсылкаНаОбъект);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеТоваров_Накладная";
	
	Макет = ПолучитьМакет("Накладная");
	
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок|Основная");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	Иначе
		ОбластьМакета = Макет.ПолучитьОбласть("СкладСписания");
		ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	
	ОбластьШапка  = Макет.ПолучитьОбласть("ШапкаТаблицы|Основная");
	ОбластьШапка.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьШапка);
	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьСклад = Макет.ПолучитьОбласть("ШапкаТаблицы|Склад");
		ТабДокумент.Присоединить(ОбластьСклад);
	КонецЕсли;
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка|Основная");
	СуммаИтого = 0;
	Ном        = 0;
	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьСклад = Макет.ПолучитьОбласть("Строка|Склад");
	КонецЕсли;

	Для Каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл
		
		Если Не ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			ТекстСообщения = НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.Заполнить(ПараметрыПозиции);
		ТабДокумент.Вывести(ОбластьСтрока);
		
		Если ПараметрыПечати.РазличныеСклады Тогда
			ОбластьСклад.Параметры.Заполнить(ПараметрыПозиции);
			ТабДокумент.Присоединить(ОбластьСклад);
		КонецЕсли;	

	КонецЦикла;
	
	// Вывести Итого
	ОбластьИтого = Макет.ПолучитьОбласть("Итого|Основная");
	ОбластьИтого.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьИтого);
	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьСклад = Макет.ПолучитьОбласть("Итого|Склад");
	КонецЕсли;	
	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьСклад.Параметры.Заполнить(ПараметрыПечати);
		ТабДокумент.Присоединить(ОбластьСклад);
	КонецЕсли;	
	
	// Вывести Сумму прописью
	ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
	ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	// Вывести подписи
	ОбластьМакета = Макет.ПолучитьОбласть("Подписи|Основная");
	ТабДокумент.Вывести(ОбластьМакета);
	
	Если ПараметрыПечати.РазличныеСклады Тогда 	
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьСписаниеТоваров()

Функция ПолучитьДанныеДляПечатиСписанияТоваров(СсылкаНаОбъект)
	
	ПараметрыПечати = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписаниеТоваров.Номер КАК Номер,
	|	СписаниеТоваров.Дата КАК Дата,
	|	СписаниеТоваров.Склад КАК Склад,
	|	СписаниеТоваров.Склад.Представление КАК ПредставлениеСклада,
	|	СписаниеТоваров.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоэффициентЕХО,
	|		Номенклатура.Артикул КАК Артикул,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		Коэффициент КАК Коэффициент,
	|		Склад КАК СкладСтрока
	|	) КАК Товары
	|ИЗ
	|	Документ.СписаниеТоваров КАК СписаниеТоваров
	|ГДЕ
	|	СписаниеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	СписаниеТоваров.Товары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СписаниеТоваровТовары.Склад) КАК СкладРазличные
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеТоваров КАК СписаниеТоваров
	|		ПО СписаниеТоваровТовары.Ссылка = СписаниеТоваров.Ссылка
	|			И (СписаниеТоваровТовары.Ссылка = &ТекущийДокумент)
	|			И (СписаниеТоваров.Ссылка = &ТекущийДокумент)
	|			И СписаниеТоваровТовары.Склад <> СписаниеТоваров.Склад
	|			И (СписаниеТоваровТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";
	
	ВалютаПечати = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВалютаУчета");
	ТаблицаСтоимости = ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект);
	ТаблицаСтоимости.Индексы.Добавить("Номенклатура,Характеристика");
	
	Выборка = Запрос.ВыполнитьПакет();
	Шапка = Выборка[0].Выбрать();
	СкладРазличные = Выборка[1].Выбрать();
	Шапка.Следующий();
	СкладРазличные.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	ПараметрыПечати.Вставить("Склад", Шапка.Склад);
	Если СкладРазличные.СкладРазличные > 0 Тогда
		ПараметрыПечати.Вставить("РазличныеСклады", Истина);
	Иначе
		ПараметрыПечати.Вставить("РазличныеСклады", Ложь);
	КонецЕсли;	

	// Выводим шапку накладной
	ТекстНазваниеДокумента = НСтр("ru='Списание товаров'"); 
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, ТекстНазваниеДокумента));
	ПараметрыПечати.Вставить("ПредставлениеСклада", Шапка.ПредставлениеСклада);
	КраткоеНаименованиеВалюты = ОбщегоНазначения.ПолучитьКраткоеНаименованиеОсновнойВалюты();
	ТекстИтогоВалюта = НСтр("ru='Всего (%1):'");
	ТекстИтогоВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИтогоВалюта, КраткоеНаименованиеВалюты); 
	ПараметрыПечати.Вставить("ИтогоВалюта", ТекстИтогоВалюта);
	ТекстАртикул = НСтр("ru='Артикул'"); 
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", ТекстАртикул);
	
	Позиции = Новый Массив;
	СуммаИтого = 0;
	Ном        = 0;
	
	// Товары
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);
		Ном = Ном + 1;
		
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);
		ПараметрыПозиции.Вставить("Артикул", ВыборкаСтрокТовары.Артикул);
		
		Если Не ВыборкаСтрокТовары.Характеристика.Наименование = "" Тогда
			ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар + Символы.ПС +"(" +ВыборкаСтрокТовары.Характеристика.Наименование + ")" );
		Иначе
			ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар)
		КонецЕсли;	
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		Сумма = ПолучитьСтоимостьТовара(ТаблицаСтоимости, ВыборкаСтрокТовары);
		ПараметрыПозиции.Вставить("Сумма", ОбщегоНазначенияКлиентСервер.ФорматСумм(Сумма));
		
		СуммаИтого = СуммаИтого + Сумма;

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.СкладСтрока) Тогда
			ПараметрыПозиции.Вставить("СкладСтрока", Шапка.Склад);
		Иначе
			ПараметрыПозиции.Вставить("СкладСтрока", ВыборкаСтрокТовары.СкладСтрока);
		КонецЕсли;
		
		Позиции.Добавить(ПараметрыПозиции);
		
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Позиции", Позиции);
	
	ПараметрыПечати.Вставить("Всего", ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаИтого));
	
	// Вывести Сумму прописью
	ТекстСтроки = НСтр("ru='Всего наименований %1, на сумму %2'");
	ТекстСтроки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСтроки, Ном, ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаИтого, ВалютаПечати)); 
	ПараметрыПечати.Вставить("ИтоговаяСтрока", ТекстСтроки);
	ПараметрыПечати.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(СуммаИтого, ВалютаПечати));
	
	Возврат ПараметрыПечати;
	
КонецФункции

Функция ПолучитьТаблицуСтоимостиТоваров(СсылкаНаОбъект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ПартииТоваровНаСкладах.Номенклатура               КАК Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры КАК Характеристика,
	|	СУММА(ПартииТоваровНаСкладах.Количество)          КАК Количество,
	|	СУММА(ПартииТоваровНаСкладах.Сумма)           КАК Стоимость
	|ИЗ
	|	РегистрНакопления.ПартииТоваровНаСкладах КАК ПартииТоваровНаСкладах
	|
	|ГДЕ
	|	ПартииТоваровНаСкладах.Регистратор = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ПартииТоваровНаСкладах.Номенклатура,
	|	ПартииТоваровНаСкладах.ХарактеристикаНоменклатуры
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

Функция ПолучитьСтоимостьТовара(Таблица, ТекСтрока)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",   ТекСтрока.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика", ТекСтрока.Характеристика);
	
	НаборСтрок = Таблица.НайтиСтроки(СтруктураПоиска);
	Если ТекСтрока.КоэффициентЕХО = 0 Тогда
		КолСписать = ТекСтрока.Количество;// * ТекСтрока.Коэффициент;
	Иначе
		КолСписать = ТекСтрока.Количество * ТекСтрока.Коэффициент / ТекСтрока.КоэффициентЕХО;
	КонецЕсли;
	Стоимость  = 0;
	
	Для Каждого Строка Из НаборСтрок Цикл
		Если КолСписать >= Строка.Количество Тогда
			Стоимость         = Стоимость  + Строка.Стоимость;
			КолСписать        = КолСписать - Строка.Количество;
			Строка.Стоимость  = 0;
			Строка.Количество = 0;
		Иначе
			Если Не Строка.Количество = 0 Тогда
				СумСписать        = Окр(Строка.Стоимость * КолСписать / Строка.Количество, 2, 1);
				Стоимость         = Стоимость + СумСписать;
				Строка.Стоимость  = Строка.Стоимость  - СумСписать;
				Строка.Количество = Строка.Количество - КолСписать;
			Иначе
				Стоимость        = Стоимость + Строка.Стоимость;
				Строка.Стоимость = 0;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Стоимость;
	
КонецФункции // ПолучитьСтоимостьПоПартиямТоваров()

#КонецОбласти
