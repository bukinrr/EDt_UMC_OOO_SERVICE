#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Метаданные().Реквизиты.СостояниеПодтверждения.ЗначениеЗаполнения;
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	СоставТранспортныхУпаковок.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Серия");
	КонецЕсли;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОРезультатахТаможенногоОформленияМДЛП.ЗаполнитьИменаРеквизитовПоТипуТаможеннойПроцедуры(ТипТаможеннойПроцедуры, ВсеРеквизиты, РеквизитыОперации);
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		Если РеквизитыОперации.Найти(Реквизит) = Неопределено Тогда
			НепроверяемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Строка Из ТранспортныеУпаковки Цикл
		Если Строка.Цена = 0 Тогда
			Состав = СоставТранспортныхУпаковок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки));
			ЕстьСтрокиБезЦены = Состав.Количество() = 0;
			Для Каждого СтрокаСостава Из Состав Цикл
				ЕСли СтрокаСостава.Цена = 0 Тогда
					ЕстьСтрокиБезЦены = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЕстьСтрокиБезЦены Тогда
				ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Цена'"), Строка.НомерСтроки, НСтр("ru = 'Транспортные упаковки'"));
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТранспортныеУпаковки", Строка.НомерСтроки, "Цена");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле,, Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОРезультатахТаможенногоОформленияМДЛП.ЗаполнитьИменаРеквизитовПоТипуТаможеннойПроцедуры(ТипТаможеннойПроцедуры, ВсеРеквизиты, РеквизитыОперации);
	ИнтеграцияМДЛП.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ОбрабатываемыеСостояния = Новый Массив;
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.КПередаче);
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ);
	ОбрабатываемыеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ);
	
	Если ОбрабатываемыеСостояния.Найти(СостояниеПодтверждения) = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	
	Если ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.Экспорт
	 Или ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.ТаможенныйТранзит
	 Или ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.ОтказВПользуГосударства Тогда
		ПараметрыОперации.НовыйСтатус = Перечисления.СтатусыУпаковокМДЛП.ВыбылаИзОборота;
	ИначеЕсли ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.Уничтожение Тогда
		ПараметрыОперации.НовыйСтатус = Перечисления.СтатусыУпаковокМДЛП.Уничтожена;
	ИначеЕсли ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.Реэкспорт Тогда
		ПараметрыОперации.НовыйСтатус = Перечисления.СтатусыУпаковокМДЛП.Реэкспорт;
	ИначеЕсли ТипТаможеннойПроцедуры = Перечисления.ТипыТаможеннойПроцедуры.ВыпускДляВнутреннегоПотребления Тогда
		ПараметрыОперации.НовыйСтатус = Перечисления.СтатусыУпаковокМДЛП.Задекларирована;
	КонецЕсли;
	
	Статус = Новый Массив;
	Статус.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ); // Можно все
	Статус.Добавить(Перечисления.СтатусыУпаковокМДЛП.Задекларирована);      // Можно Экспорт, Реэкспорт
	Статус.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);  // Можно Экспорт, Реэкспорт
	Статус.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВОбороте);             // Можно Экспорт, Реэкспорт, ТаможенныйТранзит
	ПараметрыОперации.ИсходныйСтатус = Статус;
	
	ПараметрыОперации.СтатусВРезерве = Перечисления.СтатусыУпаковокМДЛП.ВРезерве;
	
	ПараметрыОперации.МестоДеятельности = Организация;
	ПараметрыОперации.ДокументРезерва = Ссылка;
	ПараметрыОперации.ДатаОперации   = Дата;
	
	// Кастомный механизм проведения нужен, т.к. в документе Таможенное оформление не указывается место деятельности, из которого необходимо выполнить экспорт.
	// Место деятельности упаковок расчитываем и проверяем по организации, указанной в документе.
	// Для импорта такой проблемы не должно быть, т.к. таможенное оформление выполняется до приемки товаров на место деятельности, но все равно используем тот же механизм.
	
	Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ Тогда
		ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	Иначе
		
		Запрос = Новый Запрос("
		|ВЫБРАТЬ
		|	НомераУпаковок.НомерСтроки    КАК НомерСтроки,
		|	НомераУпаковок.НомерКиЗ       КАК НомерУпаковки,
		|	1                             КАК ДоляУпаковки,
		|	ЛОЖЬ                          КАК ГрупповаяУпаковка,
		|	""НомераУпаковок""            КАК ИмяТабличнойЧасти,
		|	""НомерКиЗ""                  КАК ИмяПоля
		|ПОМЕСТИТЬ НомераУпаковок
		|ИЗ
		|	Документ.УведомлениеОРезультатахТаможенногоОформленияМДЛП.НомераУпаковок КАК НомераУпаковок
		|ГДЕ
		|	НомераУпаковок.Ссылка = &Ссылка
		|	И НЕ НомераУпаковок.Отклонено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НомераУпаковок.НомерСтроки    КАК НомерСтроки,
		|	НомераУпаковок.НомерУпаковки  КАК НомерУпаковки,
		|	1                             КАК ДоляУпаковки,
		|	ИСТИНА                        КАК ГрупповаяУпаковка,
		|	""ТранспортныеУпаковки""      КАК ИмяТабличнойЧасти,
		|	""НомерУпаковки""             КАК ИмяПоля
		|ИЗ
		|	Документ.УведомлениеОРезультатахТаможенногоОформленияМДЛП.ТранспортныеУпаковки КАК НомераУпаковок
		|ГДЕ
		|	НомераУпаковок.Ссылка = &Ссылка
		|	И НЕ НомераУпаковок.Отклонено
		|");
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Выполнить();
		
		ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц);
		
		Если СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче Тогда
			
			ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
			Если ПроверкаПройдена Тогда
				ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
			КонецЕсли;
			
		ИначеЕсли СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.ПринятоГИСМ Тогда
			
			УстановитьНовыйСтатус(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

Процедура ЗарезервироватьУпаковки(МенеджерВременныхТаблиц, ПараметрыОперации)
	
	Запрос = Новый Запрос("
	// Удалить из доступных
	|ВЫБРАТЬ
	|	Таблица.НомерУпаковки                   КАК НомерУпаковки,
	|	ТекущиеСтатусы.КлючУпаковки             КАК КлючУпаковки,
	|	ТекущиеСтатусы.МестоДеятельности        КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                            КАК ДокументРезерва,
	|	ТекущиеСтатусы.ЗонаТаможенногоКонтроля  КАК ЗонаТаможенногоКонтроля
	|ИЗ
	|	НомераУпаковок КАК Таблица
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеСтатусы
	|	ПО
	|		(ТекущиеСтатусы.МестоДеятельности = &МестоДеятельности ИЛИ ТекущиеСтатусы.МестоДеятельности.Организация = &МестоДеятельности)
	|		И ТекущиеСтатусы.НомерУпаковки = Таблица.НомерУпаковки
	|		И ТекущиеСтатусы.КлючУпаковки = Таблица.КлючУпаковки
	|		И ТекущиеСтатусы.ДокументРезерва = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	Таблица.ДоляУпаковки = 1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// Поставить в резерв
	|ВЫБРАТЬ
	|	Таблица.НомерУпаковки                          КАК НомерУпаковки,
	|	ТекущиеСтатусы.МестоДеятельности               КАК МестоДеятельности,
	|	&ДокументРезерва                               КАК ДокументРезерва,
	|	ТекущиеСтатусы.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
	|	Таблица.ГрупповаяУпаковка                      КАК ГрупповаяУпаковка,
	|	ТекущиеСтатусы.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
	|	&СтатусВРезерве                                КАК Статус,
	|	ВЫБОР
	|		КОГДА ТекущиеСтатусы.ДокументРезерва <> &ДокументРезерва
	|			ТОГДА ТекущиеСтатусы.Статус
	|		ИНАЧЕ ТекущиеСтатусы.ИсходныйСтатус
	|	КОНЕЦ                                          КАК ИсходныйСтатус,
	|	ТекущиеСтатусы.ПредыдущийСтатус                КАК ПредыдущийСтатус,
	|	ТекущиеСтатусы.ДатаСтатуса                     КАК ДатаСтатуса,
	|	ТекущиеСтатусы.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
	|	ВЫБОР
	|		КОГДА ТекущиеСтатусы.Владелец ЕСТЬ NULL
	|			ТОГДА &Владелец
	|		ИНАЧЕ ТекущиеСтатусы.Владелец
	|	КОНЕЦ                                          КАК Владелец,
	|	ТекущиеСтатусы.ИсходнаяЗонаТаможенногоКонтроля КАК ИсходнаяЗонаТаможенногоКонтроля
	|ИЗ
	|	НомераУпаковок КАК Таблица
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеСтатусы
	|	ПО
	|		(ТекущиеСтатусы.МестоДеятельности = &МестоДеятельности ИЛИ ТекущиеСтатусы.МестоДеятельности.Организация = &МестоДеятельности)
	|		И ТекущиеСтатусы.НомерУпаковки = Таблица.НомерУпаковки
	|		И ТекущиеСтатусы.КлючУпаковки = Таблица.КлючУпаковки
	|ГДЕ
	|	Таблица.ДоляУпаковки = 1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// Вернуть в доступные
	|ВЫБРАТЬ
	|	ТекущиеСтатусы.НомерУпаковки                    КАК НомерУпаковки,
	|	ТекущиеСтатусы.МестоДеятельности                КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ДокументРезерва,
	|	ТекущиеСтатусы.ЗонаТаможенногоКонтроля          КАК ЗонаТаможенногоКонтроля,
	|	ТекущиеСтатусы.ГрупповаяУпаковка                КАК ГрупповаяУпаковка,
	|	ТекущиеСтатусы.ВложеныПотребительскиеУпаковки   КАК ВложеныПотребительскиеУпаковки,
	|	ТекущиеСтатусы.ИсходныйСтатус                   КАК Статус,
	|	ТекущиеСтатусы.ПредыдущийСтатус                 КАК ПредыдущийСтатус,
	|	ТекущиеСтатусы.ДатаСтатуса                      КАК ДатаСтатуса,
	|	ТекущиеСтатусы.НомерГрупповойУпаковки           КАК НомерГрупповойУпаковки,
	|	ТекущиеСтатусы.Владелец                         КАК Владелец
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ТекущиеСтатусы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НомераУпаковок КАК Таблица
	|	ПО
	|		ТекущиеСтатусы.НомерУпаковки = Таблица.НомерУпаковки
	|		И ТекущиеСтатусы.КлючУпаковки = Таблица.КлючУпаковки
	|ГДЕ
	|	ТекущиеСтатусы.ДокументРезерва = &ДокументРезерва
	|	И ТекущиеСтатусы.ИсходныйСтатус <> ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ПустаяСсылка)
	|	И ЕСТЬNULL(Таблица.ДоляУпаковки, 0) <> 1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|");
	
	ЕстьРегистрДолиУпаковок = Метаданные.РегистрыСведений.Найти("ДолиУпаковокМДЛП") <> Неопределено;
	Если ЕстьРегистрДолиУпаковок Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	Таблица.НомерУпаковки  КАК НомерУпаковки,
		|	&ДокументРезерва       КАК ДокументРезерва,
		|	Таблица.ДоляУпаковки   КАК ДоляУпаковки,
		|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ВРезерве) КАК Статус
		|ИЗ
		|	НомераУпаковок КАК Таблица
		|ГДЕ
		|	Таблица.ДоляУпаковки < 1
		|";
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СтатусВРезерве"   , ПараметрыОперации.СтатусВРезерве);
	Запрос.УстановитьПараметр("ДокументРезерва"  , ПараметрыОперации.ДокументРезерва);
	Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
	Запрос.УстановитьПараметр("Владелец"         , ПараметрыОперации.Владелец);
	
	Результат = Запрос.ВыполнитьПакет();
	УдалитьИзДоступных = Результат[0].Выбрать();
	Зарезервировать    = Результат[1].Выгрузить();
	ВернутьВДоступные  = Результат[2].Выгрузить();
	
	Запись = РегистрыСведений.УпаковкиМДЛП.СоздатьМенеджерЗаписи();
	Пока УдалитьИзДоступных.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Запись, УдалитьИзДоступных);
		Запись.Удалить();
	КонецЦикла;
	
	Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
	Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
	Набор.Загрузить(Зарезервировать);
	Набор.Записать();
	
	Если ВернутьВДоступные.Количество() > 0 Тогда
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Загрузить(ВернутьВДоступные);
		Набор.Записать(Ложь);
	КонецЕсли;
	
	Если ЕстьРегистрДолиУпаковок Тогда
		ЗарезервироватьДолиУпаковок = Результат[3].Выгрузить();
		Набор = РегистрыСведений["ДолиУпаковокМДЛП"].СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
		Набор.Загрузить(ЗарезервироватьДолиУпаковок);
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьНовыйСтатус(МенеджерВременныхТаблиц, ПараметрыОперации)
	
	Запрос = Новый Запрос("
	// Установить новый статус
	|ВЫБРАТЬ
	|	НомераУпаковок.НомерУпаковки                   КАК НомерУпаковки,
	|	ТекущиеСтатусы.МестоДеятельности               КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
	|	ТекущиеСтатусы.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
	|	НомераУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
	|	ТекущиеСтатусы.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
	|	&НовыйСтатус                                   КАК Статус,
	|	ТекущиеСтатусы.ИсходныйСтатус                  КАК ПредыдущийСтатус,
	|	&ДатаОперации                                  КАК ДатаСтатуса,
	|	ТекущиеСтатусы.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
	|	ТекущиеСтатусы.Владелец                        КАК Владелец
	|	
	|ИЗ
	|	НомераУпаковок КАК НомераУпаковок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.УпаковкиМДЛП КАК ТекущиеСтатусы
	|	ПО
	|		(ТекущиеСтатусы.МестоДеятельности = &МестоДеятельности ИЛИ ТекущиеСтатусы.МестоДеятельности.Организация = &МестоДеятельности)
	|		И ТекущиеСтатусы.НомерУпаковки = НомераУпаковок.НомерУпаковки
	|		И ТекущиеСтатусы.КлючУпаковки = НомераУпаковок.КлючУпаковки
	|		И ТекущиеСтатусы.ДокументРезерва = &ДокументРезерва
	|ГДЕ
	|	НомераУпаковок.ДоляУпаковки = 1
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	// Вернуть в доступные
	|ВЫБРАТЬ
	|	ТекущиеСтатусы.НомерУпаковки                    КАК НомерУпаковки,
	|	ТекущиеСтатусы.МестоДеятельности                КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ДокументРезерва,
	|	ТекущиеСтатусы.ЗонаТаможенногоКонтроля          КАК ЗонаТаможенногоКонтроля,
	|	ТекущиеСтатусы.ГрупповаяУпаковка                КАК ГрупповаяУпаковка,
	|	ТекущиеСтатусы.ВложеныПотребительскиеУпаковки   КАК ВложеныПотребительскиеУпаковки,
	|	ТекущиеСтатусы.ИсходныйСтатус                   КАК Статус,
	|	ТекущиеСтатусы.ПредыдущийСтатус                 КАК ПредыдущийСтатус,
	|	ТекущиеСтатусы.ДатаСтатуса                      КАК ДатаСтатуса,
	|	ТекущиеСтатусы.НомерГрупповойУпаковки           КАК НомерГрупповойУпаковки,
	|	ТекущиеСтатусы.Владелец                         КАК Владелец
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ТекущиеСтатусы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		(ТекущиеСтатусы.МестоДеятельности = &МестоДеятельности ИЛИ ТекущиеСтатусы.МестоДеятельности.Организация = &МестоДеятельности)
	|		И ТекущиеСтатусы.НомерУпаковки = НомераУпаковок.НомерУпаковки
	|		И ТекущиеСтатусы.КлючУпаковки = НомераУпаковок.КлючУпаковки
	|ГДЕ
	|	ТекущиеСтатусы.ДокументРезерва = &ДокументРезерва
	|	И ТекущиеСтатусы.ИсходныйСтатус <> ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ПустаяСсылка)
	|	И НомераУпаковок.НомерУпаковки ЕСТЬ NULL
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|");
	
	ЕстьРегистрДолиУпаковок = Метаданные.РегистрыСведений.Найти("ДолиУпаковокМДЛП") <> Неопределено;
	Если ЕстьРегистрДолиУпаковок Тогда
		Запрос.Текст = Запрос.Текст + "
		|ВЫБРАТЬ
		|	Таблица.НомерУпаковки  КАК НомерУпаковки,
		|	&ДокументРезерва       КАК ДокументРезерва,
		|	Таблица.ДоляУпаковки   КАК ДоляУпаковки,
		|	&НовыйСтатус           КАК Статус
		|ИЗ
		|	НомераУпаковок КАК Таблица
		|ГДЕ
		|	Таблица.ДоляУпаковки < 1
		|";
	КонецЕсли;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаОперации", ПараметрыОперации.ДатаОперации);
	Запрос.УстановитьПараметр("МестоДеятельности", ПараметрыОперации.МестоДеятельности);
	Запрос.УстановитьПараметр("НовыйСтатус", ПараметрыОперации.НовыйСтатус);
	Запрос.УстановитьПараметр("ДокументРезерва", ПараметрыОперации.ДокументРезерва);
	
	Результат = Запрос.ВыполнитьПакет();
	УстановитьНовыйСтатус = Результат[0].Выбрать();
	СнятьСРезерва         = Результат[1].Выбрать();
	
	Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
	Пока УстановитьНовыйСтатус.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), УстановитьНовыйСтатус);
	КонецЦикла;
	Пока СнятьСРезерва.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), СнятьСРезерва);
	КонецЦикла;
	Набор.Записать(Ложь);
	
	Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
	Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
	Набор.Записать();
	
	Если ЕстьРегистрДолиУпаковок Тогда
		УстановитьНовыйСтатусДолейУпаковок = Результат[2].Выгрузить();
		Набор = РегистрыСведений["ДолиУпаковокМДЛП"].СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
		Набор.Загрузить(УстановитьНовыйСтатусДолейУпаковок);
		Набор.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли