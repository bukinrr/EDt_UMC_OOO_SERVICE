#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Документ") Тогда
		ДокументОснование = Параметры.Документ;	
	КонецЕсли;
	
	Если Параметры.Свойство("ВидОперации") Тогда
		ЭтоВозврат = ?(Параметры.ВидОперации = Перечисления.ВидыОперацийОказанияУслуг.ВозвратКлиенту, Истина, Ложь);	
	КонецЕсли;
	
	Если Параметры.Свойство("Товары") Тогда
		Для Каждого Элемент Из Параметры.Товары Цикл
			НоваяСтрока = Товары.Добавить(); 
			НоваяСтрока.Номенклатура = Элемент.Номенклатура;
			НоваяСтрока.Серия = Элемент.Серия;
			НоваяСтрока.КодТРУ = Элемент.Номенклатура.КодТРУ;
			НоваяСтрока.ПредставлениеНоменклатуры = Строка(НоваяСтрока.КодТРУ) + ", " + Строка(НоваяСтрока.Номенклатура); 
			НоваяСтрока.Количество = Элемент.Количество;
			НоваяСтрока.КоличествоПоЭС = Элемент.Количество;
			НоваяСтрока.Цена = Элемент.Цена;
			НоваяСтрока.Сумма = НоваяСтрока.Цена * НоваяСтрока.Количество;
			НоваяСтрока.НомерПозиции = НоваяСтрока.ПолучитьИдентификатор();
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.Свойство("ЭквайринговыйТерминал") Тогда
		Если Параметры.ЭквайринговыйТерминал.Тип = Перечисления.ТипыСпособовОплат.СертификатНСПК Тогда
			СпособОплатыЭСНСПК = Параметры.ЭквайринговыйТерминал;
		Иначе
			СпособыОплатыНСПК = РаботаСДокументамиСервер.СпособыОплатыЭСНСПКЭквайринговогоТерминала(Параметры.ЭквайринговыйТерминал);
			Если СпособыОплатыНСПК.Количество() <> 0 Тогда
				СпособОплатыЭСНСПК = СпособыОплатыНСПК[0];
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
	Если Параметры.Свойство("ИдентификаторКорзиныНСПК") Тогда
		ИдентификаторКорзиныНСПК = Параметры.ИдентификаторКорзиныНСПК;
		СтараяКорзина = ИдентификаторКорзиныНСПК;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЭтоВозврат Тогда
		ПараметрыОперации = РаботаСДокументамиСервер.ПараметрыОперацииНСПК(СпособОплатыЭСНСПК, ДокументОснование);
		ПараметрыОперации.ИдентификаторКорзины = ИдентификаторКорзиныНСПК;			
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить(ПараметрыОперации);
		ДополнительныеПараметры.Вставить("ОснованиеФискальнойОперации", ДокументОснование);
		
		Оповещение = Новый ОписаниеОповещения("ПолучениеСоставаКорзиныЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ЭлектронныеСертификатыНСПККлиент.НачатьПолучениеСоставаКорзины(Оповещение, ПараметрыОперации);	
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ПредварительнаяПроверка

&НаКлиенте
Процедура Проверить(Команда)
	
	СписокОборудования = ПолучитьСписокОборудованияПоЭТ(СпособОплатыЭСНСПК);
	
	Если СписокОборудования.Количество() = 0 Тогда
		Оборудование = Неопределено;
	ИначеЕсли СписокОборудования.Количество() = 1 Тогда
		Оборудование = СписокОборудования[0].Значение;
	Иначе
		ВыбранноеОборудование = СписокОборудования.ВыбратьЭлемент();
		Если ВыбранноеОборудование = Неопределено Тогда
			Оборудование = Неопределено;
		Иначе
			Оборудование = ВыбранноеОборудование.Значение;
		КонецЕсли;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТоварныеПозиции", ПолучитьТоварныеПозиции());
	Если ДополнительныеПараметры.ТоварныеПозиции.Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ПолучениеДанныхКартыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОборудованиеПлатежныеСистемыКлиент.НачатьПолучениеПараметровКарты(Оповещение, УникальныйИдентификатор, Оборудование);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПолучениеДанныхКартыЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	// Проверка правильности структуры результата
	Если ТипЗнч(РезультатВыполнения) <> Тип("Структура")
		 Или Не РезультатВыполнения.Свойство("Результат")
	Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Результат Тогда
		// Успешно получили данные карты
		ХешНомерКарты = ?(РезультатВыполнения.Свойство("ХешНомерКарты"), РезультатВыполнения.ХешНомерКарты, "");
		НомерКарты = ?(РезультатВыполнения.Свойство("НомерКарты"), РезультатВыполнения.НомерКарты, "");
		СсылкаНаПлатежныйСчет = ?(РезультатВыполнения.Свойство("СсылкаНаПлатежныйСчет"), РезультатВыполнения.СсылкаНаПлатежныйСчет, "");
		
		ПараметрыОперации = РаботаСДокументамиСервер.ПараметрыОперацииНСПК(СпособОплатыЭСНСПК, ДокументОснование);
		
		ПараметрыОперации.ХешНомерКарты = ХешНомерКарты;
		ПараметрыОперации.СсылкаНаПлатежныйСчет = СсылкаНаПлатежныйСчет;
		
		Если ЭтоВозврат Тогда
			ПараметрыОперации.ИдентификаторКорзины = ИдентификаторКорзиныНСПК;	
		КонецЕсли;
 
		ПараметрыОперации.ТоварныеПозиции = ДополнительныеПараметры.ТоварныеПозиции;
		
		Элементы.Подтвердить.Доступность = Ложь;
		ДополнительныеПараметры.Вставить(ПараметрыОперации);
		ДополнительныеПараметры.Вставить("ОснованиеФискальнойОперации", ДокументОснование);
		
		Оповещение = Новый ОписаниеОповещения("ПредварительноеОдобрениеНСПКЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ЭлектронныеСертификатыНСПККлиент.НачатьПредварительноеОдобрениеИспользования(Оповещение, ПараметрыОперации);
		
	Иначе
		// Ошибка при получении данных карты
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;	
	
КонецПроцедуры                                                                                                       

&НаКлиенте
Процедура ПредварительноеОдобрениеНСПКЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт
	
	// Проверка правильности структуры результата
	Если ТипЗнч(РезультатВыполнения) <> Тип("Структура")
		 Или Не РезультатВыполнения.Свойство("Результат")
	Тогда
		Возврат;
	КонецЕсли;
		
	Если РезультатВыполнения.Результат Тогда
		// Одобрение получено
		Если РезультатВыполнения.Свойство("ИдентификаторКорзины") И Не ПустаяСтрока(РезультатВыполнения.ИдентификаторКорзины) Тогда
			ИдентификаторКорзиныНСПК = РезультатВыполнения.ИдентификаторКорзины;	
		КонецЕсли;
		
		Если РезультатВыполнения.Свойство("СуммаСертификатами") Тогда
			СуммаЭС = РезультатВыполнения.СуммаСертификатами;
		КонецЕсли;
		
		Для Каждого ТоварнаяПозиция Из РезультатВыполнения.ТоварныеПозиции Цикл
			
			СтрокаТовара = Товары.НайтиПоИдентификатору(ТоварнаяПозиция.НомерПозиции);
			
			Если ТоварнаяПозиция.Свойство("Сертификаты") И ТоварнаяПозиция.Сертификаты.Количество() > 0 Тогда
				
				КоличествоПоСертификату = 0;
				СуммаПоСертификату = 0;
				
				Для Каждого Сертификат Из ТоварнаяПозиция.Сертификаты Цикл
					КоличествоПоСертификату = КоличествоПоСертификату + Сертификат.Количество;
					СуммаПоСертификату = СуммаПоСертификату + Сертификат.Количество * Сертификат.Цена; 
				КонецЦикла;
				
				СтрокаТовара.КоличествоПоЭС = Мин(КоличествоПоСертификату, СтрокаТовара.Количество);
				СтрокаТовара.МаксКоличествоПоЭС = КоличествоПоСертификату;
				СтрокаТовара.ЦенаПоЭС = ?(КоличествоПоСертификату = 0, СуммаПоСертификату, Окр(СуммаПоСертификату/КоличествоПоСертификату, 2));
				СтрокаТовара.СуммаПоЭС = Окр(СуммаПоСертификату/КоличествоПоСертификату * СтрокаТовара.КоличествоПоЭС, 2); 
			КонецЕсли;
		КонецЦикла;
		
		Элементы.Подтвердить.Доступность = Истина; // Можно перенести корзину в документ.
	Иначе
		// Ошибка при получении одобрения
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Отмена(Команда)
	
	Этаформа.Закрыть();

КонецПроцедуры

&НаКлиенте
Процедура Подтвердить(Команда)
	
	ПараметрыВозврата = Новый Структура;
	ПараметрыВозврата.Вставить("Сумма", СуммаЭС);
	ПараметрыВозврата.Вставить("ИдентификаторКорзиныНСПК", ИдентификаторКорзиныНСПК);
	ПараметрыВозврата.Вставить("ЭквайринговыйТерминал", СпособОплатыЭСНСПК);
	
	Если ЗначениеЗаполнено(СтараяКорзина) Тогда
		УдалитьКорзину(СтараяКорзина);
	КонецЕсли;
	ЗаписатьТоварыПоКорзине();
	
	ЭтаФорма.Закрыть(ПараметрыВозврата);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанные(Команда)
	
	Если ЗначениеЗаполнено(СтараяКорзина) тогда
		УдалитьКорзину(СтараяКорзина);
	КонецЕсли;
	
	ЭтаФорма.Закрыть(Новый Структура("Сумма", 0));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТоварыКоличествоПоЭСПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные.Количество > ТекущиеДанные.МаксКоличествоПоЭС И ТекущиеДанные.МаксКоличествоПоЭС > 0 Тогда
		КоличествоПредел = ТекущиеДанные.МаксКоличествоПоЭС;
	Иначе
		КоличествоПредел = ТекущиеДанные.Количество;		
	КонецЕсли;
	
	Если ТекущиеДанные.КоличествоПоЭС > КоличествоПредел Тогда
		ТекущиеДанные.КоличествоПоЭС = КоличествоПредел;
	Иначе
		Элементы.Подтвердить.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Процедура ПолучениеСоставаКорзиныЗавершение(РезультатВыполнения, ДополнительныеПараметры) Экспорт

	// Проверка правильности структуры результата
	Если ТипЗнч(РезультатВыполнения) <> Тип("Структура")
		 Или Не РезультатВыполнения.Свойство("Результат")
	Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатВыполнения.Результат Тогда
		// Успешно получили состав корзины в НСПК
		Если РезультатВыполнения.Свойство("ТоварныеПозиции") И РезультатВыполнения.ТоварныеПозиции.Количество() > 0 Тогда
			
			Для Каждого ТоварнаяПозиция Из РезультатВыполнения.ТоварныеПозиции Цикл
				
				СтрокиТоваров = Товары.НайтиСтроки(Новый Структура("Номенклатура", ПолучитьСсылку(СтрЗаменить(ТоварнаяПозиция.Артикул, "_", "-"))));
				Если СтрокиТоваров.Количество() > 0 Тогда
					СтрокаТовара = СтрокиТоваров[0];
				Иначе
					Продолжить;
				КонецЕсли;
				
				СтрокаТовара.НомерПозицииВозврата = ТоварнаяПозиция.НомерПозиции;
				
				Если ТоварнаяПозиция.Свойство("Сертификаты")
					И ТоварнаяПозиция.Сертификаты.Количество() > 0
				Тогда
					КоличествоПоСертификату = 0;
					СуммаПоСертификату = 0;
					
					Для Каждого Сертификат Из ТоварнаяПозиция.Сертификаты Цикл
						КоличествоПоСертификату = КоличествоПоСертификату + Сертификат.Количество;
						СуммаПоСертификату = СуммаПоСертификату + Сертификат.Количество * Сертификат.Цена; 
					КонецЦикла;
					
					СтрокаТовара.КоличествоПоЭС = Мин(КоличествоПоСертификату, СтрокаТовара.Количество);
					СтрокаТовара.МаксКоличествоПоЭС = КоличествоПоСертификату;
					СтрокаТовара.ЦенаПоЭС  = ?(КоличествоПоСертификату = 0, СуммаПоСертификату, Окр(СуммаПоСертификату/КоличествоПоСертификату, 2));
					СтрокаТовара.СуммаПоЭС = Окр(СуммаПоСертификату/КоличествоПоСертификату * СтрокаТовара.КоличествоПоЭС, 2); 
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Иначе
		// Ошибка при получении состава корзины и НСПК
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатВыполнения.ОписаниеОшибки);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСсылку(Объект)
	
	Возврат Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Объект));
	
КонецФункции

&НаСервере
Процедура ЗаписатьТоварыПоКорзине()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Для Каждого Строка Из Товары Цикл
		
		НоваяЗапись = РегистрыСведений.СодержимоеКорзиныНСПК.СоздатьМенеджерЗаписи();
		НоваяЗапись.ИдентификаторКорзиныНСПК = ИдентификаторКорзиныНСПК;
		НоваяЗапись.Номенклатура = Строка.Номенклатура;
		НоваяЗапись.Серия 		 = Строка.Серия;
		НоваяЗапись.Количество	 = Строка.КоличествоПоЭС;
		НоваяЗапись.ЦенаНСПК	 = Строка.ЦенаПоЭС;
		НоваяЗапись.ЦенаПродажи	 = Строка.Цена;
		НоваяЗапись.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокОборудованияПоЭТ(ЭквайринговыйТерминал)
		
	СписокОборудования = Новый СписокЗначений;
	ТекущееРабочееМесто = МенеджерОборудованияВызовСервера.ПолучитьРабочееМестоКлиента();
	
	Если ЗначениеЗаполнено(ЭквайринговыйТерминал) Тогда
		Для Каждого ПодключенноеОборудование Из ЭквайринговыйТерминал.ЭквайрингНСПК.Оборудование Цикл
			Если ПодключенноеОборудование.ПодключаемоеОборудование.УстройствоИспользуется 
				И ПодключенноеОборудование.ПодключаемоеОборудование.РабочееМесто = ТекущееРабочееМесто 
			Тогда 
				СписокОборудования.Добавить(ПодключенноеОборудование.ПодключаемоеОборудование);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СписокОборудования;
	
КонецФункции

&НаКлиенте
Функция ПолучитьТоварныеПозиции()
	
	ТоварныеПозиции = Новый Массив;
	
	Для Каждого СтрокаТоваров Из Товары Цикл
		Если СтрокаТоваров.КоличествоПоЭС > 0 Тогда
			ТоварнаяПозиция = Новый Структура();
			ТоварнаяПозиция.Вставить("НомерПозиции", СтрокаТоваров.НомерПозиции);
			ТоварнаяПозиция.Вставить("Артикул", СтрЗаменить(СтрокаТоваров.Номенклатура.УникальныйИдентификатор(), "-", "_"));
			ТоварнаяПозиция.Вставить("КодТовараТРУ", СтрокаТоваров.КодТРУ);
			ТоварнаяПозиция.Вставить("Количество", СтрокаТоваров.КоличествоПоЭС);
			ТоварнаяПозиция.Вставить("Цена", СтрокаТоваров.Цена);
			ТоварнаяПозиция.Вставить("НомерПозицииВозврата", СтрокаТоваров.НомерПозицииВозврата);
			ТоварныеПозиции.Добавить(ТоварнаяПозиция);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТоварныеПозиции;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьКорзину(Корзина)
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.СодержимоеКорзиныНСПК.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ИдентификаторКорзиныНСПК.Установить(Корзина);
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти
