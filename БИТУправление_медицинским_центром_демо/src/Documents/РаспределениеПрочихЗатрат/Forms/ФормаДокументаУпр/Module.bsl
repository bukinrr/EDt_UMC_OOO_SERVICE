&НаКлиенте
Перем мТекущаяДатаДокумента Экспорт; // Хранит текущую дату документа - для проверки перехода документа в другой период установки номера

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Период.ДатаНачала = Объект.НачалоПериода;
	Период.ДатаОкончания = Объект.КонецПериода;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтруктураПеременных = ПриОткрытииСервер(Ложь);
	мТекущаяДатаДокумента = СтруктураПеременных.мТекущаяДатаДокумента;
КонецПроцедуры

&НаСервере
Функция ПриОткрытииСервер(Повторное)
	Возврат РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Повторное);	
КонецФункции

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ДатаПриИзмененииСервер(мТекущаяДатаДокумента);
	мТекущаяДатаДокумента = Объект.Дата;
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииСервер(НачальнаяДатаДокумента)
	
	РаботаСДиалогамиСервер.ПроверитьНомерДокумента(ЭтаФорма, НачальнаяДатаДокумента);	
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаНачалаПриИзменении(Элемент)
	Объект.НачалоПериода = Период.ДатаНачала;         
	УстановитьСогласноПериоду();
КонецПроцедуры

&НаКлиенте
Процедура ПериодДатаОкончанияПриИзменении(Элемент)
	Объект.КонецПериода = Период.ДатаОкончания;   
	УстановитьСогласноПериоду();
КонецПроцедуры

&НаКлиенте
Процедура ПериодВариантПриИзменении(Элемент)
	УстановитьСогласноПериоду();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСогласноПериоду()
	
	Объект.НачалоПериода = Период.ДатаНачала;
	Объект.КонецПериода	 = Период.ДатаОкончания;
	
	Если ЗначениеЗаполнено(Объект.НачалоПериода) И ЗначениеЗаполнено(Объект.КонецПериода)
		 И Объект.Затраты.Количество() > 0 Тогда
		     
		Режим = РежимДиалогаВопрос.ОКОтмена;
		Ответ = Вопрос ("Период изменен. Очистить таблицу распределения затрат?", Режим, 0);
			 
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			Объект.Затраты.Очистить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьЗатраты(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.НачалоПериода) ИЛИ 
		НЕ ЗначениеЗаполнено(Объект.КонецПериода)
	Тогда
		ПоказатьПредупреждение(, НСтр("ru='Период не указан!'"));
		Возврат;
	КонецЕсли;
	
	Если Объект.Затраты.Количество()<>0 Тогда
		ТекстВопроса = НСтр("ru='Перед заполнением табличная часть будет очищена. Заполнить?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, );
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьЗатратыСервер();	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЗатратыСервер()
	ОбъектДокумент = ЭтаФорма.РеквизитФормыВЗначение("Объект");
	ОбъектДокумент.ЗаполнитьНераспределенныеЗатратыЗаПериод();
	ЭтаФорма.ЗначениеВРеквизитФормы(ОбъектДокумент,"Объект");
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьСуммуПоПродажам(Команда)
	РаспределитьПустые();
КонецПроцедуры

&НаСервере
Процедура РаспределитьПустые()
	
	СтрокиНаУдаление = Новый СписокЗначений;
	Парам = Новый Структура("КатегорияВыработки", Справочники.КатегорииВыработки.ПустаяСсылка());
	ЗатратыСПустКатег = Объект.Затраты.НайтиСтроки(Парам);
	
	Для Каждого Стр Из ЗатратыСПустКатег Цикл
		
		Если Не ЗначениеЗаполнено(Стр.КатегорияВыработки) Тогда
			
			// Распределить затраты
			РазбитаяСумма = 0; // накапливаемая сумма
			Разбивка = ПолучитьСуммыПоКатегориям(Стр.Сумма);
			
			Для Инд = 0 По Разбивка.Количество() - 1 Цикл
					
				НовСтр = Объект.Затраты.Вставить(Стр.НомерСтроки);
				НовСтр.КатегорияВыработки = Разбивка[Инд].КатегорияВыработки;
				НовСтр.СтатьяЗатрат = Стр.СтатьяЗатрат;
				
				// Проверка для округления для последней суммы
				Если Инд <> Разбивка.Количество() - 1 Тогда
					НовСтр.Сумма = Окр(Разбивка[Инд].Сумма,2);
				Иначе
					НовСтр.Сумма = Стр.Сумма - РазбитаяСумма;
				КонецЕсли;
				
				РазбитаяСумма = РазбитаяСумма + НовСтр.Сумма;
				
			КонецЦикла;		
			СтрокиНаУдаление.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;	    
	
	// Удаление исходных строк
	Для Каждого СтрУдал Из СтрокиНаУдаление Цикл
		Объект.Затраты.Удалить(СтрУдал.Значение);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСуммыПоКатегориям(СуммаСтроки) 

	МВТ = НОВЫЙ МенеджерВременныхТаблиц;
	ЗапросМВТ = Новый Запрос;
	ЗапросМВТ.МенеджерВременныхТаблиц = МВТ;
	ЗапросМВТ.Текст = 
		"ВЫБРАТЬ
		|	СУММА(ПродажиОбороты.СуммаОборот) КАК Сумма,
		|	ПродажиОбороты.Номенклатура.КатегорияВыработки КАК КатегорияВыработки
		|ПОМЕСТИТЬ ТабПоКатегориям
		|ИЗ
		|	РегистрНакопления.Продажи.Обороты(&НачалоПериода, &КонецПериода, Регистратор, Филиал = &Филиал) КАК ПродажиОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	ПродажиОбороты.Номенклатура.КатегорияВыработки";

	ЗапросМВТ.УстановитьПараметр("КонецПериода", Период.ДатаОкончания);
	ЗапросМВТ.УстановитьПараметр("НачалоПериода", Период.ДатаНачала);
	ЗапросМВТ.УстановитьПараметр("Филиал" , Объект.Филиал);
    ЗапросМВТ.Выполнить();
	                                                                                               
	ЗапросСумма =  Новый Запрос("ВЫБРАТЬ Сумма(ТабПоКатегориям.Сумма) КАК ОбщСумма ИЗ ТабПоКатегориям");
    ЗапросСумма.МенеджерВременныхТаблиц = ЗапросМВТ.МенеджерВременныхТаблиц; 
    РезультатСумма = ЗапросСумма.Выполнить().Выбрать();
	
	ЗапросПоКатегориям =  Новый Запрос("ВЫБРАТЬ * ИЗ ТабПоКатегориям");
	ЗапросПоКатегориям.МенеджерВременныхТаблиц = ЗапросМВТ.МенеджерВременныхТаблиц;
	ТЗКатег = ЗапросПоКатегориям.Выполнить().Выгрузить();
	
	Если РезультатСумма.Следующий() Тогда
		Для Каждого Стр из ТЗКатег Цикл
			Стр.Сумма = СуммаСтроки * Окр(Стр.Сумма / РезультатСумма.ОбщСумма, 4);
		КонецЦикла;
	КонецЕсли;	

    Возврат ТЗКатег;

КонецФункции	

#Область ОбработчикиДинамическиСоздаваемыхКоманд

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВывестиДвиженияДокумента(Команда)
	РаботаСДиалогамиКлиент.ВывестиДвиженияДокумента(Объект.Ссылка, Команда);
КонецПроцедуры

#КонецОбласти