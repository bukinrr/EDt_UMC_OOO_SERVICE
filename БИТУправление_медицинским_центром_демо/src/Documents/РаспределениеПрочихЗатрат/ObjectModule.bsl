#Область ПрограммныйИнтерфейс

// Заполняет нераспределенные затраты за период
Процедура ЗаполнитьНераспределенныеЗатратыЗаПериод() Экспорт
	
	Затраты.Загрузить(ПолучитьТаблицуНераспределенныхЗатратДляРегистраторв());
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуНераспределенныхЗатратДляРегистраторв() 
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗатратыОбороты.СтатьяЗатрат,
	|	СУММА(ЗатратыОбороты.СуммаОборот) КАК Сумма
	|ИЗ
	|	РегистрНакопления.Затраты.Обороты(&ДатаНач, &ДатаКон, Регистратор, КатегорияВыработки = ЗНАЧЕНИЕ(Справочник.КатегорииВыработки.ПустаяСсылка)) КАК ЗатратыОбороты
	|ГДЕ
	|	ЗатратыОбороты.Регистратор <> &Ссылка
	|	И ЗатратыОбороты.Филиал = &Филиал
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗатратыОбороты.СтатьяЗатрат
	|ИМЕЮЩИЕ СУММА(ЗатратыОбороты.СуммаОборот) <> 0 
	|"
	;
	Запрос.УстановитьПараметр("ДатаНач", НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецДня(КонецПериода),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Ссылка" , Ссылка);
	Запрос.УстановитьПараметр("Филиал"  , Филиал);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПроверитьПревышениеНераспределенныхЗатрат()
	
	НераспределенныеЗатраты = ПолучитьТаблицуНераспределенныхЗатратДляРегистраторв();
	
	НераспределенныеЗатраты.Свернуть("СтатьяЗатрат","Сумма");
	
	РаспределяемыеЗатраты = Затраты.Выгрузить();
	РаспределяемыеЗатраты.Свернуть("СтатьяЗатрат","Сумма");
	Для Каждого СтрокаЗатрат Из РаспределяемыеЗатраты Цикл
		
		СтрокаНераспрЗатрат = НераспределенныеЗатраты.Найти(СтрокаЗатрат.СтатьяЗатрат,"СтатьяЗатрат");
		СуммаНераспрЗатрат = ?(СтрокаНераспрЗатрат = Неопределено,0,СтрокаНераспрЗатрат.Сумма);
		Если СуммаНераспрЗатрат < СтрокаЗатрат.Сумма Тогда
			ТекстСообщения = НСтр("ru=	'Для статьи затрат ""%1"" распределяемая документом сумма: %2
										|превышает сумму непрапределенных затрат по данной статье за период документа %3'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СокрЛП(СтрокаЗатрат.СтатьяЗатрат), ОбщегоНазначенияКлиентСервер.ФорматСумм(СтрокаЗатрат.Сумма), ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаНераспрЗатрат));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьСтрокуДвиженияЗатраты(ФилиалЗатрат,СтатьяЗатрат,КатегорияВыработки,Сумма)
	
	Движение = Движения.Затраты.Добавить();
	Движение.Регистратор  = Ссылка;
	Движение.Период		  = Дата;
	Движение.Сумма		  = Сумма;
	Движение.СтатьяЗатрат = СтатьяЗатрат;
	Движение.КатегорияВыработки = КатегорияВыработки;
	Движение.Филиал		  = ФилиалЗатрат;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ПроведениеДокументов.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект);
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = НСтр("ru='Проведение документа'") + " """ + СокрЛП(Ссылка) + """: ";
	
	СтруктураОбязательныхПолей = Новый Структура();
	СтруктураОбязательныхПолей.Вставить("СтатьяЗатрат");
	СтруктураОбязательныхПолей.Вставить("Сумма");
	ПроведениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Затраты", СтруктураОбязательныхПолей, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		
		ПроверитьПревышениеНераспределенныхЗатрат() ;
		
		// Движения по регистру затрат
		Для Каждого СтрокаТЧ Из Затраты Цикл
			
			Если ЗначениеЗаполнено(СтрокаТЧ.КатегорияВыработки) Тогда
				ДобавитьСтрокуДвиженияЗатраты(Филиал, СтрокаТЧ.СтатьяЗатрат, СтрокаТЧ.КатегорияВыработки, СтрокаТЧ.Сумма);
				ДобавитьСтрокуДвиженияЗатраты(Филиал, СтрокаТЧ.СтатьяЗатрат, Справочники.КатегорииВыработки.ПустаяСсылка(), -СтрокаТЧ.Сумма);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
КонецПроцедуры // ОбработкаПроведения

#КонецОбласти