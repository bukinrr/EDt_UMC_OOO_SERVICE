
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.НадписьСозданАвтоматически.Видимость = Объект.СозданАвтоматически;
	ОбновитьОтборСообщений();

	Если Объект.Ссылка.Пустая() И Параметры.Свойство("СписокПолучателей") Тогда
		РассылкаСообщенийСервер.ЗаполнитьСписокПолучателейРассылки(Объект, Сообщения, Параметры.СписокПолучателей);
	КонецЕсли;
	
	Элементы.ДатаОтправки.Доступность	= Объект.ДоставитьСообщениеВУказанноеВремя;
	Элементы.ДатаОтправкиВремя.Доступность = Объект.ДоставитьСообщениеВУказанноеВремя;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	                       
	ЗаписатьСообщения(ТекущийОбъект);
	
	ОбновитьОтборСообщений();

	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(Объект, Ложь, ЭтаФорма);
	
КонецПроцедуры

#Область ПроцедурыОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтправитьСообщения(Команда)
	
	Если ЭтаФорма.Модифицированность Тогда
	
		Ответ = Вопрос(НСтр("ru='Для отправки сообщений документ должен быть проведен. Провести документ?'"),РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			
			Возврат;
			
		Иначе ЗаписатьДокумент();
			
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ДоставитьСообщениеВУказанноеВремя Тогда
		Если ЗначениеЗаполнено(Объект.ДатаОтправки) Тогда
			Если Объект.ДатаОтправки > ТекущаяДата() Тогда
				Ответ = Вопрос(НСтр("ru='Дата отправки вашего сообщения электронной почты познее текущей даты. Отправить сообщение сейчас?'"), РежимДиалогаВопрос.ДаНет);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Возврат;	
				КонецЕсли;		
			Иначе
				Ответ = Вопрос(НСтр("ru='Дата отправки вашего сообщения электронной почты раньше текущей даты. Отправить сообщение сейчас?'"), РежимДиалогаВопрос.ДаНет);
				Если Ответ = КодВозвратаДиалога.Нет Тогда
					Возврат;	
				КонецЕсли;	
			КонецЕсли;
		Иначе 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не указана дата отправки'")); 
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	РезультатОтправки = ОтправитьСообщенияСервер();
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Отправлено %1 из %2 сообщений.'"),
						РезультатОтправки.ОтправленоСообщений,
						РезультатОтправки.ОтправлялосьСообщений);
	Предупреждение(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставитьСообщениеВУказанноеВремяПриИзменении(Элемент)
	
	Элементы.ДатаОтправки.Доступность	= Объект.ДоставитьСообщениеВУказанноеВремя;
	Элементы.ДатаОтправкиВремя.Доступность = Объект.ДоставитьСообщениеВУказанноеВремя;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКлиентов(Команда)
	
	ФормаПодбора = ПолучитьФорму("Справочник.Клиенты.ФормаВыбора",Новый Структура("РежимВыбора", Истина),Элементы.Сообщения);
	Если Не ФормаПодбора.Открыта() Тогда
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПроставитьВидСообщения(Команда)
	
	// Выбор вида сообщения
	ФормаВыбора = ПолучитьФорму("Справочник.ВидыСообщенийРассылки.ФормаВыбора");
	ВидСообщения = ФормаВыбора.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидСообщения) Тогда
		
		// Поиск сообщений с другим видом сообщения.
		
		флЕстьДругиеВиды = Ложь;
		флЗамещатьДругиеВидыСообщений = Ложь;
		Для Каждого Сообщение Из Сообщения Цикл
			
			Если ЗначениеЗаполнено(Сообщение.ВидСообщения)
				И Сообщение.ВидСообщения <> ВидСообщения
			Тогда
				Ответ = Вопрос(НСтр("ru='Есть сообщения с другими видами сообщений.
										|Проставить им выбранный вид сообщения?'"), РежимДиалогаВопрос.ДаНетОтмена);
				Если Ответ = КодВозвратаДиалога.Отмена Тогда
					Возврат;	
				Иначе				
					флЗамещатьДругиеВидыСообщений = (Ответ = КодВозвратаДиалога.Да);
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;

		ПроставитьВидСообщенияСервер(ВидСообщения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьТекстПоВидуСообщения(Команда)  
	ПереформироватьТекстПоВидуСообщенияСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПодборСотрудников(Команда)
	ФормаПодбора = ПолучитьФорму("Справочник.Сотрудники.ФормаВыбора",,Элементы.Сообщения);
	Если Не ФормаПодбора.Открыта() Тогда
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СообщенияПолучательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Клиенты") 
		Или ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Сотрудники") 
	Тогда
		АдресEMAIL = КонтактнаяИнформацияСервер.ПолучитьEMAILАдрес(ВыбранноеЗначение);
		РезультатПоиска = ПоискСтроки(ВыбранноеЗначение); 
		Если РезультатПоиска = Истина Тогда
			
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru='Такой получатель уже есть (%1) Добавить еще одного?'"),
								СокрЛП(ВыбранноеЗначение));
			Если Вопрос(ТекстСообщения, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
				ДобавитьСтрокуСообщений(ВыбранноеЗначение, АдресEMAIL);
				
			КонецЕсли;
				
		КонецЕсли;
		Элементы.Сообщения.ТекущиеДанные.КонтактПолучателя = АдресEMAIL;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции

&НаСервере
Процедура ОбновитьОтборСообщений()
	
    СписокСообщений = РеквизитФормыВЗначение("Сообщения");
	
	СписокСообщений.Отбор.Рассылка.Значение=Объект.Ссылка;
    СписокСообщений.Отбор.Рассылка.Использование=Истина;
    СписокСообщений.Прочитать();
	
	ЗначениеВРеквизитФормы(СписокСообщений, "Сообщения");
	
КонецПроцедуры

&НаСервере
Функция ПоискСтроки(ВыбранноеЗначение)	
	
	ТаблицаЗначений = Сообщения.Выгрузить();
	
	Возврат ?(ТаблицаЗначений.Найти(ВыбранноеЗначение, "Получатель") = Неопределено, Ложь, Истина);
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуСообщений(ЗначениеВыбора, АдресEMAIL);
	ТаблицаЗначений = РеквизитФормыВЗначение("Сообщения");
	
	ПоследняяСтрока = ТаблицаЗначений[(ТаблицаЗначений.Количество() - 1)];
	ПоследняяСтрока.Рассылка = Объект.Ссылка;
	ПоследняяСтрока.Получатель = ЗначениеВыбора;
	ПоследняяСтрока.СтатусОтправки = Перечисления.СтатусыОтправкиСообщений.НеОтправлено;
	ПоследняяСтрока.КонтактПолучателя = АдресEMAIL; 
		
	ЗначениеВРеквизитФормы(ТаблицаЗначений,"Сообщения");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСообщения(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.СообщенияЭлектроннойПочты.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	НаборЗаписей.Записать();
	
	// Записываем новые
	НаборЗаписей = РегистрыСведений.СообщенияЭлектроннойПочты.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	Выгрузка = Сообщения.Выгрузить();
	
	Для Каждого Строка Из Выгрузка Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		
		НоваяЗапись.Рассылка = Объект.Ссылка;
		
		Если Объект.ДоставитьСообщениеВУказанноеВремя Тогда
			НоваяЗапись.ДатаОтправки = Объект.ДатаОтправки;
		КонецЕсли;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	ТекущийОбъект.УстановитьСтатусСообщенийПоДокументу();
	
	НаборЗаписей = РегистрыСведений.СообщенияЭлектроннойПочты.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	Сообщения.Загрузить(НаборЗаписей.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура ПроставитьВидСообщенияСервер(ВидСообщения)
	ТабСообщения = Сообщения.Выгрузить();
	ТабСообщения.ЗаполнитьЗначения(ВидСообщения, "ВидСообщения");
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьТекстПоВидамСообщений(ТабСообщения);
	
	Сообщения.Загрузить(ТабСообщения);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
КонецПроцедуры

&НаСервере
Процедура ПереформироватьТекстПоВидуСообщенияСервер()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТабСообщения = Сообщения.Выгрузить();
	ДокументОбъект.ЗаполнитьТекстПоВидамСообщений(ТабСообщения);
	Сообщения.Загрузить(ТабСообщения);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДокумент()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Функция ОтправитьСообщенияСервер()
	
	ЗаписатьСообщения();
	РезультатОтправки = РеквизитФормыВЗначение("Объект").ОтправитьНеотправленныеСообщения(Сообщения);
	ОбновитьОтборСообщений();
	
	Возврат РезультатОтправки;
	
КонецФункции

&НаКлиенте
Процедура СообщенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	АдресEMAIL = КонтактнаяИнформацияСервер.ПолучитьEMAILАдрес(ВыбранноеЗначение);
	
	ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Такой получатель уже есть (%1) Добавить еще одного?'"),
						СокрЛП(ВыбранноеЗначение));
	Если Сообщения.НайтиСтроки(Новый Структура("Получатель",ВыбранноеЗначение)).Количество() = 0
		Или Вопрос(ТекстСообщения, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да
	Тогда
		Строка = Сообщения.Добавить();
		Строка.Получатель		 = ВыбранноеЗначение;
		Строка.Рассылка			 = Объект.Ссылка;
		Строка.КонтактПолучателя   = АдресEMAIL;
		Строка.СтатусОтправки    = ПредопределенноеЗначение("Перечисление.СтатусыОтправкиСообщений.НеОтправлено");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииСервер();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииСервер()
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма);	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоПараметрам(Команда)
	Форма = ПолучитьФорму("Обработка.ПоискКлиентовДляРассылки.Форма");
	Форма.ЭтоSMS = Ложь;
	МассивКлиентов = Форма.ОткрытьМодально();
	Если МассивКлиентов <> Неопределено Тогда 
		ЗаполнитьСписокПолучателейНаСервере(МассивКлиентов);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СообщенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если Копирование Тогда
		Элемент.ТекущиеДанные.ВнутреннийИдентификаторСообщения = Неопределено;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПолучателейНаСервере(СписокПолучателей)
	
	РассылкаСообщенийСервер.ЗаполнитьСписокПолучателейРассылки(Объект, Сообщения, СписокПолучателей, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоПараметрамРасширенный(Команда)
	
	Форма = ПолучитьФорму("Обработка.УниверсальныйПоискКлиентов.Форма", Новый Структура("ЗагрузкаВДокумент", Истина));
	МассивКлиентов = Форма.ОткрытьМодально();
	Если МассивКлиентов <> Неопределено Тогда
		ЗаполнитьСписокПолучателейНаСервере(МассивКлиентов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
