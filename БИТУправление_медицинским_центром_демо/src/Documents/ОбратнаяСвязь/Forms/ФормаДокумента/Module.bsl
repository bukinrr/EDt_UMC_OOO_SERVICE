
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);

	ЭтоНовый = Объект.Ссылка.Пустая();	
	Если ЭтоНовый Тогда
		Объект.Автор = ПараметрыСеанса.ТекущийПользователь;
	Иначе
		Формулировка.УстановитьHTML(Объект.Формулировка, Новый Структура);
	КонецЕсли;
	
	Элементы.ГруппаЗакрытиеШапка.Доступность = ПравоДоступа("ИнтерактивноеИзменениеПроведенных", Метаданные.Документы.ОбратнаяСвязь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Формулировка.ПолучитьHTML(Объект.Формулировка, Новый Структура);
	Объект.ФормулировкаПредставление = Формулировка.ПолучитьТекст();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(Объект, Истина, ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Клиенты") Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			Объект.Клиент = ВыбранноеЗначение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПриИзмененииТипОбращения()
	
	РеквизитыТипаОбращения = ПолучитьРеквизитыТипаОбращения(Объект.ТипОбращения, Объект.Филиал);
	ТипОбъекта = РеквизитыТипаОбращения.ТипОбъектаОбратнойСвязи;
		
	Если ТипОбъекта = ПредопределенноеЗначение("Перечисление.ТипОбъектаОбратнойСвязи.НеУказывается") Тогда
		Объект.ОбъектОбращения = Неопределено;
		Элементы.ОбъектОбращения.АвтоОтметкаНезаполненного = Ложь;
	Иначе
		Элементы.ОбъектОбращения.АвтоОтметкаНезаполненного = Истина;
		Если ТипОбъекта = ПредопределенноеЗначение("Перечисление.ТипОбъектаОбратнойСвязи.Сотрудник") Тогда
			ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.Сотрудники");
			
		ИначеЕсли ТипОбъекта = ПредопределенноеЗначение("Перечисление.ТипОбъектаОбратнойСвязи.ОбъектОбратнойСвязи") Тогда
			ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ОбъектыОбратнойСвязиКлиента");
			
		ИначеЕсли ТипОбъекта = ПредопределенноеЗначение("Перечисление.ТипОбъектаОбратнойСвязи.Прочее") Тогда
			ОписаниеТипа = Новый ОписаниеТипов("Строка");
		Иначе
			ОписаниеТипа = Новый ОписаниеТипов("Неопределено");
		КонецЕсли;
		Объект.ОбъектОбращения = ОписаниеТипа.ПривестиЗначение(Объект.ОбъектОбращения);
	КонецЕсли;
	
	Если РеквизитыТипаОбращения.Ответственный <> Неопределено Тогда
		Объект.ОтветственныйЗаРазбор = РеквизитыТипаОбращения.Ответственный;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыТипаОбращения(ТипОбращения, Филиал)
	
	Результат = Новый Структура("ТипОбъектаОбратнойСвязи, Ответственный", ТипОбращения.ТипОбъектаОбратнойСвязи, Неопределено);
	
	СтрокаОтветственный = ТипОбращения.Ответственные.Найти(Филиал, "Филиал");
	Если СтрокаОтветственный <> Неопределено Тогда
		Результат.Ответственный = СтрокаОтветственный.Ответственный;
	Иначе
		СтрокаОтветственный = ТипОбращения.Ответственные.Найти(Справочники.Филиалы.ПустаяСсылка(), "Филиал");
		Если СтрокаОтветственный <> Неопределено Тогда
			Результат.Ответственный = СтрокаОтветственный.Ответственный;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ТипОбращенияПриИзменении(Элемент)
	ПриИзмененииТипОбращения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДатаЗакрытияУстановитьСегодня(Команда)
	
	Объект.ДатаЗакрытия = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискКлиентов(Команда)
	ОткрытьФорму("ОбщаяФорма.ФормаПоискаКлиентаУпр",,ЭтаФорма);
КонецПроцедуры

#КонецОбласти
