#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументНачисления = Параметры.Документ;
	
	
	Если ЗначениеЗаполнено(ДокументНачисления) Тогда
		СпособСуммыВыплаты = РаботаСФормамиСервер.ПолучитьНастройкуФормы("НачислениеЗарплаты.ФормаВыплаты", "СпособСуммыВыплаты", 0);
	Иначе
		СпособСуммыВыплаты = 1; // Задолженность;
	КонецЕсли;
	
	Если Параметры.Сотрудники <> Неопределено Тогда
		ЗаполнитьФормуСпискомСотрудников(Параметры.Сотрудники);
	Иначе
		ЗаполнитьВсемиСотрудниками();
	КонецЕсли;
	
	НастроитьФормуПоРежимуОткрытия();

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СпособСуммыВыплатыПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументНачисления) Тогда
		РаботаСФормамиСервер.СохранитьНастройкуФормы("НачислениеЗарплаты.ФормаВыплаты", "СпособСуммыВыплаты", СпособСуммыВыплаты);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "РКОЗаписан"
		И Параметр.Свойство("Получатель")
		И ТаблицаВыплат.НайтиСтроки(Новый Структура("Сотрудник", Параметр.Получатель)).Количество() <> 0
	Тогда
		Сотрудники = Новый Массив;
		Сотрудники.Добавить(Параметр.Получатель);
		ЗаполнитьФормуСпискомСотрудников(Сотрудники);
	ИначеЕсли ИмяСобытия = "БанковскаяВедомостьЗПЗаполнена" Тогда
		ЗаполнитьФормуСпискомСотрудников(Источник);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособСуммыВыплатыПриИзменении(Элемент)
	
	Для Каждого Строка Из ТаблицаВыплат Цикл
		
		Если СпособСуммыВыплаты = 0 Тогда
			Выплатить = Строка.Начислено;
		ИначеЕсли СпособСуммыВыплаты = 1 Тогда
			Выплатить = Строка.Задолженность;
		Иначе
			Выплатить = Мин(Строка.Начислено, Строка.Задолженность);
		КонецЕсли;
			
		Строка.Выплатить = Выплатить;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура КомандаСоздатьРКО(Команда)
	
	Данные = Элементы.ТаблицаВыплат.ТекущиеДанные;
	
	Если Данные <> Неопределено Тогда
		ЗначенияЗаполнения = Новый Структура("Контрагент, СуммаДокумента, ВидОперации", Данные.Сотрудник, Данные.Выплатить, ПредопределенноеЗначение("Перечисление.ВидыОперацийРКО.ВыдачаДенежныхСредствСотруднику"));
		ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	    ОткрытьФорму("Документ.РасходныйКассовыйОрдер.ФормаОбъекта", ПараметрыОткрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыплатаЧерезБанк(Команда)
	
    ЗначенияЗаполнения = Новый Структура("Выплаты", ТаблицуВыплатВМассив(ТаблицаВыплат));
	ПараметрыОткрытия = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
	ОткрытьФорму("Документ.ВедомостьОВыплаченнойЗарплатеЧерезБанк.ФормаОбъекта", ПараметрыОткрытия, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоРежимуОткрытия()
	
	Если Не ЗначениеЗаполнено(ДокументНачисления) Тогда
		Элементы.СпособСуммыВыплаты.Видимость = Ложь;
		Элементы.ТаблицаВыплатСумма.Видимость = Ложь; // Колонка Начислено.
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФормуСпискомСотрудников(Сотрудники)
	
	Если ТипЗнч(Сотрудники) = Тип("ДокументСсылка.ВедомостьОВыплаченнойЗарплатеЧерезБанк") Тогда
		Сотрудники = Сотрудники.РасчетыССотрудниками.Выгрузить().ВыгрузитьКолонку("Сотрудник");
	КонецЕсли;
	
	Для Каждого Сотрудник Из Сотрудники Цикл
		
		СтрокиСотрудника = ТаблицаВыплат.НайтиСтроки(Новый Структура("Сотрудник", Сотрудник));
		Если СтрокиСотрудника.Количество() = 0 Тогда
			НоваяСтрока = ТаблицаВыплат.Добавить();
			НоваяСтрока.Сотрудник = Сотрудник;
		Иначе
			НоваяСтрока = СтрокиСотрудника[0];
		КонецЕсли;
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Регистратор", ДокументНачисления);
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СУММА(ВзаиморасчетыССотрудниками.Сумма) КАК Сумма,
		|	ВзаиморасчетыССотрудниками.Сотрудник
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками КАК ВзаиморасчетыССотрудниками
		|ГДЕ
		|	ВзаиморасчетыССотрудниками.Регистратор = &Регистратор
		|	И ВзаиморасчетыССотрудниками.Сотрудник = &Сотрудник
		|
		|СГРУППИРОВАТЬ ПО
		|	ВзаиморасчетыССотрудниками.Сотрудник";
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		
		Если Выгрузка.Количество() = 0 Тогда
			
			НоваяСтрока.Начислено = 0;
			
		Иначе
			
			НоваяСтрока.Начислено = Выгрузка[0].Сумма;	
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВзаиморасчетыССотрудникамиОстатки.СуммаОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки КАК ВзаиморасчетыССотрудникамиОстатки
		|ГДЕ
		|	ВзаиморасчетыССотрудникамиОстатки.Сотрудник = &Сотрудник";
		
		Выгрузка = Запрос.Выполнить().Выгрузить();
		
		Если Выгрузка.Количество() = 0 Тогда
			
			НоваяСтрока.Задолженность = 0;
			
		Иначе
			
			НоваяСтрока.Задолженность = Выгрузка[0].Сумма;	
			
		КонецЕсли;
		
		НоваяСтрока.Выплатить = НоваяСтрока.Начислено;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВсемиСотрудниками()

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Остатки.СуммаОстаток КАК Задолженность,
	|	Остатки.Сотрудник КАК Сотрудник
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыССотрудниками.Остатки КАК Остатки
	|ГДЕ
	|	Остатки.СуммаОстаток > 0 
	|	И НЕ Остатки.Сотрудник.Архив
	|
	|УПОРЯДОЧИТЬ ПО
	|	Остатки.Сотрудник.Наименование";
	
	ОстаткиРасчетов = Запрос.Выполнить().Выбрать();
	Пока ОстаткиРасчетов.Следующий() Цикл
	
		НоваяСтрока = ТаблицаВыплат.Добавить();
		НоваяСтрока.Сотрудник	  = ОстаткиРасчетов.Сотрудник;
		НоваяСтрока.Задолженность = ОстаткиРасчетов.Задолженность;
		НоваяСтрока.Выплатить	  = НоваяСтрока.Задолженность;
	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТаблицуВыплатВМассив(Знач ТаблицаВыплат)
	
	Выплаты = ТаблицаВыплат.Выгрузить();
	Выплаты.Колонки.Выплатить.Имя = "Сумма";
	Выплаты.Свернуть("Сотрудник", "Сумма");
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Выплаты);
	
КонецФункции

#КонецОбласти