#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидНазначения = Параметры.ВидНазначения;
	
	СписокГрупп = Новый СписокЗначений;
	
	Если ВидНазначения = Перечисления.ВидыНазначений.Прием Тогда
		Назначения.ТекстЗапроса =
		"ВЫБРАТЬ
		|	Специализации.ЭтоГруппа КАК ЭтоГруппа,
		|	Специализации.Ссылка КАК Ссылка,
		|	Специализации.Наименование КАК Наименование
		|ИЗ
		|	Справочник.КатегорииВыработки КАК Специализации";
		Назначения.ОсновнаяТаблица = "Справочник.КатегорииВыработки";
		
		Запрос = Новый Запрос;
		Запрос.Текст = Назначения.ТекстЗапроса;
		Выб = Запрос.Выполнить().Выбрать();
		Пока Выб.Следующий() Цикл
			Если Выб.ЭтоГруппа Тогда
				СписокГрупп.Добавить(Выб.Ссылка);
			КонецЕсли;
		КонецЦикла;
	Иначе
		// Отсев групп, в которых нет услуг.
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Ссылка,
		|	Номенклатура.ЭтоГруппа
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
		|ИТОГИ ПО
		|	Ссылка ТОЛЬКО ИЕРАРХИЯ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Номенклатура.Ссылка
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.ЭтоГруппа"
		;
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		СписокГруппМатериалов = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Ссылка");

		СписокГрупп.ЗагрузитьЗначения(СписокГруппМатериалов); // Общий список групп справочника
		
		Выб = РезультатЗапроса[0].Выбрать();
		Пока Выб.Следующий() Цикл
			Если ЗначениеЗаполнено(Выб.Ссылка)
				И Выб.ЭтоГруппа
			Тогда
				Инд = СписокГруппМатериалов.Найти(Выб.Ссылка);
				Если Инд <> Неопределено Тогда
					СписокГруппМатериалов.Удалить(Инд);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементОформления = Назначения.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

		УслОформПоГруппе = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УслОформПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		УслОформПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		УслОформПоГруппе.ПравоеЗначение = СписокГруппМатериалов;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Назначения, Ложь);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Перенести(Команда)
	ОповеститьОВыборе(ВыбранныеНазначения);
 	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СкрытьПоказатьАрхивные(Команда)

	РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.ФормаСкрытьПоказатьАрхивные, Назначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НазначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	Если СписокГрупп.НайтиПоЗначению(ВыбраннаяСтрока) = Неопределено Тогда // Это не группа.
		СтандартнаяОбработка = Ложь;
		ВыбранноеНазначение = ВыбранныеНазначения.Добавить();
		ВыбранноеНазначение.Ссылка = Элемент.ТекущиеДанные.Ссылка;
		ВыбранноеНазначение.ВидНазначения = ВидНазначения;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеНазначенияПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
	Для Каждого НомерСтроки Из ПараметрыПеретаскивания.Значение Цикл
		
		СтрокаВыбора = Элементы.Назначения.ДанныеСтроки(НомерСтроки);
		Если СписокГрупп.НайтиПоЗначению(СтрокаВыбора.Ссылка) = Неопределено Тогда // Это не группа.
			ВыбранноеНазначение = ВыбранныеНазначения.Добавить();
			ВыбранноеНазначение.Ссылка = СтрокаВыбора.Ссылка;
			ВыбранноеНазначение.ВидНазначения = ВидНазначения;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
