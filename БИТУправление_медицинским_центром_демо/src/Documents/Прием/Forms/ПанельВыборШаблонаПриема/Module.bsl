#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветКнопки = ЦветаСтиля.ЦветФонаКнопки;
	ЦветВыделеннойКнопки = ЦветаСтиля.ФонПодписьВерна; 
	ЗаполнитьФормуКнопками();
	
	ШаблоныПриема.Загрузить(Параметры.ШаблоныПриема.Выгрузить());
	Для Каждого Шаблон Из ШаблоныПриема Цикл
		Отбор = Новый Структура("Шаблон",Шаблон.ШаблонПриема);
		Для Каждого Строка Из АссоциацииШаблонКнопка.НайтиСтроки(Отбор) Цикл
			Кнопка = Элементы.Найти(Строка.Кнопка);
			Кнопка.Пометка = Истина;
			Кнопка.ЦветФона = ЦветВыделеннойКнопки;	
			Кнопка.Родитель.Родитель.Показать();
		КонецЦикла; 
	КонецЦикла;
	
	РежимТрактовкиНажатия = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПанельВыборШаблонаПриема", "РежимТрактовкиНажатия", 0);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если АссоциацииШаблонКнопка.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru='Для выбранного врача нет шаблонов, присвоенных его специализациям.'"));
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		НастройкиФормы = Новый Структура;
		НастройкиФормы.Вставить("РежимТрактовкиНажатия", РежимТрактовкиНажатия);
		
		РаботаСФормамиСервер.СохранитьНастройкиФормы(НастройкиФормы, "ПанельВыборШаблонаПриема");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	МассивШаблонов = Новый Массив;
	Для Каждого СтрокаШаблон Из ШаблоныПриема Цикл
		МассивШаблонов.Добавить(СтрокаШаблон.ШаблонПриема);
	КонецЦикла;
	
	Закрыть();
	Состояние(НСтр("ru='Применение'"));
	Оповестить("ВыбраныШаблоныПриема", МассивШаблонов, ВладелецФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВыбранныеШаблоныПередНачаломИзменения(Элемент, Отказ)
	ТекущийШаблон = Элемент.ТекущиеДанные.ШаблонПриема;	
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеШаблоныПриИзменении(Элемент)
	ОбновитьКнопки(ТекущийШаблон);
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ОбновитьКнопки(Элемент.ТекущиеДанные.ШаблонПриема);	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеШаблоныПередУдалением(Элемент, Отказ)
	Отбор = Новый Структура("ШаблонПриема",Элемент.ТекущиеДанные.ШаблонПриема);
	Если ШаблоныПриема.НайтиСтроки(Отбор).Количество() = 1 Тогда
		МассивКнопок = НайтиКнопки(Элемент.ТекущиеДанные.ШаблонПриема);
		Для каждого Кнопка Из МассивКнопок Цикл
			Кнопка.Пометка = Ложь;
			Кнопка.ЦветФона = ЦветКнопки;		
		КонецЦикла; 	
	КонецЕсли;  
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ЗаполнениеФормыКнопками

&НаСервере
Процедура ЗаполнитьФормуКнопками()
	
	ТабСпециализаций = Параметры.Врач.Специализации.Выгрузить(,"Специализация");
	
	Если Параметры.Врач.Метаданные().ТабличныеЧасти.Найти("СпециализацииФРМР") <> Неопределено Тогда
		ТабСпециализацийФРМР = Параметры.Врач["СпециализацииФРМР"].Выгрузить(,"Специализация");
		ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТабСпециализаций, ТабСпециализацийФРМР);
	КонецЕсли;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	КатегорииВыработки.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.КатегорииВыработки КАК КатегорииВыработки
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КатегорииВыработки.Наименование";
	Запрос = Новый Запрос(ТекстЗапроса);
	Специализации = Запрос.Выполнить().Выгрузить();
	
	// Находим шаблоны основной специализации врача
	Если ЗначениеЗаполнено(Параметры.Врач.Специализация) Тогда
		ТекстЗапроса = "ВЫБРАТЬ
		               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра КАК Ссылка
		               |ИЗ
		               |	РегистрСведений.СпециализацииШаблоновОсмотра КАК СпециализацииШаблоновОсмотра
		               |ГДЕ
		               |	СпециализацииШаблоновОсмотра.Специализация = &Специализация
		               |	И НЕ СпециализацииШаблоновОсмотра.ШаблонОсмотра.ПометкаУдаления
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	СпециализацииШаблоновОсмотра.Основной УБЫВ,
		               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра.Наименование";
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Специализация",Параметры.Врач.Специализация);
		ШаблоныОсновнойСпец = Запрос.Выполнить().Выгрузить();
		Если ШаблоныОсновнойСпец.Количество() <> 0 Тогда
			Группа = СоздатьГруппуСпециализации(Параметры.Врач.Специализация, Ложь);
			РазместитьШаблоныВГруппе(ШаблоныОсновнойСпец,Группа);
		КонецЕсли;
	КонецЕсли;

	// Находим шаблоны не основной специализаций врача
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СпециализацииШаблоновОсмотра.Специализация КАК Специализация,
	               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра КАК Ссылка
	               |ИЗ
	               |	РегистрСведений.СпециализацииШаблоновОсмотра КАК СпециализацииШаблоновОсмотра
	               |ГДЕ
	               |	СпециализацииШаблоновОсмотра.Специализация В(&ТабСпециализаций)
	               |	И СпециализацииШаблоновОсмотра.Специализация <> &Основная
	               |	И НЕ СпециализацииШаблоновОсмотра.ШаблонОсмотра.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СпециализацииШаблоновОсмотра.Специализация,
	               |	СпециализацииШаблоновОсмотра.Основной УБЫВ,
	               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра.Наименование";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТабСпециализаций",ТабСпециализаций);
	Запрос.УстановитьПараметр("Основная",Параметры.Врач.Специализация);
	ШаблоныСоСпециализациями = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Специализация Из Специализации Цикл
		Отбор = Новый Структура("Специализация",Специализация.Ссылка);
		ШаблоныСпециализации = ШаблоныСоСпециализациями.НайтиСтроки(Отбор);	
		Если ШаблоныСпециализации.Количество() <> 0 Тогда
			Группа = СоздатьГруппуСпециализации(Специализация.Ссылка, Ложь);
			
			РазместитьШаблоныВГруппе(ШаблоныСпециализации,Группа);	
		КонецЕсли; 	
	КонецЦикла; 
	
	//// Шаблоны других специализаций (которых нет у текущего врача)
	//ТекстЗапроса = "ВЫБРАТЬ
	//               |	СпециализацииШаблоновОсмотра.Специализация КАК Специализация,
	//               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра КАК Ссылка
	//               |ИЗ
	//               |	РегистрСведений.СпециализацииШаблоновОсмотра КАК СпециализацииШаблоновОсмотра
	//               |ГДЕ
	//               |	НЕ СпециализацииШаблоновОсмотра.Специализация В (&ТабСпециализаций)
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	Специализация,
	//               |	Ссылка";
	//Запрос = Новый Запрос(ТекстЗапроса);
	//Запрос.УстановитьПараметр("ТабСпециализаций",ТабСпециализаций);
	//ШаблоныСоСпециализациями = Запрос.Выполнить().Выгрузить();	
	//Для каждого Специализация Из Специализации Цикл
	//	Отбор = Новый Структура("Специализация",Специализация.Ссылка);
	//	ШаблоныСпециализации = ШаблоныСоСпециализациями.НайтиСтроки(Отбор);	
	//	Если ШаблоныСпециализации.Количество() <> 0 Тогда
	//		Группа = СоздатьГруппуСпециализации(Специализация.Ссылка);
	//		РазместитьШаблоныВГруппе(ШаблоныСпециализации,Группа);	
	//	КонецЕсли; 	
	//КонецЦикла; 

	//// Шаблоны без специализации
	//ТекстЗапроса = "ВЫБРАТЬ
	//               |	СпециализацииШаблоновОсмотра.ШаблонОсмотра КАК Ссылка
	//               |ПОМЕСТИТЬ ШаблоныСоСпец
	//               |ИЗ
	//               |	РегистрСведений.СпециализацииШаблоновОсмотра КАК СпециализацииШаблоновОсмотра
	//               |;
	//               |
	//               |////////////////////////////////////////////////////////////////////////////////
	//               |ВЫБРАТЬ
	//               |	ШаблоныHTML.Ссылка КАК Ссылка
	//               |ИЗ
	//               |	Справочник.ШаблоныHTML КАК ШаблоныHTML
	//               |ГДЕ
	//               |	Не ШаблоныHTML.Ссылка В(Выбрать Ссылка Из ШаблоныСоСпец)
	//               |
	//               |УПОРЯДОЧИТЬ ПО
	//               |	ШаблоныHTML.Наименование";
	//Запрос = Новый Запрос(ТекстЗапроса);
	//ШаблоныБезСпециализации = Запрос.Выполнить().Выгрузить();
	//Группа = СоздатьГруппуСпециализации("Шаблоны без специализации");
	//РазместитьШаблоныВГруппе(ШаблоныБезСпециализации,Группа);

КонецПроцедуры

&НаСервере
Функция СоздатьГруппуСпециализации(Специализация, Скрывать = Истина)
	
	Если ТипЗнч(Специализация) = Тип("Строка") Тогда
		Имя = "ШаблоныБезСпециализации";
	Иначе
		Имя = ИмяГруппыПоСпециализации(Специализация);
	КонецЕсли;
	
	Группа = Элементы.Добавить(Имя,Тип("ГруппаФормы"),Элементы.СтраницаКнопок);
	Группа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	Группа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяЕслиВозможно;
	Группа.Заголовок = Специализация;
	Группа.ШрифтЗаголовка = ШрифтыСтиля.ОченьКрупныйШрифтТекста;
	Группа.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента.Лево;
	Группа.Поведение = ПоведениеОбычнойГруппы.Свертываемая;
	Группа.РастягиватьПоВертикали = Ложь;
	Если Скрывать Тогда
		Группа.Скрыть();	
	КонецЕсли; 
	Возврат Группа;
КонецФункции

&НаСервере
Процедура РазместитьШаблоныВГруппе(СписокШаблонов, ГруппаСпециализации)
	
	КоличествоШаблонов = СписокШаблонов.Количество();
	Если КоличествоШаблонов = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	МаксКоличествоВСтроке = Цел(КоличествоШаблонов/Sqrt(КоличествоШаблонов));
	Если МаксКоличествоВСтроке < 4 Тогда
		МаксКоличествоВСтроке = 4;	
	ИначеЕсли МаксКоличествоВСтроке > 5 Тогда
		МаксКоличествоВСтроке = 5;	
	КонецЕсли;
	
	СчШаблоновВСтроке = 0;	
	СчСтроки = 1;
	СчКнопки = 1;
	Если Не ЗначениеЗаполнено(НомерКоманды) Тогда
		НомерКоманды = 1;	
	КонецЕсли;
	
	Для Каждого Шаблон Из СписокШаблонов Цикл
		Если СчШаблоновВСтроке = 0 Тогда
			ГруппаСтроки = Элементы.Добавить(ГруппаСпециализации.Имя + СчСтроки,Тип("ГруппаФормы"),ГруппаСпециализации);
			ГруппаСтроки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
			ГруппаСтроки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			СчСтроки = СчСтроки + 1;
		КонецЕсли; 
		
		// Создание кнопки
		ИмяКнопки = ГруппаСпециализации.Имя + "Кнопка" + СчКнопки;
		Кнопка = Элементы.Добавить(ИмяКнопки,Тип("КнопкаФормы"),ГруппаСтроки);
		Кнопка.Заголовок = Шаблон.Ссылка;
		Кнопка.Фигура = ФигураКнопки.Овал;
		Кнопка.Высота = 3;
		Кнопка.ВысотаЗаголовка = 2;
		Кнопка.АвтоМаксимальнаяШирина = Ложь; 
		Кнопка.МаксимальнаяШирина = 40;
		Кнопка.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста; 
		Кнопка.ИмяКоманды = "ОбновитьСписок";
		СчКнопки = СчКнопки + 1;
		
		// Заносим в таблицу ассоциаций шаблон-кнопка
		СтрокаАссоциации = АссоциацииШаблонКнопка.Добавить();
		СтрокаАссоциации.Шаблон = Шаблон.Ссылка;
		СтрокаАссоциации.Кнопка = Кнопка.Имя;
		
		СчШаблоновВСтроке = СчШаблоновВСтроке + 1;
		Если СчШаблоновВСтроке = МаксКоличествоВСтроке Тогда
			СчШаблоновВСтроке = 0;	
		КонецЕсли; 
	КонецЦикла; 
		
КонецПроцедуры

&НаСервереБезКонтекста
функция ИмяГруппыПоСпециализации(Специализация)
	
	Возврат "Группа" + СтрЗаменить(Строка(Специализация.УникальныйИдентификатор()), "-", "_");
	
КонецФункции

#КонецОбласти 

#Область ИзменениеСпискаШаблоныПриема

&НаКлиенте
Процедура ДобавитьШаблонВСписок(Шаблон)
	Строка = ШаблоныПриема.Добавить();	
	Строка.ШаблонПриема = Шаблон;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьШаблонИзСписка(Шаблон)
	Отбор = Новый Структура("ШаблонПриема",Шаблон);
	ШаблоныПриема.Удалить(ШаблоныПриема.НайтиСтроки(Отбор)[0]);	
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ОбновитьКнопки(Шаблон)
	Отбор = Новый Структура("ШаблонПриема",Шаблон);		
	КоличествоШаблонов = ШаблоныПриема.НайтиСтроки(Отбор).Количество();
	ЗаголовокКнопки = Шаблон;
	Если КоличествоШаблонов > 1 Тогда
		ЗаголовокКнопки = "(" + Формат(КоличествоШаблонов,"ЧЦ=2; ЧВН=") + ") " + ЗаголовокКнопки; 	
	КонецЕсли;
	
	МассивКнопок = НайтиКнопки(Шаблон);
	Для каждого Кнопка Из МассивКнопок Цикл
		Если КоличествоШаблонов >= 1 Тогда
			Кнопка.Пометка = Истина;
			Кнопка.ЦветФона = ЦветВыделеннойКнопки;	
		Иначе
			Кнопка.Пометка = Ложь;
			Кнопка.ЦветФона = ЦветКнопки;		
		КонецЕсли;	
		Кнопка.Заголовок = ЗаголовокКнопки; 
	КонецЦикла;
	
КонецПроцедуры 
 
&НаКлиенте
Процедура ОбновитьСписок()
	Отбор = Новый Структура("Кнопка",ТекущийЭлемент.Имя);	
	Шаблон = АссоциацииШаблонКнопка.НайтиСтроки(Отбор)[0].Шаблон;	

	Если РежимТрактовкиНажатия = 1 Тогда
		// Плюс 1.
		ДобавитьШаблонВСписок(Шаблон);		
	Иначе
		Если ТекущийЭлемент.Пометка Тогда
			УдалитьШаблонИзСписка(Шаблон);
		Иначе
			ДобавитьШаблонВСписок(Шаблон);
			Если РежимТрактовкиНажатия = 0 Тогда
				// Выбрать и закрыть
				Применить(Неопределено);
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	ОбновитьКнопки(Шаблон);
	ТекущийЭлемент.Пометка = ТекущийЭлемент.Пометка;
КонецПроцедуры 

&НаКлиенте
Функция НайтиКнопки(Шаблон)
	Отбор = Новый Структура("Шаблон",Шаблон);
	МассивКнопок = Новый Массив();
	Для каждого Строка Из АссоциацииШаблонКнопка.НайтиСтроки(Отбор) Цикл
		Кнопка = Элементы.Найти(Строка.Кнопка);	
		МассивКнопок.Добавить(Кнопка);
	КонецЦикла; 
	Возврат МассивКнопок;
КонецФункции

#КонецОбласти
