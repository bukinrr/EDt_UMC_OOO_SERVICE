#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Для Каждого Стандарт Из Параметры.Стандарты Цикл
		НовыйСтандарт = СтандартыЛечения.Добавить();
		НовыйСтандарт.Стандарт = Стандарт;
	КонецЦикла;
	
	Для Каждого СтрокаПланаЛечения Из Параметры.ПланЛечения Цикл
		НоваяСтрокаПланаЛечения = ПланЛеченияИзПриема.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаПланаЛечения, СтрокаПланаЛечения);
	КонецЦикла;
	
	Для Каждого СтрокаСвязи Из Параметры.СвязиНМУСНоменклатурой Цикл
		НоваяСтрокаСвязи = НМУДляПлановЛечения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСвязи, СтрокаСвязи);
	КонецЦикла;
	
	МассивНМУ = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫРАЗИТЬ(СтандартыЛеченияНазначения.Комментарий КАК СТРОКА(1000)) КАК Комментарий,
		|	СтандартыЛеченияНазначения.Ссылка КАК СтандартЛечения,
		|	СтандартыЛеченияНазначения.Назначение КАК Номенклатура,
		|	СтандартыЛеченияНазначения.НоменклатураМедицинскихУслуг КАК НМУ,
		|	СтандартыЛеченияНазначения.Частота КАК Частота,
		|	СтандартыЛеченияНазначения.Количество КАК Количество,
		|	СтандартыЛеченияНазначения.ПорядковыйНомер КАК ПорядковыйНомер,
		|	СтандартыЛеченияНазначения.ВидНазначения КАК ВидНазначения
		|ИЗ
		|	Справочник.СтандартыЛечения.Назначения КАК СтандартыЛеченияНазначения
		|ГДЕ
		|	СтандартыЛеченияНазначения.Ссылка В(&Стандарты)";
	
	Запрос.УстановитьПараметр("Стандарты", Параметры.Стандарты);
	
	Результат = Запрос.Выполнить();
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Если МассивНМУ.Найти(Выборка.НМУ) = Неопределено Тогда
			МассивНМУ.Добавить(Выборка.НМУ);
		КонецЕсли;
		
		НоваяСтрокаНМУ = НМУИзСтандартаЛечения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНМУ, Выборка);
		НоваяСтрокаНМУ.ФиксированнаяНоменклатура = Выборка.Номенклатура;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Номенклатура,
		|	Номенклатура.НоменклатураМедицинскихУслуг КАК НМУ
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.НоменклатураМедицинскихУслуг В(&МассивНМУ)";
	
	Запрос.УстановитьПараметр("МассивНМУ", МассивНМУ);
	
	СоответствиеНоменклатурНМУ.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Для Каждого СтрокаНМУ Из НМУИзСтандартаЛечения Цикл
		Если Не ЗначениеЗаполнено(СтрокаНМУ.ФиксированнаяНоменклатура) Тогда
			НоменклатурыПоКодуНМУ = СоответствиеНоменклатурНМУ.НайтиСтроки(Новый Структура("НМУ", СтрокаНМУ.НМУ));
			Если НоменклатурыПоКодуНМУ.Количество() = 1 Тогда
				СтрокаНМУ.ФиксированнаяНоменклатура = НоменклатурыПоКодуНМУ[0].Номенклатура;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СтандартыЛеченияПриАктивизацииСтроки(Элемент)
	
	КомментарииНаФорме.Очистить();
	
	Для Каждого СтрокаНМУИзСтандартаЛечения Из НМУИзСтандартаЛечения.НайтиСтроки(Новый Структура("СтандартЛечения", Элемент.ТекущиеДанные.Стандарт)) Цикл
		Если КомментарииНаФорме.НайтиСтроки(Новый Структура("Комментарий, ВидНазначения", СтрокаНМУИзСтандартаЛечения.Комментарий, СтрокаНМУИзСтандартаЛечения.ВидНазначения)).Количество() = 0 Тогда
			
			НовыйКомментарий = КомментарииНаФорме.Добавить();
			НовыйКомментарий.Комментарий = СтрокаНМУИзСтандартаЛечения.Комментарий;
			НовыйКомментарий.ВидНазначения = СтрокаНМУИзСтандартаЛечения.ВидНазначения;
			НовыйКомментарий.СтандартЛечения = Элемент.ТекущиеДанные.Стандарт;
			
		КонецЕсли;
	КонецЦикла;
	КомментарииНаФорме.Сортировать("ВидНазначения");
	Элементы.КомментарииНаФорме.ТекущаяСтрока = КомментарииНаФорме[0].ПолучитьИдентификатор();
	
КонецПроцедуры

&НаКлиенте
Процедура СтандартыЛеченияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьЗначение(, Элемент.ТекущиеДанные.Стандарт);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарииНаФормеПриАктивизацииСтроки(Элемент)
		
	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		ТекущийКомментарий = Элементы.КомментарииНаФорме.ТекущиеДанные.Комментарий;
		ТекущийСтандартЛечения = Элементы.КомментарииНаФорме.ТекущиеДанные.СтандартЛечения;
		ТекущийВидНазначения = Элементы.КомментарииНаФорме.ТекущиеДанные.ВидНазначения;
		ЗаполнитьНМУИзСтандартаНаФорме();
	Иначе
		ТекущийКомментарий = Неопределено;
		ТекущийСтандартЛечения = Неопределено;
		ТекущийВидНазначения = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НМУИзСтандартаЛеченияНаФормеПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступность();
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ТекущаяНМУ = Неопределено;
	Иначе
		ТекущаяНМУ = Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущиеДанные.НМУ;
		
		МассивИдентификаторов = Новый Массив();
		
		СтруктураПоискаСвязи = Новый Структура();
		СтруктураПоискаСвязи.Вставить("НМУ", ТекущаяНМУ);
		СтруктураПоискаСвязи.Вставить("ВидНазначения", ТекущийВидНазначения);
		
		Для Каждого Строка Из НМУДляПлановЛечения.НайтиСтроки(СтруктураПоискаСвязи) Цикл
			МассивИдентификаторов.Добавить(Строка.ИдентификаторПланаЛечения);
		КонецЦикла;
		
		Для Каждого Строка Из ПланЛеченияИзПриема Цикл
			Если Не МассивИдентификаторов.Найти(Строка.ИдентификаторНоменклатуры) = Неопределено Тогда
				Строка.СодержитПривязкуКТекущейНМУ = Истина;
			Иначе
				Строка.СодержитПривязкуКТекущейНМУ = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НМУДляПлановЛеченияНаФормеПередУдалением(Элемент, Отказ)
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаУдаленияСвязиПланаЛеченияСНМУ", ЭтотОбъект, Новый Структура("ТекущаяСтрокаПланаЛечения", Элемент.ТекущиеДанные));
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Уверены, что хотите удалить связь?'"), РежимДиалогаВопрос.ДаНет);
	Отказ = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ПланЛеченияИзПриемаПриАктивизацииСтроки(Элемент)
	
	ЗаполнитьНМУДляПлановЛеченияНаФорме();
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура НМУИзСтандартаЛеченияНаФормеНоменклатураПриИзменении(Элемент)
	
	ТекущаяСтрока = НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока);
	
 	НоваяНоменклатура	= Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущиеДанные.Номенклатура;
	
	СтруктураПоиска = Новый Структура();
	СтруктураПоиска.Вставить("НМУ", ТекущаяНМУ);
	СтруктураПоиска.Вставить("ВидНазначения", ТекущийВидНазначения);
	
	// При изменении номенклатуры у НМУ нужно:
	// 1) Убрать старые связи
	// 2) Привязать к последенему плану
	СтарыеСвязи = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска);
	Для Каждого СтараяСвязь Из СтарыеСвязи Цикл
		НМУДляПлановЛечения.Удалить(СтараяСвязь);
	КонецЦикла;
	
	Если ЗначениеЗаполнено(НоваяНоменклатура) Тогда
		
		ПланЛечения = ПолучитьПоследнийПланЛечения(Новый Структура("Номенклатура", НоваяНоменклатура));
		
		Если ПланЛечения = Неопределено Тогда
			
			// Планов с такой номенклатурой нет. Сначала создаем их
			НоваяСтрокаПланаЛечения = ПланЛеченияИзПриема.Добавить();
			НоваяСтрокаПланаЛечения.Номенклатура = НоваяНоменклатура;
			НоваяСтрокаПланаЛечения.ИдентификаторНоменклатуры = Новый УникальныйИдентификатор();
			НоваяСтрокаПланаЛечения.Новый = Истина;
			
			ПланЛечения = НоваяСтрокаПланаЛечения;
			
		КонецЕсли;
		
		// Привязываем к плану
		НоваяСвязь = НМУДляПлановЛечения.Добавить();
		НоваяСвязь.НМУ = ТекущаяНМУ;
		НоваяСвязь.ВидНазначения = ТекущийВидНазначения;
		НоваяСвязь.ИдентификаторПланаЛечения = ПланЛечения.ИдентификаторНоменклатуры;
		
	КонецЕсли;
	
	МассивИдентификаторов = Новый Массив();
	
	Для Каждого Строка Из НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска) Цикл
		МассивИдентификаторов.Добавить(Строка.ИдентификаторПланаЛечения);
	КонецЦикла;
	
	Для Каждого Строка Из ПланЛеченияИзПриема Цикл
		Если Не МассивИдентификаторов.Найти(Строка.ИдентификаторНоменклатуры) = Неопределено Тогда
			Строка.СодержитПривязкуКТекущейНМУ = Истина;
		Иначе
			Строка.СодержитПривязкуКТекущейНМУ = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьНМУДляПлановЛеченияНаФорме();
	ЗаполнитьНМУИзСтандартаНаФорме(ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура НМУИзСтандартаЛеченияНаФормеНоменклатураАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	МассивНоменклатур = Новый Массив;
	
	НоменклатурыПоКодуНМУ = СоответствиеНоменклатурНМУ.НайтиСтроки(Новый Структура("НМУ", ТекущаяНМУ)); 
	ДанныеВыбора = Новый СписокЗначений;
	СтандартнаяОбработка = Ложь;
	
	Если НоменклатурыПоКодуНМУ.Количество() > 1 Тогда
		
		Для Каждого СтрокаТаблицы Из НоменклатурыПоКодуНМУ Цикл
			МассивНоменклатур.Добавить(СтрокаТаблицы.Номенклатура);
		КонецЦикла;
		
	Иначе	
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("НМУ", ТекущаяНМУ);
		СтруктураПоиска.Вставить("ВидНазначения", ТекущийВидНазначения);
		
		СтрокиИзПланаЛеченияПоНМУ = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска);
		Для Каждого Строка Из СтрокиИзПланаЛеченияПоНМУ Цикл
			Номенклатура = ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", Строка.ИдентификаторПланаЛечения))[0].Номенклатура;
			Если МассивНоменклатур.Найти(Номенклатура) = Неопределено Тогда
				МассивНоменклатур.Добавить(Номенклатура);
			КонецЕсли;
		КонецЦикла;
		
		Если МассивНоменклатур.Количество() < 2 Тогда
			
			Для Каждого Строка Из ПланЛеченияИзПриема Цикл
				Если МассивНоменклатур.Найти(Строка.Номенклатура) = Неопределено Тогда
					МассивНоменклатур.Добавить(Строка.Номенклатура);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ДанныеВыбора.ЗагрузитьЗначения(МассивНоменклатур);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланЛеченияИзПриемаКоличествоПриИзменении(Элемент)
	
	ЗаполнитьНМУИзСтандартаНаФорме(НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока));
	
КонецПроцедуры

&НаКлиенте
Процедура ПланЛеченияИзПриемаПередУдалением(Элемент, Отказ)
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаУдаленияСтрокиПланаЛечения", ЭтотОбъект, Новый Структура("ТекущаяСтрокаПланаЛечения", Элемент.ТекущиеДанные));
	ПоказатьВопрос(Оповещение, НСтр("ru = 'Уверены, что хотите удалить строку плана лечения и все связи с НМУ?'"), РежимДиалогаВопрос.ДаНет);
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура НМУИзСтандартаЛеченияНаФормеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущийЭлемент.Имя = "НМУИзСтандартаЛеченияНаФормеНМУ" Тогда
		ДобавитьНМУДляСтрокПлановЛечения();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НМУДляПлановЛеченияНаФормеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если Копирование Тогда
		Отказ=Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПланЛеченияИзПриемаПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если Строка = Неопределено Тогда
		Если ПараметрыПеретаскивания.Значение.Количество() = 1 Тогда
			ИсходныеДанные = ПараметрыПеретаскивания.Значение[0];
			Номенклатура = ?(ЗначениеЗаполнено(ИсходныеДанные.Номенклатура), ИсходныеДанные.Номенклатура, ИсходныеДанные.ФиксированнаяНоменклатура);
			Если ЗначениеЗаполнено(Номенклатура) Тогда
				СтруктураДобавления = Новый Структура("Номенклатура, НМУ, ВидНазначения", Номенклатура, ИсходныеДанные.НМУ, ИсходныеДанные.ВидНазначения);
				СтруктураДобавления.Вставить("Количество", Макс(1, ИсходныеДанные.Количество - ИсходныеДанные.КоличествоВПлане));
				
				ДобавляемаяНМУ = Новый Массив;
				ДобавляемаяНМУ.Добавить(СтруктураДобавления);
				ДобавлениеНМУВПланЛеченияОбработкаСопоставленногоСписка(ДобавляемаяНМУ, Неопределено);
			Иначе
				ДобавитьНМУДляСтрокПлановЛечения();
			КонецЕсли;
		КонецЕсли;
	Иначе
		// Перемещение в конкретную строку плана
		Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив")
			И ПараметрыПеретаскивания.Значение[0].Свойство("НМУ")
		Тогда
			НомераСтрокВыделенныхНМУ = Элементы.НМУИзСтандартаЛеченияНаФорме.ВыделенныеСтроки;
			СформулироватьВопросОСозданииСвязиПланаЛеченияСНМУ(НомераСтрокВыделенныхНМУ, ПланЛеченияИзПриема.НайтиПоИдентификатору(Строка));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НМУИзСтандартаЛеченияНаФормеПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив")
		И ПараметрыПеретаскивания.Значение[0].Свойство("ИдентификаторНоменклатуры")
	Тогда
		НомераСтрокВыделенныхНМУ = Новый Массив;
		НомераСтрокВыделенныхНМУ.Добавить(Строка);
		ТекущаяСтрокаПланаЛечения = Элементы.ПланЛеченияИзПриема.ТекущиеДанные;
		
		СформулироватьВопросОСозданииСвязиПланаЛеченияСНМУ(НомераСтрокВыделенныхНМУ, ТекущаяСтрокаПланаЛечения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ПланыЛечения = Новый Массив; 
	Для Каждого СтрокаПланаЛечения Из ПланЛеченияИзПриема Цикл
		
		СтруктураПланаЛечения = Новый Структура;
		
		СтруктураПланаЛечения.Вставить("Назначение", СтрокаПланаЛечения.Номенклатура);
		СтруктураПланаЛечения.Вставить("ИдентификаторНазначения", СтрокаПланаЛечения.ИдентификаторНоменклатуры);
		СтруктураПланаЛечения.Вставить("Количество", СтрокаПланаЛечения.Количество);
		СтруктураПланаЛечения.Вставить("ВидНазначения", СтрокаПланаЛечения.ВидНазначения);
		
		ПланыЛечения.Добавить(СтруктураПланаЛечения);
		
	КонецЦикла;
	
	Оповестить("СобытиеЗакрытияФормыСозданияПланаЛечения", Новый Структура("Планы, Связи, СтрокиПланаКУдалению", ПланыЛечения, НМУДляПлановЛечения, СтрокиПланаЛеченияКУдалению), ЭтотОбъект);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПривязатьНМУКПлану(Команда)
	
	НомераСтрокВыделенныхНМУ = Элементы.НМУИзСтандартаЛеченияНаФорме.ВыделенныеСтроки;
	ТекущаяСтрокаПланаЛечения = Элементы.ПланЛеченияИзПриема.ТекущиеДанные;
	
	СформулироватьВопросОСозданииСвязиПланаЛеченияСНМУ(НомераСтрокВыделенныхНМУ, ТекущаяСтрокаПланаЛечения);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзПлана(Команда)
	
	ТекущаяСтрока = НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока);
	СтрокаНМУ = Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущиеДанные;
	
	Если Не ЗначениеЗаполнено(СтрокаНМУ.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	МассивПлановЛеченияСвязанныхСНМУ = Новый Массив;
	
	СтруктураПоискаСвязи = Новый Структура();
	СтруктураПоискаСвязи.Вставить("НМУ", ТекущаяНМУ);
	СтруктураПоискаСвязи.Вставить("ВидНазначения", ТекущаяСтрока.ВидНазначения);
	
	СтрокиСвязейПлановСНМУ = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоискаСвязи);
	
	Для Каждого СтрокаСвязи Из СтрокиСвязейПлановСНМУ Цикл
		
		Если МассивПлановЛеченияСвязанныхСНМУ.Найти(СтрокаСвязи) = Неопределено Тогда
			МассивПлановЛеченияСвязанныхСНМУ.Добавить(СтрокаСвязи);
		КонецЕсли;
		
		НМУДляПлановЛечения.Удалить(СтрокаСвязи);
		
	КонецЦикла;
	
	ИдентификаторПланаЛечения = СтрокаСвязи.ИдентификаторПланаЛечения;
	
	Для Каждого СтрокаСвязи Из МассивПлановЛеченияСвязанныхСНМУ Цикл
		Если НМУДляПлановЛечения.НайтиСтроки(Новый Структура("ИдентификаторПланаЛечения", ИдентификаторПланаЛечения)).Количество() = 0 Тогда
			СтрокаПланаЛечения = ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", ИдентификаторПланаЛечения))[0];
			Если СтрокаПланаЛечения.Новый Тогда
				ПланЛеченияИзПриема.Удалить(СтрокаПланаЛечения);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьНМУИзСтандартаНаФорме(ТекущаяСтрока);
	ЗаполнитьНМУДляПлановЛеченияНаФорме();
	
	СтрокиПланаЛеченияКУдалению.Добавить(ИдентификаторПланаЛечения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьОбязательные(Команда)
	
	МассивОбязательныхНМУ	= Новый Массив();
	МассивСвязей			= Новый Массив();
	МассивСтрокПланаЛечения	= Новый Массив();
	
	Если Команда.Имя = "ДобавитьОбязательныеПоРазделу" Тогда
		СтрокиНМУИзСтандартаЛечения = НМУИзСтандартаЛечения.НайтиСтроки(Новый Структура("СтандартЛечения, ВидНазначения", ТекущийСтандартЛечения, ТекущийВидНазначения));
	Иначе                                                                                                                                                        	
		СтрокиНМУИзСтандартаЛечения = НМУИзСтандартаЛечения;
	КонецЕсли;
	
	МассивУникальныхНМУ = Новый Массив;
	НоменклатурыДляДанныхВыбора = Новый Массив;
	
	Для Каждого СтрокаНМУ Из СтрокиНМУИзСтандартаЛечения Цикл
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("НМУ", СтрокаНМУ.НМУ);
		СтруктураПоиска.Вставить("ВидНазначения", СтрокаНМУ.ВидНазначения);
		
		СтрокиНМУДляПлановЛечения = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска);
		Если СтрокаНМУ.Частота >= 1 И СтрокиНМУДляПлановЛечения.Количество() = 0 Тогда
			
			СтруктураСтрокиНМУ = Новый Структура();
			СтруктураСтрокиНМУ.Вставить("НМУ", СтрокаНМУ.НМУ);
			СтруктураСтрокиНМУ.Вставить("ВидНазначения", СтрокаНМУ.ВидНазначения);
			СтруктураСтрокиНМУ.Вставить("ФиксированнаяНоменклатура", СтрокаНМУ.ФиксированнаяНоменклатура);
			СтруктураСтрокиНМУ.Вставить("СтандартЛечения", СтрокаНМУ.СтандартЛечения);
			СтруктураСтрокиНМУ.Вставить("Комментарий", СтрокаНМУ.Комментарий);
			СтруктураСтрокиНМУ.Вставить("Количество", СтрокаНМУ.Количество);
			МассивОбязательныхНМУ.Добавить(СтруктураСтрокиНМУ);
			Если МассивУникальныхНМУ.Найти(СтрокаНМУ.НМУ) = Неопределено Тогда
				МассивУникальныхНМУ.Добавить(СтрокаНМУ.НМУ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого НМУ Из МассивУникальныхНМУ Цикл
		
		НоменклатурыПоКодуНМУ = СоответствиеНоменклатурНМУ.НайтиСтроки(Новый Структура("НМУ", НМУ));
		Для Каждого СтрокаНоменклатурыПоКоду Из НоменклатурыПоКодуНМУ Цикл
			НоменклатурыДляДанныхВыбора.Добавить(Новый Структура("НМУ, Номенклатура", НМУ, СтрокаНоменклатурыПоКоду.Номенклатура));
		КонецЦикла;
		
	КонецЦикла;
	
	// Скидываем туда все связи, при возврате заменяем текущие связи на возвращенные
	Для Каждого СтрокаСвязи Из НМУДляПлановЛечения Цикл
		СтруктураСтрокиСвязи = Новый Структура;
		
		СтруктураСтрокиСвязи.Вставить("НМУ",						СтрокаСвязи.НМУ);
		СтруктураСтрокиСвязи.Вставить("ВидНазначения",				СтрокаСвязи.ВидНазначения);
		СтруктураСтрокиСвязи.Вставить("ИдентификаторПланаЛечения",	СтрокаСвязи.ИдентификаторПланаЛечения);
		
		МассивСвязей.Добавить(СтруктураСтрокиСвязи);
	КонецЦикла;
	
	Для Каждого СтрокаПланаЛечения Из ПланЛеченияИзПриема Цикл
		СтруктураПланаЛечения = Новый Структура();
		
		СтруктураПланаЛечения.Вставить("Номенклатура", СтрокаПланаЛечения.Номенклатура);
		СтруктураПланаЛечения.Вставить("ИдентификаторНоменклатуры", СтрокаПланаЛечения.ИдентификаторНоменклатуры);
		СтруктураПланаЛечения.Вставить("Количество", СтрокаПланаЛечения.Количество);
		СтруктураПланаЛечения.Вставить("ВидНазначения", СтрокаПланаЛечения.ВидНазначения);
		
		МассивСтрокПланаЛечения.Добавить(СтруктураПланаЛечения);
	КонецЦикла;
	
	Оповещение = Новый ОписаниеОповещения("ПривязкаНМУКПлануЛеченияЗавершение", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("НМУИзСтандартаЛечения, НМУДляПлановЛечения, ПланЛеченияИзПриема, ПоРазделу, НоменклатурыДляДанныхВыбора", МассивОбязательныхНМУ, МассивСвязей, МассивСтрокПланаЛечения, Команда.Имя = "ДобавитьОбязательныеПоРазделу", НоменклатурыДляДанныхВыбора);
	ОткрытьФорму("Документ.Прием.Форма.ПривязкаНМУКПлануЛечения", ПараметрыФормы, ЭтотОбъект,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура РазделитьСтрокуПлана(Команда)
	
	ПланЛечения = ПланЛеченияИзПриема.НайтиПоИдентификатору(Элементы.ПланЛеченияИзПриема.ТекущиеДанные.ПолучитьИдентификатор());
	ПланЛечения.Новый = Истина;
	
	НоваяСтрокаПлана = ПланЛеченияИзПриема.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрокаПлана, ПланЛечения);
	
	ПланЛечения.Количество = (ПланЛечения.Количество + ПланЛечения.Количество%2)/2;
	
	НоваяСтрокаПлана.Количество = (НоваяСтрокаПлана.Количество - НоваяСтрокаПлана.Количество%2)/2;
	НоваяСтрокаПлана.ИдентификаторНоменклатуры = Новый УникальныйИдентификатор();
	
	СтрокиСвязи = НМУДляПлановЛечения.НайтиСтроки(Новый Структура("ИдентификаторПланаЛечения", ПланЛечения.ИдентификаторНоменклатуры));
	
	Для Каждого СтрокаСвязи Из СтрокиСвязи Цикл
		
		НоваяСтрокаСвязи = НМУДляПлановЛечения.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаСвязи, СтрокаСвязи);
		НоваяСтрокаСвязи.ИдентификаторПланаЛечения = НоваяСтрокаПлана.ИдентификаторНоменклатуры;
		
	КонецЦикла;
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНМУ(Команда)
	
	ДобавитьНМУДляСтрокПлановЛечения();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьНМУДляСтрокПлановЛечения()
	
	МассивВыделенныхСтрокНМУ = Новый Массив;
	МассивСтрокНМУДляЗаменыНоменклатуры = Новый Массив;
	
	Для Каждого ВыделеннаяСтрокаНМУ Из Элементы.НМУИзСтандартаЛеченияНаФорме.ВыделенныеСтроки Цикл
		СтрокаНМУ = Элементы.НМУИзСтандартаЛеченияНаФорме.ДанныеСтроки(ВыделеннаяСтрокаНМУ);
		МассивВыделенныхСтрокНМУ.Добавить(СтрокаНМУ);
		Если Не ЗначениеЗаполнено(СтрокаНМУ.Номенклатура) Тогда
			МассивСтрокНМУДляЗаменыНоменклатуры.Добавить(СтрокаНМУ);
		КонецЕсли;
	КонецЦикла;
	
	МассивПараметровДляЗаменыНоменклатуры = Новый Массив;
	
	Если МассивСтрокНМУДляЗаменыНоменклатуры.Количество() = 0 Тогда
		СтрокиНМУ = МассивВыделенныхСтрокНМУ;
	Иначе
		СтрокиНМУ = МассивСтрокНМУДляЗаменыНоменклатуры;
	КонецЕсли;
	
	Для Каждого СтрокаНМУ Из СтрокиНМУ Цикл
		МассивНоменклатурДляДанныхВыбора = Новый Массив;
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("НМУ", СтрокаНМУ.НМУ);
		СтруктураПоиска.Вставить("ВидНазначения", СтрокаНМУ.ВидНазначения);
		
		СтруктураТекущейСтрокиНМУ = Новый Структура();
		СтруктураТекущейСтрокиНМУ.Вставить("НМУ", СтрокаНМУ.НМУ);
		СтруктураТекущейСтрокиНМУ.Вставить("ВидНазначения", СтрокаНМУ.ВидНазначения);
		СтруктураТекущейСтрокиНМУ.Вставить("Количество", СтрокаНМУ.Количество);
		Если ЗначениеЗаполнено(СтрокаНМУ.Номенклатура) Тогда
			СтруктураТекущейСтрокиНМУ.Вставить("Номенклатура", СтрокаНМУ.Номенклатура);
		Иначе
			НоменклатурыПоКодуНМУ = СоответствиеНоменклатурНМУ.НайтиСтроки(Новый Структура("НМУ", СтрокаНМУ.НМУ));
			
			Если ЗначениеЗаполнено(СтрокаНМУ.ФиксированнаяНоменклатура) Тогда
				СтруктураТекущейСтрокиНМУ.Вставить("Номенклатура", СтрокаНМУ.ФиксированнаяНоменклатура);
			Иначе
				Для Каждого НоменклатураПоКодуНМУ Из НоменклатурыПоКодуНМУ Цикл
					МассивНоменклатурДляДанныхВыбора.Добавить(НоменклатураПоКодуНМУ.Номенклатура);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыДляЗаменыНоменклатуры = Новый Структура();
		ПараметрыДляЗаменыНоменклатуры.Вставить("МассивНоменклатурДляДанныхВыбора", МассивНоменклатурДляДанныхВыбора);
		ПараметрыДляЗаменыНоменклатуры.Вставить("СтруктураПоиска", СтруктураПоиска);
		ПараметрыДляЗаменыНоменклатуры.Вставить("СтруктураТекущейСтрокиНМУ", СтруктураТекущейСтрокиНМУ);
		
		МассивПараметровДляЗаменыНоменклатуры.Добавить(ПараметрыДляЗаменыНоменклатуры);
		
	КонецЦикла;
	
	Если МассивСтрокНМУДляЗаменыНоменклатуры.Количество() > 0 Тогда
		ИзменитьНоменклатуру(МассивПараметровДляЗаменыНоменклатуры);
	Иначе
		Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаЗаменыНоменклатуры", ЭтотОбъект, МассивПараметровДляЗаменыНоменклатуры);
		ПоказатьВопрос(Оповещение, НСтр("ru = 'Уже имеется связь данной НМУ с номенклатурой. Заменить номенклатуру?'"), РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаСозданияСвязиПланаЛеченияСНМУ(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ТекущаяСтрока = НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока);
		НомераСтрокВыделенныхНМУ = Параметры.НомераСтрокВыделенныхНМУ;
		ТекущаяСтрокаПланаЛечения = Параметры.ТекущаяСтрокаПланаЛечения;
		
		// Удалить старые строки связи
		Для Каждого НомерСтрокиНМУ Из НомераСтрокВыделенныхНМУ Цикл
			
			ТекущаяСтрокаНМУ = НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(НомерСтрокиНМУ);
			
			СтруктураПоискаСвязи = Новый Структура();
			СтруктураПоискаСвязи.Вставить("НМУ", ТекущаяСтрокаНМУ.НМУ);
			СтруктураПоискаСвязи.Вставить("ВидНазначения", ТекущаяСтрокаНМУ.ВидНазначения);
			
			СтарыеСвязи = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоискаСвязи);
			Для Каждого СтараяСвязь Из СтарыеСвязи Цикл
				НМУДляПлановЛечения.Удалить(СтараяСвязь);
			КонецЦикла;
			
			НоваяСтрокаВНМУДляПлановЛечения = НМУДляПлановЛечения.Добавить();
			НоваяСтрокаВНМУДляПлановЛечения.ИдентификаторПланаЛечения = ТекущаяСтрокаПланаЛечения.ИдентификаторНоменклатуры;
			НоваяСтрокаВНМУДляПлановЛечения.НМУ = ТекущаяСтрокаНМУ.НМУ;
			НоваяСтрокаВНМУДляПлановЛечения.ВидНазначения = ТекущаяСтрокаНМУ.ВидНазначения;
			
		КонецЦикла;
		
		ЗаполнитьНМУИзСтандартаНаФорме(ТекущаяСтрока);
		ЗаполнитьНМУДляПлановЛеченияНаФорме();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаУдаленияСвязиПланаЛеченияСНМУ(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ТекущаяСтрока = НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока);
		ТекущаяСтрокаСвязи = Элементы.НМУДляПлановЛеченияНаФорме.ТекущиеДанные;
		
		СтруктураПоиска = Новый Структура();
		СтруктураПоиска.Вставить("НМУ", ТекущаяСтрокаСвязи.НМУ);
		СтруктураПоиска.Вставить("ВидНазначения", ТекущаяСтрокаСвязи.ВидНазначения);
		СтруктураПоиска.Вставить("ИдентификаторПланаЛечения", ТекущаяСтрокаСвязи.ИдентификаторПланаЛечения);
		
		СтрокаНМУДляПлановЛечения = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска)[0];
		
		НМУДляПлановЛечения.Удалить(СтрокаНМУДляПлановЛечения);
		
		НМУДляПлановЛеченияНаФорме.Удалить(Параметры.ТекущаяСтрокаПланаЛечения);
		ЗаполнитьНМУИзСтандартаНаФорме(ТекущаяСтрока);
		
		СтрокиПланаЛеченияКУдалению.Добавить(ТекущаяСтрокаСвязи.ИдентификаторПланаЛечения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаЗаменыНоменклатуры(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИзменитьНоменклатуру(Параметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаУдаленияСтрокиПланаЛечения(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		СтрокиСвязи = НМУДляПлановЛечения.НайтиСтроки(Новый Структура("ИдентификаторПланаЛечения", Параметры.ТекущаяСтрокаПланаЛечения.ИдентификаторНоменклатуры));
		
		Для Каждого СтрокаСвязи Из СтрокиСвязи Цикл
			НМУДляПлановЛечения.Удалить(СтрокаСвязи);
		КонецЦикла;
		
		ПланЛеченияИзПриема.Удалить(Параметры.ТекущаяСтрокаПланаЛечения);
		
		ЗаполнитьНМУИзСтандартаНаФорме();
		ЗаполнитьНМУДляПлановЛеченияНаФорме();
		
		СтрокиПланаЛеченияКУдалению.Добавить(Параметры.ТекущаяСтрокаПланаЛечения.ИдентификаторНоменклатуры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьНоменклатуру(МассивПараметровДляЗаменыНоменклатуры)
	
	МассивВсехНоменклатур = Новый Массив;
	
	Для Каждого Строка Из ПланЛеченияИзПриема Цикл
					
		Если МассивВсехНоменклатур.Найти(Строка.Номенклатура) = Неопределено Тогда
			МассивВсехНоменклатур.Добавить(Строка.Номенклатура);
		КонецЕсли;
		
	КонецЦикла;
	
	Для Каждого ПараметрыДляЗаменыНоменклатуры Из МассивПараметровДляЗаменыНоменклатуры Цикл
		
		МассивНоменклатурДляДанныхВыбора = ПараметрыДляЗаменыНоменклатуры.МассивНоменклатурДляДанныхВыбора;
		СтруктураПоиска = ПараметрыДляЗаменыНоменклатуры.СтруктураПоиска;
		СтруктураТекущейСтрокиНМУ = ПараметрыДляЗаменыНоменклатуры.СтруктураТекущейСтрокиНМУ;
		СтрокиИзПланаЛеченияПоНМУ = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска);
		СтруктураТекущейСтрокиНМУ.Количество = СтруктураТекущейСтрокиНМУ.Количество;
		Если МассивНоменклатурДляДанныхВыбора.Количество() = 0 Тогда
			Для Каждого Строка Из СтрокиИзПланаЛеченияПоНМУ Цикл
				Номенклатура = ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", Строка.ИдентификаторПланаЛечения))[0].Номенклатура;
				Если МассивНоменклатурДляДанныхВыбора.Найти(Номенклатура) = Неопределено Тогда
					МассивНоменклатурДляДанныхВыбора.Добавить(Номенклатура);
				КонецЕсли;
			КонецЦикла;
			
			Если МассивНоменклатурДляДанныхВыбора.Количество() < 2 Тогда
				
				Для Каждого Строка Из ПланЛеченияИзПриема Цикл
					Если МассивНоменклатурДляДанныхВыбора.Найти(Строка.Номенклатура) = Неопределено Тогда
						МассивНоменклатурДляДанныхВыбора.Добавить(Строка.Номенклатура);
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Оповещение = Новый ОписаниеОповещения("ДобавлениеНМУВПланЛеченияОбработкаСопоставленногоСписка", ЭтотОбъект);
	ПараметрыФормы = Новый Структура("МассивПараметровДляЗаменыНоменклатуры, МассивВсехНоменклатур", МассивПараметровДляЗаменыНоменклатуры, МассивВсехНоменклатур);
	ОткрытьФорму("Документ.Прием.Форма.ДобавлениеНМУВПланЛечения", ПараметрыФормы, ЭтотОбъект,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавлениеНМУВПланЛеченияОбработкаСопоставленногоСписка(РезультатЗаполнения, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗаполнения) = Тип("Массив") Тогда
		
		Для Каждого СтрокаНМУ Из РезультатЗаполнения Цикл
			// Новая строка плана лечения
			НовыйПлан = ПланЛеченияИзПриема.Добавить();
			НовыйПлан.Номенклатура = СтрокаНМУ.Номенклатура;
			НовыйПлан.ИдентификаторНоменклатуры = Новый УникальныйИдентификатор();
			НовыйПлан.Новый = Истина;
			НовыйПлан.Количество = СтрокаНМУ.Количество;
			НовыйПлан.ВидНазначения = СтрокаНМУ.ВидНазначения;
			
			// Удалить старые связи
			СтруктураПоиска = Новый Структура();
			СтруктураПоиска.Вставить("НМУ", СтрокаНМУ.НМУ);
			СтруктураПоиска.Вставить("ВидНазначения", СтрокаНМУ.ВидНазначения);
			
			СтарыеСвязи = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтараяСвязь Из СтарыеСвязи Цикл
				НМУДляПлановЛечения.Удалить(СтараяСвязь);
			КонецЦикла;
			
			// Создать связь
			НоваяСвязь = НМУДляПлановЛечения.Добавить();
			
			НоваяСвязь.НМУ						 = СтрокаНМУ.НМУ;
			НоваяСвязь.ВидНазначения			 = СтрокаНМУ.ВидНазначения;
			НоваяСвязь.ИдентификаторПланаЛечения = НовыйПлан.ИдентификаторНоменклатуры;
			
		КонецЦикла;
		
		ЗаполнитьНМУИзСтандартаНаФорме();
		ЗаполнитьНМУДляПлановЛеченияНаФорме();
		УстановитьДоступность();
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПривязкаНМУКПлануЛеченияЗавершение(РезультатЗаполнения, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(РезультатЗаполнения) = Тип("Структура") Тогда
	
		// Добавить отсутствующие планы лечения
		Для Каждого ПланЛечения Из РезультатЗаполнения.Планы Цикл
			Если ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", ПланЛечения.ИдентификаторНоменклатуры)).Количество() = 0 Тогда
				
				НовыйПлан = ПланЛеченияИзПриема.Добавить();
				ЗаполнитьЗначенияСвойств(НовыйПлан, ПланЛечения);
				НовыйПлан.Новый = Истина;
				
			КонецЕсли;
		КонецЦикла;
		
		НМУДляПлановЛечения.Очистить();
		Для Каждого СтрокаСвязи Из РезультатЗаполнения.Связи Цикл
			
			НоваяСтрокаСвязи = НМУДляПлановЛечения.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаСвязи,СтрокаСвязи); 
			
		КонецЦикла;
		
		ЗаполнитьНМУИзСтандартаНаФорме();
		ЗаполнитьНМУДляПлановЛеченияНаФорме();
		УстановитьДоступность();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступность()
	
	ПривязыватьНмуКПлануДоступность = Истина;
	Если Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущиеДанные = Неопределено 
		Или Элементы.ПланЛеченияИзПриема.ТекущиеДанные = Неопределено
	Тогда
		ПривязыватьНмуКПлануДоступность = Ложь;
	КонецЕсли;
	
	Элементы.ПланЛеченияИзПриемаКонтекстноеМенюПривязатьНМУКПлану.Доступность = ПривязыватьНмуКПлануДоступность;
	Элементы.НМУИзСтандартаЛеченияНаФормеПривязатьНМУКПлану.Доступность = ПривязыватьНмуКПлануДоступность;
	Элементы.НМУИзСтандартаЛеченияНаФормеКонтекстноеМенюПривязатьНМУКПлану.Доступность = ПривязыватьНмуКПлануДоступность;
	
	Элементы.НМУИзСтандартаНаФормеДобавитьОбязательныеПоРазделу.Доступность = НМУИзСтандартаЛеченияНаФорме.Количество() > 0;
	Элементы.НМУИзСтандартаНаФормеДобавитьОбязательныеПоСтандарту.Доступность = НМУИзСтандартаЛечения.Количество() > 0;
	
	Элементы.НМУИзСтандартаЛеченияНаФормеДобавитьНМУ.Доступность = Не Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущиеДанные = Неопределено;
	
	РазделитьСтрокуПланаДоступность = Истина;
	Если Элементы.ПланЛеченияИзПриема.ТекущиеДанные = Неопределено
		Или Элементы.ПланЛеченияИзПриема.ТекущиеДанные.Количество < 2
	Тогда
		РазделитьСтрокуПланаДоступность = Ложь;
	КонецЕсли;
	
	Элементы.ПланЛеченияИзПриемаРазделитьСтрокуПлана.Доступность = РазделитьСтрокуПланаДоступность;
	Элементы.ПланЛеченияИзПриемаКонтекстноеМенюРазделитьСтрокуПлана.Доступность = РазделитьСтрокуПланаДоступность;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНМУИзСтандартаНаФорме(ТекущаяСтрока = Неопределено)
	
	НМУИзСтандартаЛеченияНаФорме.Очистить();
	
	Для Каждого СтрокаНМУИзСтандартаЛечения Из НМУИзСтандартаЛечения.НайтиСтроки(Новый Структура("СтандартЛечения, Комментарий, ВидНазначения", ТекущийСтандартЛечения, ТекущийКомментарий, ТекущийВидНазначения)) Цикл
		
		НоваяСтрокаНМУИзСтандартаНаФорме = НМУИзСтандартаЛеченияНаФорме.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаНМУИзСтандартаНаФорме, СтрокаНМУИзСтандартаЛечения);
		
		СтруктураПоискаСвязи = Новый Структура();
		СтруктураПоискаСвязи.Вставить("НМУ", НоваяСтрокаНМУИзСтандартаНаФорме.НМУ);
		СтруктураПоискаСвязи.Вставить("ВидНазначения", НоваяСтрокаНМУИзСтандартаНаФорме.ВидНазначения);
		
		СтрокиСвязейНМУСПланом = НМУДляПлановЛечения.НайтиСтроки(СтруктураПоискаСвязи);
		
		Индикация = ?(НоваяСтрокаНМУИзСтандартаНаФорме.Частота >= 1, 1, 0);
		Если СтрокиСвязейНМУСПланом.Количество() > 0 Тогда
			
			План = ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", СтрокиСвязейНМУСПланом[0].ИдентификаторПланаЛечения))[0];
			НоваяСтрокаНМУИзСтандартаНаФорме.Номенклатура = План.Номенклатура;
			НоваяСтрокаНМУИзСтандартаНаФорме.КоличествоВПлане = ПолучитьКоличествоИзНМУДляПлановЛечения(СтрокиСвязейНМУСПланом);
			
			Если НоваяСтрокаНМУИзСтандартаНаФорме.Частота >= 1 Тогда
				Если НоваяСтрокаНМУИзСтандартаНаФорме.Количество = НоваяСтрокаНМУИзСтандартаНаФорме.КоличествоВПлане Тогда
					Индикация = 2;
				ИначеЕсли НоваяСтрокаНМУИзСтандартаНаФорме.КоличествоВПлане > НоваяСтрокаНМУИзСтандартаНаФорме.Количество Тогда
					Индикация = 3;
				Иначе
					Индикация = 4;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		НоваяСтрокаНМУИзСтандартаНаФорме.Индикация = Индикация;
		
	КонецЦикла;
	
	Если Не ТекущаяСтрока = Неопределено Тогда
		СтруктураТекущейСтроки = Новый Структура();
		СтруктураТекущейСтроки.Вставить("НМУ", ТекущаяСтрока.НМУ);
		СтруктураТекущейСтроки.Вставить("ВидНазначения", ТекущаяСтрока.ВидНазначения);
		
		Строка = НМУИзСтандартаЛеченияНаФорме.НайтиСтроки(СтруктураТекущейСтроки)[0];
		НомерТекущейСтроки = НМУИзСтандартаЛеченияНаФорме.Индекс(Строка);
	Иначе
		НомерТекущейСтроки = 0;
	КонецЕсли;
	Элементы.НМУИзСтандартаЛеченияНаФорме.ТекущаяСтрока = НМУИзСтандартаЛеченияНаФорме[НомерТекущейСтроки].ПолучитьИдентификатор();
	
	УстановитьДоступность();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКоличествоИзНМУДляПлановЛечения(СтрокиСвязейНМУСПланом)
	
	Количество = 0;
	Для Каждого СтрокаСвязи Из СтрокиСвязейНМУСПланом Цикл
		
		СтрокаПлана = ПланЛеченияИзПриема.НайтиСтроки(Новый Структура("ИдентификаторНоменклатуры", СтрокаСвязи.ИдентификаторПланаЛечения))[0];
		Количество = Количество + СтрокаПлана.Количество;
		
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьНМУДляПлановЛеченияНаФорме()
	
	Если Элементы.ПланЛеченияИзПриема.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	НМУДляПлановЛеченияНаФорме.Очистить();
	Для Каждого НайденнаяСтрока Из НМУДляПлановЛечения.НайтиСтроки(Новый Структура("ИдентификаторПланаЛечения", Элементы.ПланЛеченияИзПриема.ТекущиеДанные.ИдентификаторНоменклатуры)) Цикл
		НоваяСтрока = НМУДляПлановЛеченияНаФорме.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденнаяСтрока);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПоследнийПланЛечения(СтруктураПоиска)
	
	ПланыЛеченияПоНоменклатуре = ПланЛеченияИзПриема.НайтиСтроки(СтруктураПоиска);
	
	Если ПланыЛеченияПоНоменклатуре.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПоследняяСтрока = ПланыЛеченияПоНоменклатуре[0];
	
	Для Каждого СтрокаПланаЛечения Из ПланыЛеченияПоНоменклатуре Цикл
		Если ПланЛеченияИзПриема.Индекс(СтрокаПланаЛечения) > ПланЛеченияИзПриема.Индекс(ПоследняяСтрока) Тогда
			ПоследняяСтрока = СтрокаПланаЛечения;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПоследняяСтрока;
	
КонецФункции

&НаКлиенте
Процедура СформулироватьВопросОСозданииСвязиПланаЛеченияСНМУ(НомераСтрокВыделенныхНМУ, ТекущаяСтрокаПланаЛечения)
	
	ТекстСписокНМУ = Символы.ПС + Символы.ПС;
	
	Для Каждого НомерСтрокиНМУ Из НомераСтрокВыделенныхНМУ Цикл
		ТекстСписокНМУ = ТекстСписокНМУ + НМУИзСтандартаЛеченияНаФорме.НайтиПоИдентификатору(НомерСтрокиНМУ).НМУ + Символы.ПС;
	КонецЦикла;
	
	ТекстСписокНМУ = ТекстСписокНМУ + Символы.ПС;
	
	ШаблонТекстаВопроса = НСтр("ru='Привязать следующую НМУ: %1К плану лечения: %2'");
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонТекстаВопроса, ТекстСписокНМУ, ТекущаяСтрокаПланаЛечения.Номенклатура);
	
	ПараметрыДляСозданияСвязи = Новый Структура();
	ПараметрыДляСозданияСвязи.Вставить("НомераСтрокВыделенныхНМУ", НомераСтрокВыделенныхНМУ);
	ПараметрыДляСозданияСвязи.Вставить("ТекущаяСтрокаПланаЛечения", ТекущаяСтрокаПланаЛечения);
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаСозданияСвязиПланаЛеченияСНМУ", ЭтотОбъект, ПараметрыДляСозданияСвязи);
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланЛеченияИзПриемаВидНазначенияАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = Новый СписокЗначений;
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНазначений.Обследование"));
	ДанныеВыбора.Добавить(ПредопределенноеЗначение("Перечисление.ВидыНазначений.Процедура"));
	
КонецПроцедуры

#КонецОбласти