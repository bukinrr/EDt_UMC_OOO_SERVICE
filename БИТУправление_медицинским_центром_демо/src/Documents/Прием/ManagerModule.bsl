#Область ПрограммныйИнтерфейс

#Область Печать

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("Направление",			 НСтр("ru='Направление'"));
	СтруктураМакетов.Вставить("ПланЛечения",			 НСтр("ru='Оценка стоимости плана лечения'"));
	СтруктураМакетов.Вставить("ПодготовкаКИсследованию", НСтр("ru='Подготовка к сдаче анализов'"));
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Направление" Тогда
		ТабДокумент = ПечатьНаправление(СсылкаНаОбъект);
	ИначеЕсли ИмяМакета = "ПланЛечения" Тогда
		ТабДокумент = ПечатьПланЛечения(СсылкаНаОбъект);
	ИначеЕсли ИмяМакета = "ПодготовкаКИсследованию" Тогда
		ТабДокумент = ПечатьПодготовкаКИсследованию(СсылкаНаОбъект);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьНаправление(СсылкаНаОбъект)
	
	Перем Выборка;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("Направление");
	
	макет.Параметры.НазваниеОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(СсылкаНаОбъект).НазваниеОрганизации;
	макет.Параметры.АдресОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(СсылкаНаОбъект).Адрес;
	
	макет.Параметры.ФИО = СсылкаНаОбъект.Клиент;
	макет.Параметры.Пол = ?(СсылкаНаОбъект.Клиент.Пол=Перечисления.ПолФизическихЛиц.НеУказан,"",СсылкаНаОбъект.Клиент.Пол);
	макет.Параметры.Возраст = Формат((ТекущаяДата() - СсылкаНаОбъект.Клиент.ДатаРождения)/ (60 * 60 * 24 * 365),"ЧДЦ=0");
	макет.Параметры.ФамилияВрача = СсылкаНаОбъект.Врач.Фамилия + " " + СсылкаНаОбъект.Врач.Имя + " " + СсылкаНаОбъект.Врач.Отчество;
	ТабДокумент.Вывести(макет);
	
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Прием_Направление";
	
	Возврат ТабДокумент;
	
КонецФункции 

Функция ПечатьПланЛечения(СсылкаНаОбъект)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("ПланЛечения");
	ОбластьШапка = Макет.ПолучитьОбласть("ОбластьШапка");
	
	// Данные организации
	РеквизитыОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(СсылкаНаОбъект);	
	ОбластьШапка.Параметры.НазваниеОрганизации = РеквизитыОрганизации.НазваниеОрганизации;
	ОбластьШапка.Параметры.АдресОрганизации = РеквизитыОрганизации.Адрес;
	ОбластьШапка.Параметры.ТелефонОрганизации = РеквизитыОрганизации.Телефон;
	
	// Сведения о Клиенте
	ОбластьШапка.Параметры.ПациентФИО = СсылкаНаОбъект.Клиент.Фамилия + " " + СсылкаНаОбъект.Клиент.Имя + " " + СсылкаНаОбъект.Клиент.Отчество;
	Адрес = КонтактнаяИнформацияСервер.ПолучитьКИОбъекта(СсылкаНаОбъект.Клиент, Перечисления.ТипыКонтактнойИнформации.Адрес);
	Телефон = КонтактнаяИнформацияСервер.ПолучитьКИОбъекта(СсылкаНаОбъект.Клиент, Перечисления.ТипыКонтактнойИнформации.Телефон);
	ОбластьШапка.Параметры.ПациентАдрес = Адрес;
	ОбластьШапка.Параметры.ПациентТелефон = Телефон;
	ТабДокумент.Вывести(ОбластьШапка);
	
	ОбластьПланШапка = Макет.ПолучитьОбласть("ОбластьПланШапка");
	ТабДокумент.Вывести(ОбластьПланШапка);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПланыЛечения.ПервичныйПрием,
	|	ПланыЛечения.ИдентификаторЭлемента,
	|	ПланыЛечения.ВидЭлемента,
	|	ПланыЛечения.Номенклатура,
	|	ПланыЛечения.ПорядокЭлемента,
	|	ПланыЛечения.ДокументРегистратор,
	|	ПланыЛечения.Дата,
	|	ПланыЛечения.Сотрудник,
	|	ПланыЛечения.Количество,
	|	ПланыЛечения.Комментарий
	|ПОМЕСТИТЬ ПланыЛеченияПоПриему
	|ИЗ
	|	РегистрСведений.ПланыЛечения КАК ПланыЛечения
	|ГДЕ
	|	ПланыЛечения.ПервичныйПрием = &ПервичныйПрием
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПланыЛеченияПоПриему.Номенклатура,
	|	ПланыЛеченияПоПриему.Количество,
	|	ПланыЛеченияПоПриему.Дата КАК Назначено,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) КАК Цена,
	|	ЕСТЬNULL(ЦеныНоменклатурыСрезПоследних.Цена, 0) * ПланыЛеченияПоПриему.Количество КАК Сумма
	|ИЗ
	|	ПланыЛеченияПоПриему КАК ПланыЛеченияПоПриему
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Дата, Прейскурант = &Прейскурант) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ПланыЛеченияПоПриему.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПланыЛеченияПоПриему.Дата,
	|	ПланыЛеченияПоПриему.ПорядокЭлемента";
	ПервичныйПрием = ?(ЗначениеЗаполнено(СсылкаНаОбъект.ПервичныйПрием), СсылкаНаОбъект.ПервичныйПрием, СсылкаНаОбъект);
	Запрос.УстановитьПараметр("ПервичныйПрием", ПервичныйПрием);
	Запрос.УстановитьПараметр("Дата", СсылкаНаОбъект.Дата); // ПервичныйПрием.Дата);
	Запрос.УстановитьПараметр("Прейскурант", УправлениеНастройками.ПолучитьПрейскурантФилиала(СсылкаНаОбъект.Филиал));
	Выборка = Запрос.Выполнить().Выбрать();
	СуммаИтого = 0;
	Пока Выборка.Следующий() Цикл
		СуммаИтого = СуммаИтого + Выборка.Сумма;
		ОбластьПланСтрока = Макет.ПолучитьОбласть("ОбластьПланСтрока");
		ЗаполнитьЗначенияСвойств(ОбластьПланСтрока.Параметры, Выборка);
		ОбластьПланСтрока.Параметры.Назначено = Формат(Выборка.Назначено,"ДФ=dd.MM.yyyy");
		ТабДокумент.Вывести(ОбластьПланСтрока);
	КонецЦикла;
	ОбластьПланИтог = Макет.ПолучитьОбласть("ОбластьПланИтог");
	ОбластьПланИтог.Параметры.СуммаИтого = ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаИтого);
	ОбластьПланИтог.Параметры.Валюта = ОбщегоНазначения.ПолучитьКраткоеНаименованиеОсновнойВалюты();
	ТабДокумент.Вывести(ОбластьПланИтог);
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ОбластьПодвал");
	ОбластьПодвал.Параметры.ВрачФИО = СсылкаНаОбъект.Врач.Фамилия + " " + СсылкаНаОбъект.Врач.Имя + " " + СсылкаНаОбъект.Врач.Отчество;
	ОбластьПодвал.Параметры.МестоДляПодписи = Лев("_________________", 16);
	ОбластьПодвал.Параметры.ТекДата = Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy");
	ОбластьПодвал.Параметры.Окончание1 = ?(СсылкаНаОбъект.Клиент.Пол = Перечисления.ПолФизическихЛиц.Женский, "а", "");
	ОбластьПодвал.Параметры.Окончание2 = ?(СсылкаНаОбъект.Клиент.Пол = Перечисления.ПолФизическихЛиц.Женский, "на", "ен");
	ТабДокумент.Вывести(ОбластьПодвал);
	
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Прием_ПланЛечения";
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьПодготовкаКИсследованию(СсылкаНаОбъект)
			
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВыполнениеПланаЛечения.ИдентификаторЭлемента,
	                      |	ВЫБОР
	                      |		КОГДА ВыполнениеПланаЛечения.Количество = 0
	                      |			ТОГДА 1
	                      |		ИНАЧЕ ВыполнениеПланаЛечения.Количество
	                      |	КОНЕЦ КАК Количество
	                      |ПОМЕСТИТЬ ВыполнениеПланаЛечения
	                      |ИЗ
	                      |	РегистрСведений.ВыполнениеПланаЛечения КАК ВыполнениеПланаЛечения
	                      |ГДЕ
	                      |	ВыполнениеПланаЛечения.ПервичныйПрием = &ПервичныйПрием
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ПланыЛечения.Номенклатура
	                      |ИЗ
	                      |	РегистрСведений.ПланыЛечения КАК ПланыЛечения
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВыполнениеПланаЛечения КАК ВыполнениеПланаЛечения
	                      |		ПО ПланыЛечения.ИдентификаторЭлемента = ВыполнениеПланаЛечения.ИдентификаторЭлемента
	                      |ГДЕ
	                      |	ПланыЛечения.ПервичныйПрием = &ПервичныйПрием
	                      |	И ПланыЛечения.Количество > ЕСТЬNULL(ВыполнениеПланаЛечения.Количество, 0)");
	
	Если СсылкаНаОбъект.ЭтоПервичный Тогда
		Запрос.УстановитьПараметр("ПервичныйПрием", СсылкаНаОбъект);
	Иначе
		Запрос.УстановитьПараметр("ПервичныйПрием", СсылкаНаОбъект.ПервичныйПрием);
	КонецЕсли;
		
	мНоменклатура = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Номенклатура");
	ТабличныйДокумент = Документы.ДействияНадАнализами.ПолучитьТабДокПодготовкаКИсследованию(мНоменклатура);
	
	Возврат ТабличныйДокумент;

КонецФункции

#КонецОбласти

#Область ЭЦП

// Возвращает массив имен ключевых реквизитов согласно версии
//
// Параметры:
// 	Версия - Число - версия набора ключевых реквизитов. По умолчанию Неопределено значит последняя.
//
// Возвращаемое значение:
// 	Массив.
// 
Функция ПолучитьИменаКлючевыхРеквизитов(Версия = Неопределено) Экспорт
	
	// !ДанныеОбъекта - служебное имя реквизита, означающее, что процедура формирования строки значений полей полностью переопределена.		
	// !ХешФайлов - служебное имя реквизита, формирует строку хеша файлов по объекту
	
	МассивИмен = Новый Массив;
	
	Если Версия = 2 Тогда
		МассивИмен.Добавить("!ДанныеОбъекта");
	Иначе // Реквизиты актуальной версии
		МассивИмен.Добавить("!ДанныеОбъекта");
		МассивИмен.Добавить("!ДанныеФайлов");
	КонецЕсли;
	
	Возврат МассивИмен;
	
КонецФункции

#КонецОбласти

// Возвращает данные для выбора услуг продажи по выполненным услугам (Состав услуг) в виде таблицы значений с колонками:
//	"Клиент", "Номенклатура", "Количество".
//
// Параметры:
//  ПараметрыВыбора	 - Структура - Структура с ключом "Дата" и необязательным ключом "Клиент".
// 
// Возвращаемое значение:
//   ТаблицаЗначений.
//
Функция ПолучитьДанныеВыполненияДляПродажи(ПараметрыВыбора) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ПараметрыВыбора.Дата));
	Запрос.УстановитьПараметр("КонецПериода",  КонецДня(ПараметрыВыбора.Дата));
	Если ПараметрыВыбора.Свойство("Клиент") И ЗначениеЗаполнено(ПараметрыВыбора.Клиент) Тогда
		Запрос.УстановитьПараметр("Клиент", ПараметрыВыбора.Клиент);
	Иначе
		Запрос.УстановитьПараметр("Клиент", Неопределено);
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапросаДанныеВыполненияДляПродажи();
	
	ДанныеВыполнения = Запрос.Выполнить().Выгрузить();
	ДанныеВыполнения.Колонки.Добавить("ДополнительнаяИнформация", Новый ОписаниеТипов("Структура"));
	
	Для Каждого СтрокаВыполнения Из ДанныеВыполнения Цикл
		Если ЗначениеЗаполнено(СтрокаВыполнения.ДокументОснование)
			И ТипЗнч(СтрокаВыполнения.ДокументОснование) = Тип("ДокументСсылка.Заявка")
		Тогда
			СтрокаВыполнения.ДополнительнаяИнформация.Вставить("Заявка", СтрокаВыполнения.ДокументОснование);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеВыполнения.Колонки.Удалить("ДокументОснование");
	
	Возврат ДанныеВыполнения;
	
КонецФункции

Функция ТекстЗапросаДанныеВыполненияДляПродажи()
	
	Возврат "ВЫБРАТЬ
	        |	Приемы.Клиент КАК Клиент,
	        |	ПриемРаботы.Номенклатура КАК Номенклатура,
	        |	СУММА(ПриемРаботы.Количество) КАК Количество,
	        |	Приемы.Сотрудник КАК Сотрудник,
	        |	Приемы.ДокументОснование КАК ДокументОснование
	        |ИЗ
	        |	Документ.Прием.Работы КАК ПриемРаботы
	        |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	        |			Прием.Ссылка КАК Документ,
	        |			Прием.Клиент КАК Клиент,
	        |			Прием.Врач КАК Сотрудник,
	        |			Прием.ДокументОснование КАК ДокументОснование
	        |		ИЗ
	        |			Документ.Прием КАК Прием
	        |		ГДЕ
	        |			Прием.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	        |			И (&Клиент = НЕОПРЕДЕЛЕНО
	        |					ИЛИ Прием.Клиент В (&Клиент))
	        |			И Прием.Проведен) КАК Приемы
	        |		ПО ПриемРаботы.Ссылка = Приемы.Документ
	        |
	        |СГРУППИРОВАТЬ ПО
	        |	Приемы.Клиент,
	        |	ПриемРаботы.Номенклатура,
	        |	Приемы.Сотрудник,
	        |	Приемы.ДокументОснование";
	
КонецФункции

Процедура ЗаполнитьНастройкиПараметровПисьма(СсылкаНаОбъект, Тема, Текст, ДокументыОтправки) Экспорт
	
	Тема = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Приём %1 от %2'"), СсылкаНаОбъект.Врач, СсылкаНаОбъект.Дата);
	Текст = НСтр("ru='Во вложении Ваш приём у врача'") + " " + СсылкаНаОбъект.Врач;
	ДокументыОтправки = СсылкаНаОбъект;
	
КонецПроцедуры

#КонецОбласти