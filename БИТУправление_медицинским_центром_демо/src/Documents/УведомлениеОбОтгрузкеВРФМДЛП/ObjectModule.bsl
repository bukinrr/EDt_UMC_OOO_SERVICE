#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СхемаАкцептования = Метаданные().Реквизиты.СхемаАкцептования.ЗначениеЗаполнения;
	
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
	КонецЕсли;
	
	Если СхемаАкцептования = Перечисления.СхемыАкцептованияМДЛП.ПрямойПорядок Тогда
		ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОбОтгрузкеВРФМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		Если РеквизитыОперации.Найти(Реквизит) = Неопределено Тогда
			НепроверяемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОбОтгрузкеВРФМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛП.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛП.УбратьНезначащиеСимволы(ЭтотОбъект, "НомерДокумента");
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	ПараметрыОперации.ДатаОперации = Дата;
	
	Если Операция = Перечисления.ОперацииОтгрузкиВРФМДЛП.ОтгрузкаСМаркировкойВЗТК Тогда
		ПараметрыОперации.ИсходныйСтатус                      = Перечисления.СтатусыУпаковокМДЛП.МаркированаВЗТК;
		ПараметрыОперации.СтатусВРезерве                      = Перечисления.СтатусыУпаковокМДЛП.ОжидаетПодтвержденияИмпортером;
		ПараметрыОперации.НовыйСтатус                         = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка();
	Иначе
		ПараметрыОперации.ИсходныйСтатус                      = Перечисления.СтатусыУпаковокМДЛП.ОжидаетОтгрузкиВРФ;
		ПараметрыОперации.СтатусВРезерве                      = Перечисления.СтатусыУпаковокМДЛП.ОтгруженВРФ;
		ПараметрыОперации.НовыйСтатус                         = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка();
		ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Истина;
		ПараметрыОперации.НоваяЗонаТаможенногоКонтроля        = ЗонаТаможенногоКонтроля;
	КонецЕсли;
	ПараметрыОперации.Владелец                                = Справочники.ОрганизацииМДЛП.ПустаяСсылка();
	ПараметрыОперации.МестоДеятельности                       = Организация;
	ПараметрыОперации.ДокументРезерва                         = Ссылка;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НомераУпаковок.НомерКиЗ                КАК НомерУпаковки,
	|	НомераУпаковок.СостояниеПодтверждения  КАК СостояниеПодтверждения
	|ПОМЕСТИТЬ ПодтвержденныеУпаковки
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеВРФМДЛП.НомераУпаковок КАК НомераУпаковок
	|ГДЕ
	|	НомераУпаковок.Ссылка = &Ссылка
	|	И НомераУпаковок.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ВвезеноВРФБезПодтверждения))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НомераУпаковок.НомерУпаковки           КАК НомерУпаковки,
	|	НомераУпаковок.СостояниеПодтверждения  КАК СостояниеПодтверждения
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеВРФМДЛП.ТранспортныеУпаковки КАК НомераУпаковок
	|ГДЕ
	|	НомераУпаковок.Ссылка = &Ссылка
	|	И НомераУпаковок.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ВвезеноВРФБезПодтверждения))
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НомераУпаковок.НомерСтроки  КАК НомерСтроки,
	|	НомераУпаковок.НомерКиЗ     КАК НомерУпаковки,
	|	1                           КАК ДоляУпаковки,
	|	ЛОЖЬ                        КАК ГрупповаяУпаковка,
	|	""НомераУпаковок""          КАК ИмяТабличнойЧасти,
	|	""НомерКиЗ""                КАК ИмяПоля
	|ПОМЕСТИТЬ НомераУпаковок
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеВРФМДЛП.НомераУпаковок КАК НомераУпаковок
	|ГДЕ
	|	НомераУпаковок.Ссылка = &Ссылка
	|	И НЕ НомераУпаковок.СостояниеПодтверждения В (&КонечныеСостояния)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НомераУпаковок.НомерСтроки    КАК НомерСтроки,
	|	НомераУпаковок.НомерУпаковки  КАК НомерУпаковки,
	|	1                             КАК ДоляУпаковки,
	|	ИСТИНА                        КАК ГрупповаяУпаковка,
	|	""ТранспортныеУпаковки""      КАК ИмяТабличнойЧасти,
	|	""НомерУпаковки""             КАК ИмяПоля
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеВРФМДЛП.ТранспортныеУпаковки КАК НомераУпаковок
	|ГДЕ
	|	НомераУпаковок.Ссылка = &Ссылка
	|	И НЕ НомераУпаковок.СостояниеПодтверждения В (&КонечныеСостояния)
	|");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ДокументРезерва", ПараметрыОперации.ДокументРезерва);
	
	КонечныеСостояния = Новый Массив;
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ПустаяСсылка());
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.Подтверждено);
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ);
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком);
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем);
	КонечныеСостояния.Добавить(Перечисления.СостоянияПодтвержденияМДЛП.ВвезеноВРФБезПодтверждения);
	Запрос.УстановитьПараметр("КонечныеСостояния", КонечныеСостояния);
	
	Запрос.УстановитьПараметр("НовыйСтатус", ПараметрыОперации.НовыйСтатус);
	Запрос.УстановитьПараметр("ДатаСтатуса", ПараметрыОперации.ДатаОперации);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "ПодтвержденныеУпаковки");
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ДанныеУпаковок.НомерУпаковки                    КАК НомерУпаковки,
	|	ДанныеУпаковок.МестоДеятельности                КАК МестоДеятельности,
	|	ДанныеУпаковок.ДокументРезерва                  КАК ДокументРезерва,
	|	ДанныеУпаковок.ЗонаТаможенногоКонтроля          КАК ЗонаТаможенногоКонтроля,
	|	ДанныеУпаковок.Статус                           КАК Статус,
	|	ДанныеУпаковок.ДатаСтатуса                      КАК ДатаСтатуса,
	|	ДанныеУпаковок.ИсходныйСтатус                   КАК ИсходныйСтатус,
	|	ДанныеУпаковок.Владелец                         КАК Владелец,
	|	ДанныеУпаковок.НомерГрупповойУпаковки           КАК НомерГрупповойУпаковки,
	|	ДанныеУпаковок.ГрупповаяУпаковка                КАК ГрупповаяУпаковка,
	|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки   КАК ВложеныПотребительскиеУпаковки,
	|	ДанныеУпаковок.ИсходнаяЗонаТаможенногоКонтроля  КАК ИсходнаяЗонаТаможенногоКонтроля
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПодтвержденныеУпаковки КАК ПодтвержденныеУпаковки
	|	ПО
	|		ПодтвержденныеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
	|		И ПодтвержденныеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
	|ГДЕ
	|	ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
	|	И ПодтвержденныеУпаковки.НомерУпаковки ЕСТЬ NULL
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
	|	ДанныеУпаковок.МестоДеятельности               КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
	|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
	|	ВЫБОР
	|		КОГДА ПодтвержденныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ВвезеноВРФБезПодтверждения)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ПустаяСсылка)
	|		ИНАЧЕ &НовыйСтатус
	|	КОНЕЦ                                          КАК Статус,
	|	&ДатаСтатуса                                   КАК ДатаСтатуса,
	|	ДанныеУпаковок.Владелец                        КАК Владелец,
	|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
	|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
	|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
	|	ЛОЖЬ                                           КАК ВвезеноСАвтоизъятием
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПодтвержденныеУпаковки КАК ПодтвержденныеУпаковки
	|	ПО
	|		ПодтвержденныеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
	|		И ПодтвержденныеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
	|ГДЕ
	|	ДанныеУпаковок.ДокументРезерва = &ДокументРезерва
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ДанныеУпаковок.НомерУпаковки                   КАК НомерУпаковки,
	|	ДанныеУпаковок.МестоДеятельности               КАК МестоДеятельности,
	|	НЕОПРЕДЕЛЕНО                                   КАК ДокументРезерва,
	|	ДанныеУпаковок.ЗонаТаможенногоКонтроля         КАК ЗонаТаможенногоКонтроля,
	|	ЗНАЧЕНИЕ(Перечисление.СтатусыУпаковокМДЛП.ПустаяСсылка)  КАК Статус,
	|	&ДатаСтатуса                                   КАК ДатаСтатуса,
	|	ДанныеУпаковок.Владелец                        КАК Владелец,
	|	ДанныеУпаковок.НомерГрупповойУпаковки          КАК НомерГрупповойУпаковки,
	|	ДанныеУпаковок.ГрупповаяУпаковка               КАК ГрупповаяУпаковка,
	|	ДанныеУпаковок.ВложеныПотребительскиеУпаковки  КАК ВложеныПотребительскиеУпаковки,
	|	ИСТИНА                                         КАК ВвезеноСАвтоизъятием
	|ИЗ
	|	РегистрСведений.УпаковкиМДЛП КАК ДанныеУпаковок
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПодтвержденныеУпаковки КАК ПодтвержденныеУпаковки
	|	ПО
	|		ПодтвержденныеУпаковки.НомерУпаковки = ДанныеУпаковок.НомерУпаковки
	|		И ПодтвержденныеУпаковки.КлючУпаковки = ДанныеУпаковок.КлючУпаковки
	|		И ПодтвержденныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ВвезеноВРФБезПодтверждения)
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.УпаковкиМДЛП КАК ДанныеВерхнеуровневыхУпаковок
	|	ПО
	|		ДанныеВерхнеуровневыхУпаковок.НомерУпаковки = ДанныеУпаковок.ДокументРезерва
	|ГДЕ
	|	ДанныеВерхнеуровневыхУпаковок.ДокументРезерва = &ДокументРезерва
	|";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ОтразитьОтгрузку = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
	Пока ОтразитьОтгрузку.Следующий() Цикл
		Если ОтразитьОтгрузку.Статус = Перечисления.СтатусыУпаковокМДЛП.ПустаяСсылка() Тогда
			Если ОтразитьОтгрузку.ГрупповаяУпаковка Тогда
				УдалитьУпаковки = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				УдалитьУпаковки.Отбор.ДокументРезерва.Установить(ОтразитьОтгрузку.НомерУпаковки);
				УдалитьУпаковки.Отбор.МестоДеятельности.Установить(ОтразитьОтгрузку.МестоДеятельности);
				УдалитьУпаковки.Записать();
			КонецЕсли;
			Если ОтразитьОтгрузку.ВвезеноСАвтоизъятием Тогда
				УдалитьУпаковки = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
				УдалитьУпаковки.Отбор.НомерУпаковки.Установить(ОтразитьОтгрузку.НомерУпаковки);
				УдалитьУпаковки.Отбор.МестоДеятельности.Установить(ОтразитьОтгрузку.МестоДеятельности);
				УдалитьУпаковки.Записать();
			КонецЕсли;
		Иначе
			ЗаполнитьЗначенияСвойств(Набор.Добавить(), ОтразитьОтгрузку);
		КонецЕсли;
	КонецЦикла;
	Если Набор.Количество() > 0 Тогда
		Набор.Записать(Ложь);
	КонецЕсли;
	
	Если ОтразитьОтгрузку.Количество() > 0 Тогда
		ОставитьВРезерве = РезультатЗапроса[РезультатЗапроса.ВГраница() - 1].Выгрузить();
		Набор = РегистрыСведений.УпаковкиМДЛП.СоздатьНаборЗаписей();
		Набор.Отбор.ДокументРезерва.Установить(ПараметрыОперации.ДокументРезерва);
		Набор.Загрузить(ОставитьВРезерве);
		Набор.Записать();
	КонецЕсли;
	
	// Для отгрузки в РФ не нужно выполнять проверку исходной ЗТК, т.к. исходная ЗТК,
	// в связи с особенностью работы сервиса МДЛП, может быть заполнена.
	// Такая ситуация может возникнуть при отзыве отгрузки в РФ,
	// когда до отгрузки ЗТК не была заполнена, после отзыва ЗТК осталась заполнена.
	ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Ложь;
	
	ПроверкаПройдена = ИнтеграцияМДЛП.ПроверитьДоступностьУпаковок(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации, Отказ);
	Если ПроверкаПройдена Тогда
		
		Если Операция = Перечисления.ОперацииОтгрузкиВРФМДЛП.ОтгрузкаСМаркировкойПроизводителем Тогда
			ПараметрыОперации.ИспользуетсяЗонаТаможенногоКонтроля = Истина;
		КонецЕсли;
		
		ИнтеграцияМДЛП.ЗарезервироватьУпаковки(Запрос.МенеджерВременныхТаблиц, ПараметрыОперации);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли