#Область РазделОписанияПеременных

&НаКлиенте
Перем ТелефоныКлиента;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	
	ИспользоватьCallЦентр = Метаданные.ФункциональныеОпции.Найти("ИспользоватьCallЦентр") <> Неопределено И ПолучитьФункциональнуюОпцию("ИспользоватьCallЦентр");
	
	ЭтоНовый = Объект.Ссылка.Пустая();	
	Если ЭтоНовый Тогда
		Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда 
			Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Основание.ТолькоПросмотр = ЗначениеЗаполнено(Объект.Основание);
	
	ДопСвойства = Новый Структура;
	Если Не ЗначениеЗаполнено(Объект.Клиент)
		И ЗначениеЗаполнено(Объект.Основание)
		И ТипЗнч(Объект.Основание) = Тип("ДокументСсылка.ЛистОжидания")
		И ЗначениеЗаполнено(Объект.Основание.Клиент)
		И ПравоДоступа("Редактирование", Объект.Ссылка.Метаданные())
	Тогда 
		Объект.Клиент = Объект.Основание.Клиент;
		Модифицированность = Истина;
		ДопСвойства.Вставить("АвтоподстановкаКлиентаИзОснования", Истина);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	ИсходыТиповЗвонков = РегистрыСведений.ИсходыТиповЗвонковДопустимые.СоздатьНаборЗаписей();
	ИсходыТиповЗвонков.Прочитать();
	ИсходыПоТипуЗвонка.Загрузить(ИсходыТиповЗвонков.Выгрузить());
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТипыЗвонков.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ТипыЗвонков КАК ТипыЗвонков
		|ГДЕ
		|	ТипыЗвонков.ИсходОбязателен = ИСТИНА";
	
	ТипыЗвонкаСОбязательнымИсходом.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Элементы.Дата.Доступность = РольДоступна("ПолныеПрава") Или РольДоступна("бит_ПользовательБИТфон");
	
	ПоказатьКомментарииКлиента(Объект.Клиент, Элементы.ДекорацияПодсказкаКлиента, Элементы.СтраницыКомментария, Элементы.СтраницаКнопкаКомментарий, Элементы.СтраницаГиперссылкаКомментарий);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	
	НомерКартинкиВидаСобытия = ОбщегоНазначенияПереопределяемый.ПолучитьИндексЭлементаПеречисления(Объект.ВидСобытия);
	НастроитьВидимостьДоступность();
	
	ОбновитьПодсказкуНомераТелефона();
	
	Если ДопСвойства.Свойство("АвтоподстановкаКлиентаИзОснования") И ДопСвойства.АвтоподстановкаКлиентаИзОснования Тогда
		ПоказатьОповещениеПользователя(НСтр("ru='Была выполнена автоподстановка Клиента из основания текущего События'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка)
		И ТипЗнч(Объект.Основание) <> Тип("ДокументСсылка.ЛистОжидания")
		И Не ЗавершениеРаботы
		И ОтсутствуютЛистыОжиданияВведенныеНаОсновании(Объект.Ссылка)
		И ЗначениеЗаполнено(Объект.ИсходЗвонка) И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ИсходЗвонка, "СоздаватьЛистОжидания")
	Тогда
		ЗначенияЗаполнения = CRMСервер.ПолучитьЗначенияЗаполненияДляЛистаОжиданияПоОбъекту(Объект.Ссылка);
		ПараметрыФормы = Новый Структура("Клиент, ЗначенияЗаполнения, ДатаНачала", Объект.Клиент, ЗначенияЗаполнения, ТекущаяДата());
		ОткрытьФорму("Документ.ЛистОжидания.Форма.ФормаБыстрогоСоздания", ПараметрыФормы, ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ТипЗвонка.ИсходОбязателен И Не ЗначениеЗаполнено(ТекущийОбъект.ИсходЗвонка) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не заполнен исход звонка'"),,"Объект.ИсходЗвонка");
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийОбъект.ДатаПлан) И Не ЗначениеЗаполнено(ТекущийОбъект.ДатаФакт) Тогда 
		ТекущийОбъект.ДатаФакт = ТекущийОбъект.Дата;
		
		Если Не ЗначениеЗаполнено(ТекущийОбъект.ФактическийИсполнитель) Тогда
			ТекущийОбъект.ФактическийИсполнитель = ОбщегоНазначения.ТекущийПользователь();	
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущийОбъект.ВидСобытия = Перечисления.ВидыСобытий.ВходящееПисьмо Или
		ТекущийОбъект.ВидСобытия = Перечисления.ВидыСобытий.ВходящийЗвонок 
	Тогда
		Если ЗначениеЗаполнено(ТекущийОбъект.ПлановыйИсполнитель) Тогда
		    ТекущийОбъект.ПлановыйИсполнитель = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущийОбъект.ДатаПлан) Тогда
		    ТекущийОбъект.ДатаПлан = Дата(1,1,1);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбновитьСотовыйКлиента И ЗначениеЗаполнено(Объект.Клиент) Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ОбновитьСотовыйКлиента", Истина);
		ДопСвойства.Удалить("ОбновитьСотовыйКлиента");
		ОбновитьСотовыйКлиента = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(Объект.Ссылка, Ложь, ЭтаФорма);
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Основание)
		И ТипЗнч(ТекущийОбъект.Основание) = Тип("ДокументСсылка.ЛистОжидания")
	Тогда
		
		Если ЗначениеЗаполнено(ТекущийОбъект.Клиент)
			И НЕ ЗначениеЗаполнено(ТекущийОбъект.Основание.Клиент)
		Тогда
			УстановитьПривилегированныйРежим(Истина);
			ЛистОжидания = Объект.Основание.ПолучитьОбъект();
			ЛистОжидания.Клиент = ТекущийОбъект.Клиент;
			Попытка
				ЛистОжидания.Записать();
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Не удалось сохранить Клиента в основании События.'"));
			КонецПопытки;
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
		
		Если ТекущийОбъект.ИсходЗвонка.ОбщениеСостоялось Тогда
			
			УстановитьПривилегированныйРежим(Истина);
			НаборЗаписей = РегистрыСведений.НеотработанныеОбращения.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Документ.Установить(ТекущийОбъект.Основание);
			НаборЗаписей.Записать();
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "БитФон_ЗаписьНомераТелефонаКонтрагента" Тогда
		Если Не ЗначениеЗаполнено(Объект.Клиент) И Объект.НомерТелефона = Параметр Тогда 
			Объект.Клиент = Источник;
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "ЗаявкаПоДокументуЗапись"
		И Параметр.ДокументЗаписи = Объект.Ссылка 
		И Не Объект.Ссылка.Пустая()
	Тогда
		Если Не ЗначениеЗаполнено(Объект.ИсходЗвонка) Тогда
			Объект.ИсходЗвонка = ПредопределенноеЗначение("Справочник.ИсходыЗвонка.ЗаписанНаПрием");
			ЭтаФорма.Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Результат = "";
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Клиенты") Тогда
		Если ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
			Объект.Клиент = ВыбранноеЗначение;
			ОбновитьПодсказкуНомераТелефона();
		КонецЕсли;	
	ИначеЕсли ТипЗнч(ВыбранноеЗначение) = Тип("Структура")
			И ВыбранноеЗначение.Свойство("Клиент")
			И ЗначениеЗаполнено(ВыбранноеЗначение.Клиент)
	Тогда
		Объект.Клиент = ВыбранноеЗначение.Клиент;
		ОбновитьПодсказкуНомераТелефона();
	КонецЕсли;
	
	Если Не ПустаяСтрока(Результат) Тогда 
		Предупреждение(Результат);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	Если Объект.ВидСобытия <> ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящийЗвонок")
		Или Не ЗначениеЗаполнено(Объект.НомерТелефона)
	Тогда
		Объект.НомерТелефона = ?(ЗначениеЗаполнено(Объект.Клиент), ПолучитьНомерАвтоподстановки(), "");
	КонецЕсли;
	ОбновитьПодсказкуНомераТелефона();
	ПоказатьКомментарииКлиента(Объект.Клиент, Элементы.ДекорацияПодсказкаКлиента, Элементы.СтраницыКомментария, Элементы.СтраницаКнопкаКомментарий, Элементы.СтраницаГиперссылкаКомментарий);
	
	ОбновитьСотовыйКлиента = ЗначениеЗаполнено(Объект.Клиент) И ДопСвойства.Свойство("ОбновитьСотовыйКлиента"); // Для возможного автосохранения телефона клиенту.
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидСобытияПриИзменении(Элемент)
	НомерКартинкиВидаСобытия = ОбщегоНазначенияПереопределяемый.ПолучитьИндексЭлементаПеречисления(Объект.ВидСобытия);
	НастроитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

// Команды

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДатаФактТекущая(Команда)
	
	Объект.ДатаФакт = ТекущаяДата();
	
	Если Не ЗначениеЗаполнено(Объект.ФактическийИсполнитель) Тогда
		Объект.ФактическийИсполнитель = ОбщегоНазначения.ТекущийПользователь();	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ПоискКлиентов(Команда)
	ФормаКлиента = ПолучитьФорму("ОбщаяФорма.ФормаПоискаКлиентаУпр",,ЭтаФорма);
	ФормаКлиента.Телефон = бит_ТелефонияКлиентСервер.СократитьНомерДляПоиска(бит_ТелефонияКлиентСервер.ОчиститьНомерТолькоЦифры(Объект.НомерТелефона));
	ФормаКлиента.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьТелефон(Команда)
	
	Объект.НомерТелефона = ПолучитьНомерАвтоподстановки();
	ОбновитьПодсказкуНомераТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТелефон(Команда)
	
	СотовыйЕсть = ЕстьСотовыйТелефонУКлиента(Объект.Клиент);
	Если СотовыйЕсть Тогда
		ПараметрыФормы = Новый Структура("Клиент, Номер", Объект.Клиент, Объект.НомерТелефона);
		ОткрытьФорму("Документ.Событие.Форма.ФормаИзмененияТелефона", ПараметрыФормы,,,,,Новый ОписаниеОповещения("ПослеИзмененияНомера", ЭтотОбъект, ПараметрыФормы));
	Иначе
		КонтактнаяИнформацияСерверПереопределяемый.ЗаписатьНомерТелефона(Объект.Клиент, Объект.НомерТелефона);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура НачатьРазговор(Команда)
	
	Если Не РаботаСДиалогамиКлиент.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда 
		Возврат;
	КонецЕсли;
	
	ТекстСообщения = НСтр("ru='Нет данных для совершения звонка. Не заполнен клиент или не указан контактный телефон!'");
	Если Не ЗначениеЗаполнено(Объект.НомерТелефона) Тогда
		Если Не ЗначениеЗаполнено(Объект.Клиент) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
		Объект.НомерТелефона = ПолучитьНомерАвтоподстановки();
		ОбновитьПодсказкуНомераТелефона();
		Если Не ЗначениеЗаполнено(Объект.НомерТелефона) Тогда 
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Если Команда.Имя = "НачатьРазговор" Тогда  
		бит_ТелефонияКлиентПереопределяемый.Позвонить(Объект.НомерТелефона, Объект.Ссылка);
	Иначе
		бит_ТелефонияКлиентПереопределяемый.ПозвонитьМонитор(Объект.НомерТелефона, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКомментарийКлиента(Команда)
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
	    ПараметрыФормы = Новый Структура("Клиент", Объект.Клиент);
    	ОткрытьФорму("Отчет.КалендарьПланирования.Форма.ФормаКомментарииКлиента",ПараметрыФормы,,,,,Новый ОписаниеОповещения("ПоказатьКомментарииКлиентаПослеИзменения", ЭтотОбъект));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекПользователяКакПлан(Команда)
	
	Если Объект.ВидСобытия <> ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящееПисьмо") И
		Объект.ВидСобытия <> ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящийЗвонок") 
	Тогда
		Объект.ПлановыйИсполнитель = ОбщегоНазначения.ТекущийПользователь();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьТелефонЗаконномуПредставителю(Команда)
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		ЗаконныйПредставитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Клиент, "ЗаконныйПредставитель");
		Если ЗначениеЗаполнено(ЗаконныйПредставитель) Тогда
			// Определяем существующий номер телефона представителя
			Если ТипЗнч(ЗаконныйПредставитель) = Тип("Строка") Тогда
				СтарыйНомерТелефона = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Клиент, "ЗаконныйПредставительТелефон");
			Иначе
				СтарыйНомерТелефона = КонтактнаяИнформацияСерверПереопределяемый.НайтиКонтактнуюИнформацию(ЗаконныйПредставитель,
					ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Телефон"), ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ТелефонСотовый"),,Ложь);
			КонецЕсли;
			Если СтарыйНомерТелефона <> Объект.НомерТелефона Тогда
				Если НЕ ЗначениеЗаполнено(СтарыйНомерТелефона) Тогда
					Если ТипЗнч(ЗаконныйПредставитель) = Тип("Строка") Тогда
						ЗаписатьТелефонЗаконномуПредставителюНаСервере(Объект.Клиент, ЗаконныйПредставитель, Объект.НомерТелефона);
					Иначе
						ПараметрыФормы = Новый Структура("Клиент, Номер", ЗаконныйПредставитель, Объект.НомерТелефона);
						ОткрытьФорму("Документ.Событие.Форма.ФормаИзмененияТелефона", ПараметрыФормы,,,,,Новый ОписаниеОповещения("ПослеИзмененияНомера", ЭтотОбъект, ПараметрыФормы));
					КонецЕсли;
				Иначе
					ПараметрыФормы = Новый Структура("Клиент, Номер", ЗаконныйПредставитель, Объект.НомерТелефона);
					ОткрытьФорму("Документ.Событие.Форма.ФормаИзмененияТелефона", ПараметрыФормы,,,,,Новый ОписаниеОповещения("ПослеИзмененияНомера", ЭтотОбъект, ПараметрыФормы));	
				КонецЕсли;
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данный номер уже содержится в списке номеров законного представителя (" + Строка(ЗаконныйПредставитель) + ")");		
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ПослеИзмененияНомера(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	
	Объект.НомерТелефона = ПолучитьНомерАвтоподстановки();
	ОбновитьПодсказкуНомераТелефона();
	
КонецПроцедуры

&НаКлиенте
Процедура НастроитьВидимостьДоступность() Экспорт
	
	МожноПланировать = (Объект.ВидСобытия <> ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящееПисьмо") И
		Объект.ВидСобытия <> ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящийЗвонок"));
	ЭтоЗвонок = (Объект.ВидСобытия = ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящийЗвонок") Или
		Объект.ВидСобытия = ПредопределенноеЗначение("Перечисление.ВидыСобытий.ИсходящийЗвонок"));	
	
	Элементы.ДатаПлан.Доступность = МожноПланировать;
	Элементы.ДатаПланВремя.Доступность = Элементы.ДатаПлан.Доступность;
	Элементы.ПлановыйИсполнитель.Доступность = МожноПланировать;
	Элементы.Цель.Доступность = МожноПланировать;
	
	Элементы.ВидСобытия.Доступность = Не Объект.СозданАвтоматически;
	
	// Звонки
	Элементы.ГруппаЗвонок.Доступность = ЭтоЗвонок;
	Элементы.ФормаНачатьРазговор.Доступность = ЭтоЗвонок И ИспользоватьCallЦентр И Не Объект.ЗвонокНачат;
	Элементы.ФормаНачатьРазговорМонитор.Доступность = Элементы.ФормаНачатьРазговор.Доступность;	
	Элементы.ДлительностьВремя.Доступность = ЭтоЗвонок И ИспользоватьCallЦентр;
	
	// Phone
	Элементы.бит_НабранныйНомер.Видимость = Объект.ВидСобытия = ПредопределенноеЗначение("Перечисление.ВидыСобытий.ВходящийЗвонок");
	
	Длительность = Дата(1,1,1) + Объект.ДлительностьЗвонка;
	
	Элементы.ИсходЗвонка.АвтоОтметкаНезаполненного = ТипыЗвонкаСОбязательнымИсходом.НайтиПоЗначению(Объект.ТипЗвонка) <> Неопределено;
	
	Элементы.Обращение.Доступность = Не ЗначениеЗаполнено(Объект.Основание);
	Элементы.Основание.Доступность = Не ЗначениеЗаполнено(Объект.ИсточникИнформации);
	
	Элементы.Обращение.Заголовок = ?(ЗначениеЗаполнено(Объект.ИсточникИнформации), "Обращение (" + Строка(Объект.ИсточникИнформации) + ")", "Обращение");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаАктивизации(АктивныйОбъект, Источник)
	
	НастроитьВидимостьДоступность();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьСотовыйТелефонУКлиента(Клиент)
	
	Запись = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	Запись.Объект = Клиент;
	Запись.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон;
	Запись.Вид = Справочники.ВидыКонтактнойИнформации.ТелефонСотовый;
	Запись.Прочитать();
	
	Возврат Запись.Выбран();
	
КонецФункции

&НаКлиенте
Процедура ДатаФактПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Объект.ДатаФакт) И Не ЗначениеЗаполнено(Объект.ФактическийИсполнитель) Тогда
		Объект.ФактическийИсполнитель = ОбщегоНазначения.ТекущийПользователь();	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаРасширеннаяПодсказкаНажатие(Элемент)
	Объект.НомерТелефона = Элемент.Заголовок;
	ОбновитьПодсказкуНомераТелефона();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодсказкуНомераТелефона()
	ТелефонныйНомерВБазе = ПолучитьНомерАвтоподстановки();
	
	Если НЕ ЗначениеЗаполнено(Объект.НомерТелефона) И ЗначениеЗаполнено(ТелефонныйНомерВБазе) Тогда
		Элементы.НомерТелефона.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		Элементы.НомерТелефонаРасширеннаяПодсказка.Заголовок = ТелефонныйНомерВБазе;
	Иначе
		Элементы.НомерТелефона.ОтображениеПодсказки = ОтображениеПодсказки.Нет;
	КонецЕсли;
	
	ОбновитьКэшНомеровКлиента();
	ОбновитьПримечаниеТелефонногоНомера();
	ОбновитьДоступностьСохраненияНомераЗаконномуПредставителю();
КонецПроцедуры

&НаКлиенте
Процедура НомерТелефонаПриИзменении(Элемент)
	ОбновитьПодсказкуНомераТелефона();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКэшНомеровКлиента()
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		ТелефоныКлиента = КонтактнаяИнформацияСерверПереопределяемый.ПолучитьТелефоныВладельца(Объект.Клиент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПримечаниеТелефонногоНомера()
	Если НЕ ЗначениеЗаполнено(Объект.Клиент) Тогда
		Возврат; 
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.НомерТелефона) Тогда
		ТекущийНомерНормализованный = КонтактнаяИнформацияКлиентСерверПереопределяемый.НормализоватьСотовыйТелефон(Объект.НомерТелефона).Номер;
	Иначе
		ТекущийНомерНормализованный = Неопределено;
	КонецЕсли;
	
	НомерАвтоподстановки = ПолучитьНомерАвтоподстановки();
	Если ЗначениеЗаполнено(НомерАвтоподстановки) Тогда
		НомерАвтоподстановкиНормализованный = КонтактнаяИнформацияКлиентСерверПереопределяемый.НормализоватьСотовыйТелефон(НомерАвтоподстановки).Номер;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийНомерНормализованный) Тогда 
		Если НомерАвтоподстановкиНормализованный = ТекущийНомерНормализованный Тогда
			// Итак выбран самый основной телефон, дополнительной информации выводить не требуется	
			Элементы.ПримечаниеКНомеруТелефона.Заголовок = "";
		Иначе
			НомерЧислитсяВБазе = Ложь;
			ВидТекущегоНомера = Неопределено;
			
			Для Каждого ДанныеНомера Из ТелефоныКлиента Цикл
				НомерТелефонаНормализованный = 	КонтактнаяИнформацияКлиентСерверПереопределяемый.НормализоватьСотовыйТелефон(ДанныеНомера.Представление).Номер;
				Если НомерТелефонаНормализованный = ТекущийНомерНормализованный Тогда
					НомерЧислитсяВБазе = Истина;
					ВидТекущегоНомера = ДанныеНомера.Вид;
				КонецЕсли;
				
			КонецЦикла;
			Если НЕ НомерЧислитсяВБазе Тогда
				Если Не ЗначениеЗаполнено(НомерАвтоподстановки) Тогда
					Элементы.ПримечаниеКНомеруТелефона.Заголовок = НСтр("ru='Текущий номер телефона не зарегистрирован в базе.'");
				Иначе
					Элементы.ПримечаниеКНомеруТелефона.Заголовок = НСтр("ru=Текущий номер телефона не зарегистрирован в базе, но имеется номер для связи:'") + " " + Строка(НомерАвтоподстановки);
				КонецЕсли;
			Иначе
				Если Не ЗначениеЗаполнено(НомерАвтоподстановки) Тогда
					// Такого по не должно быть, т.к. любой номер имеющийся в базе должен найтись при поиске 
				Иначе
					Элементы.ПримечаниеКНомеруТелефона.Заголовок = НСтр("ru='Текущий номер телефона зарегистрирован в базе, но имеется отличный от него номер для связи:'") + " " + Строка(НомерАвтоподстановки);
				КонецЕсли;	
			КонецЕсли;	
		КонецЕсли;		
	Иначе
		Если ЗначениеЗаполнено(НомерАвтоподстановки) Тогда
			Элементы.ПримечаниеКНомеруТелефона.Заголовок = НСтр("ru='У клиента имеется заполненный основной телефон. Кликните по подсказке снизу.'");
		Иначе
			Элементы.ПримечаниеКНомеруТелефона.Заголовок = НСтр("ru='Нет данных о каких-либо номерах телефонов.'");
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНомерАвтоподстановки()
	Возврат КонтактнаяИнформацияСерверПереопределяемый.НайтиКонтактнуюИнформацию(Объект.Клиент,,,,Ложь);
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьТелефонЗаконномуПредставителюНаСервере(Клиент, ЗаконныйПредставитель, НомерТелефона)
	Если ТипЗнч(ЗаконныйПредставитель) = Тип("Строка") Тогда
		КлиентОбъект = Клиент.ПолучитьОбъект();
		КлиентОбъект.ЗаконныйПредставительТелефон = НомерТелефона;
		КлиентОбъект.Записать();
	Иначе
		КонтактнаяИнформацияСерверПереопределяемый.ЗаписатьНомерТелефона(ЗаконныйПредставитель, НомерТелефона);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьСохраненияНомераЗаконномуПредставителю()
	ДоступностьКнопки = Ложь;	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		ЗаконныйПредставитель = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Клиент, "ЗаконныйПредставитель");
		Если ЗначениеЗаполнено(ЗаконныйПредставитель) Тогда
			ДоступностьКнопки = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ЗаписатьТелефонЗаконномуПредставителю.Доступность = ДоступностьКнопки;
КонецПроцедуры

&НаКлиенте
Процедура ТипЗвонкаПриИзменении(Элемент)
	НастроитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ИсходЗвонкаАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьДанныеВыбораДляИсходаЗвонка(СтандартнаяОбработка);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтсутствуютЛистыОжиданияВведенныеНаОсновании(Событие)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЛистОжидания.Ссылка
		|ИЗ
		|	Документ.ЛистОжидания КАК ЛистОжидания
		|ГДЕ
		|	ЛистОжидания.Основание = &Основание";
	
	Запрос.УстановитьПараметр("Основание", Событие);
	
	Возврат Запрос.Выполнить().Выбрать().Количество() = 0;
	
КонецФункции

&НаКлиенте
Процедура ИсходЗвонкаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДанныеВыбора = ПолучитьДанныеВыбораДляИсходаЗвонка(СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ИсходЗвонкаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ИсходЗвонка) И Не ЗначениеЗаполнено(Объект.ТипЗвонка) Тогда
		СтрокиТиповЗвонковПоИсходуЗвонка = ИсходыПоТипуЗвонка.НайтиСтроки(Новый Структура("ИсходЗвонка", Объект.ИсходЗвонка));
		Если СтрокиТиповЗвонковПоИсходуЗвонка.Количество() = 1 Тогда
			Объект.ТипЗвонка = СтрокиТиповЗвонковПоИсходуЗвонка[0].ТипЗвонка;  	
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеВыбораДляИсходаЗвонка(СтандартнаяОбработка)
	
	ДанныеВыбора = Новый СписокЗначений;
	
	СтрокиИсходовПоТипуЗвонка = ИсходыПоТипуЗвонка.НайтиСтроки(Новый Структура("ТипЗвонка", Объект.ТипЗвонка));
	
	Если СтрокиИсходовПоТипуЗвонка.Количество() = 0 Тогда
		СтандартнаяОбработка = Истина;
	Иначе
		Для Каждого СтрокаТаблицы Из СтрокиИсходовПоТипуЗвонка Цикл
			ДанныеВыбора.Добавить(СтрокаТаблицы.ИсходЗвонка);
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДанныеВыбора;
	
КонецФункции

&НаКлиенте
Процедура UTM_SOURCEПриИзменении(Элемент)
	НастроитьВидимостьДоступность();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьКомментарииКлиента(Клиент, ДекорацияПодсказкаКлиента, СтраницыКомментарий, СтраницаКнопка, СтраникаГиперссылка)
	
	ЕстьКомментарий = Ложь;
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		КомментарииКлиента = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Клиент, "Комментарий, КраткийКомментарий");
		ПодсказкаКомментарии = СокрЛП(КомментарииКлиента.КраткийКомментарий);
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ПодсказкаКомментарии, КомментарииКлиента.Комментарий, "; ", Истина);
		ПодсказкаКомментарии = СтрЗаменить(ПодсказкаКомментарии, Символы.ПС, "¶");
	Иначе
		ПодсказкаКомментарии = "";
	КонецЕсли;
	
	Если ПустаяСтрока(ПодсказкаКомментарии) Тогда
		СтраницыКомментарий.ТекущаяСтраница = СтраницаКнопка;
	Иначе
		СтраницыКомментарий.ТекущаяСтраница = СтраникаГиперссылка;
		ДекорацияПодсказкаКлиента.Заголовок = ПодсказкаКомментарии;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьКомментарииКлиентаПослеИзменения(Результат, Параметры) Экспорт
	
	Если Результат = Истина Тогда
		ПоказатьКомментарииКлиента(Объект.Клиент, Элементы.ДекорацияПодсказкаКлиента, Элементы.СтраницыКомментария, Элементы.СтраницаКнопкаКомментарий, Элементы.СтраницаГиперссылкаКомментарий);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПодсказкаКлиентаНажатие(Элемент)
	ОткрытьКомментарийКлиента(Неопределено);
КонецПроцедуры
