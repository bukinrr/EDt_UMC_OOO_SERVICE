#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("РКО", НСтр("ru='Расходный кассовый ордер'"));
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьТаблицуПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//	ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать.
	Если ИмяМакета = "РКО" Тогда
		
		ТабДокумент = ПечатьРКО(СсылкаНаОбъект);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной.
//
Функция ПечатьРКО(СсылкаНаОбъект)

	ВалютаДокумента = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВалютаУчета");
	Если Не ЗначениеЗаполнено(ВалютаДокумента) Тогда
		ВалютаДокумента = Справочники.Валюты.Рубль;
	КонецЕсли;
	
	ОтветственныеЛица = ПроцедурыСпециализацииПоставки.ОтветственныеЛицаФилиала(СсылкаНаОбъект.Филиал);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Номер,
	|	Дата                          КАК ДатаДокумента,
	|	СуммаДокумента                КАК Сумма,
	|	Контрагент,
	|	Контрагент.Представление      КАК ФИОПолучателя,
	|	Выдать,
	|	Приложение,
	|	ПоДокументу,
	|	Основание
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер КАК РасходныйКассовыйОрдер
	|
	|ГДЕ
	|	РасходныйКассовыйОрдер.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ТабДокумент   = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РасходныйКассовыйОрдер_КО2";
	Макет         = Документы.РасходныйКассовыйОрдер.ПолучитьМакет("КО2");
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	// Выводим шапку
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	РеквизитыОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(СсылкаНаОбъект);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = РеквизитыОрганизации.НазваниеОрганизации;
	ОбластьМакета.Параметры.ОрганизацияПоОКПО		 = РеквизитыОрганизации.ОКПО;
	
	ОбластьМакета.Параметры.СуммаПрописью     = ОбщегоНазначения.СформироватьСуммуПрописью(Шапка.Сумма, ВалютаДокумента);
	ОбластьМакета.Параметры.ДатаДокумента     = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.НомерДокумента    = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
	
	ОбластьМакета.Параметры.Основание             = Шапка.Основание;
	ОбластьМакета.Параметры.Приложение            = Шапка.Приложение;
	
	ОбластьМакета.Параметры.ФИОПолучателя         = Шапка.Выдать;
	ОбластьМакета.Параметры.РеквизитыДокументаУдостоверяющегоЛичность = Шапка.ПоДокументу;
	
	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ОбщегоНазначения.ФамилияИнициалыФизЛица(ОтветственныеЛица.ГлавныйБухгалтер);
	ОбластьМакета.Параметры.ФИОКассира = ОбщегоНазначения.ФамилияИнициалыФизЛица(ОтветственныеЛица.Кассир);
	
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьРКО()

#КонецОбласти