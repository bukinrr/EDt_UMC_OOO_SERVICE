#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения(ЭтотОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	СостояниеПодтверждения = Метаданные().Реквизиты.СостояниеПодтверждения.ЗначениеЗаполнения;
	НомераУпаковок.Очистить();
	ТранспортныеУпаковки.Очистить();
	СоставТранспортныхУпаковок.Очистить();
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьХарактеристикиНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Характеристика");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Характеристика");
	КонецЕсли;
	
	Если Не ИнтеграцияМДЛП.ИспользоватьСерииНоменклатуры() Тогда
		НепроверяемыеРеквизиты.Добавить("Товары.Серия");
		НепроверяемыеРеквизиты.Добавить("СоставТранспортныхУпаковок.Серия");
	КонецЕсли;
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОВводеВОборотМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	Для Каждого Реквизит Из ВсеРеквизиты Цикл
		Если РеквизитыОперации.Найти(Реквизит) = Неопределено Тогда
			НепроверяемыеРеквизиты.Добавить(Реквизит);
		КонецЕсли;
	КонецЦикла;
	
	ИнтеграцияМДЛП.ПроверитьЗаполнениеУпаковок(ЭтотОбъект, Отказ);
	
	Если Не (ЗначениеЗаполнено(НомерПодтверждения) И ЗначениеЗаполнено(ДатаДокумента)) Тогда
		Для Каждого Строка Из Товары Цикл
			Если Не (ЗначениеЗаполнено(Строка.НомерПодтверждения) И ЗначениеЗаполнено(Строка.ДатаДокумента)) Тогда
				ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Документ'"), Строка.НомерСтроки, НСтр("ru = 'Номера упаковок'"));
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Товары", Строка.НомерСтроки, "НомерПодтверждения");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле,, Отказ);
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из ТранспортныеУпаковки Цикл
			Если Не (ЗначениеЗаполнено(Строка.НомерПодтверждения) И ЗначениеЗаполнено(Строка.ДатаДокумента)) Тогда
				Состав = СоставТранспортныхУпаковок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", Строка.ИдентификаторСтроки));
				ЕстьСтрокиБезДокумента = Состав.Количество() = 0;
				Для Каждого СтрокаСостава Из Состав Цикл
					Если Не (ЗначениеЗаполнено(СтрокаСостава.НомерПодтверждения) И ЗначениеЗаполнено(СтрокаСостава.ДатаДокумента)) Тогда
						ЕстьСтрокиБезДокумента = Истина;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если ЕстьСтрокиБезДокумента Тогда
					ТекстОшибки = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Документ'"), Строка.НомерСтроки, НСтр("ru = 'Транспортные упаковки'"));
					Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ТранспортныеУпаковки", Строка.НомерСтроки, "НомерПодтверждения");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, Поле,, Отказ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	ИнтеграцияМДЛП.ПроверитьВозможностьЗаписиУведомления(ЭтотОбъект, РежимЗаписи);
	
	ВсеРеквизиты = Неопределено;
	РеквизитыОперации = Неопределено;
	Документы.УведомлениеОВводеВОборотМДЛП.ЗаполнитьИменаРеквизитовПоТипуОперации(Операция, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛП.ОчиститьНеиспользуемыеРеквизиты(ЭтотОбъект, ВсеРеквизиты, РеквизитыОперации);
	
	ИнтеграцияМДЛП.УбратьНезначащиеСимволы(ЭтотОбъект, "НомерДокумента");
	
	ИнтеграцияМДЛППереопределяемый.ПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ЗаписатьСтатусДокументаПоУмолчанию(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаПроведения(ЭтотОбъект, Отказ, РежимПроведения, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации = ИнтеграцияМДЛП.ПараметрыОперацииИзмененияСтатусаУпаковок();
	
	Статусы = Новый Массив;
	Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ВвезенНаТерриториюРФ); // Для ИмпортЕАЭС
	Статусы.Добавить(Перечисления.СтатусыУпаковокМДЛП.ПринятаНаСкладИзЗТК);  // Для ИмпортНеЕАЭС
	ПараметрыОперации.ИсходныйСтатус = Статусы;
	
	ПараметрыОперации.НовыйСтатус    = Перечисления.СтатусыУпаковокМДЛП.ВОбороте;
	ПараметрыОперации.Владелец       = Справочники.ОрганизацииМДЛП.ПустаяСсылка();
	ИнтеграцияМДЛП.ПровестиДокументПоРегиструУпаковок(Ссылка, ПараметрыОперации, Отказ);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СтандартнаяОбработка = Истина;
	ИнтеграцияМДЛППереопределяемый.ОбработкаУдаленияПроведения(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияМДЛП.ОтменитьРезерв(Ссылка);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли