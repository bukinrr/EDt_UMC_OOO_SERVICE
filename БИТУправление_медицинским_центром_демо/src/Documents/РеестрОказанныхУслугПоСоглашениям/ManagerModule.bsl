#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("РеестрОказаныхУслуг"	,"Реестр");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//	ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать.
	Если ИмяМакета = "РеестрОказаныхУслуг" Тогда
		ТабДокумент = ПечатьРеестраОказаныхУслуг(СсылкаНаОбъект);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Заполняет состав услуг документа за период по шапке документа.
//
// Параметры:
//  ДокументОбъект	 - ДокументСсылка.РеестрОказанныхУслугПоСоглашениям	 - реестр.
//
Процедура ЗаполнитьСоставУслугДокумента(ДокументОбъект) Экспорт
	
	Договор = ДокументОбъект.Соглашение;
	Если ЗначениеЗаполнено(Договор.ДатаНачала) Тогда
		НачалоПериода = Макс(Договор.ДатаНачала, ДокументОбъект.НачалоПериода);
	Иначе
		НачалоПериода = ДокументОбъект.НачалоПериода;
	КонецЕсли;
	Если ЗначениеЗаполнено(Договор.ДатаОкончания) Тогда
		КонецПериода = Мин(Договор.ДатаОкончания, ДокументОбъект.КонецПериода);
	Иначе
		КонецПериода = ДокументОбъект.КонецПериода;
	КонецЕсли;
	
	// Из регистра накопления берутся продажи по видам полисам, не требующим указания медицинских параметров продаж,
	// а также данные тех документов с полисами, требующими указания, по которым не было строк 
	// в регистре ПараметрыПродажПоСтраховымПрограммам (например, прошлый месяц после включения признака требования).
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВидыПолисов.Ссылка КАК ВидПолиса,
	               |	ВидыПолисов.РеестрТребуетМедицинскихПараметров
	               |ПОМЕСТИТЬ ВидыПолисов
	               |ИЗ
	               |	Справочник.ВидыПолисов КАК ВидыПолисов
	               |ГДЕ
	               |	ВидыПолисов.Договоры.Договор = &СоглашениеСтрахования
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПараметрыПродажПоСтраховымПрограммам.Документ,
	               |	ПараметрыПродажПоСтраховымПрограммам.Документ.Дата КАК Дата,
	               |	ПараметрыПродажПоСтраховымПрограммам.Диагноз,
	               |	ПараметрыПродажПоСтраховымПрограммам.Зуб,
	               |	ПараметрыПродажПоСтраховымПрограммам.СегментЗуба,
	               |	ПараметрыПродажПоСтраховымПрограммам.Комментарий,
	               |	ПараметрыПродажПоСтраховымПрограммам.Номенклатура,
	               |	ПараметрыПродажПоСтраховымПрограммам.Количество,
	               |	ПараметрыПродажПоСтраховымПрограммам.Сумма,
	               |	ПараметрыПродажПоСтраховымПрограммам.Сотрудник,
	               |	ПараметрыПродажПоСтраховымПрограммам.Документ.Документ КАК Полис,
	               |	ПараметрыПродажПоСтраховымПрограммам.Документ.Клиент КАК Клиент,
	               |	ПараметрыПродажПоСтраховымПрограммам.Проверено
	               |ПОМЕСТИТЬ ПродажиСПараметрами
	               |ИЗ
	               |	РегистрСведений.ПараметрыПродажПоСтраховымПрограммам КАК ПараметрыПродажПоСтраховымПрограммам
	               |ГДЕ
	               |	ПараметрыПродажПоСтраховымПрограммам.Документ.Дата МЕЖДУ &ПериодНач И &ПериодКон
	               |	И ПараметрыПродажПоСтраховымПрограммам.Документ.Филиал.Организация = &Организация
	               |	И ПараметрыПродажПоСтраховымПрограммам.Документ.Документ.ВидПолиса В
	               |			(ВЫБРАТЬ
	               |				ВидыПолисов.ВидПолиса
	               |			ИЗ
	               |				ВидыПолисов
	               |			ГДЕ
	               |				ВидыПолисов.РеестрТребуетМедицинскихПараметров)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ПродажиСПараметрами.Документ
	               |ПОМЕСТИТЬ ДокументыПродажСПараметрами
	               |ИЗ
	               |	ПродажиСПараметрами КАК ПродажиСПараметрами
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродажиПоСтраховымПолисам.Полис,
	               |	ПродажиПоСтраховымПолисам.Полис.Владелец КАК Клиент,
	               |	ПродажиПоСтраховымПолисам.Номенклатура,
	               |	ПродажиПоСтраховымПолисам.Сотрудник,
	               |	ПродажиПоСтраховымПолисам.Количество,
	               |	ПродажиПоСтраховымПолисам.Сумма,
	               |	ПродажиПоСтраховымПолисам.Период КАК Дата,
	               |	ПродажиПоСтраховымПолисам.Регистратор КАК ДокументПродажи
	               |ИЗ
	               |	РегистрНакопления.ПродажиПоСтраховымПолисам КАК ПродажиПоСтраховымПолисам
	               |ГДЕ
	               |	ПродажиПоСтраховымПолисам.Период МЕЖДУ &ПериодНач И &ПериодКон
				   |	И ПродажиПоСтраховымПолисам.Филиал.Организация = &Организация
	               |	И (ПродажиПоСтраховымПолисам.Полис.ВидПолиса В
	               |				(ВЫБРАТЬ
	               |					ВидыПолисов.ВидПолиса
	               |				ИЗ
	               |					ВидыПолисов КАК ВидыПолисов
	               |				ГДЕ
	               |					НЕ ВидыПолисов.РеестрТребуетМедицинскихПараметров)
	               |			ИЛИ ПродажиПоСтраховымПолисам.Полис.ВидПолиса В
	               |					(ВЫБРАТЬ
	               |						ВидыПолисов.ВидПолиса
	               |					ИЗ
	               |						ВидыПолисов КАК ВидыПолисов
	               |					ГДЕ
	               |						ВидыПолисов.РеестрТребуетМедицинскихПараметров)
	               |				И НЕ ПродажиПоСтраховымПолисам.Регистратор В
	               |						(ВЫБРАТЬ
	               |							ДокументыПродажСПараметрами.Документ
	               |						ИЗ
	               |							ДокументыПродажСПараметрами КАК ДокументыПродажСПараметрами))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПродажиСПараметрами.Документ КАК ДокументПродажи,
	               |	ПродажиСПараметрами.Дата,
	               |	ПродажиСПараметрами.Диагноз,
	               |	ПродажиСПараметрами.Зуб,
	               |	ПродажиСПараметрами.СегментЗуба,
	               |	ПродажиСПараметрами.Комментарий,
	               |	ПродажиСПараметрами.Номенклатура,
	               |	ПродажиСПараметрами.Количество,
	               |	ПродажиСПараметрами.Сумма,
	               |	ПродажиСПараметрами.Сотрудник,
	               |	ПродажиСПараметрами.Полис,
	               |	ПродажиСПараметрами.Клиент
	               |ИЗ
	               |	ПродажиСПараметрами КАК ПродажиСПараметрами
	               |ГДЕ
	               |	ПродажиСПараметрами.Проверено";
	
	Запрос.УстановитьПараметр("ПериодНач", НачалоПериода);
	Запрос.УстановитьПараметр("ПериодКон", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("СоглашениеСтрахования", ДокументОбъект.Соглашение);
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Соглашение.Организация);

	Результат = Запрос.ВыполнитьПакет();
	ВыборкаСПараметрами = Результат[4].Выбрать();
	ВыборкаБезПараметров = Результат[3].Выбрать();
	
	Пока ВыборкаСПараметрами.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Услуги.Добавить(),ВыборкаСПараметрами);	
	КонецЦикла;
	
	Пока ВыборкаБезПараметров.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ДокументОбъект.Услуги.Добавить(),ВыборкаБезПараметров);	
	КонецЦикла;
	
	ДокументОбъект.Услуги.Сортировать("Клиент, Дата, Номенклатура");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьРеестраОказаныхУслуг(СсылкаНаОбъект)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрОказанныхУслуг_РеестрОказаныхУслуг";
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	
	Макет = ПолучитьМакет("Макет");
	
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	Шапка.Параметры.Контрагент = ?(ЗначениеЗаполнено(СсылкаНаОбъект.Контрагент.НаименованиеПолное),СсылкаНаОбъект.Контрагент.НаименованиеПолное,СсылкаНаОбъект.Контрагент.Наименование);
	Шапка.Параметры.Соглашение = СсылкаНаОбъект.Соглашение;
	Шапка.Параметры.ДатаНач = Формат(СсылкаНаОбъект.НачалоПериода,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.ДатаКон = Формат(СсылкаНаОбъект.КонецПериода,"ДФ=dd.MM.yyyy");
	ТабДокумент.Вывести(Шапка);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.НомерСтроки КАК Номер,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Клиент.Фамилия КАК Фамилия,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Клиент.Имя КАК Имя,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Клиент.Отчество КАК Отчество,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Полис КАК Полис,
				   |	РеестрОказанныхУслугПоСоглашениямУслуги.Полис.Серия КАК ПолисСерия,
				   |	РеестрОказанныхУслугПоСоглашениямУслуги.Полис.Номер КАК ПолисНомер,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Дата КАК Дата,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Номенклатура.Артикул КАК КодУслуги,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Номенклатура.Наименование КАК Наименование,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Количество КАК Количество,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Сумма КАК Сумма,
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Диагноз.КодДиагноза КАК Диагноз
	               |ИЗ
	               |	Документ.РеестрОказанныхУслугПоСоглашениям.Услуги КАК РеестрОказанныхУслугПоСоглашениямУслуги
	               |ГДЕ
	               |	РеестрОказанныхУслугПоСоглашениямУслуги.Ссылка = &Ссылка
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Номер";
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	ОбщаяСумма = 0;
	СтрокаУслуг = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Пока Выборка.Следующий() Цикл
	    ОбщаяСумма = ОбщаяСумма + Выборка.Сумма; 
		ЗаполнитьЗначенияСвойств(СтрокаУслуг.Параметры,Выборка);
		
		ДанныеПолиса = Новый Структура("Ссылка, Серия, Номер", Выборка.Полис, Выборка.ПолисСерия, Выборка.ПолисНомер);
		СтрокаУслуг.Параметры.СерияНомер = МедицинскоеСтрахование.ПредставлениеПолисаДляПечати(ДанныеПолиса);
		
		ТабДокумент.Вывести(СтрокаУслуг);
	КонецЦикла;
	
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Итого = Формат(ОбщаяСумма,"ЧДЦ=2");
	Подвал.Параметры.Прописью = ОбщегоНазначения.СформироватьСуммуПрописью(ОбщаяСумма,УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВалютаУчета"));
	Подвал.Параметры.Комментарий = СсылкаНаОбъект.Комментарий;
	
	Сотрудник = СсылкаНаОбъект.Ответственный.Сотрудник;
	Если ЗначениеЗаполнено(Сотрудник) Тогда
		Подвал.Параметры.Ответственный = ОбщегоНазначения.ФамилияИнициалыФизЛица(Сотрудник);
	Иначе
		Подвал.Параметры.Ответственный = "_______________________";
	КонецЕсли;
	
	ТабДокумент.Вывести(Подвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьРеестраОказаныхУслуг()

#КонецОбласти
