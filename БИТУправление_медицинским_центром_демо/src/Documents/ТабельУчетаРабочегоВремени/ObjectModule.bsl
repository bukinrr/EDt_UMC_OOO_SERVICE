#Область ПрограммныйИнтерфейс

// Очистка заполненных часов
Процедура ОчиститьСодержимоеТаблицыКромеСотрудников() Экспорт
	
	Для Каждого Стр Из Табель Цикл
		Для Инд = 1 По 31 Цикл
			Стр["ЧислоМес"+Инд] = 0;
		КонецЦикла;
		Стр.ИтогоДни = 0;
		Стр.ИтогоЧасы = 0;
	КонецЦикла;	
	
КонецПроцедуры	

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Заголовок = НСтр("ru='Проведение документа'");
	Заголовок = Заголовок + " """ + СокрЛП(Ссылка) + """: ";
	
	Если Отказ Тогда Возврат КонецЕсли;
	
	Сотр = Табель.ВыгрузитьКолонку("Сотрудник");
	МасОшибок = Новый Массив;
	Для Инд = 0 По Сотр.Количество() - 1 Цикл
		
		Если Не ЗначениеЗаполнено(Сотр[Инд]) Тогда 
			МасОшибок.Добавить(НСтр("ru='Не заполнен сотрудник в строке'") + " " + (Инд + 1));
		КонецЕсли;	
		
	КонецЦикла;	
	
	Если МасОшибок.Количество() > 0 Тогда
		
		Отказ = Истина;                    	
		
		Для Инд = 0 По МасОшибок.Количество() - 1 Цикл
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(МасОшибок[Инд]);
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Документ не проведен'"));
		Возврат;			
	КонецЕсли;	
	
	Если ПроверкаНаДублиСтрок(Ссылка,"Табель", "Сотрудник", Отказ) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Документ не проведен'"));
		Возврат;
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Для Каждого СтрокаТаблицыИсточника Из Табель Цикл
			Для Инд = День(НачалоПериода) По День(КонецПериода) Цикл
				Часы = СтрокаТаблицыИсточника["ЧислоМес" + Инд];
				Если ЗначениеЗаполнено(Часы) Тогда
					НоваяЗапись = Движения.ТабельУчетаРабочегоВремени.Добавить();
					НоваяЗапись.День = НачалоМесяца(НачалоПериода) + 24 * 60 * 60 * (Инд - 1);
					НоваяЗапись.Сотрудник = СтрокаТаблицыИсточника["Сотрудник"];
					НоваяЗапись.Часы = Часы;
					НоваяЗапись.Дней = 1;
					Если ПоОдномуФилиалу Тогда 
						НоваяЗапись.Филиал = Филиал;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Проверка на дубли в столбце "сотрудник" табличной части "Табель".
//
// Параметры:
//  Ссылка		 - ДокументСсылка.ТабельУчетаРабочегоВремени - проверяемый документ.
//  ИмяТаблЧасти - Строка									 - Имя табличной части табеля документа.
//  Колонка		 - Строка									 - Имя проверяемой колонки.
//  Отказ		 - Булево									 - Признак отказа.
// 
// Возвращаемое значение:
//  Булево - признак наличия ошибки.
//
Функция ПроверкаНаДублиСтрок(Ссылка, ИмяТаблЧасти = "Табель", Колонка = "Сотрудник", Отказ = Ложь)
	
	ИмяДока = Ссылка.Метаданные().Имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст =     "ВЫБРАТЬ
	|    Док." + Колонка + " КАК ID,
	|    ПРЕДСТАВЛЕНИЕ(Док." + Колонка + ") КАК Сверка, 
	|    Док.НомерСтроки КАК НомерСтроки,
	|    ДокКопия.НомерСтроки КАК НомерСтрокиКопия
	|ИЗ
	|    Документ." + ИмяДока + "." + ИмяТаблЧасти + " КАК Док
	|        СОЕДИНЕНИЕ Документ." + ИмяДока + "." + ИмяТаблЧасти + " КАК ДокКопия
	|        ПО Док." + Колонка + "= ДокКопия." + Колонка + "
	|            И Док.НомерСтроки < ДокКопия.НомерСтроки
	|ГДЕ
	|    Док.Ссылка = &Ссылка
	|    И ДокКопия.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|    ID,
	|    НомерСтроки";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить().Выбрать();
	СтрокаСообщения = НСтр("ru='Проверка табличной части на дублирующиеся строки:
	|Обнаружены одинаковые позиции! Колонка'") + " " + Колонка;
	
	Пока Результат.Следующий() Цикл
		
		Значение = Результат.Сверка;
		
		Если ЗначениеЗаполнено(Значение) Тогда
			СтрокаСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
								НСтр("ru='%1
										|Строка № %2 и строка № %3  значение: %4'"),
								СтрокаСообщения,
								Формат(Результат.НомерСтроки, "ЧГ="),
								Формат(Результат.НомерСтрокиКопия, "ЧГ="),
								Значение);
			Отказ = Истина;
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Отказ;
	
КонецФункции

#КонецОбласти