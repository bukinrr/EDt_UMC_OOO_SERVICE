
#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("АвансовыйОтчет", "Авансовый отчет");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "АвансовыйОтчет" Тогда
		
		ТабДокумент = ПечатьАвансовыйОтчет(СсылкаНаОбъект);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция формирует табличный документ с печатной формой авансового отчета,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма авансового отчета.
//
Функция ПечатьАвансовыйОтчет(СсылкаНаОбъект)
	
	СчетДляМатериалов = "10.01";
	СчетДляПрочего = "26";
	СчетДляОплат = "60.02";
	СчетКредит = "71.01";
	ОтветственныеЛица = ПроцедурыСпециализацииПоставки.ОтветственныеЛицаФилиала(СсылкаНаОбъект.Филиал);

	Запрос = Новый Запрос;
	
	мВалютаРегламентированногоУчета = Справочники.Валюты.Рубль;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АвансовыйОтчет.Номер,
	|	АвансовыйОтчет.Дата КАК ДатаДокумента,
	|	АвансовыйОтчет.Сотрудник КАК ПодотчетноеЛицо,
	|	АвансовыйОтчет.Сотрудник.Представление КАК ПредставлениеПодотчетногоЛица,
	|	АвансовыйОтчет.НазначениеАванса КАК НазначениеАванса,
	|	АвансовыйОтчет.СуммаДокумента КАК СуммаДокумента,
	|	АвансовыйОтчет.КоличествоДокументов КАК КоличествоДокументов,
	|	АвансовыйОтчет.КоличествоЛистов КАК КоличествоЛистов,
	|	АвансовыйОтчет.Филиал КАК Филиал,
	|	АвансовыйОтчет.ФиоРуководителя КАК ФиоРуководителя,
	|	АвансовыйОтчет.ДолжностьРуководителя КАК ДолжностьРуководителя,
	|	АвансовыйОтчет.ДолжнПодотчЛица КАК ДолжнПодотчЛица
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ТекущийДокумент";
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвансовыйОтчет_АвансовыйОтчет";
	
	Макет = Документы.АвансовыйОтчет.ПолучитьМакет("АвансовыйОтчет");
	
	// ТИТУЛЬНЫЙ ЛИСТ
	ВалютаДокумента = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВалютаУчета");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Титул");
	
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица          = Шапка.ПодотчетноеЛицо;
	ОбластьМакета.Параметры.НомерДокумента                         = ОбщегоНазначения.ПолучитьНомерНаПечать(СсылкаНаОбъект);
	ОбластьМакета.Параметры.ФИОГлавногоБухгалтера = ОбщегоНазначения.ФамилияИнициалыФизЛица(ОтветственныеЛица.ГлавныйБухгалтер);
	ОбластьМакета.Параметры.ФИОКассира = ОбщегоНазначения.ФамилияИнициалыФизЛица(ОтветственныеЛица.Кассир);
	
	Израсходовано = 0;
	ОбластьМакета.Параметры.Израсходовано = Израсходовано;
	
	Получено = 0;
	ЗапросАвансы = Новый Запрос;
	ЗапросАвансы.Текст = "ВЫБРАТЬ
	|	Сумма(АвансовыйОтчетВыданныеАвансы.СуммаИзрасходовано) КАК СуммаИзрасходовано,
	|	Сумма(АвансовыйОтчетВыданныеАвансы.СуммаАванса) КАК  СуммаАванса
	|ИЗ
	|	Документ.АвансовыйОтчет.ВыданныеАвансы КАК АвансовыйОтчетВыданныеАвансы
	|ГДЕ
	|	АвансовыйОтчетВыданныеАвансы.Ссылка = &ТекущийДокумент";
	ЗапросАвансы.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	РезультатАвансы =  ЗапросАвансы.Выполнить().Выбрать();
	
	Если РезультатАвансы.Следующий() Тогда
		
		ОбластьМакета.Параметры.ПолученоИзКассы = РезультатАвансы.СуммаАванса; 
		ОбластьМакета.Параметры.ИтогоПолучено  =  РезультатАвансы.СуммаАванса; 
		Получено = ? (ЗначениеЗаполнено(РезультатАвансы.СуммаАванса),РезультатАвансы.СуммаАванса,0);
		Израсходовано = Шапка.СуммаДокумента;
	КонецЕсли;	
	
	Остаток = Получено - Израсходовано;
	
	Если Остаток < 0 Тогда 
		ОбластьМакета.Параметры.КонечныйПерерасход = Получено - Израсходовано;
	ИначеЕсли Остаток > 0 Тогда
		ОбластьМакета.Параметры.КонечныйОстаток = Получено - Израсходовано;
	КонецЕсли;	
	
	ОбластьМакета.Параметры.Израсходовано = Израсходовано;
	
	ИспСумма     = Окр(Израсходовано, 2, 1);
	ЦелСумма     = Цел(ИспСумма);
	КопСумма     = Формат((ИспСумма - ЦелСумма) * 100, "ЧЦ=2; ЧН=00; ЧВН=");
	
	ОбластьМакета.Параметры.ИзрасходованоРуб    = ЦелСумма;
	ОбластьМакета.Параметры.ИзрасходованоКоп    = КопСумма;
		
	ОбластьМакета.Параметры.ДатаДокумента       = Шапка.ДатаДокумента;
	
	ОбластьМакета.Параметры.КоличествоДокументов = Шапка.КоличествоДокументов;
	ОбластьМакета.Параметры.КоличествоЛистов    = Шапка.КоличествоЛистов;
	
	// Таблица "Бухгалтерская запись"
	СуммаТовары = СсылкаНаОбъект.Товары.Итог("Сумма");
	СуммаОплаты = СсылкаНаОбъект.ОплатаПоставщикам.Итог("Сумма");
	СуммаПрочее = СсылкаНаОбъект.Прочее.Итог("Сумма");
	
	НПП = 1;
	Если СуммаТовары <> 0 Тогда
		
		ОбластьМакета.Параметры["СубСчетДебет"+НПП]	 = СчетДляМатериалов;
		ОбластьМакета.Параметры["СубСчетКредит"+НПП] = СчетКредит;
		ОбластьМакета.Параметры["СуммаДебет"+НПП]	 = СуммаТовары;
		ОбластьМакета.Параметры["СуммаКредит"+НПП]	 = СуммаТовары;
		
		НПП = НПП + 1;
	КонецЕсли;
	Если СуммаОплаты <> 0 Тогда
		
		ОбластьМакета.Параметры["СубСчетДебет"+НПП]	 = СчетДляОплат;
		ОбластьМакета.Параметры["СубСчетКредит"+НПП] = СчетКредит;
		ОбластьМакета.Параметры["СуммаДебет"+НПП]	 = СуммаОплаты;
		ОбластьМакета.Параметры["СуммаКредит"+НПП]	 = СуммаОплаты;
		
		НПП = НПП + 1;
	КонецЕсли;
	Если СуммаПрочее <> 0 Тогда
		
		ОбластьМакета.Параметры["СубСчетДебет"+НПП]	 = СчетДляПрочего;
		ОбластьМакета.Параметры["СубСчетКредит"+НПП] = СчетКредит;
		ОбластьМакета.Параметры["СуммаДебет"+НПП]	 = СуммаПрочее;
		ОбластьМакета.Параметры["СуммаКредит"+НПП]	 = СуммаПрочее;
		
		НПП = НПП + 1;
	КонецЕсли;
	
	ОбластьМакета.Параметры.СуммаОтчетаПрописью = ?(ЗначениеЗаполнено(ИспСумма),ОбщегоНазначения.СформироватьСуммуПрописью(ИспСумма, мВалютаРегламентированногоУчета) + " (" + ЦелСумма + " руб. " + КопСумма + " коп.)", 0);
	
	ОбластьМакета.Параметры.ПредставлениеОрганизации = Шапка.Филиал;
	ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛицаОт =  Шапка.ПодотчетноеЛицо;
	ОбластьМакета.Параметры.НазначениеАванса = Шапка.НазначениеАванса;
	ОбластьМакета.Параметры.ДолжностьПодотчетногоЛицаПредставление =   Шапка.ДолжнПодотчЛица;
	ОбластьМакета.Параметры.ДолжностьРуководителяПредставление = Шапка.ДолжностьРуководителя;
	ОбластьМакета.Параметры.РуководительПредставление =  Шапка.ФиоРуководителя;
	
	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	// ОБОРОТНАЯ СТОРОНА
	ТаблицаОборотная = Новый ТаблицаЗначений;
	ТаблицаОборотная.Колонки.Добавить("Сумма");
	ТаблицаОборотная.Колонки.Добавить("Тип");
	ТаблицаОборотная.Колонки.Добавить("ВидДокВходящий");
	ТаблицаОборотная.Колонки.Добавить("НомерВходящегоДокумента");
	ТаблицаОборотная.Колонки.Добавить("ДатаВходящегоДокумента");
	
	Для Каждого СтрокаТЧ Из СсылкаНаОбъект.Товары Цикл
		Если СтрокаТЧ.Сумма <> 0 Тогда
			СтрокаТаблицы = ТаблицаОборотная.Добавить();
			СтрокаТаблицы.Сумма	= СтрокаТЧ.Сумма;
			СтрокаТаблицы.Тип	= 1;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из СсылкаНаОбъект.ОплатаПоставщикам Цикл
		Если СтрокаТЧ.Сумма <> 0 Тогда
			СтрокаТаблицы = ТаблицаОборотная.Добавить();
			СтрокаТаблицы.Сумма	= СтрокаТЧ.Сумма;
			СтрокаТаблицы.Тип	= 2;
			СтрокаТаблицы.ВидДокВходящий		  = СтрокаТЧ.ВидДокВходящий;
			СтрокаТаблицы.НомерВходящегоДокумента = СтрокаТЧ.НомерВходящегоДокумента;
			СтрокаТаблицы.ДатаВходящегоДокумента  = СтрокаТЧ.ДатаВходящегоДокумента;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТЧ Из СсылкаНаОбъект.Прочее Цикл
		Если СтрокаТЧ.Сумма <> 0 Тогда
			СтрокаТаблицы = ТаблицаОборотная.Добавить();
			СтрокаТаблицы.Сумма	= СтрокаТЧ.Сумма;
			СтрокаТаблицы.Тип	= 3;
			СтрокаТаблицы.ВидДокВходящий		  = СтрокаТЧ.ВидДокВходящий;
			СтрокаТаблицы.НомерВходящегоДокумента = СтрокаТЧ.НомерВходящегоДокумента;
			СтрокаТаблицы.ДатаВходящегоДокумента  = СтрокаТЧ.ДатаВходящегоДокумента;
		КонецЕсли;
	КонецЦикла;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ШапкаТабл = Макет.ПолучитьОбласть("Шапка");
	ТабДокумент.Вывести(ШапкаТабл);
	
	Сч = 1;
	
	СуммаДок = 0; // На всякий случай посчитаем отдельно сумму, но она по идее равна сумме документа.
	Для Каждого СтрокаТаблицы Из ТаблицаОборотная Цикл
		ОблСтр = Макет.ПолучитьОбласть("Строка");
		ОблСтр.Параметры.НомерСтроки = Сч;
		
		ОблСтр.Параметры.ДокументДата = СтрокаТаблицы.ДатаВходящегоДокумента;
		ОблСтр.Параметры.ДокументНомер = СтрокаТаблицы.НомерВходящегоДокумента;
		ОблСтр.Параметры.НаименованиеРасхода = СтрокаТаблицы.ВидДокВходящий;
		
		ОблСтр.Параметры.ПоОтчету = СтрокаТаблицы.Сумма;
		ОблСтр.Параметры.ПоУчету = СтрокаТаблицы.Сумма;
		СуммаДок = СуммаДок + СтрокаТаблицы.Сумма;
		
		Если СтрокаТаблицы.Тип = 1 Тогда
			ОблСтр.Параметры.ДебетСубСчета = СчетДляМатериалов;
		ИначеЕсли  СтрокаТаблицы.Тип = 2 Тогда
			ОблСтр.Параметры.ДебетСубСчета = СчетДляОплат;
		ИначеЕсли  СтрокаТаблицы.Тип = 3 Тогда
			ОблСтр.Параметры.ДебетСубСчета = СчетДляПрочего;
		КонецЕсли;	
		Сч = Сч + 1;
		ТабДокумент.Вывести(ОблСтр);
	КонецЦикла;	
	
	// Выводим подвал авансового отчета
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал"); 
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеПодотчетногоЛица = Шапка.ПодотчетноеЛицо;
	
	ОбластьМакета.Параметры.ИтогоПоОтчету  = СуммаДок; 
	ОбластьМакета.Параметры.ИтогоПоУчету = СуммаДок;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти