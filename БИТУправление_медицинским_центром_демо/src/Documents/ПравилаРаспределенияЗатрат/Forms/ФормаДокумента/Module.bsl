

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма);
	
	Если Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Документы.ПравилаРаспределенияЗатрат.ЗаполнитьНовыйДокументПоУмолчанию(Объект);
		СтатьиЗатрат.Добавить();
	Иначе 
		Для Каждого стрРаспределениеЗатратНаСпециализации Из Объект.РаспределениеЗатратФилиаловНаСпециализации Цикл
			Если СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", стрРаспределениеЗатратНаСпециализации.СтатьяЗатрат)).Количество() = 0 Тогда 
				стрСтатьиЗатрат = СтатьиЗатрат.Добавить();
				стрСтатьиЗатрат.СтатьяЗатрат = стрРаспределениеЗатратНаСпециализации.СтатьяЗатрат; 
			КонецЕсли;
		КонецЦикла;
		Для Каждого стрРаспределениеЗатратНаНоменклатуру Из Объект.РаспределениеЗатратСпециализацийНаНоменклатуру Цикл
			Если СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", стрРаспределениеЗатратНаНоменклатуру.СтатьяЗатрат)).Количество() = 0 Тогда 
				стрСтатьиЗатрат = СтатьиЗатрат.Добавить();
				стрСтатьиЗатрат.СтатьяЗатрат = стрРаспределениеЗатратНаНоменклатуру.СтатьяЗатрат; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	СтатьиЗатрат.Сортировать("СтатьяЗатрат");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	ДатаПриИзменении(Неопределено);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.РаспределениеЗатратФилиаловНаСпециализации.Свернуть("СтатьяЗатрат, Филиал, ПравилоРаспределения");
	ТекущийОбъект.РаспределениеЗатратСпециализацийНаНоменклатуру.Свернуть("СтатьяЗатрат, Специализация, СпособРаспределения");
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(ТекущийОбъект,,ЭтаФорма);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Дата) Тогда 
		Элементы.ПодписьМесяц.Заголовок = "Действует с: " + Формат(Объект.Дата, "ДФ='ММММ yyyy'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратПриИзменении(Элемент)
	
	СтатьиЗатратПриАктивизацииСтроки(Элемент);	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратПриАктивизацииСтроки(Элемент)
	
	Филиалы.Очистить();
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Элементы.Филиалы.Доступность = ТекущиеДанные <> Неопределено;	
	Если ТекущиеДанные <> Неопределено Тогда  
		мсФилиалы = Объект.РаспределениеЗатратФилиаловНаСпециализации.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекущиеДанные.СтатьяЗатрат));
		Если мсФилиалы.Количество() <> 0 Тогда
			Для Каждого стрФилиал Из мсФилиалы Цикл 
				стрФилиалы = Филиалы.Добавить();
				стрФилиалы.Филиал = стрФилиал.Филиал; 
				стрФилиалы.ПравилоРаспределенияЗатратНаСпециализации = стрФилиал.ПравилоРаспределения;
			КонецЦикла;
		Иначе
			СтрокаФилиалы = Филиалы.Добавить();
			СтрокаФилиалы.ПравилоРаспределенияЗатратНаСпециализации = ПравилоРаспределенияЗатратНаСпециализацииПоУмолчанию();
			
			стрРаспределениеЗатратФилиалов = Объект.РаспределениеЗатратФилиаловНаСпециализации.Добавить();
			стрРаспределениеЗатратФилиалов.СтатьяЗатрат = ТекущиеДанные.СтатьяЗатрат; 
			стрРаспределениеЗатратФилиалов.ПравилоРаспределения = СтрокаФилиалы.ПравилоРаспределенияЗатратНаСпециализации; 
		КонецЕсли;
	КонецЕсли;
	
	Специализации.Очистить();
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Элементы.Специализации.Доступность = ТекущиеДанные <> Неопределено; 
	Если ТекущиеДанные <> Неопределено Тогда  
		мсСпециализации = Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекущиеДанные.СтатьяЗатрат));
		Если мсСпециализации.Количество() <> 0 Тогда
			Для Каждого стрСпециализация Из мсСпециализации Цикл 
				стрСпециализации = Специализации.Добавить();
				стрСпециализации.Специализация = стрСпециализация.Специализация; 
				стрСпециализации.СпособРаспределенияЗатратНаНоменклатуру = стрСпециализация.СпособРаспределения;
			КонецЦикла;
		Иначе
			СтрокаСпециализация = Специализации.Добавить();
			СтрокаСпециализация.СпособРаспределенияЗатратНаНоменклатуру = ПредопределенноеЗначение("Перечисление.СпособРаспределенияЗатрат.ПоСуммеПродаж");
			
			стрРаспределениеЗатратСпециализаций = Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.Добавить();
			стрРаспределениеЗатратСпециализаций.СтатьяЗатрат = ТекущиеДанные.СтатьяЗатрат;
			стрРаспределениеЗатратСпециализаций.СпособРаспределения = СтрокаСпециализация.СпособРаспределенияЗатратНаНоменклатуру;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратПередУдалением(Элемент, Отказ)

	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СтатьяЗатрат) Тогда 
			мсСтроки = СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должна быть указана хотя бы одна статья затрат ""Все остальные""!",
				Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	АктуализироватьТабличныеЧасти();

КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратПослеУдаления(Элемент)
	
	АктуализироватьТабличныеЧасти();
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьиЗатратСтатьяЗатратОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.СтатьиЗатрат.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.СтатьяЗатрат) Тогда 
			мсСтроки = СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", ПредопределенноеЗначение("Справочник.СтатьиЗатрат.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				СтандартнаяОбработка = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должна быть указана хотя бы одна статья затрат ""Все остальные""!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ФилиалыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Филиал) Тогда 
			мсСтроки = Филиалы.НайтиСтроки(Новый Структура("Филиал", ПредопределенноеЗначение("Справочник.Филиалы.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должен быть указан хотя бы один филиал ""Все остальные""!",
				Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		АктуализироватьРаспределениеЗатратФилиаловНаСпециализации();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалыПослеУдаления(Элемент)
	
	АктуализироватьРаспределениеЗатратФилиаловНаСпециализации();

КонецПроцедуры

&НаКлиенте
Процедура ФилиалыФилиалОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.Филиалы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Филиал) Тогда 
			мсСтроки = Филиалы.НайтиСтроки(Новый Структура("Филиал", ПредопределенноеЗначение("Справочник.Филиалы.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				СтандартнаяОбработка = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должен быть указан хотя бы один филиал ""Все остальные""!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпециализацииПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Специализация) Тогда 
			мсСтроки = Специализации.НайтиСтроки(Новый Структура("Специализация", ПредопределенноеЗначение("Справочник.КатегорииВыработки.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должна быть указана хотя бы одна специализация ""Все остальные""!",
				Отказ);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпециализацииПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)

	Если Не ОтменаРедактирования Тогда
		АктуализироватьРаспределениеЗатратСпециализацийНаНоменклатуру();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпециализацииПослеУдаления(Элемент)

	АктуализироватьРаспределениеЗатратСпециализацийНаНоменклатуру();

КонецПроцедуры

&НаКлиенте
Процедура СпециализацииСпециализацияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.Специализации.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда  
		Если Не ЗначениеЗаполнено(ТекущиеДанные.Специализация) Тогда 
			мсСтроки = Специализации.НайтиСтроки(Новый Структура("Специализация", ПредопределенноеЗначение("Справочник.КатегорииВыработки.ПустаяСсылка")));
			Если мсСтроки.Количество() = 1 Тогда 
				СтандартнаяОбработка = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке("В табличной части должна быть указана хотя бы одна специализация ""Все остальные""!");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПравилоРаспределенияЗатратНаСпециализацииПоУмолчанию()
	
	Возврат Документы.ПравилаРаспределенияЗатрат.ПравилоРаспределенияЗатратНаСпециализацииПоУмолчанию();
	
КонецФункции 

&НаКлиенте
Процедура АктуализироватьТабличныеЧасти()
	
	мсУдаляемыеСтрокиРаспределениеЗатратФилиалов = Новый Массив;
	Для Каждого стрФилиалы Из Объект.РаспределениеЗатратФилиаловНаСпециализации Цикл
		Если СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", стрФилиалы.СтатьяЗатрат)).Количество() = 0 Тогда  
			мсУдаляемыеСтрокиРаспределениеЗатратФилиалов.Добавить(стрФилиалы);	
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрокаФилиалы Из мсУдаляемыеСтрокиРаспределениеЗатратФилиалов Цикл 
		Объект.РаспределениеЗатратФилиаловНаСпециализации.Удалить(УдаляемаяСтрокаФилиалы);	
	КонецЦикла;
	
	мсУдаляемыеСтрокиРаспределениеЗатратСпециализаций = Новый Массив;
	Для Каждого стрСпециализации Из Объект.РаспределениеЗатратСпециализацийНаНоменклатуру Цикл
		Если СтатьиЗатрат.НайтиСтроки(Новый Структура("СтатьяЗатрат", стрСпециализации.СтатьяЗатрат)).Количество() = 0 Тогда  
			мсУдаляемыеСтрокиРаспределениеЗатратСпециализаций.Добавить(стрСпециализации);	
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемаяСтрокаСпециализации Из мсУдаляемыеСтрокиРаспределениеЗатратСпециализаций Цикл 
		Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.Удалить(УдаляемаяСтрокаСпециализации);	
	КонецЦикла;
	
	Модифицированность = Истина;	
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьРаспределениеЗатратФилиаловНаСпециализации()
	
	ТекущиеДанные = Элементы.СтатьиЗатрат.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		мсФилиалы = Объект.РаспределениеЗатратФилиаловНаСпециализации.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекущиеДанные.СтатьяЗатрат));
					
		Для Каждого ЭлементФилиалы Из мсФилиалы Цикл 
			Объект.РаспределениеЗатратФилиаловНаСпециализации.Удалить(ЭлементФилиалы);				
		КонецЦикла;
		
		Для Каждого стрФилиалы Из Филиалы Цикл
			стрРаспределениеЗатрат = Объект.РаспределениеЗатратФилиаловНаСпециализации.Добавить();
			стрРаспределениеЗатрат.СтатьяЗатрат = ТекущиеДанные.СтатьяЗатрат;
			стрРаспределениеЗатрат.Филиал = стрФилиалы.Филиал;
			стрРаспределениеЗатрат.ПравилоРаспределения = стрФилиалы.ПравилоРаспределенияЗатратНаСпециализации;
		КонецЦикла;
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьРаспределениеЗатратСпециализацийНаНоменклатуру()

	ТекущиеДанные = Элементы.СтатьиЗатрат.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда 
		мсСпециализации = Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.НайтиСтроки(Новый Структура("СтатьяЗатрат", ТекущиеДанные.СтатьяЗатрат));
		
		Для Каждого ЭлементСпециализации Из мсСпециализации Цикл 
			Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.Удалить(ЭлементСпециализации);				
		КонецЦикла;
		
		Для Каждого стрСпециализации Из Специализации Цикл
			стрРаспределениеЗатрат = Объект.РаспределениеЗатратСпециализацийНаНоменклатуру.Добавить();
			стрРаспределениеЗатрат.СтатьяЗатрат = ТекущиеДанные.СтатьяЗатрат;
			стрРаспределениеЗатрат.Специализация = стрСпециализации.Специализация;
			стрРаспределениеЗатрат.СпособРаспределения = стрСпециализации.СпособРаспределенияЗатратНаНоменклатуру;
		КонецЦикла;
		
		Модифицированность = Истина;
	КонецЕсли;		
	
КонецПроцедуры

#КонецОбласти
