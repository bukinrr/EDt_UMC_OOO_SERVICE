
#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не Отказ Тогда 
		Если Не ОбменДанными.Загрузка Тогда
			ПроверитьНаличиеПроведенногоДокументаНаДату(Отказ);
			ПроверитьЗаполнениеПравилИСпособовРаспределения(Отказ);
			ПроверитьДублированиеПравилИСпособовРаспределения(Отказ);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьНаличиеПроведенногоДокументаНаДату(Отказ)

	Если Не Отказ Тогда 
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПравилаРаспределенияЗатрат.Дата КАК Дата,
		               |	ПравилаРаспределенияЗатрат.Номер КАК Номер
		               |ИЗ
		               |	Документ.ПравилаРаспределенияЗатрат КАК ПравилаРаспределенияЗатрат
		               |ГДЕ
		               |	ПравилаРаспределенияЗатрат.Ссылка <> &ТекущийДокумент
		               |	И ПравилаРаспределенияЗатрат.Проведен
		               |	И НАЧАЛОПЕРИОДА(ПравилаРаспределенияЗатрат.Дата, МЕСЯЦ) = &Дата";
	
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("Дата", НачалоМесяца(Дата));
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			Отказ = Истина;
			ОбщегоНазначения.СообщитьОбОшибке(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru='На %1 уже создан и проведен документ № %2 от %3!'"),
					Формат(Дата, "ДФ='ММММ yyyy'"),
					Выборка.Номер,
					Формат(Дата, "ДЛФ=D")),
			Отказ);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеПравилИСпособовРаспределения(Отказ)
	
	Если Не Отказ Тогда 
		
		Для Каждого стрРаспределениеЗатратФилиалов Из РаспределениеЗатратФилиаловНаСпециализации Цикл	
			Если Не ЗначениеЗаполнено(стрРаспределениеЗатратФилиалов.ПравилоРаспределения) Тогда 	
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для статьи затрат ""%1"" и филиала ""%2"" не указано правило распределения затрат на специализации!'"),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратФилиалов.СтатьяЗатрат), стрРаспределениеЗатратФилиалов.СтатьяЗатрат, НСтр("ru='Все остальные'")),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратФилиалов.Филиал), стрРаспределениеЗатратФилиалов.Филиал, НСтр("ru='Все остальные'"))),
					Отказ);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого стрРаспределениеЗатратСпециализаций Из РаспределениеЗатратСпециализацийНаНоменклатуру Цикл	
			Если Не ЗначениеЗаполнено(стрРаспределениеЗатратСпециализаций.СпособРаспределения) Тогда 	
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для статьи затрат ""%1"" и специализации ""%2"" не указан способ распределения затрат на номенклатуру!'"),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратСпециализаций.СтатьяЗатрат), стрРаспределениеЗатратСпециализаций.СтатьяЗатрат, НСтр("ru='Все остальные'")),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратСпециализаций.Специализация), стрРаспределениеЗатратСпециализаций.Специализация, НСтр("ru='Все остальные'"))),
					Отказ);
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДублированиеПравилИСпособовРаспределения(Отказ)
	
	Если Не Отказ Тогда 
	
		Для Каждого стрРаспределениеЗатратФилиалов Из РаспределениеЗатратФилиаловНаСпециализации Цикл
			мсСтрокиРаспределениеЗатратНаСпециализации = РаспределениеЗатратФилиаловНаСпециализации.НайтиСтроки(Новый Структура("СтатьяЗатрат, Филиал", стрРаспределениеЗатратФилиалов.СтатьяЗатрат, стрРаспределениеЗатратФилиалов.Филиал));
			Если мсСтрокиРаспределениеЗатратНаСпециализации.Количество() > 1 Тогда 	
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для статьи затрат ""%1"" и филиала ""%2"" может быть указано только одно правило распределения затрат на специализации!'"),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратФилиалов.СтатьяЗатрат), стрРаспределениеЗатратФилиалов.СтатьяЗатрат, НСтр("ru='Все остальные'")),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратФилиалов.Филиал), стрРаспределениеЗатратФилиалов.Филиал, НСтр("ru='Все остальные'"))),
					Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого стрРаспределениеЗатратСпециализаций Из РаспределениеЗатратСпециализацийНаНоменклатуру Цикл	
			мсСтрокиРаспределениеЗатратНаНоменклатуру = РаспределениеЗатратСпециализацийНаНоменклатуру.НайтиСтроки(Новый Структура("СтатьяЗатрат, Специализация", стрРаспределениеЗатратСпециализаций.СтатьяЗатрат, стрРаспределениеЗатратСпециализаций.Специализация));
			Если мсСтрокиРаспределениеЗатратНаНоменклатуру.Количество() > 1 Тогда 	
				Отказ = Истина;
				ОбщегоНазначения.СообщитьОбОшибке(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для статьи затрат ""%1"" и специализации ""%2"" может быть указан только один способ распределения затрат на номенклатуру!'"),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратСпециализаций.СтатьяЗатрат), стрРаспределениеЗатратСпециализаций.СтатьяЗатрат, НСтр("ru='Все остальные'")),
						?(ЗначениеЗаполнено(стрРаспределениеЗатратСпециализаций.Специализация), стрРаспределениеЗатратСпециализаций.Специализация, НСтр("ru='Все остальные'"))),
					Отказ);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры

#КонецОбласти