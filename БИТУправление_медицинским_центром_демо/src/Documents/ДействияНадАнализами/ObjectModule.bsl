#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОказаниеУслуг") 
		Или (ТипЗнч(ДанныеЗаполнения) = Тип("Структура")
				И ДанныеЗаполнения.Свойство("Основание")
				И ТипЗнч(ДанныеЗаполнения.Основание) = Тип("ДокументСсылка.ОказаниеУслуг"))
	Тогда
		ВидОперации = Перечисления.ВидыОперацийАнализов.Забор;
		ДокументОснование = ДанныеЗаполнения.Основание;
		
		Для Каждого Номенклатура Из ДанныеЗаполнения.Анализы Цикл
			СтрокаИсследования = Исследования.Добавить();
			СтрокаИсследования.Номенклатура = Номенклатура;
			СтрокаИсследования.КлючСтроки = СтрокаИсследования.НомерСтроки;
			СтрокаИсследования.Клиент = ДокументОснование.Клиент;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда 
		
		Если ДанныеЗаполнения.Свойство("Анализы")
			И ТипЗнч(ДанныеЗаполнения.Анализы) = Тип("Массив")
		Тогда	
			Для Каждого СтрокаАнализа Из ДанныеЗаполнения.Анализы Цикл
				Если ТипЗнч(СтрокаАнализа.Номенклатура) = Тип("СправочникСсылка.Номенклатура") Тогда
					
					СтрокаИсследования = Исследования.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаИсследования, СтрокаАнализа);
					СтрокаИсследования.КлючСтроки = СтрокаИсследования.НомерСтроки;
					
					Если СтрокаАнализа.Свойство("ИдентификаторНазначения") Тогда
						СтрокаИсследования.ИД = СтрокаАнализа.ИдентификаторНазначения;
					КонецЕсли;
					
					Если СтрокаАнализа.Свойство("ИД") Тогда
						СтрокаИсследования.ИД = СтрокаАнализа.ИД;
					КонецЕсли;

					Если ДанныеЗаполнения.Свойство("Клиент") Тогда
						СтрокаИсследования.Клиент = ДанныеЗаполнения.Клиент;
					КонецЕсли;
					
					// Если несколько раз один анализ нужен
					Если СтрокаАнализа.Свойство("Количество") И СтрокаАнализа.Количество > 1 Тогда
						Для Сч = 2 По СтрокаАнализа.Количество Цикл
							СтрокаИсследованияДоп = Исследования.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаИсследованияДоп, СтрокаИсследования);
							СтрокаИсследованияДоп.КлючСтроки = СтрокаИсследованияДоп.НомерСтроки;
						КонецЦикла;
					КонецЕсли;					
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)

	НастройкиУчетаЛабораторий = ЛабораторияСервер.НастройкиУчетаЛабораторий();
	ИспользуетсяРасширеннаяВнутренняяЛаборатория	= НастройкиУчетаЛабораторий.ИспользуетсяРасширеннаяВнутренняяЛаборатория;
	ИспользуетсяУпрощеннаяЛаборатория				= НастройкиУчетаЛабораторий.УпрощеннаяЛабораторияИспользуется;
	ИспользуетсяИнтеграцияСВнешнимиЛабораториями	= НастройкиУчетаЛабораторий.ИспользуетсяИнтеграцияСВнешнимиЛабораториями;
	
	Если (НастройкиУчетаЛабораторий.ИспользуетсяРасширеннаяВнутренняяЛаборатория
			Или НастройкиУчетаЛабораторий.ИспользуетсяИнтеграцияСВнешнимиЛабораториями)
		И Не НастройкиУчетаЛабораторий.УпрощеннаяЛабораторияИспользуется
		И ЭтотОбъект.ВидОперации = Перечисления.ВидыОперацийАнализов.Забор
	Тогда
		ПроверяемыеРеквизиты.Добавить("Исследования.Лаборатория");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	мсКлиенты = Новый Массив;
	мсИсследования = Новый Массив;
	
	Для Каждого СтрокаИсследование Из Исследования Цикл
		Если мсКлиенты.Найти(СтрокаИсследование.Клиент) = Неопределено Тогда
			мсКлиенты.Добавить(СтрокаИсследование.Клиент);
		КонецЕсли;
			
		Если мсИсследования.Найти(СтрокаИсследование.Номенклатура) = Неопределено Тогда
			мсИсследования.Добавить(СтрокаИсследование.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	ОписаниеКлиентов = "";
	ОписаниеИсследований = "";
	Для Каждого Клиент Из мсКлиенты Цикл
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ОписаниеКлиентов, Строка(Клиент), ", ");
	КонецЦикла;
	Для Каждого Номенклатура Из мсИсследования Цикл
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ОписаниеИсследований, Строка(Номенклатура), ", ");
	КонецЦикла;
	
	Если Не ПометкаУдаления
		И ВидОперации = Перечисления.ВидыОперацийАнализов.Забор
	Тогда
		ЛабораторияСервер.ПроверитьЗаполнениеЗабораАнализаПередЗаписью(ЭтотОбъект, РежимЗаписи, Отказ);
		
		Если Не Отказ Тогда
			Документы.ДействияНадАнализами.ЗаполнитьИдентификаторыИсследований(ЭтотОбъект);
			ЗаполнитьИДИсследованияТЧКонтейнеры(); // Строго после заполнения идентификаторов Исследований.
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	НастройкиУчетаЛабораторий = ЛабораторияСервер.НастройкиУчетаЛабораторий();
	Если Не ОбменДанными.Загрузка
		И Не Отказ
		И (НастройкиУчетаЛабораторий.ИспользуетсяРасширеннаяВнутренняяЛаборатория Или НастройкиУчетаЛабораторий.ИспользуетсяИнтеграцияСВнешнимиЛабораториями)
		И ВидОперации = Перечисления.ВидыОперацийАнализов.Забор
	Тогда
		ЛабораторияСервер.ПроверитьЗаполнениеЗабораАнализа(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрамИсследований();
	КонецЕсли;

КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Для каждого СтрИсследования Из Исследования Цикл
		СтрИсследования.ИД = Новый УникальныйИдентификатор;
		Контейнеры.Очистить();
	КонецЦикла;
	
	InvЗаявка = Документы.invЗаявкаНаИсследование.ПустаяСсылка();
	
КонецПроцедуры

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Процедура ДвиженияПоРегистрамИсследований
//
Процедура ДвиженияПоРегистрамИсследований() Экспорт
	
	Статус = Неопределено;
	Если ВидОперации = Перечисления.ВидыОперацийАнализов.Забор 
		ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ВозвратПробИзСтороннейЛаборатории
		ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПередачаВСтороннююЛабораторию
		ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеАнализа Тогда
		Статус = Перечисления.СостоянияИсследований.Забран;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийАнализов.ОтметкаВыполненияИсследования
		ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеРезультатовОтСтороннейЛаборатории Тогда
		Статус = Перечисления.СостоянияИсследований.Проанализирован;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийАнализов.Утеря Тогда
		Статус = Перечисления.СостоянияИсследований.Утерян;
	ИначеЕсли ВидОперации = Перечисления.ВидыОперацийАнализов.ПередачаРезультатов Тогда
		Статус = Перечисления.СостоянияИсследований.Обработан;
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.ВидыОперацийАнализов.Забор Тогда
		
		АнализыПоРаннимСостояниям = ПолучитьДанныеАнализовПоДокументу();
		АнализыПоКодамПроб = АнализыПоРаннимСостояниям.АнализыПоКодамПроб;
		АнализыПоНоменклатуре = АнализыПоРаннимСостояниям.АнализыПоНоменклатуре;
		
	КонецЕсли;
	
	Для Каждого ТекСтрокаИсследования Из Исследования Цикл
			
		ПорядковыйНомер = 0;		
					
		Движение = Движения.ЛабораторныеИсследования.Добавить();
		Движение.Период = Дата;
		Движение.ДатаНачала = Дата;
		Движение.Клиент = ТекСтрокаИсследования.Клиент;
		Движение.Статус = Статус;
		Движение.Номенклатура = ТекСтрокаИсследования.Номенклатура;
		Движение.Лаборатория  = ТекСтрокаИсследования.Лаборатория;
		Движение.ПорядковыйНомер  = ПорядковыйНомер;
		ПорядковыйНомер = ПорядковыйНомер + 1;
		
		Если ВидОперации = Перечисления.ВидыОперацийАнализов.Забор Тогда
			
			КодПробы = Неопределено;
			Если ЭтотОбъект.Контейнеры.Количество() > 0 Тогда
				СтрокиКодПробы = ЭтотОбъект.Контейнеры.НайтиСтроки(Новый Структура("КлючСтрокиИсследования", ТекСтрокаИсследования.КлючСтроки));
				Если СтрокиКодПробы.Количество() > 0 Тогда
					КодПробы = СтрокиКодПробы[0].КодПробы;
				КонецЕсли;
			КонецЕсли;
			
			Движение.КодПробы = ?(КодПробы <> Неопределено, КодПробы, ТекСтрокаИсследования.КодПробы);
			Движение.Анонимно = Анонимно;
			
			Движение.ИД = ?(ЗначениеЗаполнено(ТекСтрокаИсследования.ИД),ТекСтрокаИсследования.ИД,Новый УникальныйИдентификатор);
			Движение.КлиникаИсходная = Филиал;
			Движение.Местонахождение = Филиал;
			
		Иначе // Не забор анализа.
			
			КодПробы = Неопределено;
			ИД = Неопределено;
			КлиникаИсходная = Неопределено;
			
			АнализНайден = Ложь;
			
			Если ЗначениеЗаполнено(ТекСтрокаИсследования.ИД) Тогда
				Отбор = Новый Структура("ИД, Номенклатура, Клиент", ТекСтрокаИсследования.ИД, ТекСтрокаИсследования.Номенклатура, ТекСтрокаИсследования.Клиент);
				АнализНайден = НайтиИЗаполнитьПоляАнализа(АнализыПоНоменклатуре, Отбор, ИД, КлиникаИсходная, КодПробы);
			КонецЕсли;
			
			Если Не АнализНайден Тогда
				// Ищем по коду пробы
				Отбор = Новый Структура("КодПробы,Клиент", ТекСтрокаИсследования.КодПробы, ТекСтрокаИсследования.Клиент);
				АнализНайден = НайтиИЗаполнитьПоляАнализа(АнализыПоКодамПроб, Отбор, ИД, КлиникаИсходная, КодПробы);
			КонецЕсли;
			
			Если Не АнализНайден Тогда
				Отбор = Новый Структура("Номенклатура,Клиент", ТекСтрокаИсследования.Номенклатура, ТекСтрокаИсследования.Клиент);
				
				Если ЗначениеЗаполнено(ТекСтрокаИсследования.Лаборатория) Тогда
					Отбор.Вставить("Лаборатория", ТекСтрокаИсследования.Лаборатория);
					АнализНайден = НайтиИЗаполнитьПоляАнализа(АнализыПоНоменклатуре, Отбор, ИД, КлиникаИсходная, КодПробы);
					Если Не АнализНайден Тогда
						Отбор.Вставить("Лаборатория", Справочники.Лаборатории.ПустаяСсылка());
						АнализНайден = НайтиИЗаполнитьПоляАнализа(АнализыПоНоменклатуре, Отбор, ИД, КлиникаИсходная, КодПробы);
					КонецЕсли;
				Иначе
					АнализНайден = НайтиИЗаполнитьПоляАнализа(АнализыПоНоменклатуре, Отбор, ИД, КлиникаИсходная, КодПробы);
				КонецЕсли;
				
				Если Не АнализНайден Тогда
					ИД = Новый УникальныйИдентификатор;
					
					Если	ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеАнализа 
						ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеРезультатовОтСтороннейЛаборатории
						ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ВозвратПробИзСтороннейЛаборатории 
						Тогда
						КлиникаИсходная = Получатель;
					Иначе
						КлиникаИсходная = Филиал;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;

			Если ЗначениеЗаполнено(ТекСтрокаИсследования.ИД) Тогда
				Движение.ИД = ТекСтрокаИсследования.ИД;
			Иначе
				Движение.ИД = ИД;
			КонецЕсли;
			
			Движение.КодПробы = ?(ПустаяСтрока(ТекСтрокаИсследования.КодПробы) И КодПробы <> Неопределено, КодПробы, ТекСтрокаИсследования.КодПробы);
			Движение.КлиникаИсходная = КлиникаИсходная;
			
			Если	ВидОперации = Перечисления.ВидыОперацийАнализов.ОтметкаВыполненияИсследования 
				ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеРезультатовОтСтороннейЛаборатории
				ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ВозвратПробИзСтороннейЛаборатории 
				ИЛИ ВидОперации = Перечисления.ВидыОперацийАнализов.ПолучениеАнализа
			Тогда
				Движение.Местонахождение = Филиал;
			Иначе
				Движение.Местонахождение = Получатель;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьИДИсследованияТЧКонтейнеры()
	
	Для Каждого Стр Из Контейнеры Цикл
		СтрИсследование = Исследования.Найти(Стр.КлючСтрокиИсследования, "КлючСтроки");
		Если СтрИсследование <> Неопределено Тогда
			Стр.ИдИсследования = Новый УникальныйИдентификатор(СтрИсследование.ИД);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьДанныеАнализовПоДокументу()
	
	// Поиск ИД анализов по КодПробы и по паре Номенклатура + Клиент.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	АнализыДокумента.Номенклатура,
	               |	АнализыДокумента.Клиент
	               |ПОМЕСТИТЬ АнализыДокумента
	               |ИЗ
	               |	&АнализыДокумента КАК АнализыДокумента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ИсследованияСрезПоследних.ИД
	               |ПОМЕСТИТЬ Завершенные
	               |ИЗ
	               |	РегистрСведений.ЛабораторныеИсследования.СрезПоследних(, КодПробы В (&КодПробы)) КАК ИсследованияСрезПоследних
	               |ГДЕ
	               |	ИсследованияСрезПоследних.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияИсследований.Обработан)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Исследования.ИД,
	               |	Исследования.Местонахождение,
	               |	Исследования.КлиникаИсходная,
	               |	Исследования.КодПробы,
	               |	Исследования.Клиент,
	               |	Исследования.Лаборатория,
	               |	Исследования.Номенклатура
	               |ПОМЕСТИТЬ ДанныеАнализовДокумента
	               |ИЗ
	               |	РегистрСведений.ЛабораторныеИсследования.СрезПервых(
	               |			,
	               |			Статус <> ЗНАЧЕНИЕ(Перечисление.СостоянияИсследований.Обработан)
	               |					И КодПробы В (&КодПробы)
	               |				ИЛИ (Номенклатура, Клиент) В
	               |						(ВЫБРАТЬ
	               |							АнализыДокумента.Номенклатура,
	               |							АнализыДокумента.Клиент
	               |						ИЗ
	               |							АнализыДокумента КАК АнализыДокумента)
	               |					И НЕ ИД В
	               |							(ВЫБРАТЬ
	               |								ЗАВЕРШЕННЫЕ.ИД
	               |							ИЗ
	               |								ЗАВЕРШЕННЫЕ)) КАК Исследования
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеАнализовДокумента.ИД,
	               |	ДанныеАнализовДокумента.Местонахождение,
	               |	ДанныеАнализовДокумента.КлиникаИсходная,
	               |	ДанныеАнализовДокумента.КодПробы,
	               |	ДанныеАнализовДокумента.Клиент,
	               |	ДанныеАнализовДокумента.Лаборатория,
	               |	ДанныеАнализовДокумента.Номенклатура
	               |ИЗ
	               |	ДанныеАнализовДокумента КАК ДанныеАнализовДокумента
	               |ГДЕ
	               |	ДанныеАнализовДокумента.КодПробы В(&КодПробы)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ДанныеАнализовДокумента.ИД,
	               |	ДанныеАнализовДокумента.Местонахождение,
	               |	ДанныеАнализовДокумента.КлиникаИсходная,
	               |	ДанныеАнализовДокумента.КодПробы,
	               |	ДанныеАнализовДокумента.Клиент,
	               |	ДанныеАнализовДокумента.Лаборатория,
	               |	ДанныеАнализовДокумента.Номенклатура
	               |ИЗ
	               |	ДанныеАнализовДокумента КАК ДанныеАнализовДокумента
	               |ГДЕ
	               |	(ДанныеАнализовДокумента.Номенклатура, ДанныеАнализовДокумента.Клиент) В
	               |			(ВЫБРАТЬ
	               |				АнализыДокумента.Номенклатура,
	               |				АнализыДокумента.Клиент
	               |			ИЗ
	               |				АнализыДокумента КАК АнализыДокумента)";
	
	Запрос.УстановитьПараметр("КодПробы", Исследования.ВыгрузитьКолонку("КодПробы"));
	Запрос.УстановитьПараметр("АнализыДокумента", Исследования.Выгрузить(,"Номенклатура, Клиент"));
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеАнализов = Новый Структура;
	ДанныеАнализов.Вставить("АнализыПоКодамПроб", РезультатыЗапроса[3].Выгрузить());
	ДанныеАнализов.Вставить("АнализыПоНоменклатуре", РезультатыЗапроса[4].Выгрузить());
	
	Возврат ДанныеАнализов;
	
КонецФункции

Функция НайтиИЗаполнитьПоляАнализа(ТаблицаДанных, Отбор, ИД, КлиникаИсходная, КодПробы)
	
	Результат = Ложь;
	
	мсСтр = ТаблицаДанных.НайтиСтроки(Отбор);
	Если мсСтр.Количество() <> 0 Тогда
		ИД = мсСтр[0].ИД;
		КлиникаИсходная = мсСтр[0].КлиникаИсходная;
		КодПробы = мсСтр[0].КодПробы;
		
		Результат = Истина;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти