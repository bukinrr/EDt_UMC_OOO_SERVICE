#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	// Регистр ЛимитыСтрахования
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЛимитыСтрахования.Период,
	               |	ЛимитыСтрахования.НомерСтроки,
	               |	ЛимитыСтрахования.ВидПолиса,
	               |	ЛимитыСтрахования.ДатаОкончания,
	               |	ЛимитыСтрахования.Сумма,
				   |	ЛимитыСтрахования.Регистратор
	               |ИЗ
	               |	РегистрСведений.ЛимитыСтрахования КАК ЛимитыСтрахования
	               |ГДЕ
	               |	ЛимитыСтрахования.Активность
	               |	И ЛимитыСтрахования.ВидПолиса = &ВидПолиса
	               |	И ЛимитыСтрахования.Период <= &ДатаОкончания
	               |	И ЛимитыСтрахования.ДатаОкончания >= &ДатаНачала
	               |	И ЛимитыСтрахования.Регистратор <> &Регистратор";
		

	Запрос.УстановитьПараметр("ДатаНачала",		НачалоДня(НачалоДействия));
	Запрос.УстановитьПараметр("ДатаОкончания",	КонецДня(ОкончаниеДействия));
	Запрос.УстановитьПараметр("ВидПолиса",		ВидПолиса);
	Запрос.УстановитьПараметр("Регистратор",	Ссылка);
	
	Результат = Запрос.Выполнить();
	Выгрузка = Результат.Выгрузить();
	
	Если Выгрузка.Количество() <> 0 Тогда
		ИскомаяСтрока = Выгрузка[0];
	КонецЕсли;
	
	Если Выгрузка.Количество() = 0 Тогда
		Движения.ЛимитыСтрахования.Записывать = Истина;
		Движение = Движения.ЛимитыСтрахования.Добавить();
		Движение.Период = НачалоДня(НачалоДействия);
		Движение.ВидПолиса = ВидПолиса;
		Движение.ДатаОкончания = КонецДня(ОкончаниеДействия);
		Движение.Сумма = Сумма;		
	Иначе
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Устанавливаемый лимит пересекается с другим: " + ИскомаяСтрока.Регистратор);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти
