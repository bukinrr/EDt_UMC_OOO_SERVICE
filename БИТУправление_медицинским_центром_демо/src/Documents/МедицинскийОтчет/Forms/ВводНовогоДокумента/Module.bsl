
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИсточникОтчета	 = Параметры.ИсточникОтчета;
	ИсточникФормаИмя = Параметры.ИсточникФормаИмя;
	ОтчетОбъект = МедицинскаяОтчетностьВызовСервера.ОтчетОбъект(ИсточникОтчета);
	ЗначениеВДанныеФормы(ОтчетОбъект.ТаблицаФормОтчета(), мТаблицаФормОтчета);
	
	// В отчет идет организация или филиал
	Попытка
		ИспользоватьОрганизацию = ОтчетОбъект.ИспользоватьОтборПоОрганизации();		
	Исключение
		ИспользоватьОрганизацию = Ложь;	
	КонецПопытки;
	
	Элементы.ГруппаФилиал.Видимость = Не ИспользоватьОрганизацию;
	Элементы.ГруппаОрганизация.Видимость = ИспользоватьОрганизацию;	
	
	ФилиалПоУмолчанию = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
		
	Филиал              	 = Параметры.Филиал;
	мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	мПериодичность           = Параметры.мПериодичность;
	мСкопированаФорма        = Параметры.мСкопированаФорма;
	мСохраненныйДок          = Параметры.мСохраненныйДок;
	
	// Организация отчета
	Если Не ЗначениеЗаполнено(Филиал) И ЗначениеЗаполнено(ФилиалПоУмолчанию) Тогда
		Филиал = ФилиалПоУмолчанию;
	КонецЕсли;
	
	Если Не ПараметрыСеанса.УчетПоНесколькимФилиалам Тогда
		Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
		Элементы.НадписьФилиал.Видимость  =  Ложь;
	КонецЕсли;
	
	Если ИспользоватьОрганизацию Тогда
		Организация = Филиал.Организация;
		Филиал = Неопределено; 
	КонецЕсли;
	
	Элементы.ПолеРедакцияФормы.Видимость = НЕ (мТаблицаФормОтчета.Количество() > 1);
	
	// Периодичность отчета
	
	Если ТипЗнч(Параметры.РазрешеннаяПериодичность) = Тип("Массив") Тогда
		РазрешеннаяПериодичность.ЗагрузитьЗначения(Параметры.РазрешеннаяПериодичность);
	КонецЕсли;
	
	Для Каждого РазрешенныйПериод Из РазрешеннаяПериодичность Цикл
		Элементы.ПолеВыбораПериодичность.СписокВыбора.Добавить(РазрешенныйПериод.Значение);
	КонецЦикла;
	Элементы.ПолеВыбораПериодичность.Видимость = Элементы.ПолеВыбораПериодичность.СписокВыбора.Количество() > 1;

	ПеречислениеПериодичность = ДопСерверныеФункцииПовтИсп.ПолучитьСтруктуруДляПеречисления("Периодичность");
	
	ПеречислениеПериодичностьМесяц = Перечисления.Периодичность.Год;
	
	Если Не ЗначениеЗаполнено(мПериодичность)
		Или РазрешеннаяПериодичность.НайтиПоЗначению(мПериодичность) = Неопределено
	Тогда
		Если ЗначениеЗаполнено(Параметры.ОсновнаяПериодичность) Тогда
			мПериодичность = Параметры.ОсновнаяПериодичность;
		ИначеЕсли РазрешеннаяПериодичность.Количество() <> 0 Тогда
			мПериодичность = РазрешеннаяПериодичность[0].Значение;
		Иначе
			// Неправильные параметры открытия формы
			мПериодичность = ПеречислениеПериодичность.Год;
		КонецЕсли;
	КонецЕсли;
	
	// Период по умолчанию для отчета исходя из основной периодичности и текущей даты.
	Если НЕ ЗначениеЗаполнено(мДатаНачалаПериодаОтчета) И НЕ ЗначениеЗаполнено(мДатаКонцаПериодаОтчета) Тогда
		Если мПериодичность = ПеречислениеПериодичность.День Тогда
			мДатаКонцаПериодаОтчета  = КонецДня(ТекущаяДата() - 86400);
			мДатаНачалаПериодаОтчета = НачалоДня(мДатаКонцаПериодаОтчета);
		ИначеЕсли мПериодичность = ПеречислениеПериодичность.Месяц Тогда
			мДатаКонцаПериодаОтчета  = КонецМесяца(ДобавитьМесяц(ТекущаяДатаСеанса(), -1));
			мДатаНачалаПериодаОтчета = НачалоМесяца(мДатаКонцаПериодаОтчета);
		Иначе
			мДатаКонцаПериодаОтчета  = КонецКвартала(ДобавитьМесяц(КонецКвартала(ТекущаяДатаСеанса()), -3));
			мДатаНачалаПериодаОтчета = НачалоГода(мДатаКонцаПериодаОтчета);
		КонецЕсли;
	КонецЕсли;
	
	ПолеВыбораПериодичность = мПериодичность;
	
	// Для отображения полугодия требуется другая ширина поля.
	Если РазрешеннаяПериодичность.НайтиПоЗначению(ПеречислениеПериодичность.Полугодие) <> Неопределено Тогда
		Элементы.ПолеВыбораПериодичностиПоказаПериода.Ширина = 24;
	ИначеЕсли РазрешеннаяПериодичность.НайтиПоЗначению(ПеречислениеПериодичность.Квартал) <> Неопределено
		Или РазрешеннаяПериодичность.НайтиПоЗначению(ПеречислениеПериодичность.День) <> Неопределено
	Тогда
		Элементы.ПолеВыбораПериодичностиПоказаПериода.Ширина = 14;
	ИначеЕсли РазрешеннаяПериодичность.НайтиПоЗначению(ПеречислениеПериодичность.Месяц) <> Неопределено Тогда
		Элементы.ПолеВыбораПериодичностиПоказаПериода.Ширина = 12;
	КонецЕсли;
	
	ИзменитьПериод(ЭтаФорма, 0);
	
	УстановитьЗаголовокЭлементаПериод(ОтчетОбъект);
	УстановитьЗаголовокФормы(ОтчетОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = "Активизировать" Тогда
	
		Если ИмяСобытия = ЭтаФорма.Заголовок Тогда
		
			ЭтаФорма.Активизировать();
		
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПолеРедакцияФормыПриИзменении(Элемент)
	
	СтрРедакцияФормы = ПолеРедакцияФормы;
	// Ищем в таблице мТаблицаФормОтчета для определения выбранной формы отчета.
	ЗаписьПоиска = Новый Структура;
	ЗаписьПоиска.Вставить("РедакцияФормы",СтрРедакцияФормы);
	МассивСтрок = мТаблицаФормОтчета.НайтиСтроки(ЗаписьПоиска);	
	
	Если МассивСтрок.Количество() > 0 Тогда
		
	    ВыбраннаяФорма = МассивСтрок[0];
		// Присваиваем.
	    мВыбраннаяФорма		= ВыбраннаяФорма.ФормаОтчета;
		ОписаниеНормативДок	= ВыбраннаяФорма.ОписаниеОтчета;
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьПредыдущийПериод(Команда)
	
	ИзменитьПериод(ЭтаФорма, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСледующийПериод(Команда)
	
	ИзменитьПериод(ЭтаФорма, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВыбораПериодичностьПриИзменении(Элемент)
	
	ИзменитьПериод(ЭтаФорма, 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуОтчета(Команда)
	
	Если мСкопированаФорма <> Неопределено Тогда
		Если мВыбраннаяФорма <> мСкопированаФорма Тогда
			
			ПоказатьПредупреждение(,НСтр("ru='Форма отчета изменилась, копирование невозможно!'"));
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	ПолеОтбораФилиалОрганизация = ?(ИспользоватьОрганизацию, "Организация", "Филиал");	
	Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ПолеОтбораФилиалОрганизация]) Тогда
		
		Сообщение = Новый СообщениеПользователю;
		
		Текст = ?(ИспользоватьОрганизацию, МедицинскаяОтчетностьКлиент.ОсновнаяФормаОрганизацияНеЗаполненаВывестиТекст(), 
				  МедицинскаяОтчетностьКлиент.ОсновнаяФормаФилиалНеЗаполненВывестиТекст()); 
		
		Сообщение.Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='%1'"), Текст);		
		Сообщение.Сообщить();
		
		Возврат;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("мДатаНачалаПериодаОтчета",	мДатаНачалаПериодаОтчета);
	ПараметрыФормы.Вставить("мСохраненныйДок",			мСохраненныйДок);
	ПараметрыФормы.Вставить("мСкопированаФорма",		мСкопированаФорма);
	ПараметрыФормы.Вставить("мДатаКонцаПериодаОтчета",	мДатаКонцаПериодаОтчета);
	ПараметрыФормы.Вставить("мПериодичность",			мПериодичность);
	ПараметрыФормы.Вставить("ПутьКОтчету",				Параметры.ПутьКФормамОтчета);
	ПараметрыФормы.Вставить("мВыбраннаяФорма", 			мВыбраннаяФорма);
	ПараметрыФормы.Вставить("Филиал",					Филиал);	
	ПараметрыФормы.Вставить("Организация",				Организация);	
	
	//ИмяФормыОтчета = Параметры.ПутьКФормамОтчета + ".Форма." + мВыбраннаяФорма;
	ОткрытьФорму("Документ.МедицинскийОтчет.Форма.ФормаОтчета", ПараметрыФормы, , Истина);
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ПоказатьПериод(Форма)
	
	ОбработкаПериодичностьОтчета(Форма);
	
	КоличествоФорм = МедицинскаяОтчетностьКлиентСервер.КоличествоФормСоответствующихВыбранномуПериоду(Форма);
	Если КоличествоФорм >= 1 Тогда
		
		Форма.Элементы.ПолеРедакцияФормы.Видимость = КоличествоФорм > 1;
		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Истина;
			
	Иначе
		
		Форма.Элементы.ПолеРедакцияФормы.Видимость	 = Ложь;
		Форма.Элементы.ОткрытьФормуОтчета.Доступность = Ложь;
		
	КонецЕсли;
	
	Форма.Элементы.ОткрытьФормуОтчета.КнопкаПоУмолчанию = Форма.Элементы.ОткрытьФормуОтчета.Доступность;
	
	МедицинскаяОтчетностьКлиентСервер.ВыборФормыМедицинскогоОтчетаПоУмолчанию(Форма);
	
	// В РезультирующаяТаблица - действующие на выбранный период формы.
	// Заполним список выбора форм отчетности.
	Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Очистить();
	
	Для Каждого ЭлФорма Из Форма.РезультирующаяТаблица Цикл
		Форма.Элементы.ПолеРедакцияФормы.СписокВыбора.Добавить(ЭлФорма.РедакцияФормы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПериод(Форма, Шаг)
	
	Периодичность = Форма.ПолеВыбораПериодичность;
	ПеречислениеПериодичность = Форма.ПеречислениеПериодичность;
	
	// Изменение даты конца на шаг по периодичности.
	Если Периодичность = ПеречислениеПериодичность.Год Тогда
		Форма.мДатаКонцаПериодаОтчета = ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг*12);
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Полугодие Тогда
		Форма.мДатаКонцаПериодаОтчета = ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг*6);
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Квартал Тогда
		Форма.мДатаКонцаПериодаОтчета = ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг*3);
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Месяц Тогда
		Форма.мДатаКонцаПериодаОтчета = ДобавитьМесяц(Форма.мДатаКонцаПериодаОтчета, Шаг*1);
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Неделя Тогда
		Форма.мДатаКонцаПериодаОтчета = Форма.мДатаКонцаПериодаОтчета + Шаг*86400 * 7;
	ИначеЕсли Периодичность = ПеречислениеПериодичность.День Тогда
		Форма.мДатаКонцаПериодаОтчета = Форма.мДатаКонцаПериодаОтчета + Шаг*86400;
	КонецЕсли;
	
	Форма.мДатаНачалаПериодаОтчета = Форма.мДатаКонцаПериодаОтчета;
	ПривестиДатыПериодаКПериодичности(Форма, Форма.мДатаНачалаПериодаОтчета, Форма.мДатаКонцаПериодаОтчета, Форма.мДатаКонцаПериодаОтчета, Форма.мДатаКонцаПериодаОтчета);
	
	ПоказатьПериод(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбработкаПериодичностьОтчета(Форма)
		
	СтрПериодОтчета = ПредставлениеПериода(Форма.мДатаНачалаПериодаОтчета, Форма.мДатаКонцаПериодаОтчета, "ФП = Истина");
	
	Форма.ПолеВыбораПериодичностиПоказаПериода = СтрПериодОтчета;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПривестиДатыПериодаКПериодичности(Форма, ДатаНачалаПриемник, ДатаКонцаПриемник, ДатаНачала, ДатаКонца)
	
	Периодичность = Форма.ПолеВыбораПериодичность;
	ПеречислениеПериодичность = Форма.ПеречислениеПериодичность;
	
	Если Периодичность = ПеречислениеПериодичность.Год Тогда
		
		ДатаКонцаПриемник  = КонецГода(ДатаКонца);
		ДатаНачалаПриемник = НачалоГода(ДатаНачала);
		
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Полугодие Тогда
		
		ДатаКонцаПриемник  = ОбщегоНазначения.ПолучитьКонецПолугодия(ДатаКонца);
		ДатаНачалаПриемник = ОбщегоНазначения.ПолучитьНачалоПолугодия(ДатаНачала);
		
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Квартал Тогда
		
		ДатаКонцаПриемник  = КонецКвартала(ДатаКонца);
		ДатаНачалаПриемник = НачалоКвартала(ДатаНачала);
		
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Месяц Тогда
		
		ДатаКонцаПриемник  = КонецМесяца(ДатаКонца);
		ДатаНачалаПриемник = НачалоМесяца(ДатаНачала);
		
	ИначеЕсли Периодичность = ПеречислениеПериодичность.Неделя Тогда
		
		ДатаКонцаПриемник  = КонецНедели(ДатаКонца);
		ДатаНачалаПриемник = НачалоНедели(ДатаНачала);
		
	ИначеЕсли Периодичность = ПеречислениеПериодичность.День Тогда
		
		ДатаКонцаПриемник  = КонецДня(ДатаКонца);
		ДатаНачалаПриемник = НачалоДня(ДатаНачала);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокЭлементаПериод(ОтчетОбъект)
	Попытка
		Элементы.Период.Заголовок = ОтчетОбъект.ПолучитьАльтернативноеИмяПериода();
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы(ОтчетОбъект) 
	
	Попытка
		ЭтаФорма.Заголовок = ОтчетОбъект.ПолучитьЗаголовокФормы();
	Исключение
	КонецПопытки;	
	
КонецПроцедуры

#КонецОбласти