#Область РазделОписанияПеременных

&НаКлиенте
Перем ВыполняетсяЗакрытиеФормы; // Флаг для отключения оповещения при закрытии формы.

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ЭтоРежимВыбора", ЭтоРежимВыбора);
	
	// Инициализируем цвета
	Желтый	= Новый Цвет(252, 225, 80);
	Серый	= Новый Цвет(241, 241, 241);
	Черный	= Новый Цвет(0, 0, 0);
	
	// Организация по умолчанию
	Организация = Неопределено;
	
	Если Параметры.Свойство("Организация") Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = МедицинскаяОтчетность.ПолучитьОрганизациюПоУмолчанию();
	КонецЕсли;
	
	СохраненныеПользовательскиеНастройкиОтчетов = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "ФормаОтчетность_ПользовательскиеНастройкиОтчетов");
	Если ТипЗнч(СохраненныеПользовательскиеНастройкиОтчетов) = Тип("ПользовательскиеНастройкиКомпоновкиДанных") Тогда
		ВостановитьНастройкиОтборовИСортировкиОтчетов(ЭтаФорма, СохраненныеПользовательскиеНастройкиОтчетов);
	КонецЕсли;
	
	// Отбор на форме по видам отчетности
	Если Параметры.Свойство("ОтборПоДокументации") Тогда
		ВыбранныеОтчеты = Новый Массив;	
		МассивОтчетов = СтрРазделить(Параметры.ОтборПоДокументации, ",", Ложь);
		Для Каждого Отчет Из МассивОтчетов Цикл
			ВыбранныеОтчеты.Добавить(СокрЛП(Отчет));
		КонецЦикла;
	Иначе
		ВыбранныеОтчеты = ХранилищеНастроекДанныхФорм.Загрузить(ЭтаФорма.ИмяФормы, "ФормаОтчетность_МассивИсточниковОтчетов");
		Если ТипЗнч(ВыбранныеОтчеты) <> Тип("Массив") Тогда
			ВыбранныеОтчеты = ПолучитьСписокМедицинскихОтчетов().ВыгрузитьЗначения();
		КонецЕсли;
	КонецЕсли;
	
	ЭтаФорма.Отчеты.Параметры.УстановитьЗначениеПараметра("ИсточникиОтчетов", ВыбранныеОтчеты);
	ЗаполнитьСписокИсточниковОтчетов(ВыбранныеОтчеты, Истина);
	Элементы.ОтчетыПоказатьОтбор.Пометка = ВыбранныеОтчеты.Количество() <> ВидыОтчетности.Количество();
	Элементы.ОтборВидыОтчетности.Видимость = Элементы.ОтчетыПоказатьОтбор.Пометка;
	
	МедицинскаяОтчетность.ФормаМедицинскойОтчетности_ПриСозданииНаСервере(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии()
	
	#Если ВебКлиент Тогда 
		ЭтоВебКлиент = Истина;
	#КонецЕсли
	
	Если ЗначениеЗаполнено(СсылкаВКлюче)Тогда
		Элементы.Отчеты.ТекущаяСтрока = СсылкаВКлюче;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещенияПредварительная(Результат, ПараметрыОповещения) Экспорт
	
	ОбработкаОповещения(
		ПараметрыОповещения.ИмяСобытия, 
		ПараметрыОповещения.Параметр, 
		ПараметрыОповещения.Источник);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ЭтоРежимВыбора Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыполняетсяЗакрытиеФормы = Истина Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) <> Тип("ФормаКлиентскогоПриложения")
		И (СтрНайти(ИмяСобытия, "Запись_") > 0 
			Или ИмяСобытия = "Изменение пометки удаления объекта"
			Или ИмяСобытия = "Позиционирование в списке отчетов")
	Тогда
		СсылкаВКлюче = Неопределено;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Параметр, "Ссылка") Тогда
			СсылкаВКлюче = Параметр.Ссылка;
		ИначеЕсли Параметр = Неопределено Тогда
			СсылкаВКлюче = Источник;
		КонецЕсли;
		
		Элементы.Отчеты.ТекущаяСтрока = СсылкаВКлюче;		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	// Признак для отключения обработки оповещения при закрытии формы.
	ВыполняетсяЗакрытиеФормы = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ОтчетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(,ТекущиеДанные.МедицинскийОтчет);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;
		
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	
	СтандартнаяОбработка = Ложь;

КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		// Копирование не предполагается.
	Иначе
		
		СоздатьОтчет();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
	ТекущиеДанные = Элементы.Отчеты.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Ссылка = ТекущиеДанные.МедицинскийОтчет;
		ПоказатьЗначение(,Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ПометитьНаУдалениеОбъект(Элемент);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтборВидыОтчетностиПометкаПриИзмененииНаСервере(ИмяФормы, СписокВыбранныхОтчетов)
	
	ХранилищеНастроекДанныхФорм.Сохранить(ИмяФормы, "ФормаОтчетность_МассивИсточниковОтчетов", СписокВыбранныхОтчетов,,ИмяПользователя());
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидыОтчетностиПометкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ОтборВидыОтчетности.ТекущиеДанные;
	
	ВыбранныеОтчеты = ПолучитьСписокВыбранныхОтчетов();
		
	ОтборВидыОтчетностиПометкаПриИзмененииНаСервере(ЭтаФорма.ИмяФормы, ВыбранныеОтчеты);
	Отчеты.Параметры.УстановитьЗначениеПараметра("ИсточникиОтчетов", ВыбранныеОтчеты);	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьДокумент(Команда)
	
	ТекущиеДанные = Элементы.Отчеты.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного документа'"));
		
	Иначе
		
		Ссылка = ТекущиеДанные.МедицинскийОтчет;
		Закрыть(Ссылка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Создать(Команда)
	
	СоздатьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтчет(Знач ПараметрыФормы = Неопределено)
	
	ФормаОтчетаОткрыта = Ложь;
	Если ПараметрыФормы = Неопределено Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Организация", Организация);
		ПараметрыФормы.Вставить("ПредставлениеВидаОтчета", "");
		ПараметрыФормы.Вставить("ИмяФормы","");
	Иначе
		ОткрытьФорму(ПараметрыФормы.ИмяФормы, ПараметрыФормы, ЭтаФорма);
		ФормаОтчетаОткрыта = Истина;
	КонецЕсли;
	
	Если ПараметрыФормы.ИмяФормы <> "" Тогда
		
		// Сначала попробуем найти его среди открытых стартовых форм.
		// Необходимо для предотвращения
		// открытия нескольких стартовых форм одного отчета.
		НайденоОкно = Ложь;
		МедицинскаяОтчетностьКлиент.ВебКлиентНайтиАктивизироватьОкно(ПараметрыФормы.ИмяФормы, ЭтаФорма, НайденоОкно);
		
		Если НайденоОкно <> Неопределено Тогда
			Если НайденоОкно Тогда
			
				Возврат;
			
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли; 
	
	ЭтаФорма.ПараметрыВыбораФормыСоздания = Неопределено;
	ОписаниеОповещенияОЗакрытииФормыСозданияОтчета = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияСозданияОтчета", ЭтотОбъект);
	Если НЕ ФормаОтчетаОткрыта Тогда
		ОткрытьФорму("Обработка.ОбщиеОбъектыМедОтчетности.Форма.ФормаСозданияОтчета", ПараметрыФормы, ЭтаФорма,,,, 
					ОписаниеОповещенияОЗакрытииФормыСозданияОтчета, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;			
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(Команда)
	
	ТекущиеДанные = Элементы.Отчеты.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		Ссылка = ТекущиеДанные.МедицинскийОтчет;
		ОписаниеОтчета = ОписаниеДокументаОтчетности(Ссылка);
	
		ПечатьДокументаОтчетности(Ссылка, ТекущиеДанные.НаименованиеОтчета);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияСозданияОтчета(Параметр  = Неопределено, ДопПараметр = Неопределено) Экспорт

	Если ЭтаФорма.ПараметрыВыбораФормыСоздания = Неопределено Тогда
		Возврат;	
	КонецЕсли; 
	
	СоздатьОтчет(ЭтаФорма.ПараметрыВыбораФормыСоздания);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьНазначаемуюКоманду(Команда)
	
	МедицинскаяОтчетностьКлиентПереопределяемый.ФормаМедицинскойОтчетности_ВыполнитьНазначаемуюКомандуНаКлиенте(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьПометки(Команда)
	
	Если Команда.Имя = "ВыбратьВсе" Тогда
		УстановитьПометки(ВидыОтчетности, Истина);
	Иначе
		УстановитьПометки(ВидыОтчетности, Ложь);
	КонецЕсли;
	ВыбранныеОтчеты = ПолучитьСписокВыбранныхОтчетов();
	ОтборВидыОтчетностиПометкаПриИзмененииНаСервере(ЭтаФорма.ИмяФормы, ВыбранныеОтчеты);
	Отчеты.Параметры.УстановитьЗначениеПараметра("ИсточникиОтчетов", ВыбранныеОтчеты);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтбор(Команда)
	Элементы.ОтчетыПоказатьОтбор.Пометка = Не Элементы.ОтчетыПоказатьОтбор.Пометка;
	Элементы.ОтборВидыОтчетности.Видимость = Элементы.ОтчетыПоказатьОтбор.Пометка;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СправочникМедицинскихОтчетовНажатие(Команда)
	
	ОткрытьФорму("Справочник.МедицинскиеОтчеты.Форма.ФормаСписка");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВостановитьНастройкиОтборовИСортировкиОтчетов(Форма, СохраненныеПользовательскиеНастройки)
	
	Для Каждого ЭлементПользовательскойНастройки Из СохраненныеПользовательскиеНастройки.Элементы Цикл
		Если ТипЗнч(ЭлементПользовательскойНастройки) = Тип("ПорядокКомпоновкиДанных") Тогда
			ЭлементПользовательскойНастройки.ИдентификаторПользовательскойНастройки =
				Форма.Отчеты.КомпоновщикНастроек.Настройки.Порядок.ИдентификаторПользовательскойНастройки;
		КонецЕсли;
	КонецЦикла;
	
	Форма.Отчеты.КомпоновщикНастроек.ЗагрузитьПользовательскиеНастройки(СохраненныеПользовательскиеНастройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдалениеОбъект(Таблица)
	
	ТекущиеДанные = Таблица.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Таблица = Элементы.Отчеты Тогда 
		Ссылка = ТекущиеДанные.МедицинскийОтчет;
	Иначе
		Ссылка = ТекущиеДанные.Ссылка;
	КонецЕсли;
	
	ПометитьНаУдалениеОбъектНаСервере(Ссылка);
	
	// Обновление списка "точечно"
	ПараметрОповещения = Новый Структура(); 
	ПараметрОповещения.Вставить("Ссылка", Ссылка);
	Оповестить("Изменение пометки удаления объекта", ПараметрОповещения, Ссылка);

КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПометитьНаУдалениеОбъектНаСервере(Ссылка)
	
	УдаляемыйОбъект = Ссылка.ПолучитьОбъект();
	УдаляемыйОбъект.УстановитьПометкуУдаления(НЕ Ссылка.ПометкаУдаления);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьДокументаОтчетности(Ссылка, Наименование)
	
	ОтчетыНаПечать = Новый СписокЗначений;
	ОтчетыНаПечать.Добавить(Ссылка);
	
	МедицинскаяОтчетностьКлиент.НапечататьОтчеты(ОтчетыНаПечать, "ПоказатьБланк");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОписаниеДокументаОтчетности(ДокументРегОтчет)
	
	ОписаниеМедОтч = Новый Структура;
	
	Если ТипЗнч(ДокументРегОтчет) = Тип("ДокументСсылка.МедицинскийОтчет") Тогда
	
		ОбъектДокОтч = ДокументРегОтчет.ПолучитьОбъект();
		
		ОписаниеМедОтч.Вставить("Организация",             ОбъектДокОтч.Организация);
		ОписаниеМедОтч.Вставить("ДатаНачалаПериодаОтчета", ОбъектДокОтч.ДатаНачала);
		ОписаниеМедОтч.Вставить("ДатаКонцаПериодаОтчета",  ОбъектДокОтч.ДатаОкончания);
		ОписаниеМедОтч.Вставить("НомерКорректировки",      ОбъектДокОтч.Вид);
		ОписаниеМедОтч.Вставить("ВыбраннаяФорма",          СокрЛП(ОбъектДокОтч.ВыбраннаяФорма));
		
		ОписаниеМедОтч.Вставить("ИсточникОтчета",	  СокрЛП(ОбъектДокОтч.ИсточникОтчета));
		ОписаниеМедОтч.Вставить("НаименованиеОтчета", СокрЛП(ОбъектДокОтч.НаименованиеОтчета));	
		
	КонецЕсли;
	
	Возврат ОписаниеМедОтч;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИмяФормыОбъектаПоУмолчанию(Ссылка)
	
	Возврат Ссылка.Метаданные().ПолноеИмя() + ".ФормаОбъекта";
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСписокМедицинскихОтчетов()
	
	СписокОтчетов = Новый СписокЗначений;
	
	ВидыМедОтчетов = Справочники.МедицинскиеОтчеты.Выбрать();
	
	Пока ВидыМедОтчетов.Следующий() Цикл
		СписокОтчетов.Добавить(ВидыМедОтчетов.ИсточникОтчета, ВидыМедОтчетов.Наименование + " (" + ВидыМедОтчетов.ИсточникОтчета + ")");
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Исключения", СписокОтчетов);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	МедицинскийОтчет.ИсточникОтчета КАК ИсточникОтчета,
	|	МедицинскийОтчет.НаименованиеОтчета КАК НаименованиеОтчета
	|ИЗ
	|	Документ.МедицинскийОтчет КАК МедицинскийОтчет
	|ГДЕ
	|	НЕ МедицинскийОтчет.ИсточникОтчета В (&Исключения)"
	;
	ВидыМедОтчетов = Запрос.Выполнить().Выбрать();
	Пока ВидыМедОтчетов.Следующий() Цикл
		Если СписокОтчетов.НайтиПоЗначению(ВидыМедОтчетов.ИсточникОтчета) = Неопределено Тогда
			СписокОтчетов.Добавить(ВидыМедОтчетов.ИсточникОтчета, ВидыМедОтчетов.Наименование + " (" + ВидыМедОтчетов.ИсточникОтчета + ")");
		КонецЕсли;
	КонецЦикла;
	
	СписокОтчетов.СортироватьПоПредставлению();
	Возврат СписокОтчетов;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСписокИсточниковОтчетов(ВыбранныеОтчеты, ПриСоздании = Ложь, ТолькоВыбранные = Ложь)
	
	ВидыМедОтчетов = ПолучитьСписокМедицинскихОтчетов();
	
	Для Каждого ИсточникОтчета Из ВидыМедОтчетов Цикл
		НоваяСтрока = ВидыОтчетности.Добавить();
		НоваяСтрока.Значение = ИсточникОтчета.Значение;
		НоваяСтрока.Представление = ИсточникОтчета.Представление;
	КонецЦикла;
	
	Если ВыбранныеОтчеты.Количество() = ВидыМедОтчетов.Количество() Тогда
		УстановитьПометки(ВидыОтчетности, Истина);	
	ИначеЕсли ВыбранныеОтчеты.Количество() = 0 Тогда
		УстановитьПометки(ВидыОтчетности, Ложь);	
	Иначе
		УстановитьПометки(ВидыОтчетности, ВыбранныеОтчеты); 			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьПометки(ДопустимыеОтчеты, Отметки)

	ОднаОтметка = ТипЗнч(Отметки) = Тип("Булево");
	
	Для Каждого Отчет Из ДопустимыеОтчеты Цикл
		Отчет.Пометка = ?(ОднаОтметка, Отметки, Отметки.Найти(Отчет.Значение) <> Неопределено);	
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокВыбранныхОтчетов()
	
	МассивВозврата = Новый Массив;
	
	Для Каждого Отчет Из ВидыОтчетности Цикл
		Если Отчет.Пометка Тогда
			МассивВозврата.Добавить(Отчет.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

#КонецОбласти
