#Область ПрограммныйИнтерфейс

Функция ПолучитьИменаКлючевыхРеквизитов() Экспорт
	
	// !ДанныеОбъекта - служебное имя реквизита, означающее, что процедура формирования строки значений полей полностью переопределена.		
	// !ХешФайлов - служебное имя реквизита, формирует строку хеша файлов по объекту
	
	МассивИмен = Новый Массив;
	
	МассивИмен.Добавить("!ДанныеОбъекта");
	
	Возврат МассивИмен;

КонецФункции

Функция ПодписываетсяЭП(ИсточникОтчета) Экспорт
	
	Попытка
		Возврат МедицинскаяОтчетность.МедОтчеты(ИсточникОтчета).ПодписываетсяЭП();
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция РолиДляПодписания(ИсточникОтчета) Экспорт
	
	Попытка
		Возврат МедицинскаяОтчетность.МедОтчеты(ИсточникОтчета).РолиДляПодписания();
	Исключение
		Возврат Новый Массив;
	КонецПопытки;
	
КонецФункции

Функция РольДоступнаТекущемуПользователю(МедицинскийОтчет, Роль) Экспорт
	
	Попытка
		Возврат МедицинскаяОтчетность.МедОтчеты(МедицинскийОтчет.ИсточникОтчета).РольДоступнаТекущемуПользователю(МедицинскийОтчет, Роль);
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
КонецФункции

Функция ПолучитьТабличныеДокументыОтчета(МедицинскийОтчет) Экспорт
	
	мТабДоки = Новый Массив;
	
	ИмяОтчета = МедицинскийОтчет.ИсточникОтчета;
	ДеревоСтраниц = МедицинскийОтчет.ДеревоНастройкиСтраниц.Получить();
	
	ДобавитьТабДокиПоСтрокам(ИмяОтчета, МедицинскийОтчет.ВыбраннаяФорма, МедицинскийОтчет.ДанныеОтчета.Получить().ПоказателиОтчета, ДеревоСтраниц.Строки, мТабДоки, "");
	
	Возврат мТабДоки;
	
КонецФункции

Процедура ДобавитьТабДокиПоСтрокам(ИмяОтчета, ВыбраннаяФорма, ПоказателиОтчета, КоллекцияСтрок, мТабДоки, Знач Префикс)
	
	Для Каждого СтрокаСтраницы Из КоллекцияСтрок Цикл
		ПрефиксСНомером = СтрШаблон("%1%2.", Префикс, КоллекцияСтрок.Индекс(СтрокаСтраницы) + 1);
		ТабДок = СформироватьТабличныйДокументПоРазделу(СтрокаСтраницы.ИмяСтраницы, Неопределено, ИмяОтчета, ВыбраннаяФорма, ПоказателиОтчета);
		мТабДоки.Добавить(Новый Структура("ТабДок, ИмяФайла", ТабДок, СтрШаблон("%1 %2", ПрефиксСНомером, СтрокаСтраницы.Представление)));
		ДобавитьТабДокиПоСтрокам(ИмяОтчета, ВыбраннаяФорма, ПоказателиОтчета, СтрокаСтраницы.Строки, мТабДоки, ПрефиксСНомером);
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьТабличныйДокументПоРазделу(ИмяТекРаздела, ОтчетОбъект, ИмяОтчета, НаименованиеФормыОтчета, СтруктураДанныхСтраниц) Экспорт
	
	Если ОтчетОбъект = Неопределено Тогда
		ОтчетОбъект = МедицинскаяОтчетностьВызовСервера.ОтчетФабрикаМакетов(ИмяОтчета);
	КонецЕсли;
	
	МакетСтраницы = ОтчетОбъект.ПолучитьМакет(НаименованиеФормыОтчета + "_" + ИмяТекРаздела);
	
	РаботаСМногострочнымиОбластями(МакетСтраницы, ИмяТекРаздела, СтруктураДанныхСтраниц);
	
	ТабДокРаздела = Новый ТабличныйДокумент;
	ТабДокРаздела.Очистить();
	ТабДокРаздела.Вывести(МакетСтраницы);
	
	Для Каждого ЭлСтруктуры Из СтруктураДанныхСтраниц[ИмяТекРаздела] Цикл
		Попытка
			ТабДокРаздела.Области[ЭлСтруктуры.Ключ].Значение = ЭлСтруктуры.Значение;
		Исключение КонецПопытки;
	КонецЦикла;
	
	Возврат ТабДокРаздела;
	
КонецФункции

Процедура РаботаСМногострочнымиОбластями(МакетСтраницы, ИмяТекРаздела, СтруктураДанныхСтраниц) Экспорт
	
	// Ищем в макете динамически изменяющиеся таблицы
	МногоСтрочныеОбласти = Новый Структура;
	Для Каждого Эл Из МакетСтраницы.Области Цикл
		ПозицияРазделителяДинамТаблицы = СтрНайти(Эл.Имя, "__");
		Если ПозицияРазделителяДинамТаблицы <> 0 Тогда
			ИмяОбластиТаблицы = Лев(Эл.Имя, ПозицияРазделителяДинамТаблицы - 1);
			Если Не МногоСтрочныеОбласти.Свойство(ИмяОбластиТаблицы) 
				И СтрНайти(НРег(Эл.Имя), "x", , ПозицияРазделителяДинамТаблицы + 2) <> 0
			Тогда
				МногоСтрочныеОбласти.Вставить(ИмяОбластиТаблицы, 0);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если МногоСтрочныеОбласти.Количество() <> 0 Тогда
		Для Каждого Эл Из СтруктураДанныхСтраниц[ИмяТекРаздела] Цикл
			ПозицияРазделителяДинамТаблицы = СтрНайти(Эл.Ключ, "__");
			Если ПозицияРазделителяДинамТаблицы <> 0 Тогда
				ИмяОбластиТаблицы = Лев(Эл.Ключ, ПозицияРазделителяДинамТаблицы - 1);
				Если МногоСтрочныеОбласти.Свойство(ИмяОбластиТаблицы) Тогда
					ПозицияРазделителяСтроки = СтрНайти(Эл.Ключ, "_", ,ПозицияРазделителяДинамТаблицы + 2);
					Если ПозицияРазделителяСтроки <> 0 Тогда
						ЧислоСтрокиСтрокой = Прав(Эл.Ключ, СтрДлина(Эл.Ключ) - ПозицияРазделителяСтроки);
						Попытка
							ЧислоСтроки = Число(ЧислоСтрокиСтрокой);
							Если МногоСтрочныеОбласти[ИмяОбластиТаблицы] < ЧислоСтроки Тогда
								МногоСтрочныеОбласти.Вставить(ИмяОбластиТаблицы, ЧислоСтроки);
							КонецЕсли;
						Исключение КонецПопытки;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Добавляем динамически строки
	Для Каждого Эл Из МногоСтрочныеОбласти Цикл
		КоличествоСтрок = Эл.Значение;
		Для Счетчик = 1 По КоличествоСтрок Цикл
			ТекущаяОбластьТабДок = МакетСтраницы.ПолучитьОбласть(Эл.Ключ);
			Для Каждого Область Из ТекущаяОбластьТабДок.Области Цикл
				Если Область.Имя <> Эл.Ключ Тогда
					НовоеИмя = СтрЗаменить(Область.Имя, "x", Строка(Счетчик));
					НовоеИмя = СтрЗаменить(НовоеИмя, "X", Строка(Счетчик));
					Область.Имя = НовоеИмя;
				Иначе
					Область.Имя = Область.Имя + Строка(Счетчик);
				КонецЕсли;
			КонецЦикла;
			СтараяОбласть = МакетСтраницы.Область(Эл.Ключ);
			НоваяОбласть = ТекущаяОбластьТабДок.Область("R1C1:" + "R" + ТекущаяОбластьТабДок.ВысотаТаблицы + "C" +ТекущаяОбластьТабДок.ШиринаТаблицы);
			МакетСтраницы.ВставитьОбласть(НоваяОбласть, СтараяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		КонецЦикла;
		
		МакетСтраницы.УдалитьОбласть(МакетСтраницы.Область(Эл.Ключ), ТипСмещенияТабличногоДокумента.ПоВертикали);
		Если КоличествоСтрок = 0 Тогда
			Попытка
				ИмяОбластиШапки = "Шапка" + Эл.Ключ;
				МакетСтраницы.УдалитьОбласть(МакетСтраницы.Область(ИмяОбластиШапки), ТипСмещенияТабличногоДокумента.ПоВертикали);
			Исключение КонецПопытки;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти