#Область РазделОписанияПеременных

&НаКлиенте
Перем ОплатыКонтрагентов1;

&НаКлиенте
Перем ОплатыКонтрагентов2;

#КонецОбласти

#Область ОбработчикиСобытийФормы

 &НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	
	НастроитьЭлементыФормы();
		
	// ОтчетныйГод гарантированное автозаполнение 
	Если Не ЗначениеЗаполнено(Объект.ОтчетныйГод) Тогда
		Если ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
			Объект.ОтчетныйГод = Год(Объект.НачалоПериода);
		Иначе
			Объект.ОтчетныйГод = Год(ТекущаяДата());
			Если Месяц(ТекущаяДата()) <= 3 Тогда
				Объект.ОтчетныйГод = Объект.ОтчетныйГод - 1;
			КонецЕсли;
			Объект.ОтчетныйГод = Макс(2024, Объект.ОтчетныйГод);
			Объект.НачалоПериода = Дата(Объект.ОтчетныйГод, 1, 1);
			Объект.КонецПериода = КонецГода(Объект.НачалоПериода);
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Не ЗначениеЗаполнено(Объект.ДатаВыдачи) Тогда
			Объект.ДатаВыдачи = Объект.Дата;
		КонецЕсли;
		
		Объект.КодУслуги = 0; // В форме списка отображается 1 по умолчанию. Для документа >=2024 это не актуально.
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ТекущийОбъект.ПометкаУдаления Тогда
		
		// Номер справки заполнен
		Если Не ЗначениеЗаполнено(ТекущийОбъект.НомерСправки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Номер справки не заполнен.",,"НомерСправки");
			Отказ = Истина;
		КонецЕсли;
		
		// Номер справки свободен
		СообщениеОшибки = НомерСправкиЗанят(ТекущийОбъект.ОтчетныйГод, ТекущийОбъект.Клиент, ТекущийОбъект.Налогоплательщик, ТекущийОбъект.ПациентЯвляетсяНалогоплательщиком, ТекущийОбъект.НомерСправки, ТекущийОбъект.Филиал, ТекущийОбъект.Ссылка);
		Если ЗначениеЗаполнено(СообщениеОшибки) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОшибки,,,,Отказ);
		КонецЕсли;
		
		Если Не Отказ Тогда
			// Номер коррекции не задан и подходит
			СообщениеОшибки = НомерКорректировкиКорректен(	ТекущийОбъект.ОтчетныйГод, ТекущийОбъект.Клиент, ТекущийОбъект.НомерСправки, 
															ТекущийОбъект.НомерКорректировки, ТекущийОбъект.Филиал, ТекущийОбъект.Ссылка);
			Если ЗначениеЗаполнено(СообщениеОшибки) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СообщениеОшибки,,,,Отказ);
			КонецЕсли;
		КонецЕсли;
		
		// Налогоплательщик указан
		Если  Не Объект.ПациентЯвляетсяНалогоплательщиком
			И Не ЗначениеЗаполнено(Объект.Налогоплательщик)
		Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не указано ФИО налогоплательщика.");
			Отказ = Истина;
		КонецЕсли;		
		
		// Проверка ИНН
		Если ЗначениеЗаполнено(Объект.ИНН)
			И СтрДлина(СокрЛП(Объект.ИНН)) <> 12
		Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ИНН должен быть из 12 цифр.");
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ не записан.");
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(ТекущийОбъект,,ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиДинамическиСоздаваемыхКоманд

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ВычестьОплатыКонтрагентов1(Команда)

	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НесколькоОплат", Ложь);
	ПараметрыФормы.Вставить("ОплатыКонтрагентов", ОплатыКонтрагентов1);
	ПараметрыФормы.Вставить("Сумма", Объект.Сумма);	
		
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.РаботаСОплатамиКонтрагентов",ПараметрыФормы,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВычестьОплатыКонтрагентов_Завершение",ЭтотОбъект, Новый Структура("КодУслуги", 1)), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВычестьОплатыКонтрагентов2(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НесколькоОплат", Ложь);
	ПараметрыФормы.Вставить("ОплатыКонтрагентов", ОплатыКонтрагентов2);
	ПараметрыФормы.Вставить("Сумма", Объект.СуммаПоКоду2);	
		
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.РаботаСОплатамиКонтрагентов",ПараметрыФормы,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВычестьОплатыКонтрагентов_Завершение",ЭтотОбъект, Новый Структура("КодУслуги", 2)), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНомераСправки(Команда)
	
	Если ЗначениеЗаполнено(Объект.Клиент)
		И ЗначениеЗаполнено(Объект.ОтчетныйГод)
	Тогда
		ДанныеСправки = ПолучитьНомераСправки(Объект.Ссылка, Объект.Клиент, СокрЛП(Объект.Налогоплательщик), Объект.ПациентЯвляетсяНалогоплательщиком, Объект.ОтчетныйГод, Объект.Филиал);
		ЗаполнитьЗначенияСвойств(Объект, ДанныеСправки);
	Иначе
		Текст = "Нужно заполнить поля:";
		Если Не ЗначениеЗаполнено(Объект.Клиент) Тогда
			ОбщегоНазначенияБИТКлиентСервер.КонкатенацияСтрок(Текст, " - пациент", Символы.ПС);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ОтчетныйГод) Тогда
			ОбщегоНазначенияБИТКлиентСервер.КонкатенацияСтрок(Текст, " - отчетный год", Символы.ПС);
		КонецЕсли;
		
		ПоказатьПредупреждение(,Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезаполнитьДанныеКлиента(Команда)
	
	ЗаполнитьДанныеНалогоплательщикаДаннымиКлиента();	
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПоПациенту(Команда)
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		ПараметрыСписка = Новый Структура("Отбор", Новый Структура("Клиент", Объект.Клиент));
		ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.ФормаСпискаПросмотр", ПараметрыСписка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСумму(Команда)
	
	ПараметрыФормы = Новый Структура("Клиент, ОтчетныйГод, Филиал, КодУслуги");
	ПараметрыФормы.Клиент = Объект.Клиент;
	ПараметрыФормы.ОтчетныйГод = Объект.ОтчетныйГод;
	ПараметрыФормы.Филиал = Объект.Филиал;
	ПараметрыФормы.КодУслуги = ?(Команда.Имя = "ЗаполнитьСумму1", 1, 2);
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьСумму_Завершение", ЭтотОбъект, Новый Структура("ПолеСуммы", ?(Команда.Имя = "ЗаполнитьСумму1", "Сумма", "СуммаПоКоду2")));
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.РасчетСуммыСправки",ПараметрыФормы,ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПациентЯвляетсяНалогоплательщикомПриИзменении(Элемент)
	
	Элементы.Налогоплательщик.Видимость = Не Объект.ПациентЯвляетсяНалогоплательщиком;
	Элементы.ПерезаполнитьДанныеИзКлиента.Видимость = Объект.ПациентЯвляетсяНалогоплательщиком;
	
	Если Объект.ПациентЯвляетсяНалогоплательщиком Тогда
		ЗаполнитьДанныеНалогоплательщикаДаннымиКлиента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалогоплательщикНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Клиенты.ФормаВыбора",Новый Структура("РежимВыбора", Истина),ЭтотОбъект,,,, Новый ОписаниеОповещения("НалогоплательщикЗавершениеВыбора", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)
	
	Если Объект.ДатаВыдачи < Дата(2024,1,1) Тогда
		ПоказатьПредупреждение(, "Для полного заполнения документа 
								 |с [Датой выдачи] до 01.01.2024
								 |нужно записать документ и переоткрыть");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура КлиентПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Клиент) Тогда
		Возврат;
	КонецЕсли;
	
	НастроитьПолеНалогоплательщика(Объект.Клиент, Элементы.Налогоплательщик); 
	
	Если Объект.ПациентЯвляетсяНалогоплательщиком Тогда
		ЗаполнитьДанныеНалогоплательщикаДаннымиКлиента();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ОтчетныйГод)
		И ЗначениеЗаполнено(Объект.НомерСправки)
	Тогда
		Ответ = Ждать ВопросАсинх("Обновить номер справки?", РежимДиалогаВопрос.ОКОтмена, 15, КодВозвратаДиалога.ОК);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			ДанныеСправки = ПолучитьНомераСправки(Объект.Ссылка, Объект.Клиент, СокрЛП(Объект.Налогоплательщик), Объект.ПациентЯвляетсяНалогоплательщиком, Объект.ОтчетныйГод, Объект.Филиал);
			ЗаполнитьЗначенияСвойств(Объект, ДанныеСправки);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НалогоплательщикОбработкаВыбора(Элемент, ВыбранноеЗначение, ДополнительныеДанные, СтандартнаяОбработка)
	
	НалогоплательщикЗавершениеВыбора(ВыбранноеЗначение, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Элементы.Налогоплательщик.Видимость = Не Объект.ПациентЯвляетсяНалогоплательщиком;
	Элементы.ПерезаполнитьДанныеИзКлиента.Видимость = Объект.ПациентЯвляетсяНалогоплательщиком;
	
	Элементы.ВычестьОплатыКонтрагентов1.Видимость = Ложь;
	Элементы.ВычестьОплатыКонтрагентов2.Видимость = Ложь;
	
	НастроитьПолеНалогоплательщика(Объект.Клиент, Элементы.Налогоплательщик);
	
КонецПроцедуры 

&НаКлиенте
Процедура НалогоплательщикЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	// Заполняем поля Налогоплательщик и ИНН
	Если Результат <> Неопределено Тогда
		Объект.Налогоплательщик = ОбщегоНазначения.ФИОФизЛица(Результат);
		ДанныеНалогоплательщика = ПолучитьДанныеКлиента(Результат, Объект.ДатаВыдачи);
		ЗаполнитьЗначенияСвойств(Объект, ДанныеНалогоплательщика);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПолеНалогоплательщика(Клиент, ПолеФормы)
	
	// Строго без СписокВыбора.ЗагрузитьЗначения
	РодственникиКлиента = ПолучитьРодственниковКлиента(Клиент);
	
	ПолеФормы.СписокВыбора.Очистить();
	Для Каждого Родственник Из РодственникиКлиента Цикл
		ПолеФормы.СписокВыбора.Добавить(Строка(Родственник));
	КонецЦикла;
	
	ПолеФормы.КнопкаВыпадающегоСписка = ПолеФормы.СписокВыбора.Количество() > 0;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьРодственниковКлиента(Клиент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СвязиМеждуКлиентами.Клиент2 КАК Клиент2
	               |ИЗ
	               |	РегистрСведений.СвязиМеждуКлиентами КАК СвязиМеждуКлиентами
	               |ГДЕ
	               |	СвязиМеждуКлиентами.Клиент = &Клиент";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РодственникиКлиента = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		РодственникиКлиента.Добавить(Выборка.Клиент2);	
	КонецЦикла;
	
	// Если нужно, добавляем законного представителя
	Если ЗначениеЗаполнено(Клиент.ЗаконныйПредставитель) Тогда
		Если ТипЗнч(Клиент.ЗаконныйПредставитель) = Тип("СправочникСсылка.Клиенты") Тогда
			Если РодственникиКлиента.Найти(Клиент.ЗаконныйПредставитель) = Неопределено Тогда
				РодственникиКлиента.Добавить(Клиент.ЗаконныйПредставитель);	
			КонецЕсли;
		Иначе
			РодственникиКлиента.Добавить(Клиент.ЗаконныйПредставитель);	
		КонецЕсли;
	КонецЕсли;
	
	Возврат РодственникиКлиента;
	
КонецФункции

&НаКлиенте
Процедура ОтчетныйГодПриИзменении(Элемент)
	
	ГодПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ГодПриИзменении()
	
	Если ЗначениеЗаполнено(Объект.ОтчетныйГод) Тогда
		Объект.НачалоПериода = Дата(Объект.ОтчетныйГод, 1, 1);
		Объект.КонецПериода = КонецГода(Объект.НачалоПериода);
	
		ЗаполнитьНомераСправки("");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВычестьОплатыКонтрагентов_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		
		КодУслуги = ДополнительныеПараметры.КодУслуги;
		ПолеСуммы = ?(КодУслуги = 2, "СуммаПоКоду2", "Сумма");
		
		Объект[ПолеСуммы] = Результат;
		Элементы["ВычестьОплатыКонтрагентов" + КодУслуги].Видимость = Ложь;		
		
		Если КодУслуги = 2 Тогда
			ОплатыКонтрагентов2 = Новый Массив;
		Иначе
			ОплатыКонтрагентов1 = Новый Массив;	
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьНомераСправки(Документ, Клиент, Налогоплательщик, ПациентЯвляетсяНалогоплательщиком, ОтчетныйГод, Филиал)
	
	ДанныеСправки = Новый Структура("НомерСправки, НомерКорректировки",0,0);
	
	// Поиск номера справки для этого клиента в этом отчетном периоде.
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправкаДляНалоговой.НомерСправки КАК НомерСправки,
	               |	МАКСИМУМ(СправкаДляНалоговой.НомерКорректировки) + 1 КАК НомерКорректировки
	               |ИЗ
	               |	Документ.СправкаДляНалоговой КАК СправкаДляНалоговой
	               |ГДЕ
	               |	СправкаДляНалоговой.ОтчетныйГод = &ОтчетныйГод
	               |	И СправкаДляНалоговой.Клиент = &Клиент
				   |	И СправкаДляНалоговой.ПациентЯвляетсяНалогоплательщиком = &ПациентЯвляетсяНалогоплательщиком
	               |	И (СправкаДляНалоговой.ПациентЯвляетсяНалогоплательщиком ИЛИ СправкаДляНалоговой.Налогоплательщик = &Налогоплательщик)
	               |	И СправкаДляНалоговой.Ссылка <> &Документ
	               |	И НЕ СправкаДляНалоговой.ПометкаУдаления
	               |	И СправкаДляНалоговой.Филиал.Организация = &Организация
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СправкаДляНалоговой.НомерСправки";
	
	Запрос.УстановитьПараметр("Документ", Документ);
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("Налогоплательщик", СокрЛП(Налогоплательщик));
	Запрос.УстановитьПараметр("ПациентЯвляетсяНалогоплательщиком", ПациентЯвляетсяНалогоплательщиком);
	Запрос.УстановитьПараметр("ОтчетныйГод", ОтчетныйГод);
	Запрос.УстановитьПараметр("Организация", Филиал.Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДанныеСправки, Выборка);
		Если Не Документ.Пустая()
			И Документ.НомерКорректировки <= ДанныеСправки.НомерКорректировки 
			И Документ.ОтчетныйГод = ОтчетныйГод
		Тогда 
			ДанныеСправки.НомерКорректировки = Документ.НомерКорректировки;	
		КонецЕсли;
	Иначе // Паре Клиент+Налогоплательщик не присвоен номер в этом году
		
		МожноИспользоватьСтарыйНомерДокумента = Клиент = Документ.Клиент
											  И ПациентЯвляетсяНалогоплательщиком = Документ.ПациентЯвляетсяНалогоплательщиком
											  И (ПациентЯвляетсяНалогоплательщиком Или СокрЛП(Налогоплательщик) = СокрЛП(Документ.Налогоплательщик));
		
		ДанныеСправки.НомерКорректировки = 0;
		ДанныеСправки.НомерСправки = ПолучитьНовыйНомерСправки(Документ, ОтчетныйГод, Филиал, МожноИспользоватьСтарыйНомерДокумента);
	КонецЕсли;
	
	Возврат ДанныеСправки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьНовыйНомерСправки(Документ, ОтчетныйГод, Филиал, МожноИспользоватьСтарыйНомерДокумента = Истина)

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ЕСТЬNULL(МАКСИМУМ(СправкаДляНалоговой.НомерСправки), 0) КАК НомерСправки
	               |ИЗ
	               |	Документ.СправкаДляНалоговой КАК СправкаДляНалоговой
	               |ГДЕ
	               |	СправкаДляНалоговой.ОтчетныйГод = &ОтчетныйГод
	               |	И НЕ СправкаДляНалоговой.ПометкаУдаления
	               |	И СправкаДляНалоговой.Филиал.Организация = &Организация
	               |	И СправкаДляНалоговой.Ссылка <> &Ссылка";
	
	Запрос.УстановитьПараметр("ОтчетныйГод", ОтчетныйГод);
	Запрос.УстановитьПараметр("Организация", Филиал.Организация);
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Если Выборка.Следующий() Тогда
		// Предполагаем, что если документ записан, и у него есть номер - этот номер уникален
		Если Не Документ.Пустая()
			И МожноИспользоватьСтарыйНомерДокумента
			И ЗначениеЗаполнено(Документ.НомерСправки)
			И (Документ.НомерСправки <= (Выборка.НомерСправки+1))
			И Документ.ОтчетныйГод = ОтчетныйГод
		Тогда
			Возврат Документ.НомерСправки;
		Иначе
			Если ЗначениеЗаполнено(Выборка.НомерСправки) Тогда
				Возврат Выборка.НомерСправки + 1;
			Иначе // Нет документов за год
				Возврат 1;
			КонецЕсли;
		КонецЕсли;
	Иначе // Нет документов за год
		Возврат 1;
	КонецЕсли;
 	
КонецФункции 

&НаСервереБезКонтекста
Функция НомерСправкиЗанят(ОтчетныйГод, Клиент, Налогоплательщик, ПациентЯвляетсяНалогоплательщиком, НомерСправки, Филиал, Документ)
	
	СообщениеОшибки = "";
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправкаДляНалоговой.Ссылка КАК Ссылка,
	               |	СправкаДляНалоговой.Клиент КАК Клиент,
	               |	СправкаДляНалоговой.Налогоплательщик КАК Налогоплательщик,
	               |	СправкаДляНалоговой.ПациентЯвляетсяНалогоплательщиком КАК ПациентЯвляетсяНалогоплательщиком
	               |ИЗ
	               |	Документ.СправкаДляНалоговой КАК СправкаДляНалоговой
	               |ГДЕ
	               |	СправкаДляНалоговой.ОтчетныйГод = &ОтчетныйГод
	               |	И СправкаДляНалоговой.НомерСправки = &НомерСправки
	               |	И СправкаДляНалоговой.Ссылка <> &Ссылка
	               |	И НЕ СправкаДляНалоговой.ПометкаУдаления
	               |	И СправкаДляНалоговой.Филиал.Организация = &Организация"; 
	
	Запрос.УстановитьПараметр("ОтчетныйГод", ОтчетныйГод);
	Запрос.УстановитьПараметр("НомерСправки", НомерСправки);
	Запрос.УстановитьПараметр("Организация", Филиал.Организация);
	Запрос.УстановитьПараметр("Ссылка", Документ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Клиент <> Клиент
			Или Выборка.ПациентЯвляетсяНалогоплательщиком <> ПациентЯвляетсяНалогоплательщиком
			Или (Не ПациентЯвляетсяНалогоплательщиком И СокрЛП(Выборка.Налогоплательщик) <> СокрЛП(Налогоплательщик))
		Тогда
			СообщениеОшибки = СтрШаблон("Номер справки уже занят документом: %1", Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СообщениеОшибки;
	
КонецФункции  

&НаСервереБезКонтекста
Функция НомерКорректировкиКорректен(ОтчетныйГод, Клиент, НомерСправки, НомерКорректировки, Филиал, Документ)
	
	СообщениеОшибки = "";
	
	// Если новый, то
	//	1. не занят для К+№+Год
	//	2. если больше максимального, то +1 к нему без перескока.
	// Для старого так же, но если ранее был записан с тем же номером, то можно.
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправкаДляНалоговой.НомерКорректировки КАК НомерКорректировки
	               |ИЗ
	               |	Документ.СправкаДляНалоговой КАК СправкаДляНалоговой
	               |ГДЕ
	               |	СправкаДляНалоговой.НомерСправки = &НомерСправки
	               |	И СправкаДляНалоговой.ОтчетныйГод = &ОтчетныйГод
	               |	И СправкаДляНалоговой.Филиал.Организация = &Организация
	               |	И НЕ СправкаДляНалоговой.ПометкаУдаления
	               |	И СправкаДляНалоговой.Ссылка <> &Документ
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	НомерКорректировки УБЫВ";  
	
	Запрос.УстановитьПараметр("НомерСправки", НомерСправки);
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.УстановитьПараметр("ОтчетныйГод", ОтчетныйГод);
	Запрос.УстановитьПараметр("Организация", Филиал.Организация);
	Запрос.УстановитьПараметр("Документ", Документ);
	
	НомераКорректировки = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НомерКорректировки");
	
	Если НомераКорректировки.Количество() = 0 Тогда
		// Нет других документов на клиента в отчетный период
		МахНомерКоррекции = 0;
	Иначе
		МахНомерКоррекции = НомераКорректировки[0];
	КонецЕсли;
	
	Если Документ.Пустая()
		Или Документ.НомерКорректировки <> НомерКорректировки
	Тогда
		Если НомераКорректировки.Найти(НомерКорректировки) <> Неопределено Тогда
			СообщениеОшибки = "Номер корректировки уже занят (для этого № справки в этом налоговом периоде)";
			
		ИначеЕсли НомерКорректировки > (МахНомерКоррекции + 1) Тогда
			СообщениеОшибки = "Номер корректировки слишком большой. Для этого № справки сейчас наибольший: " + МахНомерКоррекции;
		КонецЕсли;
	КонецЕсли;
	
	Возврат СообщениеОшибки;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеКлиента(Клиент, Период = Неопределено)
	
	УстановитьПривилегированныйРежим(Истина);
	Структура = Новый Структура("ИНН,ДатаРождения,ВидДУЛ,СерияДУЛ,НомерДУЛ,ДатаВыдачиДУЛ");	
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		Структура.ИНН = Клиент.ИНН;
		Структура.ДатаРождения = Клиент.ДатаРождения; 
		
	    ПаспортныеДанные = Документы.СправкаДляНалоговой.ПолучитьПаспортныеДанныеКлиента(Клиент, Период);
		ЗаполнитьЗначенияСвойств(Структура, ПаспортныеДанные);
		
		Структура.СерияДУЛ = СтрЗаменить(Структура.СерияДУЛ, " ", "");
		Структура.НомерДУЛ = СтрЗаменить(Структура.НомерДУЛ, " ", "");
	КонецЕсли;
	
	Возврат Структура;
		
КонецФункции 

&НаКлиенте
Процедура ЗаполнитьДанныеНалогоплательщикаДаннымиКлиента()
	
	ДанныеПациента = ПолучитьДанныеКлиента(Объект.Клиент, Объект.ДатаВыдачи);
	ЗаполнитьЗначенияСвойств(Объект, ДанныеПациента);
		
КонецПроцедуры 

&НаКлиенте
Процедура ЗаполнитьСумму_Завершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат <> Неопределено Тогда
		Объект[ДополнительныеПараметры.ПолеСуммы] = Результат.Сумма;
		Если Результат.Свойство("ОплатыКонтрагентов") Тогда
			Если ДополнительныеПараметры.ПолеСуммы = "Сумма" Тогда
				ОплатыКонтрагентов1 = Результат.ОплатыКонтрагентов;
				Элементы.ВычестьОплатыКонтрагентов1.Видимость = Истина;
			Иначе
				ОплатыКонтрагентов2 = Результат.ОплатыКонтрагентов;
				Элементы.ВычестьОплатыКонтрагентов2.Видимость = Истина;
			КонецЕсли;
		Иначе
			Если ДополнительныеПараметры.ПолеСуммы = "Сумма" Тогда
				ОплатыКонтрагентов1 = Новый Массив;
				Элементы.ВычестьОплатыКонтрагентов1.Видимость = Ложь;
			Иначе
				ОплатыКонтрагентов2 = Новый Массив;	
				Элементы.ВычестьОплатыКонтрагентов2.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		Если Результат.Свойство("НеучтенныеСуммы") И Результат.НеучтенныеСуммы.Количество() > 0 Тогда	
			ТекстПредупреждения = "В этом периоде были оплаты от контрагентов, не участвующие в автозаполнении по оплатам:";
			
			Для Каждого НеучтеннаяСумма Из Результат.НеучтенныеСуммы Цикл
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + Формат(НеучтеннаяСумма.Дата,"ДФ=dd.MM.yyyy") + " - " + НеучтеннаяСумма.Сумма + " руб.";	
			КонецЦикла;
			
			ПоказатьПредупреждение(, ТекстПредупреждения);			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти