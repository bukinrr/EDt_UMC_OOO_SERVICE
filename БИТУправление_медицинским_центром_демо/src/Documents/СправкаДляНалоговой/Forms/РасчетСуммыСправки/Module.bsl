#Область РазделОписанияПеременных

&НаКлиенте
Перем ОплатыКонтрагентов;

#КонецОбласти

#Область ОбработчикиСобытийФормы
 
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("КодУслуги") Тогда
		КодУслуги = Параметры.КодУслуги;	
	КонецЕсли;
	
	Если Параметры.Свойство("ОтчетныйГод") Тогда
		Дата = Дата(Параметры.ОтчетныйГод, 1, 1);
		НачалоПериода = НачалоГода(Дата);
		КонецПериода = КонецГода(Дата);
	ИначеЕсли Параметры.Свойство("НачалоПериода")
		И Параметры.Свойство("КонецПериода")
	Тогда
		НачалоПериода = Параметры.НачалоПериода; 
		КонецПериода = Параметры.КонецПериода;
	КонецЕсли;
	
	Если Параметры.Свойство("Клиент") Тогда
		Клиент = Параметры.Клиент;	
	КонецЕсли;
	
	Если Параметры.Свойство("Филиал") Тогда
		Филиал = Параметры.Филиал;	
	КонецЕсли;
	
	Если Параметры.Свойство("РежимНесколькоОплат") Тогда
		РежимНесколькоОплат = Параметры.РежимНесколькоОплат;	
	КонецЕсли;
	
	СпособРасчета = "ПоОплатам";
	Настройки = РаботаСФормамиСервер.ПолучитьНастройкуФормы("СправкаДляНалоговой", "РасчетСуммыСправкиНастройки", Неопределено);
	Если Настройки <> Неопределено Тогда
		СпособРасчета = Настройки.СпособРасчета;
		Отбор = Настройки.Отбор;
		ТолькоПробитыеЧеки = Настройки.ТолькоПробитыеЧеки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОплатыКонтрагентов = Новый Массив;	
	
КонецПроцедуры

#КонецОбласти
 
#Область ОбработчикиКомандФормы
 
&НаКлиенте
Процедура Заполнить(Команда)

	Если СпособРасчета = "ПоОплатам" Тогда
		ЗаполнитьСуммуПоОплатам(); 
	ИначеЕсли СпособРасчета = "ПоПродажам" Тогда
		ЗаполнитьСуммуПоПродажам();	
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнен способ расчета!");	
	КонецЕсли;
		
КонецПроцедуры
 
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НастройкиПриИзменении(Элемент)
	
	ЗаписатьНастройкиФормы(СпособРасчета, Отбор, ТолькоПробитыеЧеки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
 
&НаКлиенте
Процедура ЗаполнитьСуммуПоОплатам()

	НеучтенныеСуммы = Новый Массив;
	Сумма = ПолучитьСуммуПоОплатамСервер(НеучтенныеСуммы);
	
	ЗакрытьФорму(НеучтенныеСуммы);
	
КонецПроцедуры 

&НаСервере
Функция ПолучитьСуммуПоОплатамСервер(НеучтенныеСуммы)

	УстановитьПривилегированныйРежим(Истина);
	
	Сумма = 0;
	
	Запрос = Новый Запрос; 
	Запрос.Текст = СформироватьТекстЗапросаОплаты();
	
	ВидыОплат = Новый Массив;
	ВидыОплат.Добавить(Перечисления.ВидыОплаты.Наличными);
	ВидыОплат.Добавить(Перечисления.ВидыОплаты.Безналичные);
	
	Запрос.УстановитьПараметр("ВидыОплат", ВидыОплат);
	Запрос.УстановитьПараметр("ПериодНач", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ПериодКон", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Клиент", Клиент);
		
	// По умолчанию для заполнения без отбора по филиалу или организации
	Запрос.УстановитьПараметр("Филиал",				Неопределено);
	Запрос.УстановитьПараметр("Организация", 		Неопределено);
	Запрос.УстановитьПараметр("ТолькоПробитыеЧеки", Неопределено);
	
	Если Отбор = "ПоФилиалу" Тогда
		Запрос.УстановитьПараметр("Филиал", Филиал);	
	ИначеЕсли Отбор = "ПоОрганизации" Тогда
		Запрос.УстановитьПараметр("Организация", Филиал.Организация);	
	КонецЕсли;
		
	Если ТолькоПробитыеЧеки Тогда
		Запрос.УстановитьПараметр("ТолькоПробитыеЧеки", Истина);	
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	НомерСтроки = 1;
	Пока Выборка.Следующий() Цикл
		ВыборкаПоДате = Выборка.Выбрать();
		Пока ВыборкаПоДате.Следующий() Цикл
			Если ТипЗнч(ВыборкаПоДате.Регистратор) <>  Тип("ДокументСсылка.ПлатежноеПоручениеВходящее") Тогда 
				Сумма = Сумма + ВыборкаПоДате.Сумма;
				Если РежимНесколькоОплат Тогда
					СтрокаОплат = Оплаты.Добавить();
					СтрокаОплат.НомерСтроки = НомерСтроки;
					СтрокаОплат.Дата = ВыборкаПоДате.Период;
					СтрокаОплат.Сумма = ВыборкаПоДате.Сумма;
					
					НомерСтроки = НомерСтроки + 1;
				КонецЕсли;	
			Иначе
				НеучтенныеСуммы.Добавить(Новый Структура("Дата, Сумма", ВыборкаПоДате.Период, ВыборкаПоДате.Сумма));	
			КонецЕсли;	
		КонецЦикла;	
	КонецЦикла;
	
	Возврат Сумма;
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьТекстЗапросаОплаты()
	
    	ТекстЗапроса = "ВЫБРАТЬ
    	               |	ОплатыОбороты.СуммаОборот КАК Сумма,
    	               |	ОплатыОбороты.Регистратор КАК Регистратор,
    	               |	ОплатыОбороты.ПериодДень КАК Период
    	               |ИЗ
    	               |	РегистрНакопления.Оплаты.Обороты(
    	               |			&ПериодНач,
    	               |			&ПериодКон,
    	               |			Авто,
    	               |			Клиент = &Клиент
    	               |				И ВидОплаты В (&ВидыОплат)
    	               |				И (&Филиал = НЕОПРЕДЕЛЕНО
    	               |					ИЛИ Филиал = &Филиал)
    	               |				И (&Организация = НЕОПРЕДЕЛЕНО
    	               |					ИЛИ Филиал.Организация = &Организация)) КАК ОплатыОбороты
    	               |ГДЕ
    	               |	(&ТолькоПробитыеЧеки = НЕОПРЕДЕЛЕНО
    	               |			ИЛИ ОплатыОбороты.Регистратор.НомерЧекаККМ <> 0
					   |			ИЛИ ОплатыОбороты.Регистратор.СостояниеЧековККМ = ЗНАЧЕНИЕ(Перечисление.СостоянияЧековККМ.ЧекиПробиты))
    	               |ИТОГИ ПО
    	               |	Период";
				   
				   
	Возврат ТекстЗапроса;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСуммуПоПродажам()
	
	Продажи = ПолучитьПродажи(КодУслуги, Клиент, Филиал, НачалоПериода, КонецПериода, Отбор, ТолькоПробитыеЧеки);
	
	Если Продажи.Количество() = 0 Тогда
		ПоказатьПредупреждение(, "Данные для заполнения не найдены!");
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Продажи", Продажи);
	СтруктураПараметров.Вставить("КодУслуги", КодУслуги);		
	
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.ПроверкаПроданныхУслуг", СтруктураПараметров,ЭтаФорма,,,,Новый ОписаниеОповещения("ВыборУслуг_Завершение", ЭтаФорма, Новый Структура("КодУслуги", КодУслуги)),РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПродажи(КодУслуги, Клиент, Филиал, НачалоПериода, КонецПериода, Отбор, ТолькоПробитыеЧеки)
	
	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = СформироватьТекстЗапросаПродажи();
	
	Запрос.УстановитьПараметр("ПериодНач", НачалоДня(НачалоПериода));
	Запрос.УстановитьПараметр("ПериодКон", КонецДня(КонецПериода));
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Если КодУслуги = 0 Или ТипЗнч(КодУслуги) = Тип("Строка") Тогда
		Запрос.УстановитьПараметр("КодМедУслуги", 1);
	Иначе
		Запрос.УстановитьПараметр("КодМедУслуги", КодУслуги);
	КонецЕсли;
	
	// По умолчанию для заполнения без отбора по филиалу или организации
	Запрос.УстановитьПараметр("Филиал",		 		Неопределено);
	Запрос.УстановитьПараметр("Организация", 		Неопределено);
	Запрос.УстановитьПараметр("ТолькоПробитыеЧеки", Неопределено);
	
	Если Отбор = "ПоФилиалу" Тогда
		Запрос.УстановитьПараметр("Филиал", Филиал);	
	ИначеЕсли Отбор = "ПоОрганизации" Тогда
		Запрос.УстановитьПараметр("Организация", Филиал.Организация);	
	КонецЕсли;
		
	Если ТолькоПробитыеЧеки Тогда
		Запрос.УстановитьПараметр("ТолькоПробитыеЧеки", Истина);	
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьТекстЗапросаПродажи()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ПродажиПоСтраховымПолисамОбороты.СуммаОборот КАК Сумма,
	               |	ПродажиПоСтраховымПолисамОбороты.Номенклатура КАК Номенклатура,
	               |	ПродажиПоСтраховымПолисамОбороты.КоличествоОборот КАК Количество,
	               |	ПродажиПоСтраховымПолисамОбороты.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ПродажиПоПолисам
	               |ИЗ
	               |	РегистрНакопления.ПродажиПоСтраховымПолисам.Обороты(
	               |			&ПериодНач,
	               |			&ПериодКон,
	               |			Регистратор,
	               |			Полис.Владелец = &Клиент
	               |				И (&Филиал = НЕОПРЕДЕЛЕНО
	               |					ИЛИ Филиал = &Филиал)
	               |				И (&Организация = НЕОПРЕДЕЛЕНО
	               |					ИЛИ Филиал.Организация = &Организация)
	               |				И Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	               |				И (Номенклатура.КодМедУслуги = &КодМедУслуги
	               |					ИЛИ Номенклатура.КодМедУслуги = 0)) КАК ПродажиПоСтраховымПолисамОбороты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	СУММА(ПродажиОбороты.СуммаОборот - ЕСТЬNULL(ПродажиПоПолисам.Сумма, 0)) КАК Сумма,
	               |	ПродажиОбороты.Номенклатура КАК Номенклатура,
	               |	СУММА(ПродажиОбороты.КоличествоОборот - ЕСТЬNULL(ПродажиПоПолисам.Количество, 0)) КАК Количество,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ) КАК Период
	               |ИЗ
	               |	РегистрНакопления.Продажи.Обороты(
	               |			&ПериодНач,
	               |			&ПериодКон,
	               |			Регистратор,
	               |			Клиент = &Клиент
	               |				И (&Филиал = НЕОПРЕДЕЛЕНО
	               |					ИЛИ Филиал = &Филиал)
	               |				И (&Организация = НЕОПРЕДЕЛЕНО
	               |					ИЛИ Филиал.Организация = &Организация)
	               |				И Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Услуга)
	               |				И (Номенклатура.КодМедУслуги = &КодМедУслуги
	               |					ИЛИ Номенклатура.КодМедУслуги = 0)) КАК ПродажиОбороты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПродажиПоПолисам КАК ПродажиПоПолисам
	               |		ПО ПродажиОбороты.Номенклатура = ПродажиПоПолисам.Номенклатура
	               |			И ПродажиОбороты.Регистратор = ПродажиПоПолисам.Регистратор
	               |ГДЕ
	               |	(&ТолькоПробитыеЧеки = НЕОПРЕДЕЛЕНО
	               |			ИЛИ ПродажиОбороты.Регистратор.НомерЧекаККМ <> 0
	               |			ИЛИ ПродажиОбороты.Регистратор.СостояниеЧековККМ = ЗНАЧЕНИЕ(Перечисление.СостоянияЧековККМ.ЧекиПробиты))
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПродажиОбороты.Номенклатура,
	               |	НАЧАЛОПЕРИОДА(ПродажиОбороты.Период, ДЕНЬ)
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ПродажиОбороты.СуммаОборот - ЕСТЬNULL(ПродажиПоПолисам.Сумма, 0)) > 0";
	
	Возврат ТекстЗапроса;	
	
КонецФункции

&НаКлиенте
Процедура ВыборУслуг_Завершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Сумма = 0;
	Если Результат <> Неопределено Тогда 
		ОплатыКонтрагентов = ПолучитьОплатыКонтрагентов(Клиент, НачалоПериода, КонецПериода);
		ЕстьОплатыКонтрагентов = ОплатыКонтрагентов.Количество() > 0;
		НомерСтроки = 1;
		Для Каждого СтрокаРезультата Из Результат Цикл
			Сумма = Сумма + СтрокаРезультата.Сумма;
			Если РежимНесколькоОплат Тогда
				СтрокаОплат = Оплаты.Добавить();
				СтрокаОплат.НомерСтроки = НомерСтроки;
				СтрокаОплат.Дата = СтрокаРезультата.Период;
				СтрокаОплат.Сумма = СтрокаРезультата.Сумма;
				
				НомерСтроки = НомерСтроки + 1;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗакрытьФорму();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОплатыКонтрагентов(Клиент, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Оплаты.Период КАК Дата,
	               |	Оплаты.Сумма КАК Сумма
	               |ИЗ
	               |	РегистрНакопления.Оплаты КАК Оплаты
	               |ГДЕ
	               |	Оплаты.Регистратор ССЫЛКА Документ.ПлатежноеПоручениеВходящее
	               |	И Оплаты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	               |	И Оплаты.Клиент = &Клиент";
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Клиент", Клиент);
	
	Выборка = Запрос.Выполнить().Выбрать();
		
	МассивВозврата = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивВозврата.Добавить(Новый Структура("Дата, Сумма", Выборка.Дата, Выборка.Сумма));	
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции

&НаКлиенте
Процедура ЗакрытьФорму(НеучтенныеСуммы = Неопределено)
	
	Структура = Новый Структура;
	Структура.Вставить("Сумма", Сумма);
	
	Если ОплатыКонтрагентов.Количество() > 0 Тогда
		Структура.Вставить("ОплатыКонтрагентов", ОплатыКонтрагентов);	
	КонецЕсли;
	
	Если НеучтенныеСуммы <> Неопределено Тогда
		Структура.Вставить("НеучтенныеСуммы", НеучтенныеСуммы);	
	КонецЕсли;
	
	Если РежимНесколькоОплат Тогда
		МассивОплат = Новый Массив;
		Для Каждого СтрокаОплаты Из Оплаты Цикл
			СтруктураСтрокиОплат = Новый Структура("НомерСтроки, Дата, Сумма");
			ЗаполнитьЗначенияСвойств(СтруктураСтрокиОплат, СтрокаОплаты);
			МассивОплат.Добавить(СтруктураСтрокиОплат);
		КонецЦикла;
		Структура.Вставить("Оплаты", МассивОплат);			
	КонецЕсли; 
	
	ЭтотОбъект.Закрыть(Структура);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьНастройкиФормы(СпособРасчета, Отбор, ТолькоПробитыеЧеки)

	Структура = Новый Структура("СпособРасчета, Отбор, ТолькоПробитыеЧеки", СпособРасчета, Отбор, ТолькоПробитыеЧеки);
	РаботаСФормамиСервер.СохранитьНастройкуФормы("СправкаДляНалоговой", "РасчетСуммыСправкиНастройки", Структура);
	
КонецПроцедуры

#КонецОбласти
