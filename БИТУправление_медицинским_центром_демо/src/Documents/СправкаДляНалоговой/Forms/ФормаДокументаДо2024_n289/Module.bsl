#Область РазделОписанияПеременных

&НаКлиенте
Перем ОплатыКонтрагентов;

#КонецОбласти

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	
	Элементы.КомуОказаныУслуги.СписокВыбора.ЗагрузитьЗначения(КомуОказаныУслугиВарианты(Объект.Клиент));
	Элементы.КомуОказаныУслуги.СписокВыбора.Вставить(0, "", КомуОказаныУслугиПредставлениеПустогоВарианта());
	Элементы.ДатыОплатыВычестьОплатыКонтрагенов.Видимость = Ложь;
	Элементы.ВычестьОплатыКонтрагентов.Видимость = Ложь;
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Объект.ДатаВыдачи = ТекущаяДата();
	
		Если Не ЗначениеЗаполнено(Объект.НачалоПериода) Тогда
			Объект.НачалоПериода = НачалоГода(НачалоГода(ТекущаяДата())-1);
			Объект.КонецПериода = КонецГода(Объект.НачалоПериода);
		КонецЕсли;
	КонецЕсли; 
	
	НесколькоОплат = Объект.ДатыОплаты.Количество() <> 0;
	Элементы.ДатыОплаты.Видимость = НесколькоОплат;
	Элементы.ДатаОплаты.Видимость = Не НесколькоОплат;
	Элементы.Сумма.Видимость = Не НесколькоОплат;
	
	Если Не ЗначениеЗаполнено(Объект.КодУслуги) Тогда
		Объект.КодУслуги = 1;	
	КонецЕсли;
	
	НастроитьПолеНалогоплательщика(Объект.Клиент, Элементы.Налогоплательщик);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьПолеНалогоплательщика(Клиент, ПолеФормы)
	
	// Строго без СписокВыбора.ЗагрузитьЗначения
	РодственникиКлиента = ПолучитьРодственниковКлиента(Клиент);
	
	ПолеФормы.СписокВыбора.Очистить();
	Для Каждого Родственник Из РодственникиКлиента Цикл
		ПолеФормы.СписокВыбора.Добавить(Строка(Родственник));
	КонецЦикла;
	
	ПолеФормы.КнопкаВыпадающегоСписка = ПолеФормы.СписокВыбора.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	ОплатыКонтрагентов = Новый Массив;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если Не НесколькоОплат Тогда
		Объект.ДатыОплаты.Очистить();
	ИначеЕсли Объект.ДатыОплаты.Количество() > 1 Тогда
		Объект.Сумма = Объект.ДатыОплаты.Итог("Сумма");
		Объект.ДатаОплаты = Неопределено; 
	Иначе
		Если Объект.ДатыОплаты.Количество() = 1 Тогда
			Объект.Сумма = Объект.ДатыОплаты[0].Сумма;
			Объект.ДатаОплаты = Объект.ДатыОплаты[0].Дата;
		КонецЕсли;
		НесколькоОплат = Ложь;
	КонецЕсли;		

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(ТекущийОбъект,,ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

#Область ОбработчикиДинамическиСоздаваемыхКоманд

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьСумму(Команда)
		
	ПараметрыФормы = Новый Структура("Клиент, НачалоПериода, КонецПериода, Филиал, КодУслуги");
	ПараметрыФормы.Клиент = Объект.Клиент;
	ПараметрыФормы.НачалоПериода = Объект.НачалоПериода;
	ПараметрыФормы.КонецПериода = Объект.КонецПериода;
	ПараметрыФормы.Филиал = Объект.Филиал;
	ПараметрыФормы.КодУслуги = Объект.КодУслуги;
	
	Если НесколькоОплат Тогда
		ПараметрыФормы.Вставить("РежимНесколькоОплат", Истина);	
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ЗаполнитьСумму_Завершение", ЭтотОбъект, Новый Структура("КодУслуги", Объект.КодУслуги));
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.РасчетСуммыСправки",ПараметрыФормы,ЭтотОбъект,,,,Оповещение,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

&НаКлиенте
Процедура ВычестьОплатыКонтрагентов(Команда)
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("НесколькоОплат", НесколькоОплат);
	ПараметрыФормы.Вставить("ОплатыКонтрагентов", ОплатыКонтрагентов);
	Если НесколькоОплат Тогда
		ПараметрыФормы.Вставить("Оплаты", Объект.ДатыОплаты);
	Иначе
		ПараметрыФормы.Вставить("Сумма", Объект.Сумма);	
	КонецЕсли;
		
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.РаботаСОплатамиКонтрагентов",ПараметрыФормы,ЭтотОбъект,,,,Новый ОписаниеОповещения("ВычестьОплатыКонтрагентов_Завершение",ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВФорме2024(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьВФорме2024_Завершение", ЭтотОбъект);
	РаботаСДиалогамиКлиент.ПроверитьМодифицированностьВФорме(ЭтотОбъект, Ложь, Оповещение);
	
КонецПроцедуры
	
&НаКлиенте
Процедура ОткрытьВФорме2024_Завершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ПараметрыФормы = Новый Структура("Ключ", Объект.Ссылка);
	ОткрытьФорму("Документ.СправкаДляНалоговой.Форма.ФормаДокумента", ПараметрыФормы);
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		
		РеквизитыКлиента = ПолучитьРеквизитыКлиента(Объект.Клиент, Объект.МедицинскаяКарта);
		
		Объект.МедицинскаяКарта = РеквизитыКлиента.МедицинскаяКарта;
		Объект.Налогоплательщик = РеквизитыКлиента.ФИО;
		Объект.ИНН = РеквизитыКлиента.ИНН;
	КонецЕсли;
	
	НастроитьПолеНалогоплательщика(Объект.Клиент, Элементы.Налогоплательщик);
	
	// Поле КомуОказаныУслуги
	Элементы.КомуОказаныУслуги.СписокВыбора.ЗагрузитьЗначения(КомуОказаныУслугиВарианты(Объект.Клиент));
	Элементы.КомуОказаныУслуги.СписокВыбора.Вставить(0, "", КомуОказаныУслугиПредставлениеПустогоВарианта());
	Если Элементы.КомуОказаныУслуги.СписокВыбора.НайтиПоЗначению(Объект.КомуОказаныУслуги) = Неопределено Тогда
		Если Объект.КомуОказаныУслуги = "ей" Тогда
			Объект.КомуОказаныУслуги = "ему";
		ИначеЕсли Объект.КомуОказаныУслуги = "ему" Тогда
			Объект.КомуОказаныУслуги = "ей";
		ИначеЕсли Объект.КомуОказаныУслуги = "супруге" Тогда
			Объект.КомуОказаныУслуги = "супругу";
		ИначеЕсли Объект.КомуОказаныУслуги = "супругу" Тогда
			Объект.КомуОказаныУслуги = "супруге";
		Иначе
			Объект.КомуОказаныУслуги = "";
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонецПериодаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаОплаты) Тогда
		Объект.ДатаОплаты = Объект.КонецПериода;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура НесколькоОплатПриИзменении(Элемент)
	
	Элементы.ДатыОплаты.Видимость = НесколькоОплат;	
	Элементы.ДатаОплаты.Видимость = Не НесколькоОплат;
	Элементы.Сумма.Видимость = Не НесколькоОплат;
	Элементы.ВычестьОплатыКонтрагентов.Видимость = Не НесколькоОплат И Объект.Сумма > 0 И ОплатыКонтрагентов.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаПриИзменении(Элемент)
	
	Объект.КонецПериода = Мин(КонецГода(Объект.НачалоПериода), ТекущаяДата());
	
	Если Объект.НачалоПериода >= Дата(2024,1,1) Тогда
		ПоказатьПредупреждение(, "Для полного заполнения документа 
								 |с [отчетным годом] 2024 и позже
								 |нужно записать документ и переоткрыть");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НачалоПериодаРегулирование(Элемент, Направление, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Объект.НачалоПериода = НачалоГода(ДобавитьМесяц(Объект.НачалоПериода, 12 * Направление));
	
	НачалоПериодаПриИзменении(Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура НалогоплательщикНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Справочник.Клиенты.ФормаВыбора",Новый Структура("РежимВыбора", Истина),ЭтотОбъект,,,, Новый ОписаниеОповещения("НалогоплательщикЗавершениеВыбора", ЭтотОбъект), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура НалогоплательщикОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	// Заполняем ИНН
	Если ЗначениеЗаполнено(ВыбранноеЗначение) И ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Клиенты") Тогда
		ИНН = ОбщегоНазначенияСервер.ПолучитьРеквизитСсылки(ВыбранноеЗначение, "ИНН");
		Объект.ИНН = ?(ЗначениеЗаполнено(ИНН), ИНН, Объект.ИНН);		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаВыдачиПриИзменении(Элемент)
	//Если Объект.ДатаВыдачи >= Дата(2024,1,1) Тогда
	//	ПоказатьПредупреждение(, "Для полного заполнения документа 
	//							 |с [Датой выдачи] после 01.01.2024
	//							 |нужно записать документ и переоткрыть");
	//КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьРеквизитыКлиента(Клиент, ТекущаяМедицинскаяКарта)
	
	МедицинскаяКарта = ТекущаяМедицинскаяКарта;
	
	Если ДопСерверныеФункции.ИмяСсылочногоТипа(ТекущаяМедицинскаяКарта) = "Справочник.МедицинскиеКарты"
		И ТекущаяМедицинскаяКарта.Клиент <> Клиент
	Тогда
		МедицинскаяКарта = ОтраслевыеДополнения.ПолучитьОсновнуюМедКартуКлиента(Клиент);
	КонецЕсли;
	
	РеквизитыКлиента = Новый Структура;
	РеквизитыКлиента.Вставить("МедицинскаяКарта",МедицинскаяКарта);
	РеквизитыКлиента.Вставить("ФИО", ОбщегоНазначения.ФИОФизЛица(Клиент));
	РеквизитыКлиента.Вставить("ИНН",Клиент.ИНН);
	
	Возврат РеквизитыКлиента;
	
КонецФункции

&НаСервереБезКонтекста
Функция КомуОказаныУслугиВарианты(Клиент)
	
	ВариантыВыбора = Новый Массив;
	
	Пол = ?(ЗначениеЗаполнено(Клиент), Клиент.Пол, Неопределено);
	
	Если Пол <> Перечисления.ПолФизическихЛиц.Женский Тогда
		ВариантыВыбора.Добавить("ему");
	КонецЕсли;
	Если Пол <> Перечисления.ПолФизическихЛиц.Мужской Тогда
		ВариантыВыбора.Добавить("ей");
	КонецЕсли;
	Если Пол <> Перечисления.ПолФизическихЛиц.Женский Тогда
		ВариантыВыбора.Добавить("супругу");
	КонецЕсли;
	Если Пол <> Перечисления.ПолФизическихЛиц.Мужской Тогда
		ВариантыВыбора.Добавить("супруге");
	КонецЕсли;
		
	ВариантыВыбора.Добавить("сыну");
	ВариантыВыбора.Добавить("дочери");
	ВариантыВыбора.Добавить("матери");
	ВариантыВыбора.Добавить("отцу");  
	
	Возврат ВариантыВыбора;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция КомуОказаныУслугиПредставлениеПустогоВарианта()
	Возврат "нужное подчеркнуть на бумаге";
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьРодственниковКлиента(Клиент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СвязиМеждуКлиентами.Клиент2 КАК Клиент2
	               |ИЗ
	               |	РегистрСведений.СвязиМеждуКлиентами КАК СвязиМеждуКлиентами
	               |ГДЕ
	               |	СвязиМеждуКлиентами.Клиент = &Клиент";
	
	Запрос.УстановитьПараметр("Клиент", Клиент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	РодственникиКлиента = Новый Массив;
	
	Пока Выборка.Следующий() Цикл
		РодственникиКлиента.Добавить(Выборка.Клиент2);	
	КонецЦикла;
	
	// Если нужно, добавляем законного представителя
	Если ЗначениеЗаполнено(Клиент.ЗаконныйПредставитель) Тогда
		Если ТипЗнч(Клиент.ЗаконныйПредставитель) = Тип("СправочникСсылка.Клиенты") Тогда
			Если РодственникиКлиента.Найти(Клиент.ЗаконныйПредставитель) = Неопределено Тогда
				РодственникиКлиента.Добавить(Клиент.ЗаконныйПредставитель);	
			КонецЕсли;
		Иначе
			РодственникиКлиента.Добавить(Клиент.ЗаконныйПредставитель);	
		КонецЕсли;
	КонецЕсли;
	
	Возврат РодственникиКлиента;
	
КонецФункции

&НаКлиенте
Процедура НалогоплательщикЗавершениеВыбора(Результат, ДополнительныеПараметры) Экспорт
	
	// Заполняем поля Налогоплательщик и ИНН
	Если Результат <> Неопределено Тогда
		Объект.Налогоплательщик = ОбщегоНазначения.ФИОФизЛица(Результат);
		ИНН = ОбщегоНазначенияСервер.ПолучитьРеквизитСсылки(Результат, "ИНН");
		Объект.ИНН = ?(ЗначениеЗаполнено(ИНН), ИНН, Объект.ИНН);
		
		Модифицированность = Истина;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВычестьОплатыКонтрагентов_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если НесколькоОплат Тогда
			Объект.ДатыОплаты.Очистить();
			Для Каждого Оплата Из Результат Цикл
				Если Оплата.Сумма > 0 Тогда
					ЗаполнитьЗначенияСвойств(Объект.ДатыОплаты.Добавить(),Оплата);
				КонецЕсли;
			КонецЦикла;
			Элементы.ДатыОплатыВычестьОплатыКонтрагенов.Видимость = Ложь;
		Иначе
			Объект.Сумма = Результат;
			Элементы.ВычестьОплатыКонтрагентов.Видимость = Ложь;
		КонецЕсли;
		
		ОплатыКонтрагентов = Новый Массив;
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСумму_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Свойство("ОплатыКонтрагентов") Тогда
			ОплатыКонтрагентов = Результат.ОплатыКонтрагентов;
		Иначе
			ОплатыКонтрагентов = Новый Массив;
		КонецЕсли;
		
		Если Результат.Свойство("НеучтенныеСуммы") И Результат.НеучтенныеСуммы.Количество() > 0 Тогда	
			ТекстПредупреждения = "В этом периоде были оплаты от контрагентов, не участвующие в автозаполнении по оплатам:";
			
			Для Каждого НеучтеннаяСумма Из Результат.НеучтенныеСуммы Цикл
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + Формат(НеучтеннаяСумма.Дата,"ДФ=dd.MM.yyyy") + " - " + НеучтеннаяСумма.Сумма + " руб.";	
			КонецЦикла;
			
			ПоказатьПредупреждение(, ТекстПредупреждения);			
		КонецЕсли;
		
		Если НесколькоОплат Тогда
			Элементы.ДатыОплатыВычестьОплатыКонтрагенов.Видимость = Результат.Свойство("ОплатыКонтрагентов");
			Если Результат.Свойство("Оплаты") Тогда
				Для Каждого СтрокаОплаты Из Результат.Оплаты Цикл
					ЗаполнитьЗначенияСвойств(Объект.ДатыОплаты.Добавить(), СтрокаОплаты);
				КонецЦикла;
			КонецЕсли;
		Иначе
			Объект.Сумма = Результат.Сумма;
			Элементы.ВычестьОплатыКонтрагентов.Видимость = Результат.Свойство("ОплатыКонтрагентов"); 	
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
