#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	
	Если Объект.Ссылка.Пустая() Тогда
		
		Если Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у")
			И Не ЗначениеЗаполнено(Объект.Срок)
		Тогда
			Объект.Срок = 2;
		КонецЕсли;
		
		Объект.Срочность = "нет";
		
		Если Не ЗначениеЗаполнено(Объект.Взрослый)
			И ЗначениеЗаполнено(Объект.Клиент)
		Тогда
			Объект.Взрослый = ОпределитьВзрослыйДетский(Объект.Клиент, Объект.Дата);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("Номенклатура")
		И ТипЗнч(Параметры.ЗначенияЗаполнения.Номенклатура) = Тип("Массив")
		И Параметры.ЗначенияЗаполнения.Номенклатура.Количество() > 0
	Тогда
		Индекс = 1;
		Для Каждого РеквизитыНоменклатуры Из Параметры.ЗначенияЗаполнения.Номенклатура Цикл
			Объект["Номенклатура" + Строка(Индекс)] = РеквизитыНоменклатуры.Номенклатура;
			Объект["ЕдиницаИзмерения" + Строка(Индекс)] = РеквизитыНоменклатуры.ЕдиницаИзмерения;
			Объект["Количество" + Строка(Индекс)] = РеквизитыНоменклатуры.Количество;
			Объект["СколькоДней" + Строка(Индекс)] = РеквизитыНоменклатуры.КоличествоДней;
			Объект["РазВДень" + Строка(Индекс)] = РеквизитыНоменклатуры.ПриемовВДень;
			Объект["Дозировка" + Строка(Индекс)] = РеквизитыНоменклатуры.Дозировка;
			Индекс = Индекс + 1;
		КонецЦикла;
	КонецЕсли;
	
	Если Параметры.ЗначенияЗаполнения.Свойство("ФормаРецепта") Тогда
		Объект.ФормаРецепта = Параметры.ЗначенияЗаполнения.ФормаРецепта;	
	КонецЕсли;
	
	// Автоподстановка формы рецепта из последней использовавшейся для указанной номенклатуры.
	Если Не ЗначениеЗаполнено(Объект.ФормаРецепта)
		И ЗначениеЗаполнено(Объект.Номенклатура1)
		И Не ЗначениеЗаполнено(Объект.Номенклатура2)
	Тогда
		Объект.ФормаРецепта = ПолучитьПоследнююФормуРецепта(Объект.Номенклатура1);
	КонецЕсли;
	
	ПривестиЗначениеНоменклатурыЛекарства(1);
	ПривестиЗначениеНоменклатурыЛекарства(2);
	ПривестиЗначениеНоменклатурыЛекарства(3);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	
	Если Объект.Ссылка.Пустая() Тогда
		КлиентПриИзменении(Элементы.Клиент);
	КонецЕсли;
	
	ШаблонПриИзменении();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОбновитьВидимостьЗначениеСерии();
	КонецЕсли;
	
	ОбновитьТолькоПросмотрЕдиницыизмерения();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(ТекущийОбъект,,ЭтаФорма);

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	ОповеститьОЗаписиНового(Объект.Ссылка);	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("Подключаемый_КнопкаФилиалПриНажатииЗавершение", ЭтотОбъект);
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма, , ОповещениеОВыборе);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатииЗавершение(Результат, ДополнительныеЗначения) Экспорт
	ОбновитьВидимостьЗначениеСерии();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		
		Если Не ЗначениеЗаполнено(Объект.МедицинскаяКарта) Тогда
			Объект.МедицинскаяКарта = МедицинскаяДеятельность.ПолучитьОсновнуюМедКартуПациента(Объект.Клиент, Объект.Дата);
		КонецЕсли;
		
		Объект.Взрослый = ОпределитьВзрослыйДетский(Объект.Клиент, Объект.Дата);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)

	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора);
	
КонецПроцедуры

&НаКлиенте
Процедура ШаблонПриИзменении(Элемент = Неопределено)

	ЭтоФорма107_1_у = Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у");
	Элементы.ПериодичностьОтпуска.Видимость = ЭтоФорма107_1_у;
	
	// Поля указания второго и третьего препарата
	Элементы.Срок1.Видимость = ЭтоФорма107_1_у;
	Элементы.ГруппаНоменклатуры2.Доступность = ЭтоФорма107_1_у;
	Элементы.ГруппаНоменклатуры3.Доступность = ЭтоФорма107_1_у;
	
	Элементы.НадписьФиксированныйСрок.Видимость = Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_у_НП");
												  
	Элементы.Срок2.Видимость =	Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_04_л")
							Или	Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_06_л")
							Или Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_88");

	Если (Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_04_л")
			Или Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_06_л"))
		И Элементы.Срок2.СписокВыбора.НайтиПоЗначению(Объект.Срок) = Неопределено
	Тогда
		Объект.Срок = 0;
	ИначеЕсли ЭтоФорма107_1_у 
			И (Объект.Срок < Элементы.Срок1.МинимальноеЗначение
				Или Объект.Срок > Элементы.Срок1.МаксимальноеЗначение)
	Тогда
		Объект.Срок = 2;
	ИначеЕсли Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_88")
		И Элементы.Срок2.СписокВыбора.НайтиПоЗначению(Объект.Срок) = Неопределено
	Тогда
		Объект.Срок = 50;
	КонецЕсли;
	
	Если ЭтоФорма107_1_у Тогда
		Срок1ПриИзменении(Неопределено);	
	Иначе
		Срок2ПриИзменении(Неопределено);
		Объект.ПериодичностьОтпуска = "";
	КонецЕсли;
	
	ЗаполнитьСписокВыбораДляСроковДействия();
	ОбновитьДоступностьПереключателя();
	Если Элемент <> Неопределено Тогда
		ОбновитьВидимостьЗначениеСерии();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВариантВводаНоменклатуры1ПриИзменении(Элемент)
	ИзменениеФорматаВводаНоменклатуры(1, ВариантВводаНоменклатуры1)
КонецПроцедуры

&НаКлиенте
Процедура ВариантВводаНоменклатуры2ПриИзменении(Элемент)
	ИзменениеФорматаВводаНоменклатуры(2, ВариантВводаНоменклатуры2)
КонецПроцедуры

&НаКлиенте
Процедура ВариантВводаНоменклатуры3ПриИзменении(Элемент)
	ИзменениеФорматаВводаНоменклатуры(3, ВариантВводаНоменклатуры3)
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура1ПриИзменении(Элемент)
	ИзменениеНоменклатуры(1, ВариантВводаНоменклатуры1);
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура2ПриИзменении(Элемент)
	ИзменениеНоменклатуры(2, ВариантВводаНоменклатуры2);
КонецПроцедуры

&НаКлиенте
Процедура Номенклатура3ПриИзменении(Элемент)
	ИзменениеНоменклатуры(3, ВариантВводаНоменклатуры3);
КонецПроцедуры

&НаКлиенте
Процедура Срок1ПриИзменении(Элемент)
	Если Объект.Срок > 2 Тогда
		Объект.ПоСпециальномуНазначению = Истина;
		Элементы.ПоСпециальномуНазначению.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ПоСпециальномуНазначению.ТолькоПросмотр = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Срок2ПриИзменении(Элемент)
	Если Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_88") 
		И Объект.Срок = 70 
	Тогда
		Объект.ПоСпециальномуНазначению = Истина;
		Элементы.ПоСпециальномуНазначению.ТолькоПросмотр = Истина;
	Иначе
		Элементы.ПоСпециальномуНазначению.ТолькоПросмотр = Ложь;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьСписокВыбораДляСроковДействия()

	Элементы.Срок2.СписокВыбора.Очистить();
	Если Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_04_л") Тогда
		Элементы.Срок2.СписокВыбора.Добавить(50, "15 дней");
		Элементы.Срок2.СписокВыбора.Добавить(0, "30 дней");
		Элементы.Срок2.СписокВыбора.Добавить(60, "90 дней");
		Элементы.Срок2.СписокВыбора.Добавить(80, "180 дней");
	ИначеЕсли Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_88") Тогда
		Элементы.Срок2.СписокВыбора.Добавить(50, "15 дней");
		Элементы.Срок2.СписокВыбора.Добавить(0, "30 дней");
		Элементы.Срок2.СписокВыбора.Добавить(70, "60 дней");
	ИначеЕсли Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_06_л") Тогда
		Элементы.Срок2.СписокВыбора.Добавить(40, "5 дней");
		Элементы.Срок2.СписокВыбора.Добавить(50, "15 дней");
		Элементы.Срок2.СписокВыбора.Добавить(0, "30 дней");
		Элементы.Срок2.СписокВыбора.Добавить(60, "90 дней");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступностьПереключателя()
	Если Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма148_1_у_88") Тогда
		Элементы.АдресИлиНомер.Доступность = Истина;
	Иначе
		Элементы.АдресИлиНомер.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьЗначениеСерии()
		
	Если Объект.ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у") Тогда
		Элементы.Серия.Видимость = Ложь;
		Объект.Серия = "";
	Иначе
		Элементы.Серия.Видимость = Истина;
		Если ЗначениеЗаполнено(Объект.ФормаРецепта) Тогда
			Объект.Серия = ПолучитьЗначениеСерииНаСервере(Объект.Филиал, Объект.ФормаРецепта);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗначениеСерииНаСервере(Филиал, ФормаРецепта)
	
	УстановитьПривилегированныйРежим(Истина);
	МЗ = РегистрыСведений.СерииРецептов.СоздатьМенеджерЗаписи();
	МЗ.Филиал = Филиал;
	МЗ.ФормаРецепта = ФормаРецепта;
	МЗ.Прочитать();
	
	Если Не ЗначениеЗаполнено(МЗ.Серия) Тогда
		МЗ.Филиал = Справочники.Филиалы.ПустаяСсылка();
		МЗ.ФормаРецепта = ФормаРецепта;
		МЗ.Прочитать();
	КонецЕсли;
	
	Возврат МЗ.Серия;
	
КонецФункции

&НаСервере
Процедура ПривестиЗначениеНоменклатурыЛекарства(НомерСтрокиЛекарства)
	
	ИмяРеквизитаНоменклатуры = "Номенклатура" + НомерСтрокиЛекарства;
	Номенклатура = Объект[ИмяРеквизитаНоменклатуры];
	//Номенклатура, Наименование, РеквизитФормы)
	
	Если Объект[ИмяРеквизитаНоменклатуры] = Неопределено Тогда
		// Если реквизит не заполнен (даже пустой ссылкой или строкой)
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
		Элементы[ИмяРеквизитаНоменклатуры].ОграничениеТипа = ОписаниеТипа; 
		Если Не ЭтаФорма.ТолькоПросмотр Тогда
			Объект[ИмяРеквизитаНоменклатуры]= ОписаниеТипа.ПривестиЗначение(Объект[ИмяРеквизитаНоменклатуры]); 
		КонецЕсли;
		
		Элементы[ИмяРеквизитаНоменклатуры].ВыбиратьТип = Ложь;
	Иначе
		ТипНоменклатуры = ТипЗнч(Объект[ИмяРеквизитаНоменклатуры]);
		ВариантВвода = 0;
		Если ТипНоменклатуры = Тип("СправочникСсылка.Номенклатура") Тогда
			ВариантВвода = 1;
		ИначеЕсли ТипНоменклатуры = Тип("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований") Тогда
			ВариантВвода = 2;
		КонецЕсли;
		ЭтаФорма["ВариантВводаНоменклатуры" + НомерСтрокиЛекарства] = ВариантВвода;
	КонецЕсли;
	
	// Повторение клиентской процедуры "ИзменениеФорматаВводаЕдиницыИзмерения".
	ИмяРеквизитаЕдиницыИзмерения = "ЕдиницаИзмерения" + НомерСтрокиЛекарства;
	
	// Настройка поля ввода единицы измерения
	Если ЭтаФорма["ВариантВводаНоменклатуры" + НомерСтрокиЛекарства] = 1 Тогда
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения");
	Иначе
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения");
	КонецЕсли;
	Элементы[ИмяРеквизитаЕдиницыИзмерения].ОграничениеТипа = ОписаниеТипа;
	Элементы[ИмяРеквизитаЕдиницыИзмерения].БыстрыйВыбор = ЭтаФорма["ВариантВводаНоменклатуры" + НомерСтрокиЛекарства] = 1;
	Объект[ИмяРеквизитаЕдиницыИзмерения] = ОписаниеТипа.ПривестиЗначение(Объект[ИмяРеквизитаЕдиницыИзмерения]);
	
	ОтображатьКартинкуНепереносимости = Ложь;
	Если ЭтаФорма["ВариантВводаНоменклатуры" + НомерСтрокиЛекарства] = 2 Тогда
		ОбработатьНоменклатуруСМНН(НомерСтрокиЛекарства, ОтображатьКартинкуНепереносимости);
	КонецЕсли;
	
	Элементы["Непереносимость" + НомерСтрокиЛекарства].Видимость = ОтображатьКартинкуНепереносимости;
	
КонецПроцедуры	

&НаКлиенте
Процедура ИзменениеФорматаВводаНоменклатуры(НомерСтрокиЛекарства, ВариантВводаНоменклатуры)
	
	ИмяРеквизитаНоменклатуры = "Номенклатура" + НомерСтрокиЛекарства;
	
	Объект[ИмяРеквизитаНоменклатуры] = Неопределено;
	
	// Настройка поля ввода номенклатуры
	Если ВариантВводаНоменклатуры = 0 Тогда
		ОписаниеТипа = Новый ОписаниеТипов("Строка");
	ИначеЕсли ВариантВводаНоменклатуры = 1 Тогда
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	Иначе
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований");
	КонецЕсли;
	Элементы[ИмяРеквизитаНоменклатуры].ОграничениеТипа = ОписаниеТипа;
	Объект[ИмяРеквизитаНоменклатуры] = ОписаниеТипа.ПривестиЗначение(Объект[ИмяРеквизитаНоменклатуры]);
	
	ИзменениеФорматаВводаЕдиницыИзмерения(НомерСтрокиЛекарства, ВариантВводаНоменклатуры);
	Элементы["Непереносимость" + НомерСтрокиЛекарства].Видимость = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеФорматаВводаЕдиницыИзмерения(НомерСтрокиЛекарства, ВариантВводаНоменклатуры)
	
	ИмяРеквизитаЕдиницыИзмерения = "ЕдиницаИзмерения" + НомерСтрокиЛекарства;
	
	Объект[ИмяРеквизитаЕдиницыИзмерения] = Неопределено;
	
	// Настройка поля ввода единицы измерения
	Если ВариантВводаНоменклатуры = 1 Тогда
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения");
	Иначе
		ОписаниеТипа = Новый ОписаниеТипов("СправочникСсылка.КлассификаторЕдиницИзмерения");
	КонецЕсли;
	Элементы[ИмяРеквизитаЕдиницыИзмерения].ОграничениеТипа = ОписаниеТипа;
	Элементы[ИмяРеквизитаЕдиницыИзмерения].БыстрыйВыбор = ВариантВводаНоменклатуры = 1;
	Объект[ИмяРеквизитаЕдиницыИзмерения] = ОписаниеТипа.ПривестиЗначение(Объект[ИмяРеквизитаЕдиницыИзмерения]);
	
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеНоменклатуры(НомерСтрокиЛекарства, ВариантВводаНоменклатуры)
	
	ОтображатьКартинкуНепереносимости = Ложь;
	Если ВариантВводаНоменклатуры = 2 Тогда
		ОбработатьНоменклатуруСМНН(НомерСтрокиЛекарства, ОтображатьКартинкуНепереносимости);
	КонецЕсли;
	
	Элементы["Непереносимость" + НомерСтрокиЛекарства].Видимость = ОтображатьКартинкуНепереносимости;
	Элементы["ЕдиницаИзмерения" + НомерСтрокиЛекарства].ТолькоПросмотр = ВариантВводаНоменклатуры = 2 И ЗначениеЗаполнено(Объект["ЕдиницаИзмерения" + НомерСтрокиЛекарства]);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьНоменклатуруСМНН(НомерСтрокиЛекарства, ОтображатьКартинкуНепереносимости)
	
	Номенклатура = Объект["Номенклатура" + НомерСтрокиЛекарства];
	Объект["ЕдиницаИзмерения" + НомерСтрокиЛекарства] = Номенклатура.ЕдиницаИзмерения;
	НепереносимыеАТХ = Медикаменты.ПолучитьНепереносимыеАТХ(Объект.Клиент,СтрРазделить(Номенклатура.КодАТХ,";", Ложь));
	Если НепереносимыеАТХ.Количество() > 0 Тогда
		ОтображатьКартинкуНепереносимости = Истина;
		ТекстПодсказки = "";
		Для Каждого НепереносимоеДВ Из НепереносимыеАТХ Цикл
			ТекстПодсказки = ТекстПодсказки + Символы.ПС + НепереносимоеДВ.Ключ.Наименование + " (" + СтрСоединить(НепереносимоеДВ.Значение, ", ") + ")";
		КонецЦикла;
		Элементы["Непереносимость" + НомерСтрокиЛекарства].Подсказка = "Непереносимые действующие вещества: " + ТекстПодсказки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТолькоПросмотрЕдиницыИзмерения()
	
	СоответствиеПроверки = Новый Соответствие;
	СоответствиеПроверки.Вставить(Объект.Номенклатура1, "ЕдиницаИзмерения1");
	СоответствиеПроверки.Вставить(Объект.Номенклатура2, "ЕдиницаИзмерения2");
	СоответствиеПроверки.Вставить(Объект.Номенклатура3, "ЕдиницаИзмерения3");
	
	Для Каждого Номенклатура Из СоответствиеПроверки Цикл
		Элементы[Номенклатура.Значение].ТолькоПросмотр = (ТипЗнч(Номенклатура.Ключ) = Тип("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований"));
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПоследнююФормуРецепта(Назначение) 
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Рецепт.ФормаРецепта КАК ФормаРецепта
	               |ИЗ
	               |	Документ.Рецепт КАК Рецепт
	               |ГДЕ
	               |	(Рецепт.Номенклатура1 = &Назначение
	               |			ИЛИ Рецепт.Номенклатура2 = &Назначение
	               |			ИЛИ Рецепт.Номенклатура3 = &Назначение)
	               |	И НЕ Рецепт.ПометкаУдаления
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Рецепт.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ФормаРецепта;	
	Иначе
		Возврат Перечисления.ФормыРецептов.ПустаяСсылка();	
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьВзрослыйДетский(Клиент, ДатаДок)
	
	ПолныхЛет = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеЧислоЛетСДаты(Клиент.ДатаРождения, ДатаДок);
	Если ПолныхЛет >= 18 Тогда
		Возврат 1;
	Иначе
		Возврат 2;
	КонецЕсли;
	
КонецФункции

#КонецОбласти
