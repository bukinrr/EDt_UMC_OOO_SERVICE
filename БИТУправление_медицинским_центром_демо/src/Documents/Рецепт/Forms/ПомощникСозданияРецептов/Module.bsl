#Область ПрограммныйИнтерфейс

&НаКлиенте
Перем ЗанятыеПозицииВРецептах;

&НаКлиенте
Перем НомерРецептаПриСоздании;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Номенклатура") Тогда
		
		МассивНазначений = Новый Массив;
		Для Каждого СписокНоменклатуры Из Параметры.Номенклатура Цикл
			Для Каждого СтрокаНоменклатуры Из СписокНоменклатуры Цикл
				НоваяСтрока = Назначения.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаНоменклатуры);
				НоваяСтрока.Назначение = СтрокаНоменклатуры.Номенклатура;
				
				ГруппыПрепарата = Медикаменты.ГруппыПрепарата(НоваяСтрока.Назначение);
				ЗаполнитьЗначенияСвойств(НоваяСтрока, ГруппыПрепарата);
				
				МассивНазначений.Добавить(СтрокаНоменклатуры.Номенклатура);
			КонецЦикла;
		КонецЦикла;
		
		ЗаполнитьПоследниеФормыРецептовНазначений();
	
	КонецЕсли;
		
	Если Параметры.Свойство("Прием") Тогда
		Прием = Параметры.Прием;
	КонецЕсли;
	
	Если Параметры.Свойство("Врач") Тогда
		Врач = Параметры.Врач;		
	КонецЕсли;

	Если Параметры.Свойство("Клиент") Тогда
		Клиент = Параметры.Клиент;
	КонецЕсли;
	
	Если Параметры.Свойство("МедицинскаяКарта") Тогда
		МедицинскаяКарта = Параметры.МедицинскаяКарта;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗанятыеПозицииВРецептах = Новый Массив(9);
	
	ФормаРецептаПриИзменении(Новый Структура("Имя", "1"));
	ФормаРецептаПриИзменении(Новый Структура("Имя", "2"));
	ФормаРецептаПриИзменении(Новый Структура("Имя", "3"));
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаЗаписиНового(НовыйОбъект, Источник, СтандартнаяОбработка)
	
	Если НомерРецептаПриСоздании <> Неопределено Тогда
		ЭтотОбъект["Рецепт" + НомерРецептаПриСоздании] = НовыйОбъект;
		Элементы["ГруппаКоманды" + НомерРецептаПриСоздании].Доступность = Ложь;
		Элементы["ФормаРецепта" + НомерРецептаПриСоздании].Доступность = Ложь;
		Элементы["ГруппаНазначение_" + НомерРецептаПриСоздании + "_1"].Доступность = Ложь;
		Элементы["ГруппаНазначение_" + НомерРецептаПриСоздании + "_2"].Доступность = Ложь;
		Элементы["ГруппаНазначение_" + НомерРецептаПриСоздании + "_3"].Доступность = Ложь;
		
		// Установка кнопки по умолчанию
		Для НомерРецепта = 1 По 3 Цикл
			Если Не ЗначениеЗаполнено(ЭтотОбъект["Рецепт" + НомерРецепта]) Тогда
				Элементы["СоздатьРецепт" + НомерРецепта].КнопкаПоУмолчанию = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		НомерРецептаПриСоздании = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьНазначение(Команда) 
	
	Окончание = Прав(Команда.Имя, 3);
	Индекс = ПолучитьИндексНазначения(Окончание);
	Если ЗанятыеПозицииВРецептах[Индекс] <> Неопределено Тогда
		СтрокаНазначения = Назначения.НайтиПоИдентификатору(ЗанятыеПозицииВРецептах[Индекс]);
		Если СтрокаНазначения <> Неопределено Тогда
			СтрокаНазначения.Рецепт = "";
		КонецЕсли;
	КонецЕсли;
	ЗанятыеПозицииВРецептах[Индекс] = Неопределено;
	ЭтотОбъект["Назначение_" + Прав(Окончание, 3)] = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВРецепт(Команда)
	
	ТекущиеДанные = Элементы.Назначения.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И Не ЗначениеЗаполнено(ТекущиеДанные.Рецепт)
	Тогда
		// Обработка признака наркотического препарата.
		Окончание = Число(Прав(Команда.Имя, 1));
		ФормаРецепта = ЭтотОбъект["ФормаРецепта" + Строка(Окончание)];
		Если ТекущиеДанные.Наркотическое 
			И ФормаРецепта <> ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_у_НП")
		Тогда
			Если ЗначениеЗаполнено(ФормаРецепта) Тогда
				ПоказатьВопрос(Новый ОписаниеОповещения("ПеренестиВРецепт_Завершение", ЭтотОбъект, Новый Структура("Окончание, ТекущиеДанные",Окончание, ТекущиеДанные)),
							   "Добавить наркотическое вещество в рецепт с текущей формой?",РежимДиалогаВопрос.ДаНетОтмена);
				Возврат; // Ждём ответа.
			Иначе
				// Принудительно присваиваем форму 107/у-НП
				ЭтотОбъект["ФормаРецепта" + Строка(Окончание)] = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_у_НП");
			КонецЕсли;
		КонецЕсли;
		
		ПеренестиВРецепт_Завершение(КодВозвратаДиалога.Да, Новый Структура("Окончание, ТекущиеДанные",Окончание, ТекущиеДанные));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	Окончание = Число(Прав(Команда.Имя, 1));
	
	ЭтотОбъект["Формарецепта" + Строка(Окончание)] = ПредопределенноеЗначение("Перечисление.ФормыРецептов.ПустаяСсылка");
	Для Индекс = Окончание * 3 - 2 По Окончание * 3 Цикл
		Если ЗанятыеПозицииВРецептах[Индекс - 1] <> Неопределено Тогда
			СтрокаНазначения = Назначения.НайтиПоИдентификатору(ЗанятыеПозицииВРецептах[Индекс - 1]);
			Если СтрокаНазначения <> Неопределено Тогда
				СтрокаНазначения.Рецепт = "";	
			КонецЕсли;
			ЗанятыеПозицииВРецептах[Индекс - 1] = Неопределено;
			ЭтотОбъект["Назначение_" + Строка(Окончание) + "_" + Строка(Индекс - (Окончание - 1) * 3)] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьРецепт(Команда)
	
	Окончание = Число(Прав(Команда.Имя, 1)); 
	Номенклатура = ПолучитьНоменклатуруРецепта(Окончание);
	
	Если Номенклатура.Количество() > 0 Тогда
		ЗначенияЗаполнения = Новый Структура("Прием, Врач, Клиент, МедицинскаяКарта, ФормаРецепта",
											  Прием, 
											  Врач, 
											  Клиент, 
											  МедицинскаяКарта,
											  ЭтотОбъект["ФормаРецепта" + Строка(Окончание)]);
		
		ЗначенияЗаполнения.Вставить("Номенклатура",	Номенклатура);
		
		НомерРецептаПриСоздании = Строка(Окончание);
		
		ОткрытьФорму("Документ.Рецепт.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения), ЭтотОбъект,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФормаРецептаПриИзменении(Элемент)
	
	Окончание = Прав(Элемент.Имя, 1);
	Если ЭтотОбъект["ФормаРецепта" + Окончание] = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у") Тогда
		Элементы["ГруппаНазначение_" + Окончание + "_2"].Доступность = Истина;
		Элементы["ГруппаНазначение_" + Окончание + "_3"].Доступность = Истина;
	Иначе
		Элементы["ГруппаНазначение_" + Окончание + "_2"].Доступность = Ложь;
		ОчиститьНазначение(Новый Структура("Имя", Окончание + "_2"));
		Элементы["ГруппаНазначение_" + Окончание + "_3"].Доступность = Ложь;
		ОчиститьНазначение(Новый Структура("Имя", Окончание + "_3"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НазначенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаНазначения = Элементы.Назначения.ТекущиеДанные;
	Если ЗначениеЗаполнено(СтрокаНазначения.Рецепт) Тогда
		Возврат;
	КонецЕсли;
	
	НомерПодходящегоРецепта = 0;
	
	Форма107у = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у");
	
	// Выбираем, в какой рецепт добавить препарат
	Для НомерРецепта = 1 По 3 Цикл
		
		Если ЗначениеЗаполнено(ЭтотОбъект["Рецепт" + НомерРецепта]) Тогда
			// Рецепт уже создан
			Продолжить;
		КонецЕсли;
		
		// Отработка флага наркотического
		Если СтрокаНазначения.Наркотическое 
			И ЗначениеЗаполнено(ЭтотОбъект["ФормаРецепта" + НомерРецепта])
			И ЭтотОбъект["ФормаРецепта" + НомерРецепта] <> ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_у_НП")
		Тогда
			Продолжить;
		КонецЕсли;
		
		НомерСвободнойПозиции = НайтиСвободнуюПозициюВРецепте(НомерРецепта);
		
		Если ЗначениеЗаполнено(НомерСвободнойПозиции) Тогда
			
			Если СтрокаНазначения.Наркотическое Тогда // С учётом отсева выше.
				ЭтотОбъект["ФормаРецепта" + НомерРецепта] = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_у_НП");
			КонецЕсли;
			
			// Заполняем назначение в рецепте.
			ПеренестиВРецепт_Завершение(КодВозвратаДиалога.Да, Новый Структура("Окончание, ТекущиеДанные", НомерРецепта, СтрокаНазначения));
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Функция ПолучитьИндексНазначения(ИмяПоля)
	
	НомерРецепта = Число(Лев(ИмяПоля, 1));
	НомерСтроки = Число(Прав(ИмяПоля, 1)); 
	
	Возврат 3 * (НомерРецепта - 1) + НомерСтроки - 1;
	
КонецФункции

&НаКлиенте
Функция ПолучитьНоменклатуруРецепта(НомерРецепта)
	
	Номенклатура = Новый Массив;
	
	Для Индекс = НомерРецепта * 3 - 2 По НомерРецепта * 3 Цикл
		Если ТипЗнч(ЗанятыеПозицииВРецептах[Индекс - 1]) = Тип("Число") Тогда 
			СтрокаНазначения = Назначения.НайтиПоИдентификатору(ЗанятыеПозицииВРецептах[Индекс - 1]);
			Если СтрокаНазначения <> Неопределено Тогда
				РеквизитыНоменклатуры = Новый Структура;
				РеквизитыНоменклатуры.Вставить("Номенклатура",		СтрокаНазначения.Назначение);
				РеквизитыНоменклатуры.Вставить("ЕдиницаИзмерения",	СтрокаНазначения.ЕдиницаИзмерения);
				РеквизитыНоменклатуры.Вставить("Количество",		СтрокаНазначения.Количество);
				РеквизитыНоменклатуры.Вставить("КоличествоДней",	СтрокаНазначения.КоличествоДней);
				РеквизитыНоменклатуры.Вставить("ПриемовВДень",		СтрокаНазначения.ПриемовВДень);
				РеквизитыНоменклатуры.Вставить("Дозировка",			СтрокаНазначения.Дозировка);
				Номенклатура.Добавить(РеквизитыНоменклатуры);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Номенклатура
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПоследниеФормыРецептовНазначений()
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТаблицаНазначений.Назначение КАК Назначение
	               |ПОМЕСТИТЬ ТаблицаНазначений
	               |ИЗ
	               |	&ТаблицаНазначений КАК ТаблицаНазначений
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаНазначений.Назначение КАК Назначение,
	               |	Рецепт.Дата КАК Дата,
	               |	Рецепт.ФормаРецепта КАК ФормаРецепта
	               |ПОМЕСТИТЬ НазначениеДатаФорма
	               |ИЗ
	               |	ТаблицаНазначений КАК ТаблицаНазначений
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рецепт КАК Рецепт
	               |		ПО (ТаблицаНазначений.Назначение = Рецепт.Номенклатура1
	               |				ИЛИ ТаблицаНазначений.Назначение = Рецепт.Номенклатура2
	               |				ИЛИ ТаблицаНазначений.Назначение = Рецепт.Номенклатура3)
	               |			И (НЕ Рецепт.ПометкаУдаления)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НазначениеДатаФорма.Назначение КАК Назначение,
	               |	МАКСИМУМ(НазначениеДатаФорма.Дата) КАК Дата
	               |ПОМЕСТИТЬ ПоследняяДатаНазначения
	               |ИЗ
	               |	НазначениеДатаФорма КАК НазначениеДатаФорма
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НазначениеДатаФорма.Назначение
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ПоследняяДатаНазначения.Назначение КАК Назначение,
	               |	НазначениеДатаФорма.ФормаРецепта КАК ПоследняяФормаРецепта
	               |ИЗ
	               |	ПоследняяДатаНазначения КАК ПоследняяДатаНазначения
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НазначениеДатаФорма КАК НазначениеДатаФорма
	               |		ПО ПоследняяДатаНазначения.Назначение = НазначениеДатаФорма.Назначение
	               |			И ПоследняяДатаНазначения.Дата = НазначениеДатаФорма.Дата";
	
	Запрос.УстановитьПараметр("ТаблицаНазначений", РеквизитФормыВЗначение("Назначения"));
	Выборка = Запрос.Выполнить().Выбрать();
	Отбор = Новый Структура("Назначение");
	                                                   
	ФормыРецептовСовпадают = Истина;
	ПоследняяФормаРецепта = Неопределено;
	
	Для Каждого СтрокаНазначения Из Назначения Цикл
		Отбор.Назначение = СтрокаНазначения.Назначение;
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Отбор) Тогда
			СтрокаНазначения.ПоследняяФормаРецепта = Выборка.ПоследняяФормаРецепта;
			
			Если ФормыРецептовСовпадают 
				И Выборка.ПоследняяФормаРецепта <> ПоследняяФормаРецепта
				И ПоследняяФормаРецепта <> Неопределено
			Тогда
				ФормыРецептовСовпадают = Ложь;
			Иначе
				ПоследняяФормаРецепта = Выборка.ПоследняяФормаРецепта;
			КонецЕсли;
		Иначе
			ФормыРецептовСовпадают = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если ФормыРецептовСовпадают Тогда
		ФормаРецепта1 = ПоследняяФормаРецепта;
		ФормаРецепта2 = ПоследняяФормаРецепта;
		ФормаРецепта3 = ПоследняяФормаРецепта;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АктивироватьСледующуюСтрокуНазначения(Знач ТекущаяСтрока)
	
	Элементы.Назначения.ТекущаяСтрока = ТекущаяСтрока + 1;
	Если Элементы.Назначения.ТекущаяСтрока = Неопределено
		Или Элементы.Назначения.ТекущиеДанные.Рецепт <> ""
	Тогда
		МассивИдентификаторовСтрок = Новый Массив;
		Для Каждого СтрокаНазначения Из Назначения Цикл
			Идентификатор = СтрокаНазначения.ПолучитьИдентификатор();
			Если СтрокаНазначения.Рецепт = "" Или Идентификатор = ТекущаяСтрока Тогда
				МассивИдентификаторовСтрок.Добавить(Идентификатор);
			КонецЕсли;
		КонецЦикла;
		Если МассивИдентификаторовСтрок.Количество() = 1 Тогда
			Элементы.Назначения.ТекущаяСтрока = ТекущаяСтрока;
		Иначе
			Индекс = МассивИдентификаторовСтрок.Найти(ТекущаяСтрока);
			Если Индекс <> Неопределено Тогда
				Элементы.Назначения.ТекущаяСтрока = ?(Индекс + 1 > МассивИдентификаторовСтрок.Количество() - 1, МассивИдентификаторовСтрок[0], МассивИдентификаторовСтрок[Индекс + 1]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиВРецепт_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Окончание = ДополнительныеПараметры.Окончание;
	ТекущиеДанные = ДополнительныеПараметры.ТекущиеДанные;
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ИндексКонцаЦикла = ?(ЭтотОбъект["ФормаРецепта" + Строка(Окончание)] = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у"),Окончание * 3,Окончание * 3 - 2);
		Для Индекс = Окончание * 3 - 2 По ИндексКонцаЦикла Цикл
			
			Если ТипЗнч(ЗанятыеПозицииВРецептах[Индекс - 1]) <> Тип("Число") Тогда
				
				ЗанятыеПозицииВРецептах[Индекс - 1] = ТекущиеДанные.ПолучитьИдентификатор();
				ЭтотОбъект["Назначение_" + Строка(Окончание) + "_" + Строка(Индекс - (Окончание - 1) * 3)] = ТекущиеДанные.Назначение;
				ТекущиеДанные.Рецепт = "№" + Строка(Окончание);
				
				Если Не ЗначениеЗаполнено(ЭтотОбъект["ФормаРецепта" + Строка(Окончание)]) Тогда
					ЭтотОбъект["ФормаРецепта" + Строка(Окончание)] = ТекущиеДанные.ПоследняяФормаРецепта;
					ФормаРецептаПриИзменении(Новый Структура("Имя",Строка(Окончание)));
				КонецЕсли;
				
				АктивироватьСледующуюСтрокуНазначения(Элементы.Назначения.ТекущаяСтрока);
				Прервать;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция НайтиСвободнуюПозициюВРецепте(НомерРецепта)
	
	ФормаРецепта = ЭтотОбъект["ФормаРецепта" + Строка(НомерРецепта)];
	КоличествоДопустимыхПозиций = ?(ФормаРецепта = ПредопределенноеЗначение("Перечисление.ФормыРецептов.Форма107_1_у"), 3, 1);
	
	Для НомерПозиции = 1 По КоличествоДопустимыхПозиций Цикл
		НомерАбсолютный = (НомерРецепта - 1) * 3 + НомерПозиции;
		
		Если ЗанятыеПозицииВРецептах[НомерАбсолютный - 1] = Неопределено Тогда
			Возврат НомерПозиции;
		КонецЕсли;
	КонецЦикла;
	
	Возврат 0;
	
КонецФункции

#КонецОбласти
