#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("ПечатьРецепта", "Печать рецепта");
	СтруктураМакетов.Вставить("ПечатьРецептаРодительный", "Печать рецепта с номенклатурой в родительном падеже");
	СтруктураМакетов.Вставить("ПечатьРецептаБезНоменклатуры", "Печать рецепта без номенклатуры");
	СтруктураМакетов.Вставить("ПечатьРецептаОборот", "Печать оборотной стороны рецепта");
	СтруктураМакетов.Вставить("ПечатьРецептаДвусторонняя", "Печать рецепта двусторонняя");
	СтруктураМакетов.Вставить("ПечатьРецептаДвусторонняяРодительный", "Печать рецепта двусторонняя с номенклатурой в родительном падеже");
	СтруктураМакетов.Вставить("ПечатьРецептаБезНоменклатурыДвусторонняя", "Печать рецепта без номенклатуры двусторонняя");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка.Рецепт	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка					 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ПечатьРецепта" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Истина,Ложь,Ложь);
	ИначеЕсли ИмяМакета = "ПечатьРецептаРодительный" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Истина,Ложь,Истина);
	ИначеЕсли ИмяМакета = "ПечатьРецептаБезНоменклатуры" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Ложь,Ложь,Ложь);
	ИначеЕсли ИмяМакета = "ПечатьРецептаОборот" Тогда
		ТабДокумент = ПечатьРецептаОборот(СсылкаНаОбъект);
	ИначеЕсли ИмяМакета = "ПечатьРецептаДвусторонняя" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Истина,Истина,Ложь);
	ИначеЕсли ИмяМакета = "ПечатьРецептаДвусторонняяРодительный" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Истина,Истина,Истина);
	ИначеЕсли ИмяМакета = "ПечатьРецептаБезНоменклатурыДвусторонняя" Тогда
		ТабДокумент = ПечатьРецепта(СсылкаНаОбъект,Ложь,Истина,Ложь);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

// Функция - Получить количество рецептов приема
//
// Параметры:
//  Прием	 - ДокументСсылка.Прием	 - прием.
// 
// Возвращаемое значение:
//	Число.
//
Функция ПолучитьКоличествоРецептовПриема(Прием) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.Рецепт) Тогда
		Возврат 0;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Прием) Тогда
		Возврат 0;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПервичныйПрием", Прием);
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Прием.Ссылка КАК Ссылка
		|ПОМЕСТИТЬ Приемы
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	(Прием.ПервичныйПрием = &ПервичныйПрием
		|			ИЛИ Прием.Ссылка = &ПервичныйПрием)
		|	И Прием.Проведен
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Рецепт.Ссылка) КАК Количество
		|ИЗ
		|	Приемы КАК Приемы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Рецепт КАК Рецепт
		|		ПО (НЕ Рецепт.ПометкаУдаления)
		|			И Приемы.Ссылка = Рецепт.Прием";

	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	Возврат Выборка.Количество;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьРецепта(СсылкаНаОбъект,ПечататьНоменклатуру,ДвусторонняяПечать, НоменклатураВРодительномПадеже)
	
	Перем ФормаРецепта;
	
	пчФормыРецептов = Перечисления.ФормыРецептов;
	ФормаРецепта = СсылкаНаОбъект.ФормаРецепта;
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОтображатьСетку = Ложь;
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.КлючПараметровПечати = "РецептурныйБланк"
									+ ФормаРецепта.Метаданные().ЗначенияПеречисления.Получить(пчФормыРецептов.Индекс(ФормаРецепта)).Имя;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Рецепт.Филиал КАК Филиал,
	               |	Рецепт.Врач.Фамилия + "" "" + Рецепт.Врач.Имя + "" "" + Рецепт.Врач.Отчество КАК ВрачФИО,
	               |	Рецепт.Клиент.Фамилия + "" "" + Рецепт.Клиент.Имя + "" "" + Рецепт.Клиент.Отчество КАК ПациентФИО,
	               |	Рецепт.Клиент.ДатаРождения КАК ПациентДатаРождения,
	               |	Рецепт.МедицинскаяКарта.НомерКарты КАК ПациентНомерМедКарты,
	               |	Рецепт.Полис.Серия КАК ПолисСерия,
	               |	Рецепт.Полис.Номер КАК ПолисНомер,
	               |	ВЫБОР
	               |		КОГДА Рецепт.Взрослый = 1
	               |			ТОГДА ""(Взрослый)""
	               |		КОГДА Рецепт.Взрослый = 2
	               |			ТОГДА ""(Детский)""
	               |		ИНАЧЕ ""(Взрослый, детский - нужное подчеркнуть)""
	               |	КОНЕЦ КАК ВзрослыйИлиДетский,
	               |	Рецепт.Срок,
	               |	Рецепт.Номер,
	               |	Рецепт.Дата,
	               |	ВЫБОР
	               |		КОГДА Рецепт.ХарактеристикаНоменклатуры1 = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА Рецепт.Номенклатура1
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Рецепт.Номенклатура1 ССЫЛКА Справочник.Номенклатура
	               |					ТОГДА Рецепт.Номенклатура1.Наименование + "", "" + Рецепт.ХарактеристикаНоменклатуры1.Наименование
	               |				ИНАЧЕ Рецепт.Номенклатура1
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Номенклатура1,
	               |	Рецепт.Количество1,
	               |	Рецепт.ЕдиницаИзмерения1 КАК ЕдИзм1,
	               |	Рецепт.Дозировка1,
	               |	ВЫБОР
	               |		КОГДА Рецепт.Дозировка1 <> """"
	               |			ТОГДА "", "" + Рецепт.Дозировка1
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноСна1 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноСна1
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноЕды1 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноЕды1
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.СпособПрименения1 <> """"
	               |			ТОГДА "", "" + Рецепт.СпособПрименения1
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.Дополнение1 <> """"
	               |			ТОГДА "", "" + Рецепт.Дополнение1
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дополнение1,
	               |	Рецепт.РазВДень1,
	               |	Рецепт.СколькоДней1,
	               |	ВЫБОР
	               |		КОГДА Рецепт.ХарактеристикаНоменклатуры2 = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА Рецепт.Номенклатура2
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Рецепт.Номенклатура2 ССЫЛКА Справочник.Номенклатура
	               |					ТОГДА Рецепт.Номенклатура2.Наименование + "", "" + Рецепт.ХарактеристикаНоменклатуры2.Наименование
	               |				ИНАЧЕ Рецепт.Номенклатура2
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Номенклатура2,
	               |	Рецепт.Количество2,
	               |	Рецепт.ЕдиницаИзмерения2 КАК ЕдИзм2,
	               |	Рецепт.Дозировка2,
	               |	ВЫБОР
	               |		КОГДА Рецепт.Дозировка2 <> """"
	               |			ТОГДА "", "" + Рецепт.Дозировка2
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноСна2 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноСна2
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноЕды2 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноЕды2
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.СпособПрименения2 <> """"
	               |			ТОГДА "", "" + Рецепт.СпособПрименения2
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.Дополнение2 <> """"
	               |			ТОГДА "", "" + Рецепт.Дополнение2
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дополнение2,
	               |	Рецепт.РазВДень2,
	               |	Рецепт.СколькоДней2,
	               |	ВЫБОР
	               |		КОГДА Рецепт.ХарактеристикаНоменклатуры3 = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	               |			ТОГДА Рецепт.Номенклатура3
	               |		ИНАЧЕ ВЫБОР
	               |				КОГДА Рецепт.Номенклатура3 ССЫЛКА Справочник.Номенклатура
	               |					ТОГДА Рецепт.Номенклатура3.Наименование + "", "" + Рецепт.ХарактеристикаНоменклатуры3.Наименование
	               |				ИНАЧЕ Рецепт.Номенклатура3
	               |			КОНЕЦ
	               |	КОНЕЦ КАК Номенклатура3,
	               |	Рецепт.Количество3,
	               |	Рецепт.ЕдиницаИзмерения3 КАК ЕдИзм3,
	               |	Рецепт.Дозировка3,
	               |	ВЫБОР
	               |		КОГДА Рецепт.Дозировка3 <> """"
	               |			ТОГДА "", "" + Рецепт.Дозировка3
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноСна3 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноСна3
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.ВремяПриемаОтносительноЕды3 <> """"
	               |			ТОГДА "", "" + Рецепт.ВремяПриемаОтносительноЕды3
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.СпособПрименения3 <> """"
	               |			ТОГДА "", "" + Рецепт.СпособПрименения3
	               |		ИНАЧЕ """"
	               |	КОНЕЦ + ВЫБОР
	               |		КОГДА Рецепт.Дополнение3 <> """"
	               |			ТОГДА "", "" + Рецепт.Дополнение3
	               |		ИНАЧЕ """"
	               |	КОНЕЦ КАК Дополнение3,
	               |	Рецепт.РазВДень3,
	               |	Рецепт.СколькоДней3,
	               |	Рецепт.Клиент.СНИЛС КАК СНИЛС,
	               |	ВЫБОР
	               |		КОГДА Рецепт.Срочность = ""нет""
	               |			ТОГДА """"
	               |		ИНАЧЕ Рецепт.Срочность
	               |	КОНЕЦ КАК Срочность
				   |	
	               |ИЗ
	               |	Документ.Рецепт КАК Рецепт
	               |ГДЕ
	               |	Рецепт.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", СсылкаНаОбъект);
	
	ТабДанныеДокумента = Запрос.Выполнить().Выгрузить();
	
	Если НоменклатураВРодительномПадеже Тогда
		Для Каждого стр  Из ТабДанныеДокумента  Цикл
			Если ЗначениеЗаполнено(стр.Номенклатура1) Тогда
				стр.Номенклатура1 = ПолучитьСклоненияСтроки(Строка(стр.Номенклатура1),, "ПД=Родительный")[0];
			КонецЕсли;
			Если ЗначениеЗаполнено(стр.Номенклатура2) Тогда
				стр.Номенклатура2 = ПолучитьСклоненияСтроки(Строка(стр.Номенклатура2),, "ПД=Родительный")[0];
			КонецЕсли;
			Если ЗначениеЗаполнено(стр.Номенклатура3) Тогда
				стр.Номенклатура3 = ПолучитьСклоненияСтроки(Строка(стр.Номенклатура3),, "ПД=Родительный")[0];
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого стр  Из ТабДанныеДокумента  Цикл
		стр.Дополнение1 = ДополнитьДобавочнойСтрокой(стр.РазВДень1, стр.СколькоДней1) + стр.Дополнение1;
		Если Лев(стр.Дополнение1,2) = ", " Тогда 
			стр.Дополнение1 = Сред(стр.Дополнение1, 3);
		КонецЕсли;	
		стр.Дополнение2 = ДополнитьДобавочнойСтрокой(стр.РазВДень2, стр.СколькоДней2) + стр.Дополнение2; 			
		Если Лев(стр.Дополнение2,2) = ", " Тогда 
			стр.Дополнение2 = Сред(стр.Дополнение2, 3);
		КонецЕсли;	
		стр.Дополнение3 = ДополнитьДобавочнойСтрокой(стр.РазВДень3, стр.СколькоДней3) + стр.Дополнение3; 			
		Если Лев(стр.Дополнение3,2) = ", " Тогда 
			стр.Дополнение3 = Сред(стр.Дополнение3, 3);
		КонецЕсли;	
	КонецЦикла; 
	
	ДанныеДокумента = Новый Структура;
	Для Каждого Колонка Из ТабДанныеДокумента.Колонки Цикл
		ДанныеДокумента.Вставить(Колонка.Имя, ТабДанныеДокумента[0][Колонка.Имя]);
	КонецЦикла;
	
	ДанныеДокумента.Номер = ОбщегоНазначения.ПолучитьНомерНаПечать(ДанныеДокумента);
	
	Если СсылкаНаОбъект.АдресИлиНомер = "Адрес" Или СсылкаНаОбъект.АдресИлиНомер = "АдресПациента" Тогда
		
		ВидыКИ = Новый Массив;
		ВидыКИ.Добавить(Справочники.ВидыКонтактнойИнформации.АдресФактический);
		Адрес = КонтактнаяИнформацияСервер.ПолучитьКИОбъекта(СсылкаНаОбъект.Клиент, Перечисления.ТипыКонтактнойИнформации.Адрес, Справочники.ВидыКонтактнойИнформации.АдресФактический);
		Если Адрес = Неопределено Тогда
			Адрес = КонтактнаяИнформацияСервер.ПолучитьКИОбъекта(СсылкаНаОбъект.Клиент, Перечисления.ТипыКонтактнойИнформации.Адрес);
		КонецЕсли;
		
		ДанныеДокумента.ПациентНомерМедКарты = Адрес;
		
	КонецЕсли;
	
	ДанныеОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(ДанныеДокумента.Филиал);
	
	Если ФормаРецепта = пчФормыРецептов.Форма107_1_у Тогда
		
		Макет = ПолучитьМакет("Форма107_1_у").ПолучитьОбласть("ЛицеваяСторона");
		СтрокаИсключений =	"Номенклатура1, Количество1, ЕдИзм1, Дополнение1,
							|Номенклатура2, Количество2, ЕдИзм2, Дополнение2,
							|Номенклатура3, Количество3, ЕдИзм3, Дополнение3,";
		
		Макет.Параметры.ОКПО = ДанныеОрганизации.ОКПО;
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма107_у_НП Тогда
		
		Макет = ПолучитьМакет("Форма107_у_НП");
		СтрокаИсключений =	"Номенклатура1, Количество1, ЕдИзм1, Дополнение1";
		Макет.Параметры.ПациентВозраст = ОбщегоНазначенияБИТКлиентСервер.ВозрастСтруктурой(ДанныеДокумента.ПациентДатаРождения, ДанныеДокумента.Дата).Лет; 
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_88 Тогда
		
		Макет = ПолучитьМакет("Форма148_1_у_88").ПолучитьОбласть("ЛицеваяСторона");
		СтрокаИсключений =	"Номенклатура1, Количество1, ЕдИзм1, Дополнение1";
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_04_л Тогда
		
		Макет = ПолучитьМакет("Форма148_1_у_04_л").ПолучитьОбласть("ЛицеваяСторона");
		СтрокаИсключений =	"Номенклатура1, Количество1, ЕдИзм1, Дополнение1";
		
		ЗаполнитьПараметрПосимвольно(Макет,"СНИЛС", ДанныеДокумента.СНИЛС, 20);
		ЗаполнитьПараметрПосимвольно(Макет,?(СтрДлина(ДанныеОрганизации.ОГРН) = 15, "ОГРНИП", "ОГРН"), ДанныеОрганизации.ОГРН, 15);
		ЗаполнитьПараметрПосимвольно(Макет,"ОМС", СсылкаНаОбъект.Полис.Номер, 25);
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_06_л Тогда
		
		Макет = ПолучитьМакет("Форма148_1_у_06_л");
		СтрокаИсключений =	"Номенклатура1, Количество1, ЕдИзм1";
		
		ЗаполнитьПараметрПосимвольно(Макет,"СНИЛС", ДанныеДокумента.СНИЛС, 14);
		ЗаполнитьПараметрПосимвольно(Макет,"ОГРН", ДанныеОрганизации.ОГРН, 15);
		ЗаполнитьПараметрПосимвольно(Макет,"ОМС", СсылкаНаОбъект.Полис.Номер, 25);
		
	КонецЕсли;
	
	// Медицинская организация (место штампа)
	Если ФормаРецепта = пчФормыРецептов.Форма107_1_у
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_88
	Тогда
		Лицензия = ?(ЗначениеЗаполнено(ДанныеОрганизации.Лицензия), "Лицензия на осуществление медицинской деятельности" + " № " + ДанныеОрганизации.Лицензия, "");
		ЛицензияДата = ?(ЗначениеЗаполнено(ДанныеОрганизации.ЛицензияДата), " от " + Формат(ДанныеОрганизации.ЛицензияДата, "ДФ=dd.MM.yyyy"), "");
		
		ПоляОрганизации = ОбщегоНазначенияБИТКлиентСервер.НовыйМассив(ДанныеОрганизации.НазваниеОрганизации,
																	  ДанныеОрганизации.Адрес,
																	  Лицензия,
																	  ЛицензияДата);
		СведенияОМедицинскойОрганизации = "";
		Для Каждого ПолеОрганизации Из ПоляОрганизации Цикл
			ОбщегоНазначенияБИТКлиентСервер.КонкатенацияСтрок(СведенияОМедицинскойОрганизации, ПолеОрганизации, Символы.ПС, Истина);
		КонецЦикла;
		Макет.Параметры.СведенияОМедицинскойОрганизации = СокрЛП(СведенияОМедицинскойОрганизации);
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Макет.Параметры, "Серия") Тогда
		Макет.Параметры.Серия = СсылкаНаОбъект.Серия;	
	КонецЕсли;
		
	Если ПечататьНоменклатуру Тогда
		ЗаполнитьЗначенияСвойств(Макет.Параметры,ДанныеДокумента);
	Иначе
		ЗаполнитьЗначенияСвойств(Макет.Параметры,ДанныеДокумента,,СтрокаИсключений);
	КонецЕсли;
	
	Если ФормаРецепта = пчФормыРецептов.Форма107_1_у
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_88
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_04_л
	Тогда 
	
		Макет.Параметры.ПациентФИО = ОбщегоНазначения.ФамилияИнициалыФизЛица(ДанныеДокумента.ПациентФИО); 	
		Макет.Параметры.ВрачФИО = ОбщегоНазначения.ФамилияИнициалыФизЛица(ДанныеДокумента.ВрачФИО); 
		
		Если Не ФормаРецепта = пчФормыРецептов.Форма148_1_у_04_л Тогда 
			Если ЗначениеЗаполнено(ДанныеДокумента.ПациентДатаРождения) Тогда
				ДатаРожденияПациента = ДанныеДокумента.ПациентДатаРождения;
				ДатаДокумента = ДанныеДокумента.Дата;
			    ДатаРожденияПациентаСтрокой = Формат(ДатаРожденияПациента, "ДЛФ=D"); 
				ПолноеЧислоЛет = ОбщегоНазначенияКлиентСервер.ПолучитьПолноеЧислоЛетСДаты(ДатаРожденияПациента, ДатаДокумента);
				Если ПолноеЧислоЛет = 0 Тогда 
					ВозрастПациентаСтрокой = ОбщегоНазначенияКлиентСервер.ПолучитьВозрастСтрокой(ДатаРожденияПациента, ДатаДокумента, Ложь);
					ДатаРожденияПациентаСтрокой = ДатаРожденияПациентаСтрокой + ", " + ВозрастПациентаСтрокой;
				КонецЕсли;
				Макет.Параметры.ПациентДатаРождения = ДатаРожденияПациентаСтрокой; 	
			КонецЕсли;
		Иначе
			
			ТелефонДляСогласованияЛП = КонтактнаяИнформацияСервер.ПолучитьКИОбъекта(РаботаСДокументамиСервер.ФилиалДокумента(СсылкаНаОбъект), 
																					Перечисления.ТипыКонтактнойИнформации.Телефон, 
																					Справочники.ВидыКонтактнойИнформации.ТелефонОрганизации);
			Макет.Параметры.ТелефонДляСогласованияЛП = ?(ЗначениеЗаполнено(ТелефонДляСогласованияЛП), ТелефонДляСогласованияЛП, "__(_____)_____________"); 
			
		КонецЕсли;
		
	КонецЕсли;
	
	СрокДействия = "";
	Если ФормаРецепта = пчФормыРецептов.Форма107_1_у Тогда
				
		СрокДействия = Строка(ДанныеДокумента.Срок * 30) + " дней";
		
		Если ЗначениеЗаполнено(СсылкаНаОбъект.ПериодичностьОтпуска) Тогда
			Макет.Параметры.ПериодичностьОтпуска = "Периодичность отпуска: " + СсылкаНаОбъект.ПериодичностьОтпуска;				
		КонецЕсли;
		
		
		Макет.Параметры.СрокДействия = СрокДействия;
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_04_л
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_06_л
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_88
	Тогда
		
		// Данные условные коды используются в форме документа в поле переключателя
		Если ДанныеДокумента.Срок = 40 Тогда
			СрокДействия = "5 дней";
		ИначеЕсли ДанныеДокумента.Срок = 50 Тогда
			СрокДействия = "15 дней";
		ИначеЕсли ДанныеДокумента.Срок = 60 Тогда
			СрокДействия = "90 дней";
		ИначеЕсли ДанныеДокумента.Срок = 70 Тогда
			СрокДействия = "60 дней";
		ИначеЕсли ДанныеДокумента.Срок = 80 Тогда
			СрокДействия = "180 дней";	
		Иначе
			СрокДействия = "30 дней";
		КонецЕсли;	
		
		Макет.Параметры.СрокДействия = СрокДействия;
	КонецЕсли;
	
	Макет.Параметры.ПоСпециальномуНазначению = ?(СсылкаНаОбъект.ПоСпециальномуНазначению, "По специальному назначению", "");
	
	ТабДокумент.Вывести(Макет);
	
	Если ДвусторонняяПечать Тогда
		ТабДокумент.ДвусторонняяПечать = ТипДвустороннейПечати.ИспользоватьНастройкиПринтера;
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ПечатьРецептаОборот(СсылкаНаОбъект, ТабДокумент);
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПечатьРецептаОборот(СсылкаНаОбъект, ТабДокумент = Неопределено)
	
	пчФормыРецептов = Перечисления.ФормыРецептов;
	ФормаРецепта = СсылкаНаОбъект.ФормаРецепта;
	
	Если ТабДокумент = Неопределено Тогда
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ОтображатьСетку = Ложь;
		ТабДокумент.АвтоМасштаб = Истина;
		ТабДокумент.КлючПараметровПечати = "РецептурныйБланк"
										 + ФормаРецепта.Метаданные().ЗначенияПеречисления.Получить(пчФормыРецептов.Индекс(ФормаРецепта)).Имя;
	КонецЕсли; 
	
	Если ФормаРецепта = пчФормыРецептов.Форма107_1_у
		Или ФормаРецепта = пчФормыРецептов.Форма107_у_НП
	Тогда
		
		Макет = ПолучитьМакет("Форма107_1_у").ПолучитьОбласть("ОборотнаяСторона");
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_88 Тогда
		
		Макет = ПолучитьМакет("Форма148_1_у_88").ПолучитьОбласть("ОборотнаяСторона");
		
	ИначеЕсли ФормаРецепта = пчФормыРецептов.Форма148_1_у_04_л
		Или ФормаРецепта = пчФормыРецептов.Форма148_1_у_06_л
	Тогда
		
		Макет = ПолучитьМакет("Форма148_1_у_04_л").ПолучитьОбласть("ОборотнаяСторона");
		
	КонецЕсли;
 
	ТабДокумент.Вывести(Макет);
	
	Возврат ТабДокумент;
	
КонецФункции

Процедура ЗаполнитьПараметрПосимвольно(ОбластьМакета,БазовоеИмяПараметра, Знач СтрокаЗначение, КоличествоСимволов = 0)
	
	СтрокаЗначение = СокрЛП(СтрокаЗначение);
	Если КоличествоСимволов > 0 Тогда
		СтрокаЗначение = Лев(СтрокаЗначение, КоличествоСимволов);
	КонецЕсли;
	
	Для сч = 1 По СтрДлина(СтрокаЗначение) Цикл
		ОбластьМакета.Параметры[БазовоеИмяПараметра+Строка(сч)] = Сред(СтрокаЗначение,сч,1);
	КонецЦикла;
	
КонецПроцедуры

Функция ДополнитьДобавочнойСтрокой(Реквизит1,Реквизит2)
	
	ДобавочнаяСтрока = "";
	Если Реквизит1 <> 0 Тогда
		ДобавочнаяСтрока = Строка(Реквизит1) + " раз(а) в день";
	КонецЕсли;
	
	Если Реквизит2 <> 0 Тогда
		ДобавочнаяСтрока = ДобавочнаяСтрока + ", " + Строка(Реквизит2) + " дней";
	КонецЕсли; 
	
	Возврат ДобавочнаяСтрока;

КонецФункции

#КонецОбласти