
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РаботаСФормамиСервер.ФормаДокументаПриОткрытииСервер(ЭтаФорма, Ложь);
	
	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	Валюта = мУчетнаяПолитика.ВалютаУчета;
	
	Если Не ЗначениеЗаполнено(Объект.ВидОперации) Тогда
		Объект.ВидОперации = Перечисления.ВидыОперацийКорректировкиДолга.Корректировка;
	КонецЕсли;
	
	ПоДокументам = ЗначениеЗаполнено(Объект.СделкаПриемник) Или ЗначениеЗаполнено(Объект.СделкаИсточник);
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(Объект, Ложь, ЭтаФорма);
		
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьСостояниеСчета(Объект.КлиентПриемник, Элементы.КлиентПриемникБаланс, Объект.СделкаПриемник);
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиДолга.Передача") Тогда
		ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс, Объект.СделкаИсточник);
	КонецЕсли;
	ОбновитьТекстПоясненияОперации();
	
	ПриИзмененииВидОперации();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Не ПоДокументам Тогда
		Если ЗначениеЗаполнено(ТекущийОбъект.СделкаПриемник) Тогда
			ТекущийОбъект.СделкаПриемник = Неопределено;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекущийОбъект.СделкаИсточник) Тогда
			ТекущийОбъект.СделкаИсточник = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	РаботаСФормамиСервер.ВывестиЗаголовокФормыДокумента(Объект, Ложь, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Если ПараметрыЗаписи.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		ОбновитьСостояниеСчета(Объект.КлиентПриемник, Элементы.КлиентПриемникБаланс);
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиДолга.Передача") Тогда
			ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры
 
#Область ОбработчикиДинамическиСоздаваемыхКоманд

&НаКлиенте
Процедура Подключаемый_КнопкаФилиалПриНажатии(Команда)
	РаботаСДиалогамиКлиент.ДиалогКнопкаФилиалПриНажатии(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВывестиДвиженияДокумента(Команда) 
	РаботаСДиалогамиКлиент.ВывестиДвиженияДокумента(Объект.Ссылка, Команда);
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	ПриИзмененииВидОперации();

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииВидОперации()
	
	Элементы.КлиентИсточник.Доступность = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиДолга.Передача");
		
	Если Элементы.КлиентИсточник.Доступность Тогда
		Если ПоДокументам Тогда
			ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс, Объект.СделкаИсточник);
		Иначе
			ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс);
		КонецЕсли;
	Иначе 
		Элементы.КлиентИсточникБаланс.Заголовок = "";
	КонецЕсли;
	
	Элементы.СделкаПриемник.Видимость = ПоДокументам;
	Элементы.СделкаИсточник.Видимость = ПоДокументам;
	Элементы.ЗаполнитьКлиентаИсточникаПриемником.Видимость = ПоДокументам;
	
	ОбновитьТекстПоясненияОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеСчета(КлиентСсылка, НадписьБаланс, Сделка = Неопределено)
	
	Если КлиентСсылка.Пустая() Тогда
		НадписьБаланс.Заголовок = "";
		Возврат;
	КонецЕсли;
	
	ДатаБаланса = ПолучитьГраницуДатыДокумнета(Объект.Дата);
	СуммаНаСчету = РаботаСКлиентамиПереопределяемый.ПолучитьВзаиморасчетыСКлиентом(КлиентСсылка, ДатаБаланса, Сделка);

	НадписьБаланс.ЦветТекста = Новый Цвет(83, 106, 194);
	Если СуммаНаСчету > 0 Тогда
		НадписьБаланс.ЦветТекста = Новый Цвет(255, 0, 0);
		ТекстЗадолженность = НСтр("ru='Задолженность'");
		СостояниеСчета = ТекстЗадолженность + ": " + Формат(СуммаНаСчету, "ЧДЦ=2; ЧН=0") + " " + глКраткоеНаименованиеОсновнойВалюты;
	ИначеЕсли СуммаНаСчету < 0 Тогда
		ТекстНаСчету = НСтр("ru='На счету'");
		СостояниеСчета = ТекстНаСчету + ": " + Формат(-СуммаНаСчету, "ЧДЦ=2; ЧН=0") + " " + глКраткоеНаименованиеОсновнойВалюты;
	Иначе
		СостояниеСчета = НСтр("ru='Задолженность отсутствует'");
	КонецЕсли;
	НадписьБаланс.Заголовок = СостояниеСчета;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьГраницуДатыДокумнета(Дата)
	Возврат Новый Граница(Дата, ВидГраницы.Включая);
КонецФункции

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьСостояниеСчета(Объект.КлиентПриемник, Элементы.КлиентПриемникБаланс);
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиДолга.Передача") Тогда
		ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриемникПриИзменении(Элемент)
	ОбновитьСостояниеСчета(Объект.КлиентПриемник, Элементы.КлиентПриемникБаланс);	
	ОбновитьТекстПоясненияОперации();
КонецПроцедуры

&НаКлиенте
Процедура КлиентИсточникПриИзменении(Элемент)
	ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс);
	ОбновитьТекстПоясненияОперации();
КонецПроцедуры

&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	ОбновитьТекстПоясненияОперации();
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьТекстПоясненияОперации()
	
	ТекстБалансаКлиента = НСтр("ru='баланса клиента'");
	ТекстНа = НСтр("ru='на'");
	ТекстПояснения = "%УвеличенУменьшен% " + ТекстБалансаКлиента + " %Клиент% %ПоДокументу% " + ТекстНа + " %Сумма% " + глКраткоеНаименованиеОсновнойВалюты;

	СтруктураЗамен = Новый Структура;
	СтруктураЗамен.Вставить("УвеличенУменьшен", ?(Объект.Сумма >= 0, НСтр("ru='Увеличение'"), НСтр("ru='Уменьшение'")));
	СтруктураЗамен.Вставить("Сумма", Формат(Макс(Объект.Сумма, -Объект.Сумма), "ЧДЦ=2; ЧН=0"));
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийКорректировкиДолга.Корректировка") Тогда
		СтруктураЗамен.Вставить("Клиент", "");
	Иначе
		СтруктураЗамен.Вставить("Клиент", Строка(Объект.КлиентПриемник) + " ");
		ТекстЗаСчет = НСтр("ru='за счет'");
		ТекстПояснения = ТекстПояснения + " " + ТекстЗаСчет + " %УвеличенияУменьшения% " + ТекстБалансаКлиента + " %Клиент2% %ПоДокументу2%";
		
		СтруктураЗамен.Вставить("УвеличенияУменьшения", ?(Объект.Сумма >= 0, НСтр("ru='уменьшения'"), НСтр("ru='увеличения'")));
        СтруктураЗамен.Вставить("Клиент2", Строка(Объект.КлиентИсточник));
	КонецЕсли;
	
	Если ПоДокументам Тогда
		Если Объект.КлиентПриемник = Объект.КлиентИсточник Тогда
			СтруктураЗамен.Вставить("Клиент2", "");
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Объект.СделкаПриемник) Тогда
			// *** представление документа расчета
			ТекстПоДокументу = НСтр("ru='по документу'");
			СтруктураЗамен.Вставить("ПоДокументу", " " + ТекстПоДокументу + " " + Объект.СделкаПриемник);
		Иначе
			СтруктураЗамен.Вставить("ПоДокументу", НСтр("ru='(общий баланс)'"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Объект.СделкаИсточник) Тогда
			// *** представление документа расчета
			ТекстПоДокументу = НСтр("ru='по документу'");
			СтруктураЗамен.Вставить("ПоДокументу2",  " " + ТекстПоДокументу + " " + Объект.СделкаИсточник);
		Иначе
			СтруктураЗамен.Вставить("ПоДокументу2", НСтр("ru='(общий баланс)'"));
		КонецЕсли;
	Иначе
		СтруктураЗамен.Вставить("ПоДокументу", "");			
		СтруктураЗамен.Вставить("ПоДокументу2", "");			
	КонецЕсли;
	
	Для Каждого КлючЗначение Из СтруктураЗамен Цикл
		ТекстПояснения = СтрЗаменить(ТекстПояснения, "%" + КлючЗначение.Ключ + "%", КлючЗначение.Значение);
	КонецЦикла;
	
	ТекстПояснения = СтрЗаменить(ТекстПояснения,"   "," ");
	ТекстПояснения = СтрЗаменить(ТекстПояснения,"  "," ");
	
	Элементы.ОписаниеОперации.Заголовок = ТекстПояснения;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКлиентаИсточникаПриемником(Команда)
	
	Объект.КлиентИсточник = Объект.КлиентПриемник;
	ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс);
	ОбновитьТекстПоясненияОперации();

КонецПроцедуры

&НаКлиенте
Процедура СделкаПриемникПриИзменении(Элемент)
	СделкаПриИзменении(Объект.СделкаПриемник);
	ОбновитьСостояниеСчета(Объект.КлиентПриемник, Элементы.КлиентПриемникБаланс);
	ОбновитьТекстПоясненияОперации();
КонецПроцедуры

&НаКлиенте
Процедура СделкаИсточникПриИзменении(Элемент)
	СделкаПриИзменении(Объект.СделкаИсточник);
	ОбновитьСостояниеСчета(Объект.КлиентИсточник, Элементы.КлиентИсточникБаланс, Объект.СделкаИсточник);
	ОбновитьТекстПоясненияОперации();
КонецПроцедуры

&НаКлиенте
Процедура СделкаПриИзменении(Сделка)
	
	Если ЗначениеЗаполнено(Сделка)
		И Не КомплексныеРасчетыКлиентов.РасчетСОбособленнымУчетомВзаиморасчетов(Сделка)
	Тогда
		Сделка = Неопределено;
		ПоказатьПредупреждение(,НСтр("ru='Вид выбранного документа не предполагает обособленное ведение взаиморасчетов (взаиморасчеты по документу ведутся в рамках общего баланса клиента)!'"), 30);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоДокументамПриИзменении(Элемент)
	
	Элементы.СделкаПриемник.Видимость = ПоДокументам;
	Элементы.СделкаИсточник.Видимость = ПоДокументам;
	
КонецПроцедуры
