#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Сотрудник	   = ОбщегоНазначенияКлиентСервер.СвойствоОбъекта(ДанныеЗаполнения, "Сотрудник");
	ДатаНачалаПлан = ОбщегоНазначенияКлиентСервер.СвойствоОбъекта(ДанныеЗаполнения, "ДатаНачалаПлан");
	
	Основание = ДанныеЗаполнения;
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Заявка") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		Примечание = ДанныеЗаполнения.Примечание;
		ЭтотОбъект.Филиал = ДанныеЗаполнения.Филиал;
		
		Для Каждого ТекСтрокаРаботы Из ДанныеЗаполнения.Работы Цикл
			НоваяСтрока = Работы.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаРаботы.Номенклатура;
			НоваяСтрока.Продолжительность = ТекСтрокаРаботы.Продолжительность;
		КонецЦикла;
		
		ДатаНачалаПлан = ДанныеЗаполнения.ДатаНачала;
		ДатаОкончанияПлан = ДатаНачалаПлан;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		// Заполнение шапки
		Клиент = ДанныеЗаполнения.Клиент;
		ЭтотОбъект.Филиал = ДанныеЗаполнения.Филиал;
		Для Каждого ТекСтрокаРаботы Из ДанныеЗаполнения.Работы Цикл
			НоваяСтрока = Работы.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаРаботы.Номенклатура;
			НоваяСтрока.Продолжительность	= Дата(1,1,1)
											+ ТекСтрокаРаботы.Номенклатура.ПродолжительностьЧас * 3600
											+ ТекСтрокаРаботы.Номенклатура.ПродолжительностьМин * 60;
		КонецЦикла;
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Прием") Тогда
		
		// Заполнение шапки
		Сотрудник = ДанныеЗаполнения.Врач;
		Клиент = ДанныеЗаполнения.Клиент;
		ЭтотОбъект.Филиал = ДанныеЗаполнения.Филиал;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.Клиенты") Тогда 
		
		Клиент = ДанныеЗаполнения;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Событие") Тогда 
		
		Клиент = ДанныеЗаполнения.Клиент;
		ЭтотОбъект.Филиал = ДанныеЗаполнения.Филиал;
		Примечание = ДанныеЗаполнения.Комментарий;
		
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		ДанныеЗаполнения.Свойство("Филиал", ЭтотОбъект.Филиал);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПричинаЗаписи) Тогда 
		ПричинаЗаписи = Справочники.ПричиныЗаписиНаПрием.КонтрольныйОсмотр;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	ДатаОкончанияПлан = Макс(ДатаОкончанияПлан, ДатаНачалаПлан); // Можно передать в качестве значений заполнения только начальную дату.
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Основание = Неопределено;
	ДокументВыполнения = Неопределено;
	Выполнен = Ложь;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПериодЗаписи = Новый СтандартныйПериод;
	ПериодЗаписи.ДатаНачала = ДатаНачалаПлан;
	ПериодЗаписи.ДатаОкончания = ДатаОкончанияПлан;
	КраткоеСодержание = Строка(ПериодЗаписи);
	Для Каждого СтрокаОжидания из ЖелаемоеВремя Цикл
		Если Не ПустаяСтрока(КраткоеСодержание) Тогда
			КраткоеСодержание = КраткоеСодержание + ", ";
		КонецЕсли;
		ДатаОжидания = Формат(СтрокаОжидания.Дата,"ДФ=dd.MM.yyyy");
		НачалоОжидания = Формат(СтрокаОжидания.Начало,"ДФ=HH:mm");
		ОкончаниеОжидания = Формат(СтрокаОжидания.Окончание,"ДФ=HH:mm");
		ТекстС = НСтр("ru='с'"); ТекстДо = НСтр("ru='до'");
		КраткоеСодержание = КраткоеСодержание + ДатаОжидания + ?(ПустаяСтрока(НачалоОжидания),""," " + ТекстС + " " + НачалоОжидания) + ?(ПустаяСтрока(ОкончаниеОжидания),""," " + ТекстДо + " " + ОкончаниеОжидания);
	КонецЦикла;
	
	ПоследнееСообщение = "";
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	Если Не ЭтоНовый() Тогда
		СписокСообщений = РегистрыСведений.СообщенияПоДокументам.СоздатьНаборЗаписей();
		СписокСообщений.Отбор.Документ.Установить(Ссылка);
		СписокСообщений.Прочитать();
		Если СписокСообщений.Количество() <> 0 Тогда
			ПоследнееСообщение = СписокСообщений[СписокСообщений.Количество() - 1].Сообщение;
		КонецЕсли;
	КонецЕсли;
	
	CRMСервер.ОбращениеПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи, РежимПроведения);
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// Удаление отметки необработанного обращения, если очистили источник информации.
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Если Не ЗначениеЗаполнено(ИсточникИнформации) Тогда
			УстановитьПривилегированныйРежим(Истина);
			Запись = РегистрыСведений.НеотработанныеОбращения.СоздатьМенеджерЗаписи();
			Запись.Документ = Ссылка;
			Запись.Прочитать();
			Если Запись.Выбран() Тогда
				Запись.Удалить();
			КонецЕсли;
			УстановитьПривилегированныйРежим(Ложь);
		КонецЕсли;
	КонецЕсли;
	
	CRMСервер.ОбращениеПриЗаписи(ЭтотОбъект, Отказ);
	
	Если ПометкаУдаления Тогда
		ВебИнтеграция.ПометитьКакПрочитанныйДокумент(Ссылка, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти