#Область РазделОписанияПеременных
&НаКлиенте
Перем мИспользоватьАвтоПодборКлиентовПоКоду;
#КонецОбласти

#Область ОбработчикиСобытий
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	мИспользоватьАвтоПодборКлиентовПоКоду = мУчетнаяПолитика.ИспользоватьАвтоПодборКлиентовПоКоду; 
	
	Если Параметры.Свойство("Клиент") И ЗначениеЗаполнено(Параметры.Клиент) Тогда
		ОтборКлиент = Параметры.Клиент;
		Элементы.ДекорацияСуществующиеЛисты.Видимость = Истина;
		Элементы.ДекорацияСуществующиеЛисты.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru='Клиент ""%1"" уже состоит в очереди, можно отредактировать существующую запись или создать новую.'"),Параметры.Клиент);
	КонецЕсли;
	
	ЗначенияЗаполнения = Неопределено;
	Если Параметры.Свойство("ЗначенияЗаполнения") И 
		ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура") Тогда 
		ЗначенияЗаполнения = Параметры.ЗначенияЗаполнения;
	КонецЕсли;
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПечатьДокументовКлиент.УстановитьЗаголовокПечатнойФормы(ЭтаФорма);
	
	Если ЗначениеЗаполнено(Параметры.ДатаНачала) Тогда
		ОтборПериод.ДатаНачала = Параметры.ДатаНачала;
		ОтборПериодПриИзменении(Неопределено);
	Иначе
		ОтборПериод.ДатаНачала = НачалоДня(ТекущаяДата());
		ОтборПериод.ДатаОкончания = Дата(1,1,1);
		ОтборПериодПриИзменении(Неопределено);
		ОтборВыполнен = Истина;
		ОтборВыполненПриИзменении(Неопределено);
	КонецЕсли;
	
	ОтборКлиентПриИзменении(Неопределено);
	РаботаСФормамиКлиент.УстановитьОтборСписка("ПометкаУдаления", Ложь, Список);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ДобавитьСообщение(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущееСообщение = СокрЛП(ТекущееСообщение);
	Если ПустаяСтрока(ТекущееСообщение) Тогда 
		Возврат;
	КонецЕсли;
	
	ТекДата = ТекущаяДата();
	СтруктураОповещения = CRMСервер.ДобавитьСообщениеПоЛистуОжидания(ТекДанные.Ссылка, ТекущееСообщение);
	
	Оповестить("НовоеСообщениеПоЛО", СтруктураОповещения, ТекДанные.Ссылка);
	
	ТекущееСообщение = "";
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ТекущееСообщение;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетПоОчереди(Команда)
	
	ФормаОтчета = ПолучитьФорму("Отчет.ОтчетПоОчереди.ФормаОбъекта");
	Если ЗначениеЗаполнено(ОтборПериод.ДатаНачала) Или ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда 
		ИдентификаторНастройки = ФормаОтчета.Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).ИдентификаторПользовательскойНастройки;
		Для Каждого ЭлементНастройки Из ФормаОтчета.Отчет.КомпоновщикНастроек.ПользовательскиеНастройки.Элементы Цикл 
			Если ЭлементНастройки.ИдентификаторПользовательскойНастройки = ИдентификаторНастройки Тогда 
				ЭлементНастройки.Использование = Истина;
				ЗаполнитьЗначенияСвойств(ЭлементНастройки.Значение, ОтборПериод);
				Если ЗначениеЗаполнено(ЭлементНастройки.Значение.ДатаНачала)
					И Не ЗначениеЗаполнено(ЭлементНастройки.Значение.ДатаОкончания)
				Тогда
					ЭлементНастройки.Значение.ДатаОкончания = КонецГода(ДобавитьМесяц(ЭлементНастройки.Значение.ДатаНачала, 12));
				КонецЕсли;
			
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ФормаОтчета.СкомпоноватьРезультат();
	ФормаОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПомеченныеНаУдаление(Команда)
	
	Элементы.ФормаПоказыватьПомеченныеНаУдаление.Пометка = Не Элементы.ФормаПоказыватьПомеченныеНаУдаление.Пометка;
	
	Если Элементы.ФормаПоказыватьПомеченныеНаУдаление.Пометка Тогда
		РаботаСФормамиКлиент.СнятьОтборСписка("ПометкаУдаления", Список);
	Иначе
		РаботаСФормамиКлиент.УстановитьОтборСписка("ПометкаУдаления", Ложь, Список);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПоТекущемуКлиенту(Команда)
	Если Элементы.Список.ТекущиеДанные <> Неопределено Тогда
		ОтборКлиент = Элементы.Список.ТекущиеДанные.Клиент;
		ОтборКлиентПриИзменении(Неопределено);
	Иначе
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Строка не выделена!");
	КонецЕсли; 	
КонецПроцедуры 

&НаКлиенте
Процедура ОткрытьКлиента(Команда)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ОткрытьЗначение(ТекДанные.Клиент);
	
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы
&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЗначенияЗаполнения <> Неопределено Тогда 
		Отказ = Истина;
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения);
		Если ЗначениеЗаполнено(Параметры.ИсходнаяДата) Тогда 
			ПараметрыФормы.Вставить("ИсходнаяДата", Параметры.ИсходнаяДата);
		КонецЕсли;
		Если ЗначениеЗаполнено(Параметры.Номенклатура) Тогда
			ПараметрыФормы.Вставить("Номенклатура", Параметры.Номенклатура);
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборКлиент) Тогда
			ПараметрыФормы.Вставить("Клиент", ОтборКлиент);
		КонецЕсли;
		ОткрытьФорму("Документ.ЛистОжидания.Форма.ФормаБыстрогоСоздания", ПараметрыФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	НастроитьТабличныеЧастиПоТекущимДанным();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВыполненПриИзменении(Элемент)
	Если ОтборВыполнен Тогда 
		РаботаСФормамиКлиент.УстановитьОтборСписка("Выполнен", Ложь, Список);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("Выполнен", Список);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборБезПериодаПриИзменении(Элемент)
	Если ОтборБезПериода Тогда 
		ОтборПериод.ДатаНачала = Дата(1,1,1);
		ОтборПериод.ДатаОкончания = Дата(1,1,1);
		ОтборПериодПриИзменении(Неопределено);
		РаботаСФормамиКлиент.УстановитьОтборСписка("НетПериодаЗаписи", Истина, Список);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("НетПериодаЗаписи", Список);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтборПериодПриИзменении(Элемент)
	
	// Ищем группу периода
	ГруппаОтбора = Неопределено;
	Для Каждого ЭлементОтбора Из Список.Отбор.Элементы Цикл 
		Если ЭлементОтбора.ИдентификаторПользовательскойНастройки = "ОтборПоПериоду" Тогда 
			ГруппаОтбора = ЭлементОтбора;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ГруппаОтбора = Неопределено Тогда 
		ГруппаОтбора = Список.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
		ГруппаОтбора.ИдентификаторПользовательскойНастройки = "ОтборПоПериоду";
	КонецЕсли;
	
	ГруппаОтбора.Элементы.Очистить();
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	// Формируем отбор по дате начала и дате окончания ЛО
	ГруппаДатаНачала = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаДатаНачала.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементОтбора = ГруппаДатаНачала.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаНачалаПлан");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаНачала;
	Если ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда 
		ЭлементОтбора = ГруппаДатаНачала.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаНачалаПлан");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаОкончания;
	КонецЕсли;
	
	ГруппаДатаОкончания = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаДатаОкончания.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементОтбора = ГруппаДатаОкончания.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОкончанияПлан");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаНачала;
	Если ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда 
		ЭлементОтбора = ГруппаДатаОкончания.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОкончанияПлан");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаОкончания;
	КонецЕсли;

	ГруппаТест = ГруппаОтбора.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаТест.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	ЭлементОтбора = ГруппаТест.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаНачалаПлан");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.МеньшеИлиРавно;
	ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаНачала;
	Если ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда 
		ЭлементОтбора = ГруппаТест.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаОкончанияПлан");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
		ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаОкончания;
	КонецЕсли;    
	Если Не ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда 
		ЭлементОтбора = ГруппаТест.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ДатаНачалаПлан");
		ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Больше;
		ЭлементОтбора.ПравоеЗначение = ОтборПериод.ДатаНачала;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ОтборПериод.ДатаНачала) Или ЗначениеЗаполнено(ОтборПериод.ДатаОкончания) Тогда
		ОтборБезПериода = Ложь;
		РаботаСФормамиКлиент.СнятьОтборСписка("НетПериодаЗаписи", Список);	
	КонецЕсли; 
 
КонецПроцедуры

&НаКлиенте
Процедура ОтборКлиентПриИзменении(Элемент)
	
	РаботаСФормамиКлиент.СнятьОтборСписка("Клиент", Список);
	Если ЗначениеЗаполнено(ОтборКлиент) Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("Клиент", ОтборКлиент, Список, ВидСравненияКомпоновкиДанных.Равно);	
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКлиентАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора, мИспользоватьАвтоПодборКлиентовПоКоду);
КонецПроцедуры

&НаКлиенте
Процедура ОтборКлиентОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	РаботаСФормамиКлиент.ПолеВводаКлиентаАвтоПодбор(Текст, СтандартнаяОбработка, ДанныеВыбора, мИспользоватьАвтоПодборКлиентовПоКоду);
КонецПроцедуры

&НаКлиенте
Процедура ЗаявкиВПериодеПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ПараметрыФормыЗаявки = Новый Структура("Основание", ТекДанные.Ссылка);
	ОткрытьФорму("Документ.Заявка.ФормаОбъекта", ПараметрыФормыЗаявки);
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
&НаКлиенте
Процедура НастроитьТабличныеЧастиПоТекущимДанным()
	
	ТекДанные = Элементы.Список.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
        РаботаСФормамиКлиент.УстановитьОтборСписка("Клиент", Неопределено, ЗаявкиВПериоде);  
		РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаНачала", Неопределено, ЗаявкиВПериоде, ВидСравненияКомпоновкиДанных.БольшеИлиРавно); 
		РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаОкончания", Неопределено, ЗаявкиВПериоде, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
		СобытияПоЛистуОжидания.Параметры.УстановитьЗначениеПараметра("ЛистОжидания", ПредопределенноеЗначение("Документ.ЛистОжидания.ПустаяСсылка"));
		РаботаСФормамиКлиент.СнятьОтборСписка("Основание", СобытияПоЛистуОжидания); 
		Возврат;
	КонецЕсли;
	
	РаботаСФормамиКлиент.УстановитьОтборСписка("Клиент",		 ТекДанные.Клиент, ЗаявкиВПериоде);  
	РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаНачала",	 ТекДанные.ДатаНачалаПлан, ЗаявкиВПериоде, ВидСравненияКомпоновкиДанных.БольшеИлиРавно); 
	РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаОкончания",	 КонецДня(ТекДанные.ДатаОкончанияПлан), ЗаявкиВПериоде, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
	
	СобытияПоЛистуОжидания.Параметры.УстановитьЗначениеПараметра("ЛистОжидания", ТекДанные.Ссылка);
	РаботаСФормамиКлиент.УстановитьОтборСписка("Основание", ТекДанные.Ссылка, СобытияПоЛистуОжидания); 
				
	CRMСервер.ЗаполнитьПерепискуПоДокументу(СписокСообщений, ТекДанные.Ссылка, ТекущийПользователь);
	
	Элементы.ЗаявкиВПериоде.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ЗаявкаПоДокументуЗапись" Тогда
		
		Элементы.Список.Обновить();
		НастроитьТабличныеЧастиПоТекущимДанным();
		
	ИначеЕсли ИмяСобытия = "НовоеСообщениеПоЛО" Тогда 
		
		ТекДанные = Элементы.Список.ТекущиеДанные;
		Если ТекДанные = Неопределено Тогда 
			Возврат;
		КонецЕсли;
		
		Если Параметр.Документ = ТекДанные.Ссылка Тогда 
			CRMКлиентСервер.ДобавитьСообщениеВДокумент(СписокСообщений, Параметр.Сообщение, Параметр.Период, Параметр.Пользователь, ТекущийПользователь);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
