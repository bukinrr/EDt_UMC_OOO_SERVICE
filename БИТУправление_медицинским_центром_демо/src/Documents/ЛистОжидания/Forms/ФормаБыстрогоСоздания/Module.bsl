#Область ОбработчикиСобытий
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	
	ИсходнаяДата = ТекущаяДата();
	Если ЗначениеЗаполнено(Параметры.ПлановаяДата) Тогда
		ИсходнаяДата = Параметры.ПлановаяДата;
		
		Объект.ДатаНачалаПлан = ИсходнаяДата;
		Объект.ДатаОкончанияПлан = ИсходнаяДата;
		ПериодЗаписи.ДатаНачала = Объект.ДатаНачалаПлан;
		ПериодЗаписи.ДатаОкончания = Объект.ДатаОкончанияПлан;
	КонецЕсли;
	
	// Номенклатура
	Если ЗначениеЗаполнено(Параметры.Номенклатура) И Параметры.СписокНоменклатуры.Количество() = 0 Тогда
		Параметры.СписокНоменклатуры.Добавить(Параметры.Номенклатура);
	КонецЕсли;
	
	Для Каждого элНоменклатура Из Параметры.СписокНоменклатуры Цикл 
		Номенклатура = элНоменклатура.Значение;
		НоваяСтрока = Объект.Работы.Добавить();
		НоваяСтрока.Номенклатура = элНоменклатура.Значение;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Объект.Ответственный) Тогда
		Объект.Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
	НесколькоРабот = Объект.Работы.Количество() > 1;
	Элементы.Номенклатура.Видимость = Не НесколькоРабот;
	Элементы.Работы.Видимость = НесколькоРабот;
	
	// Заполнение стандартных периодов
	СтандартныеДаты = мУчетнаяПолитика.ДатыЗаписейЛистовОжидания.Получить();
	СтандартныеПериоды = мУчетнаяПолитика.ПериодыЗаписиЛистовОжидания.Получить();
	
	Для Каждого Элемент Из СтандартныеДаты Цикл
		Элементы.ДатаЗаписиВыбор.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
	КонецЦикла;
	Для Каждого Элемент Из СтандартныеПериоды Цикл
		Элементы.ПериодЗаписиВыбор.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
	КонецЦикла;
	
	ДатаЗаписиВыбор = Элементы.ДатаЗаписиВыбор.СписокВыбора[0].Значение;
	ПериодЗаписиВыбор = Элементы.ПериодЗаписиВыбор.СписокВыбора[0].Значение;
		
	Элементы.ДатаЗаписиВыбор.КоличествоКолонок = Окр(СтандартныеДаты.Количество() / СтандартныеПериоды.Количество() + 0.5, 0, РежимОкругления.Окр15как10);
	
	ЛистыОжидания.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", ТекущаяДатаСеанса());
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ЗначениеЗаполнено(Объект.ДатаНачалаПлан) Тогда
		ПериодЗаписи = Новый СтандартныйПериод;
		ПериодЗаписи.ДатаНачала = Объект.ДатаНачалаПлан;
		ПериодЗаписи.ДатаОкончания = Объект.ДатаОкончанияПлан;
	Иначе
		УстановитьДатыЗаписиПоУмолчанию();
		ПереключательПриИзменении(Неопределено);
	КонецЕсли;
	
	ОбновитьВыпадающийСписокСпециализаций();
	
	ОбновитьСписокЛистовОжидания();
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если ЗначениеЗаполнено(Объект.Сотрудник) И ЗначениеЗаполнено(Объект.ПричинаЗаписи) Тогда 
		ПересекающиесяЛисты = CRMСервер.ПолучитьПересекающиесяЛистыОжидания(Объект.Клиент, Объект.Сотрудник, Объект.ПричинаЗаписи, Объект.ДатаНачалаПлан, Объект.ДатаОкончанияПлан, Объект.Ссылка);
		Если ПересекающиесяЛисты.Количество() > 0 Тогда
			
			СтрокаСообщение = НСтр("ru='Есть пересекающиеся по периоду листы ожидания с данным сотрудником и причиной записи. Все равно записать?'");
			Для Каждого ЭлементСписка Из ПересекающиесяЛисты Цикл
				СтрокаСообщение = СтрокаСообщение + Символы.ПС + ЭлементСписка.Представление;
			КонецЦикла;
			
			Если Вопрос(СтрокаСообщение, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда 
				Отказ = Истина;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
&НаКлиенте
Процедура ПереключательПриИзменении(Элемент)
	
	Если ДатаЗаписиВыбор = "" Тогда 
		ДатаЗаписиВыбор = Элементы.ДатаЗаписиВыбор.СписокВыбора[0];
	КонецЕсли;
	Если ПериодЗаписиВыбор = "" Тогда 
		ПериодЗаписиВыбор = Элементы.ПериодЗаписиВыбор.СписокВыбора[0];
	КонецЕсли;
	
	ПериодЗаписи = CRMКлиентСервер.СформироватьДатуПериодЗаписи(ДатаЗаписиВыбор, ПериодЗаписиВыбор, ИсходнаяДата); 
	Объект.ДатаНачалаПлан = ПериодЗаписи.ДатаНачала;
	Объект.ДатаОкончанияПлан = ПериодЗаписи.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодЗаписиПриИзменении(Элемент)
	
	ДатаЗаписиВыбор = "";
	ПериодЗаписиВыбор = "";
	Объект.ДатаНачалаПлан = ПериодЗаписи.ДатаНачала;
	Объект.ДатаОкончанияПлан = ПериодЗаписи.ДатаОкончания;
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Объект.Работы.Очистить();
	Если ЗначениеЗаполнено(Номенклатура) Тогда 
		НоваяСтрока = Объект.Работы.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИПродолжить(Команда)
	
	ЭтаФорма.Записать();
	ЭтаФорма.Закрыть();
	ОткрытьЗначение(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДатыЗаписиПоУмолчанию()
	
	// Получаем дату записи по причине записи
	ДатаПериодЗаписи = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Объект.ПричинаЗаписи, "ДатаЗаписиПоУмолчанию, ПериодЗаписиПоУмолчанию");
	Если ЗначениеЗаполнено(Объект.ПричинаЗаписи) Тогда
		ЭлементВыбора = Элементы.ДатаЗаписиВыбор.СписокВыбора.НайтиПоЗначению(ДатаПериодЗаписи.ДатаЗаписиПоУмолчанию);
		Если ЭлементВыбора <> Неопределено Тогда 
			ДатаЗаписиВыбор = ЭлементВыбора.Значение;
		КонецЕсли;
		ЭлементВыбора = Элементы.ПериодЗаписиВыбор.СписокВыбора.НайтиПоЗначению(ДатаПериодЗаписи.ПериодЗаписиПоУмолчанию);
		Если ЭлементВыбора <> Неопределено Тогда 
			ПериодЗаписиВыбор = ЭлементВыбора.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПричинаЗаписиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ПричинаЗаписи) Тогда 
		УстановитьДатыЗаписиПоУмолчанию();
		ПереключательПриИзменении(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыпадающийСписокСпециализаций()
	
	МассивСпециализаций = ПроцедурыСпециализацииПоставки.ПолучитьМассивСпециализацийСотрудника(Объект.Сотрудник);
	Если МассивСпециализаций.Количество() > 0 Тогда
		Элементы.Специализация.СписокВыбора.ЗагрузитьЗначения(МассивСпециализаций);
		Элементы.Специализация.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВВыпадающемСпискеИВПолеВвода;
		Элементы.Специализация.КнопкаВыпадающегоСписка = Истина;
	Иначе
		Элементы.Специализация.СписокВыбора.Очистить();
		Элементы.Специализация.ОтображениеКнопкиВыбора = ОтображениеКнопкиВыбора.ОтображатьВПолеВвода;
		Элементы.Специализация.КнопкаВыпадающегоСписка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	
	ОбновитьВыпадающийСписокСпециализаций();
	Если Элементы.Специализация.СписокВыбора.Количество() > 0 Тогда 
		ЭлементВыбора = Элементы.Специализация.СписокВыбора.НайтиПоЗначению(Объект.Специализация); 
		Если ЭлементВыбора <> Неопределено Тогда 
			Объект.Специализация = ЭлементВыбора.Значение;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НесколькоРаботПриИзменении(Элемент)
	
	Если НесколькоРабот Тогда
		Если ЗначениеЗаполнено(Номенклатура) Тогда
			Объект.Работы.Очистить();
			Объект.Работы.Добавить().Номенклатура = Номенклатура;
		КонецЕсли;
	Иначе
		Если Объект.Работы.Количество() = 0 Тогда
			Номенклатура = Неопределено;
		Иначе 
			Номенклатура = Объект.Работы[0].Номенклатура;
			Объект.Работы.Очистить();
			Объект.Работы.Добавить().Номенклатура = Номенклатура;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.Номенклатура.Видимость = Не НесколькоРабот;
	Элементы.Работы.Видимость = НесколькоРабот;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокЛистовОжидания()
	Если ЗначениеЗаполнено(Объект.Клиент) Тогда
		Элементы.ЛистыОжидания.Видимость = Истина;
		РаботаСФормамиКлиент.УстановитьОтборСписка("Клиент", Объект.Клиент, ЛистыОжидания);
	Иначе
		Элементы.ЛистыОжидания.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	ОбновитьСписокЛистовОжидания();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЛистыОжиданияПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	// Убрать когда перейдем на режим совместимости с 8.3.8
	Возврат;
	
	Для Каждого СтрокаДС Из Строки Цикл
		СтрокаОписания = "";
		Для Каждого Работа Из СтрокаДС.Данные["Работы"]	Цикл
			Если ЗначениеЗаполнено(Работа.Номенклатура) Тогда
				СтрокаОписания = СтрокаОписания + Работа.Номенклатура.Наименование + ", ";
			КонецЕсли;
		КонецЦикла;
		СтрокаДС.Данные["ОписаниеУслуг"] = СтрокаОписания;
	КонецЦикла;
	
КонецПроцедуры
#КонецОбласти
