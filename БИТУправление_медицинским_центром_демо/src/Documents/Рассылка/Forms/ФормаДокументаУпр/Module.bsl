&НаКлиенте
Перем НеЗаполнятьДублиДляВсех;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Параметры.Ключ.Пустая() И НЕ ЗначениеЗаполнено(Объект.ОбработкаSMSРассылки) Тогда
		
		Объект.ОбработкаSMSРассылки = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнаяОбработкаSMSРассылки");
		Объект.ТекстФиксированный = Истина;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ОбработкаSMSРассылки) Тогда
		
		УЗнатьБалансСервер();
		
	КонецЕсли;
	
	ОбновитьОтборСообщений();
	
	Элементы.НадписьСозданАвтоматически.Видимость = Объект.СозданАвтоматически;
	Элементы.ДатаОтправки.Доступность	= Объект.ДоставитьСообщениеВУказанноеВремя;
	Элементы.ДатаОтправкиВремя.Доступность = Объект.ДоставитьСообщениеВУказанноеВремя;
	
	Элементы.СообщенияПодборПоПараметрамРасширенный.Видимость = ПравоДоступа("Просмотр", Метаданные.Обработки.УниверсальныеПодборИОбработкаОбъектов);
	
	ПриИзмененииТекстФиксированный();

	Если Объект.Ссылка.Пустая() И Параметры.Свойство("СписокПолучателей") Тогда
		РассылкаСообщенийСервер.ЗаполнитьСписокПолучателейРассылки(Объект, Сообщения, Параметры.СписокПолучателей);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.Дата = ТекущаяДата();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаписатьСообщения(ТекущийОбъект);
	
	ОбновитьОтборСообщений();
	
КонецПроцедуры

#Область ПроцедурыОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура УзнатьБаланс(Команда)
	
	Если ЗначениеЗаполнено(Объект.ОбработкаSMSРассылки) Тогда
		
		УзнатьБалансСервер();
		
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Не выбрана обработка сервиса SMS-рассылки'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьСообщения(Команда)
	
	Если ЭтаФорма.Модифицированность
		Или Не ЗначениеЗаполнено(Объект.Ссылка)
	Тогда
		Ответ = Вопрос(НСтр("ru='Для отправки сообщений документ должен быть проведен. Провести документ?'"),РежимДиалогаВопрос.ОКОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			
			Возврат;
			
		Иначе
			Если Не ЭтотОбъект.Записать(Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Проведение)) Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ФормированиеСообщений.ЭтоРассылкаНаОсновеЗаявки(Объект.Ссылка) Тогда
		Ответ = Вопрос(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Уверены, что хотите произвести отправку сейчас? 
							|Настройки предполагают отправку не ранее чем за %1 ч. до требуемого момента доставки СМС получателю.'"),
				ФормированиеСообщений.ПолучитьМаксимальноеУпреждениеОтправкиСМСОператору()),
			РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	РезультатОтправки = ОтправитьСообщенияСервер();	
	
	Если ЗначениеЗаполнено(РезультатОтправки.СообщениеОбОшибке) Тогда
		ПоказатьПредупреждение(,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='%1%2'"),
				РезультатОтправки.СообщениеОбОшибке,
				?(РезультатОтправки.ОтправленоСообщений<>0,
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru=' Отправлено %1 из %2 сообщений.'"),
						РезультатОтправки.ОтправленоСообщений,
						РезультатОтправки.ОтправлялосьСообщений),
					""))
			);
	Иначе
		ПоказатьПредупреждение(,
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Отправлено %1 из %2 сообщений.'"),
				РезультатОтправки.ОтправленоСообщений,
				РезультатОтправки.ОтправлялосьСообщений)
			);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоставитьСообщениеВУказанноеВремяПриИзменении(Элемент)
	
	Элементы.ДатаОтправки.Доступность	= Объект.ДоставитьСообщениеВУказанноеВремя;
	Элементы.ДатаОтправкиВремя.Доступность = Объект.ДоставитьСообщениеВУказанноеВремя;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборКлиентов1(Команда)
	
	ФормаПодбора = ПолучитьФорму("Справочник.Клиенты.ФормаВыбора",Новый Структура("РежимВыбора", Истина),Элементы.Сообщения);
	Если Не ФормаПодбора.Открыта() Тогда
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.Открыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьВнешнейОбработкой(Команда)
	
	ПараметрыФормы = Новый Структура("Отбор", Новый Структура("ВидОбработки", ПредопределенноеЗначение("Перечисление.ВидыДополнительныхВнешнихОбработок.ЗаполнениеСпискаСМСРассылки")));
	Форма = ПолучитьФорму("Справочник.ВнешниеОбработки.ФормаВыбора", ПараметрыФормы);
	
	СправочникОбработка = Форма.ОткрытьМодально();
	
	Если ЗначениеЗаполнено(СправочникОбработка) Тогда
		
		ЗаполнитьВнешнейОбработкойСервер(СправочникОбработка);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВнешнейОбработкойСервер(СправочникОбработка)
	
	ДвоичныеДанные = СправочникОбработка.ХранилищеВнешнейОбработки.Получить();
	Если ДвоичныеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ПолучитьИмяВременногоФайла("epf");
	Попытка
		ДвоичныеДанные.Записать(ИмяФайла);
		Обработка = ВнешниеОбработки.Создать(ИмяФайла, Ложь, ОбщегоНазначения.ОписаниеЗащитыБезПредупреждений());
		ТаблицаЗаполненияРассылки = Обработка.Сформировать();// Обсудить формат
		Если ТипЗнч(ТаблицаЗаполненияРассылки) <> Тип("ТаблицаЗначений") Тогда
			ВызватьИсключение НСтр("ru='Неправильный формат обработки заполнения списка рассылки'");
		КонецЕсли;
		
		Для Каждого СтрокаЗаполненияРассылки Из ТаблицаЗаполненияРассылки Цикл
			
			НомерТелефона = СМС_ФормированиеСообщений.НормализоватьСотовыйТелефон(СтрокаЗаполненияРассылки.Телефон);
			
			Если ПустаяСтрока(НомерТелефона) Тогда Продолжить; КонецЕсли;
			Запись = Сообщения.Добавить();
			Запись.Получатель = СтрокаЗаполненияРассылки.Получатель;
			Запись.КонтактПолучателя = НомерТелефона;
			Запись.СтатусОтправки = Перечисления.СтатусыОтправкиСообщений.НеОтправлено;
			Запись.ВнутреннийИдентификаторСообщения = Новый УникальныйИдентификатор;
			Запись.Рассылка = Объект.Ссылка;
			Если ТаблицаЗаполненияРассылки.Колонки.Найти("Источник") <> Неопределено Тогда
				Запись.Источник = СтрокаЗаполненияРассылки.Источник;
			КонецЕсли;
			Если ТаблицаЗаполненияРассылки.Колонки.Найти("ВидСообщения") <> Неопределено Тогда
				Запись.ВидСообщения = СтрокаЗаполненияРассылки.ВидСообщения;
			КонецЕсли;
			Если ТаблицаЗаполненияРассылки.Колонки.Найти("Текст") <> Неопределено Тогда
				Запись.Текст = СтрокаЗаполненияРассылки.Текст;
				Объект.ТекстФиксированный = Ложь;
				ПриИзмененииТекстФиксированный();
			ИначеЕсли Объект.ТекстФиксированный Тогда
				Запись.Текст = ТекстСообщений;
			КонецЕсли;
			
		КонецЦикла;
		
		УдалитьФайлы(ИмяФайла);
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(ОписаниеОшибки(),, НСтр("ru='Не удалось выполнить обработку! Возможно, обработка имеет неправильный формат.'"));
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстФиксированныйПриИзменении(Элемент)
	
	ПриИзмененииТекстФиксированный();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьВидСообщения(Команда)
	
	// Выбор вида сообщения
	ФормаВыбора = ПолучитьФорму("Справочник.ВидыСообщенийРассылки.ФормаВыбора");
	РаботаСФормамиКлиент.УстановитьОтборСписка(
		"СпособОтправки", ПредопределенноеЗначение("Перечисление.СпособыОтправкиСообщений.SMS"), ФормаВыбора.Список);
	ВидСообщения = ФормаВыбора.ОткрытьМодально();
	Если ЗначениеЗаполнено(ВидСообщения) Тогда
		
		// Поиск сообщений с другим видом сообщения.
		
		флЗамещатьДругиеВидыСообщений = Истина;
		Для Каждого Сообщение Из Сообщения Цикл
			
			Если ЗначениеЗаполнено(Сообщение.ВидСообщения)
				И Сообщение.ВидСообщения <> ВидСообщения
			Тогда
				Ответ = Вопрос(	"Есть сообщения с другими видами сообщений. 
								|Проставить им выбранный вид сообщения?", РежимДиалогаВопрос.ДаНетОтмена);
				Если Ответ = КодВозвратаДиалога.Отмена Тогда
					Возврат;	
				Иначе				
					флЗамещатьДругиеВидыСообщений = (Ответ = КодВозвратаДиалога.Да);
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;

		ПроставитьВидСообщенияСервер(ВидСообщения, флЗамещатьДругиеВидыСообщений);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьТекстПоВидуСообщения(Команда)  
	ПереформироватьТекстПоВидуСообщенияСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаТекстСообщенийПриИзменении(Элемент)
	ПриИзмененииОбщийТекст();
КонецПроцедуры

&НаКлиенте
Процедура ПодборСотрудников(Команда)
	ФормаПодбора = ПолучитьФорму("Справочник.Сотрудники.ФормаВыбора",,Элементы.Сообщения);
	Если Не ФормаПодбора.Открыта() Тогда
		ФормаПодбора.ЗакрыватьПриВыборе = Ложь;
		ФормаПодбора.Открыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СообщенияПолучательОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Клиенты") 
		Или ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.Сотрудники") 
	Тогда
	
		НомерТелефона = СМС_ФормированиеСообщений.ПолучитьСотовыйТелефон(ВыбранноеЗначение);
		РезультатПоиска = ПоискСтроки(ВыбранноеЗначение); 
		Если РезультатПоиска = Истина Тогда
			
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Такой получатель уже есть (%1) Добавить еще одного?'"),
				СокрЛП(ВыбранноеЗначение));
			Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
				
				ДобавитьСтрокуСообщений(ВыбранноеЗначение, НомерТелефона, Объект.ТекстФиксированный);
				
			КонецЕсли;
			
		Иначе
			
			ДобавитьСтрокуСообщений(ВыбранноеЗначение, НомерТелефона, Объект.ТекстФиксированный);
		
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПрочиеПроцедурыИФункции
   
&НаСервере
Процедура ОбновитьОтборСообщений()
	
    СписокСообщений = РеквизитФормыВЗначение("Сообщения");
	
	СписокСообщений.Отбор.Рассылка.Значение=Объект.Ссылка;
    СписокСообщений.Отбор.Рассылка.Использование=Истина;
    СписокСообщений.Прочитать();
	
	ЗначениеВРеквизитФормы(СписокСообщений, "Сообщения");
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииТекстФиксированный()
	
	Элементы.ГруппаКнопок.Видимость = Не Объект.ТекстФиксированный;
	Элементы.СообщенияТекст.Видимость = Не Объект.ТекстФиксированный;

	Элементы.ГруппаСтраниц.ТекущаяСтраница =	?(Объект.ТекстФиксированный, 
												  Элементы.ГруппаСтраниц.ПодчиненныеЭлементы.ТекстОбщий,
												  Элементы.ГруппаСтраниц.ПодчиненныеЭлементы.ТекстПострочно);
												  
	Если Объект.ТекстФиксированный Тогда
		ТекстСообщений = ?(Сообщения.Количество()=0,"",	Сообщения[0].Текст);
		ПриИзмененииОбщийТекст();
	КонецЕсли;												  
												  	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииОбщийТекст()
	
	ТабСообщения = Сообщения.Выгрузить();
	ТабСообщения.ЗаполнитьЗначения(ТекстСообщений,"Текст");
	Сообщения.Загрузить(ТабСообщения);
	
КонецПроцедуры

&НаСервере
Функция ПоискСтроки(ВыбранноеЗначение)	
	
	ТаблицаЗначений = Сообщения.Выгрузить();
	
	Возврат ?(ТаблицаЗначений.Найти(ВыбранноеЗначение, "Получатель") = Неопределено, Ложь, Истина);
	
КонецФункции

&НаСервере
Процедура ДобавитьСтрокуСообщений(ЗначениеВыбора, НомерТелефона, УстановитьОбщийТекст = Неопределено);
	ТаблицаЗначений = РеквизитФормыВЗначение("Сообщения");
	
	ПоследняяСтрока = ТаблицаЗначений[(ТаблицаЗначений.Количество() - 1)];
	ПоследняяСтрока.Рассылка = Объект.Ссылка;
	ПоследняяСтрока.Получатель = ЗначениеВыбора;
	ПоследняяСтрока.СтатусОтправки = Перечисления.СтатусыОтправкиСообщений.НеОтправлено;
	ПоследняяСтрока.КонтактПолучателя = НомерТелефона; 
	
	Если УстановитьОбщийТекст = Истина Тогда
		
		ПоследняяСтрока.Текст = ТекстСообщений;
		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ТаблицаЗначений,"Сообщения");
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСообщения(ТекущийОбъект = Неопределено)
	
	Если ТекущийОбъект = Неопределено Тогда
		ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.СообщенияSMS.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	НаборЗаписей.Записать();
	
	// Записываем новые
	НаборЗаписей = РегистрыСведений.СообщенияSMS.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	Выгрузка = Сообщения.Выгрузить();
	
	Для Каждого Строка Из Выгрузка Цикл
		
		НоваяЗапись = НаборЗаписей.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяЗапись, Строка);
		
		НоваяЗапись.Рассылка = Объект.Ссылка;
		
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	ТекущийОбъект.УстановитьСтатусСообщенийПоДокументу();
	
	НаборЗаписей = РегистрыСведений.СообщенияSMS.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Рассылка.Установить(Объект.Ссылка);
	
	Сообщения.Загрузить(НаборЗаписей.Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура УзнатьБалансСервер()
	
	Если ЗначениеЗаполнено(Объект.ОбработкаSMSРассылки) Тогда
	
		СообщениеОбОшибке = "";
		ОбработкаРассылки = СМС_ФормированиеСообщений.ПолучитьОбработкуИзХранилища(Объект.ОбработкаSMSРассылки);
		СтруктураПараметров = СМС_ФормированиеСообщений.СформироватьПараметрыОбработкиРассылки(Объект.ОбработкаSMSРассылки);
		ОбработкаРассылки.ИнициализироватьОбработку(СтруктураПараметров, СообщениеОбОшибке, Истина);
		Если ЗначениеЗаполнено(СообщениеОбОшибке) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СообщениеОбОшибке);
		КонецЕсли;
	
		Попытка		
			СообщениеОбОшибке = "";
			СтурктураБаланса = ОбработкаРассылки.ПолучитьБаланс(СообщениеОбОшибке);
			Элементы.Баланс.Заголовок = Строка(СтурктураБаланса.Баланс) + " " + СтурктураБаланса.Валюта;
		Исключение
			Элементы.Баланс.Заголовок = НСтр("ru='Ошибка связи'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Возникла ошибка при выполнении операции
							|'") + СообщениеОбОшибке);
		КонецПопытки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроставитьВидСообщенияСервер(ВидСообщения, флЗамещатьДругиеВидыСообщений)

	ТабСообщения = Сообщения.Выгрузить();
	
	Если флЗамещатьДругиеВидыСообщений Тогда
		ТабСообщения.ЗаполнитьЗначения(ВидСообщения, "ВидСообщения");
	КонецЕсли;

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьТекстПоВидамСообщений(ТабСообщения);
	
	Сообщения.Загрузить(ТабСообщения);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПереформироватьТекстПоВидуСообщенияСервер()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ТабСообщения = Сообщения.Выгрузить();
	ДокументОбъект.ЗаполнитьТекстПоВидамСообщений(ТабСообщения);
	Сообщения.Загрузить(ТабСообщения);
	ЗначениеВРеквизитФормы(ДокументОбъект,"Объект");
КонецПроцедуры

&НаСервере
Функция ОтправитьСообщенияСервер()
	
	ЗаписатьСообщения();
	РезультатОтправки = РеквизитФормыВЗначение("Объект").ОтправитьНеотправленныеСообщения();
	ОбновитьОтборСообщений();
	УзнатьБалансСервер();
	
	Возврат РезультатОтправки;
	
КонецФункции

&НаКлиенте
Процедура ОбработкаSMSРассылкиПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.ОбработкаSMSРассылки) Тогда
		
		УЗнатьБалансСервер();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщенияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	НомерТелефона = СМС_ФормированиеСообщений.ПолучитьСотовыйТелефон(ВыбранноеЗначение);
	
	Если Сообщения.НайтиСтроки(Новый Структура("Получатель",ВыбранноеЗначение)).Количество() <> 0 Тогда
		Если НеЗаполнятьДублиДляВсех = Истина Тогда
			Возврат;
		Иначе
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru='Такой получатель уже есть (%1) Добавить еще одного?'"),
				СокрЛП(ВыбранноеЗначение));
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
			Если Ответ = КодВозвратаДиалога.Отмена Тогда
				НеЗаполнятьДублиДляВсех = Истина;
				Возврат;
			ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Строка = Сообщения.Добавить();
	Строка.Получатель		 = ВыбранноеЗначение;
	Строка.Рассылка			 = Объект.Ссылка;
	Строка.КонтактПолучателя = НомерТелефона;
	Если Объект.ТекстФиксированный Тогда
		Строка.Текст = ТекстСообщений;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщенияПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		ТекстСтрокиСообщения = "";
	Иначе
		ТекстСтрокиСообщения = Элемент.ТекущиеДанные.Текст;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СообщенияТекстПриИзменении(Элемент)
	ТекстСтрокиСообщения = Элементы.Сообщения.ТекущиеДанные.Текст;
КонецПроцедуры

&НаКлиенте
Процедура СообщенияПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		
		Если Не Копирование
			И Объект.ТекстФиксированный
		Тогда
			Элемент.ТекущиеДанные.Текст = ТекстСообщений;
		КонецЕсли;
		
		Элемент.ТекущиеДанные.ВнутреннийИдентификаторСообщения = Новый УникальныйИдентификатор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолеВводаТекстСообщенияПриИзменении(Элемент)
	Элементы.Сообщения.ТекущиеДанные.Текст = ТекстСтрокиСообщения;
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоПараметрам(Команда)
	
	Форма = ПолучитьФорму("Обработка.ПоискКлиентовДляРассылки.Форма");
	Форма.ЭтоSMS = Истина;
	МассивКлиентов = Форма.ОткрытьМодально();
	Если МассивКлиентов <> Неопределено Тогда
		ЗаполнитьСписокПолучателейНаСервере(МассивКлиентов);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокПолучателейНаСервере(СписокПолучателей)
	
	РассылкаСообщенийСервер.ЗаполнитьСписокПолучателейРассылки(Объект, Сообщения, СписокПолучателей, Ложь, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборПоПараметрамРасширенный(Команда)
	
	Форма = ПолучитьФорму("Обработка.УниверсальныйПоискКлиентов.Форма", Новый Структура("ЗагрузкаВДокумент", Истина));
	МассивКлиентов = Форма.ОткрытьМодально();
	Если МассивКлиентов <> Неопределено Тогда
		ЗаполнитьСписокПолучателейНаСервере(МассивКлиентов);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
