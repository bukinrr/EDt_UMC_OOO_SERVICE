
#Область ПрограммныйИнтерфейс

// Возвращает доступные варианты печати документа.
//  Результатом является Струткура, каждая строка которой соответствует одному из вариантов печати.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("Накладная", "Приходный ордер");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура формирует печатную форму документа
//  Название макета печати передается в качестве параметра,
//  по переданному имени макета определяется соответствующая функция печати.
//
// Параметры:
//  СсылкаНаОбъект	 - ДокументСсылка	 - ссылка на распечатываемый документ.
//  ИмяМакета		 - Строка			 - имя макета из структуры печатных форм.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция Печать(СсылкаНаОбъект, ИмяМакета) Экспорт
	
	Перем ТабДокумент;
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Накладная" Тогда

		ТабДокумент = ПечатьОприходованияТоваров(СсылкаНаОбъект);
		
	КонецЕсли;
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьОприходованияТоваров(СсылкаНаОбъект)
	
    ПараметрыПечати = ПолучитьДанныеДляПечатиОприходованияТоваров(СсылкаНаОбъект);	

    ОбластьШапки  = "ШапкаСКодом";
    ОбластьСтроки = "СтрокаСКодом";

    ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб = Истина;
    ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОприходованиеТоваров_Накладная";
    Макет       = СсылкаНаОбъект.ПолучитьОбъект().ПолучитьМакет("Накладная");

    // Выводим шапку накладной
    ОбластьМакета = Макет.ПолучитьОбласть("Заголовок|Документ");
    ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
    ТабДокумент.Вывести(ОбластьМакета);
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
	Если НЕ ПараметрыПечати.РазличныеСклады Тогда
	    ОбластьМакета = Макет.ПолучитьОбласть("Покупатель|Документ");
	    ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
	    ТабДокумент.Вывести(ОбластьМакета);
	КонецЕсли;
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
    // Вывести табличную часть
    ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки+"|Документ");

    Если ПараметрыПечати.ВыводитьКоды Тогда
    	ОбластьМакета.Параметры.Колонка = ПараметрыПечати.ИмяКолонкиКодов;
    КонецЕсли;
    ТабДокумент.Вывести(ОбластьМакета);	
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьШапкиСклада = Макет.ПолучитьОбласть(ОбластьШапки+"|Склад");
		ТабДокумент.Присоединить(ОбластьШапкиСклада);	
	КонецЕсли;			
    ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки+"|Документ");
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьСтрокиСклада = Макет.ПолучитьОбласть(ОбластьСтроки + "|Склад");	
	КонецЕсли;	
    Для каждого ПараметрыПозиции Из ПараметрыПечати.Позиции Цикл

		Если НЕ ЗначениеЗаполнено(ПараметрыПозиции.Номенклатура) Тогда
			ТекстСообщения = НСтр("ru='В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.'");
    		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
    		Продолжить;
    	КонецЕсли;

    	ОбластьМакета.Параметры.Заполнить(ПараметрыПозиции);
		
    	ТабДокумент.Вывести(ОбластьМакета);

		Если ПараметрыПечати.РазличныеСклады Тогда
			ОбластьСтрокиСклада.Параметры.Заполнить(ПараметрыПозиции);
	    	ТабДокумент.Присоединить(ОбластьСтрокиСклада);
		КонецЕсли;
    КонецЦикла;

    // Вывести Итого
    ОбластьМакета = Макет.ПолучитьОбласть("Итого|Документ");
    ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
    ТабДокумент.Вывести(ОбластьМакета);
	Если ПараметрыПечати.РазличныеСклады Тогда
		ОбластьМакета = Макет.ПолучитьОбласть("Итого|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
    // Вывести Сумму прописью
    ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью|Документ");
    ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
    ТабДокумент.Вывести(ОбластьМакета);
	Если ПараметрыПечати.РазличныеСклады Тогда 
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
    // Вывести подписи
    ОбластьМакета = Макет.ПолучитьОбласть("Подписи|Документ");
    ОбластьМакета.Параметры.Заполнить(ПараметрыПечати);
    ТабДокумент.Вывести(ОбластьМакета);
	Если ПараметрыПечати.РазличныеСклады Тогда 	
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи|Склад");
		ТабДокумент.Присоединить(ОбластьМакета);
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьОприходованияТоваров()

Функция ПолучитьДанныеДляПечатиОприходованияТоваров(Ссылка) 
	
	ПараметрыПечати = Новый Структура;
	
	ПараметрыПечати.Вставить("ВыводитьКоды", Истина);
	ТекстКод = НСтр("ru='Код'"); 
	ПараметрыПечати.Вставить("ИмяКолонкиКодов", ТекстКод);
	ТекстКодАртикул = НСтр("ru='Артикул'");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОприходованиеТоваров.Номер КАК Номер,
	|	ОприходованиеТоваров.Дата КАК Дата,
	|	ОприходованиеТоваров.Склад.Представление КАК Склад,
	|	ОприходованиеТоваров.Товары.(
	|		Номенклатура КАК Номенклатура,
	|		Номенклатура.Артикул КАК КодАртикул,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		Количество КАК Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		Цена КАК Цена,
	|		Сумма КАК Сумма,
	|		ХарактеристикаНоменклатуры.Представление КАК Характеристика,
	|		СерияНоменклатуры.Представление КАК Серия,
	|		Склад КАК СкладСтрока
	|	) КАК Товары
	|ИЗ
	|	Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОприходованиеТоваров.Товары.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ОприходованиеТоваровТовары.Склад) КАК СкладРазличные
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ОприходованиеТоваровТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОприходованиеТоваров КАК ОприходованиеТоваров
	|		ПО ОприходованиеТоваровТовары.Ссылка = ОприходованиеТоваров.Ссылка
	|			И (ОприходованиеТоваровТовары.Ссылка = &ТекущийДокумент)
	|			И (ОприходованиеТоваров.Ссылка = &ТекущийДокумент)
	|			И ОприходованиеТоваровТовары.Склад <> ОприходованиеТоваров.Склад
	|			И (ОприходованиеТоваровТовары.Склад <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";

	Выборка = Запрос.ВыполнитьПакет();
	Шапка = Выборка[0].Выбрать();
	СкладРазличные = Выборка[1].Выбрать();
	Шапка.Следующий();
	СкладРазличные.Следующий();
	Если СкладРазличные.СкладРазличные > 0 Тогда
		ПараметрыПечати.Вставить("РазличныеСклады", Истина);
	Иначе
		ПараметрыПечати.Вставить("РазличныеСклады", Ложь);
	КонецЕсли;
	
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
    ВалютаПечати = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВалютаУчета");
	// Выводим шапку накладной
	ТекстЗаголовка = НСтр("ru='Оприходование товаров'"); 
	ПараметрыПечати.Вставить("ТекстЗаголовка", ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, ТекстЗаголовка));

	ПараметрыПечати.Вставить("ПредставлениеСклада", Шапка.Склад);
	КраткоеНаименованиеВалюты = ОбщегоНазначения.ПолучитьКраткоеНаименованиеОсновнойВалюты();
	ТекстВалюта = НСтр("ru='Валюта: %1'");
	ТекстВалюта = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВалюта, КраткоеНаименованиеВалюты); 
	ПараметрыПечати.Вставить("ВалютаНадпись", ТекстВалюта);
	
	// Вывести табличную часть
	Позиции = Новый Массив;
	СуммаИтого    = 0;
	Ном = 0;
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		ПараметрыПозиции = Новый Структура;
		ПараметрыПозиции.Вставить("Номенклатура", ВыборкаСтрокТовары.Номенклатура);	
		Ном = Ном +1;
		ПараметрыПозиции.Вставить("НомерСтроки", Ном);
		
		// Номенклатура, Характеристика, Серия.
		ПараметрыПозиции.Вставить("Товар", ВыборкаСтрокТовары.Товар);
		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Характеристика) Тогда
			ПараметрыПозиции.Товар = ПараметрыПозиции.Товар + Символы.ПС +"(" +ВыборкаСтрокТовары.Характеристика + ")";
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Серия) Тогда
			ПараметрыПозиции.Товар = ПараметрыПозиции.Товар + Символы.ПС + ВыборкаСтрокТовары.Серия;
		КонецЕсли;
		
		ПараметрыПозиции.Вставить("Количество", ВыборкаСтрокТовары.Количество);
		ПараметрыПозиции.Вставить("ЕдиницаИзмерения", ВыборкаСтрокТовары.ЕдиницаИзмерения);
		ПараметрыПозиции.Вставить("Цена", ВыборкаСтрокТовары.Цена);
		ПараметрыПозиции.Вставить("Сумма", ВыборкаСтрокТовары.Сумма);
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.СкладСтрока) Тогда
			ПараметрыПозиции.Вставить("СкладСтрока", Шапка.Склад);
		Иначе
			ПараметрыПозиции.Вставить("СкладСтрока", ВыборкаСтрокТовары.СкладСтрока);
		КонецЕсли;
		Если ПараметрыПечати.ВыводитьКоды Тогда
			ПараметрыПозиции.Вставить("КодАртикул", ВыборкаСтрокТовары.КодАртикул);
		КонецЕсли;

		Позиции.Добавить(ПараметрыПозиции);
		
		СуммаИтого = СуммаИтого + ВыборкаСтрокТовары.Сумма;
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Позиции", Позиции);

	// Вывести Итого
	Валюта = ОбщегоНазначения.ПолучитьКраткоеНаименованиеОсновнойВалюты();
	ПараметрыПечати.Вставить("Всего", ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаИтого) + " " + Валюта);

	// Вывести Сумму прописью
	ТекстСтроки = НСтр("ru='Всего наименований %1, на сумму %2'");
	ТекстСтроки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСтроки, ВыборкаСтрокТовары.Количество(), ОбщегоНазначенияКлиентСервер.ФорматСумм(СуммаИтого, ВалютаПечати)); 
	ПараметрыПечати.Вставить("ИтоговаяСтрока", ТекстСтроки);
	ПараметрыПечати.Вставить("СуммаПрописью", ОбщегоНазначения.СформироватьСуммуПрописью(СуммаИтого, ВалютаПечати));

	Возврат ПараметрыПечати;

КонецФункции 

#КонецОбласти