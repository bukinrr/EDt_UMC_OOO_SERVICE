#Область ОбработчикиСобытий

Процедура ОбработкаПроведения(Отказ, Режим)
	
	РегистрыНакопления.ДвиженияДенежныхСредств.СформироватьДвиженияПоШапкеДокумента(Новый Структура("Дата, Касса, СуммаДокумента,СтатьяДвиженияДенежныхСредств",Дата,ЭквайринговыйТерминал,СуммаДокумента, СтатьяДвиженияДенежныхСредств),Движения.ДвиженияДенежныхСредств, Ложь, Отказ);
	
	Движение = Движения.ВзаиморасчетыСКлиентами.Добавить();
	Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
	Движение.Период = Дата;
	Движение.Клиент = Клиент;
	Движение.Сумма	= -СуммаДокумента;
	
	// Комплексные расчеты в взиморасчетах с клиентами.
	Если Метаданные.Документы.Найти("КомплексныйРасчетКлиента") <> Неопределено
		И ЗначениеЗаполнено(ЭтотОбъект.Сделка)
		И ТипЗнч(ЭтотОбъект.Сделка) = Тип("ДокументСсылка.КомплексныйРасчетКлиента")
		И ОбщегоНазначения.ОбщийМодуль("КомплексныеРасчетыКлиентов").РасчетСОбособленнымУчетомВзаиморасчетов(ЭтотОбъект.Сделка)
	Тогда
		Движение.Сделка = ЭтотОбъект.Сделка;
	КонецЕсли;
	
	// Регистр "Оплаты".
	РаботаСДокументамиСервер.ДобавитьДвижениеПоРегиструОплаты(Движения.Оплаты, Дата, Клиент, Перечисления.ВидыОплаты.Безналичные, -СуммаДокумента);
	
	// Документ коррекции дополнительно сторнирует движения если это требуется
	Если Коррекция Тогда	
		РаботаСДокументамиСервер.СторнироватьДвиженияПоРегистрамУПР(ЭтотОбъект, Отказ);	
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	РаботаСДокументамиСервер.ДокументОплатыПроверитьСуммыКредитаККМПередЗаписью(ЭтотОбъект, Отказ, РежимЗаписи);	
	РаботаСДокументамиСервер.ПроверитьДанныеКоррекции(ЭтотОбъект, Отказ, РежимЗаписи);
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	РаботаСДокументамиСервер.ОчиститьРеквизитыККМДокумента(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	Если Метаданные.Документы.Найти("КомплексныйРасчетКлиента") <> Неопределено
		И ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.КомплексныйРасчетКлиента")
	Тогда
		Клиент = ДанныеЗаполнения.Клиент;
		СуммаДокумента = Макс(0, -РаботаСКлиентамиПереопределяемый.ПолучитьВзаиморасчетыСКлиентом(Клиент, ТекущаяДата(), ДанныеЗаполнения));
		Сделка = ДанныеЗаполнения;
		Филиал = Сделка.Филиал;
		
		НастройкаПечатиЧеков = МенеджерОборудованияВызовСервераПереопределяемый.ПолучитьНастройкуПечатиЧековФилиала(Филиал, Истина);	
		РаботаСДокументамиСервер.ДокументОплатыЗаполнитьРасчетыПоДолгуПоКомплексномуРасчетуСервер(Сделка, НастройкаПечатиЧеков, КредитныеДанные, СуммаДокумента);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("ДокументОснование") 
		И ЗначениеЗаполнено(ДанныеЗаполнения.ДокументОснование) 
		И ТипЗнч(ДанныеЗаполнения.ДокументОснование) = Тип("ДокументСсылка.ОказаниеУслуг") 
	Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект,ДанныеЗаполнения);
		РаботаСДокументамиСервер.ОбработкаЗаполнения(ЭтотОбъект, ДокументОснование);
		
		НастройкаПечатиЧеков = МенеджерОборудованияВызовСервераПереопределяемый.ПолучитьНастройкуПечатиЧековФилиала(Филиал, Истина);	
		РаботаСДокументамиСервер.ДокументОплатыЗаполнитьРасчетыПоДолгуПоОказаниюУслуг(ДокументОснование, НастройкаПечатиЧеков, КредитныеДанные, СуммаДокумента, СпособРасчетаЧекаККМ);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ОплатаПлатежнойКартой")Тогда
		ЭтотОбъект.ДокументОснование = ДанныеЗаполнения;
		Документы.ВозвратПоПлатежнойКарте.ЗаполнитьВозвратПоОплатеПлатежнойКартой(ЭтотОбъект);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения) = Тип("Структура") 
		И ДанныеЗаполнения.Свойство("Коррекция")
		И ДанныеЗаполнения.Коррекция 
	Тогда		
		РаботаСДокументамиСервер.ЗаполнитьДанныеДокументаКоррекцииПоОснованию(ЭтотОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		РаботаСДокументамиСервер.ЗаполнитьУчастникаИИННДенежнойОперации(Клиент, Выдать, ВыдатьИНН, ВыдатьАдрес);
	КонецЕсли;	
	
	НомерЧекаККМ = "";
	НомерЧекаЭТ = "";
	
КонецПроцедуры

#КонецОбласти
