&НаКлиенте
Перем ПредупреждениеПриЗакрытииПоказано;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументПродажи = Параметры.ДокументПродажи;
	
	УстановитьПривилегированныйРежим(Истина);
	Запись = РегистрыСведений.РецептыДокументовПродаж.СоздатьМенеджерЗаписи();
	Запись.ДокументПродажи = Параметры.ДокументПродажи;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Запись);
	КонецЕсли;
	
	Элементы.ФормаУдалитьЗапись.Видимость = Ложь;
	
	Если	ДокументПродажи.СостояниеЧековККМ = Перечисления.СостоянияЧековККМ.ЧекиПробиты
		Или	ДокументПродажи.СостояниеЧековККМ = Перечисления.СостоянияЧековККМ.ЧекиЧастичноПробиты
	Тогда
		ЭтаФорма.ТолькоПросмотр = Истина;
	ИначеЕсли Не Запись.Выбран() Тогда
		Элементы.ФормаУдалитьЗапись.Видимость = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ИдентификаторМестаДеятельности) Тогда
		ИдентификаторМестаДеятельности = ПолучитьМестоДеятельностиМДЛП(ДокументПродажи.Филиал, ДокументПродажи.Склад);
		Если ЗначениеЗаполнено(ИдентификаторМестаДеятельности) Тогда
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ПредупреждениеПриЗакрытииПоказано) Тогда
		мНоменклатур = ПолучитьСписокМаркированныхНоменклатурБезРецепта(ДокументПродажи);
		Если мНоменклатур.Количество() <> 0 Тогда
			Отказ = Истина;
			ТекстПредупреждения = "Для следующих маркированных товарных позиций не будет установлен рецепт в чеке ККТ, " 
			+ "т.к. для них не указана потребительская упаковка в карточке номенклатуры: ";
			Для Каждого Эл Из мНоменклатур Цикл
				ТекстПредупреждения = ТекстПредупреждения + Символы.ПС + Эл;
			КонецЦикла;
			Оповещение = Новый ОписаниеОповещения("ПродолжитьЗакрытие", ЭтотОбъект);
			ПоказатьПредупреждение(Оповещение, ТекстПредупреждения);
			ПредупреждениеПриЗакрытииПоказано = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УдалитьЗапись(Команда)
	
	УдалитьЗаписьИзРегистра(ДокументПродажи);
	
	Закрыть();
	
КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьИдентификатор(Команда)
	
	РеквизитыДокумента = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДокументПродажи, "Филиал, Склад");
	ИдентификаторМестаДеятельности = ПолучитьМестоДеятельностиМДЛП(РеквизитыДокумента.Филиал, РеквизитыДокумента.Склад);
	Если Не ЗначениеЗаполнено(ИдентификаторМестаДеятельности) Тогда
		ТекстПредупреждения = СтрШаблон("В программе не заведено место деятельности по МДЛП для филиала %1 и склада %2",
										РеквизитыДокумента.Филиал, РеквизитыДокумента.Склад);
		ПоказатьПредупреждение(, ТекстПредупреждения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьПоследнееИспользованноеДляЭтогоФилиала(Команда)
	РеквизитыДокумента = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ДокументПродажи, "Филиал, Склад");
	ИдентификаторМестаДеятельности = ПолучитьПоследнееИспользованное(РеквизитыДокумента.Филиал, РеквизитыДокумента.Склад, ДокументПродажи);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	Если ПроверитьЗаполнение() Тогда
		ЗаписатьНаСервере();
		Закрыть(Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УдалитьЗаписьИзРегистра(ДокументПродажи)
	
	УстановитьПривилегированныйРежим(Истина);
	Запись = РегистрыСведений.РецептыДокументовПродаж.СоздатьМенеджерЗаписи();
	Запись.ДокументПродажи = ДокументПродажи;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда
		Запись.Удалить();
	КонецЕсли;
	
КонецПроцедуры 

&НаСервереБезКонтекста
Функция ПолучитьМестоДеятельностиМДЛП(Филиал, Склад)
	УстановитьПривилегированныйРежим(Истина);
	Возврат РегистрыСведений.РецептыДокументовПродаж.ПолучитьМестоДеятельностиМДЛП(Филиал, Склад);
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПоследнееИспользованное(Филиал, Склад, ДокументПродажи)

	УстановитьПривилегированныйРежим(Истина);
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	РецептыДокументовПродаж.ИдентификаторМестаДеятельности КАК ИдентификаторМестаДеятельности
		|ИЗ
		|	РегистрСведений.РецептыДокументовПродаж КАК РецептыДокументовПродаж
		|ГДЕ
		|	РецептыДокументовПродаж.ДокументПродажи.Филиал = &Филиал
		|	И РецептыДокументовПродаж.ДокументПродажи.Склад = &Склад
		|	И РецептыДокументовПродаж.ДокументПродажи.ПометкаУдаления = ЛОЖЬ
		|	И РецептыДокументовПродаж.ДокументПродажи <> &ДокументПродажи
		|
		|УПОРЯДОЧИТЬ ПО
		|	РецептыДокументовПродаж.ДокументПродажи.Дата УБЫВ";
	
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("ДокументПродажи", ДокументПродажи);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Возврат Выборка.ИдентификаторМестаДеятельности;
	КонецЦикла;
	
	Возврат Неопределено;

КонецФункции

&НаСервере
Процедура ЗаписатьНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	Запись = РегистрыСведений.РецептыДокументовПродаж.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, ЭтотОбъект);
	Запись.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьЗакрытие(Результат) Экспорт
	Закрыть();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСписокМаркированныхНоменклатурБезРецепта(ДокументПродажи)
	
	мДанныхНоменклатур = Новый Массив;
	
	Для Каждого Эл Из ДокументПродажи.Товары Цикл
		Если ЗначениеЗаполнено(Эл.Штрихкод) 
			И мДанныхНоменклатур.Найти(Эл.Номенклатура) <> Неопределено 
			И Не ЗначениеЗаполнено(Эл.Номенклатура.Упаковка) 
		Тогда
			мДанныхНоменклатур.Добавить(Эл.Номенклатура);
		КонецЕсли;
	КонецЦикла;
	
	Возврат мДанныхНоменклатур;
	
КонецФункции

#КонецОбласти