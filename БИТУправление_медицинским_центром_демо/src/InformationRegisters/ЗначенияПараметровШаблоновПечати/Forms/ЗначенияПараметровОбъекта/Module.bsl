#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПараметрыОбъекта();
	ПрочитатьЗначенияПараметров();
	
	ЕстьПравоРедактирования = ПравоДоступа("Редактирование", Метаданные.НайтиПоТипу(ТипЗнч(Параметры.Объект)));
	Элементы.КомандаСохранить.Доступность = ЕстьПравоРедактирования;
	
	Если Параметры.ДляПечати Тогда
		Элементы.КомандаСохранить.Заголовок = НСтр("ru='Продолжить'");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОтображатьИменаПараметровПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	СохранитьЗначенияНаСервере();
	Закрыть(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображатьИменаПараметров(Команда)
	
	ОтображатьИменаПараметров = Не ОтображатьИменаПараметров;
	ОтображатьИменаПараметровПриИзменении();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПараметрыПечатиЗначениеОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыПечатиЗначениеНачалоВыбора(Элемент, Неопределено, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПечатиЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("ПараметрыПечатиЗначениеПослеВвода", ЭтотОбъект);
	ПоказатьВводСтроки(Оповещение, Элементы.ПараметрыПечати.ТекущиеДанные.Значение,,1023,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПечатиЗначениеПослеВвода(Значение, ДополнительныеПараметры) Экспорт
	
	Если Значение <> Неопределено Тогда
		Элементы.ПараметрыПечати.ТекущиеДанные.Значение = Значение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Заполнение при создании формы.
&НаСервере
Процедура ЗаполнитьПараметрыОбъекта()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаОбъекта", ОбщегоНазначения.ПустоеЗначениеТипа(ТипЗнч(Параметры.Объект)));
	
	Если ЗначениеЗаполнено(Параметры.ШаблонПечати) Тогда
		Запрос.УстановитьПараметр("ШаблонПечати", Параметры.ШаблонПечати);
	Иначе
		Запрос.УстановитьПараметр("ШаблонПечати", ШаблоныПечатиОбъекта(Параметры.Объект));
	КонецЕсли;
	
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ПараметрыПечати.ИмяПараметра КАК ИмяПараметра,
	 |	ПараметрыПечати.Описание КАК Описание,
	 |	ПараметрыПечати.Значение КАК Значение,
	 |	ПараметрыПечати.Ссылка КАК ШаблонПечати,
	 |	ПараметрыПечати.Ссылка.Представление КАК ШаблонПечатиПредставление
	 |ИЗ
	 |	Справочник.ШаблоныПечати.ПараметрыПечати КАК ПараметрыПечати
	 |ГДЕ
	 |	ПараметрыПечати.Ссылка В(&ШаблонПечати)
	 |	И ПараметрыПечати.ВводитсяВручную
	 |
	 |УПОРЯДОЧИТЬ ПО
	 |	ШаблонПечатиПредставление,
	 |	ПараметрыПечати.Ссылка,
	 |	ПараметрыПечати.НомерСтроки
	 |ИТОГИ ПО
	 |	ШаблонПечати"
	;
	СортировкаОписаний = Новый СписокЗначений;
	
	Выб = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выб.Следующий() Цикл
		
		СтрокаШаблон = ПараметрыПечати.ПолучитьЭлементы().Добавить();
		СтрокаШаблон.Описание = Выб.ШаблонПечатиПредставление;
		СтрокаШаблон.ВерхнийУровень = Истина;
		
		ВыбПараметры = Выб.Выбрать();
		Пока ВыбПараметры.Следующий() Цикл
			СтрокаПараметра = СтрокаШаблон.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПараметра, ВыбПараметры);
			Если ПустаяСтрока(СтрокаПараметра.Описание) Тогда
				СтрокаПараметра.Описание = СтрокаПараметра.ИмяПараметра;
			КонецЕсли;
			
			// Расчет значения по умолчанию.
			СодержаниеОшибки = "";
			ЗначениеПараметраМассив = РаботаСШаблонамиПечатиСервер.ВычислитьЗначенияПараметровШаблонаПечати(Параметры.Объект, Выб.ШаблонПечати, СодержаниеОшибки, ВыбПараметры.ИмяПараметра);
			Если ПустаяСтрока(СодержаниеОшибки) И ЗначениеПараметраМассив.Количество() <> 0 Тогда
				// Вычисление прошло без ошибки, значит, в качестве значения указали алгоритм расчета, а не фиксированное значение.
				СтрокаПараметра.Значение = ЗначениеПараметраМассив[0].Значение;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ШаблоныПечатиОбъекта(Объект)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СсылкаОбъекта", ОбщегоНазначения.ПустоеЗначениеТипа(ТипЗнч(Объект)));
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.ДоговорСКлиентом") Тогда
		Запрос.УстановитьПараметр("ШаблонВидаДоговора", Объект.ВидДоговора.ШаблонПечати);
	Иначе
		Запрос.УстановитьПараметр("ШаблонВидаДоговора", Неопределено);
	КонецЕсли;
	
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ШаблоныПечатиПринадлежность.Ссылка КАК Ссылка
	 |ИЗ
	 |	Справочник.ШаблоныПечати.Принадлежность КАК ШаблоныПечатиПринадлежность
	 |ГДЕ
	 |	ШаблоныПечатиПринадлежность.СсылкаОбъекта = &СсылкаОбъекта
	 |
	 |ОБЪЕДИНИТЬ ВСЕ
	 |
	 |ВЫБРАТЬ
	 |	&ШаблонВидаДоговора";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ОтображатьИменаПараметровПриИзменении()
	
	Элементы.КомандаОтображатьИменаПараметров.Пометка = ОтображатьИменаПараметров;
	Элементы.ПараметрыПечатиИмяПараметра.Видимость = ОтображатьИменаПараметров;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьЗначенияПараметров()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НЗ = РегистрыСведений.ЗначенияПараметровШаблоновПечати.СоздатьНаборЗаписей();
	НЗ.Отбор.Объект.Установить(Параметры.Объект);
	НЗ.Прочитать();
	
	ДеревоПараметров = РеквизитФормыВЗначение("ПараметрыПечати");
	
	Отбор = Новый Структура("ИмяПараметра");
	Для Каждого Запись Из НЗ Цикл
		
		Отбор.ИмяПараметра = Запись.ИмяПараметра;
		СтрокиТаблицы = ДеревоПараметров.Строки.НайтиСтроки(Отбор, Истина);
		Для Каждого СтрокаТаблицы Из СтрокиТаблицы Цикл
			СтрокаТаблицы.Значение = Запись.Значение;
		КонецЦикла;
		
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДеревоПараметров, "ПараметрыПечати");
	
КонецПроцедуры

&НаСервере
Процедура СохранитьЗначенияНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	НЗ = РегистрыСведений.ЗначенияПараметровШаблоновПечати.СоздатьНаборЗаписей();
	НЗ.Отбор.Объект.Установить(Параметры.Объект);
	
	Для Каждого СтрокаШаблон Из ПараметрыПечати.ПолучитьЭлементы() Цикл
		
		Для Каждого СтрокаТаблицы Из СтрокаШаблон.ПолучитьЭлементы() Цикл
			
			Запись = НЗ.Добавить();
			Запись.Объект		 = Параметры.Объект;
			Запись.ИмяПараметра	 = СтрокаТаблицы.ИмяПараметра;
			Запись.Значение		 = СтрокаТаблицы.Значение;
			
		КонецЦикла;
	КонецЦикла;
	
	НЗ.Записать();
	
КонецПроцедуры

#КонецОбласти
