#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Запись.УИДСообщения) Тогда
		Запись.УИДСообщения = Строка(Новый УникальныйИдентификатор());
		Запись.Пользователь = ПараметрыСеанса.ТекущийПользователь;
		Запись.ДатаСоздания = ТекущаяДатаСеанса();
		Запись.Состояние	= Перечисления.СостоянияЗапросовТехПоддержкаБИТ.ОжидаетОтправки;
		
		Модифицированность	= Истина;
		ЭтоНовыйЗапрос		= Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Запись.ТипЗапроса) Тогда
		Запись.ТипЗапроса = Перечисления.ТипыЗапросовТехПоддержкаБИТ.ВопросПоПочте;
	КонецЕсли;
	
	УстановитьДоступностьРедактирвоания();
	УстановитьОбязательныеПоляПоТипу();
	
	АдресТехПоддержки = ПроцедурыСпециализацииПоставки.АдресТехПоддержкиКонфигурации();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЭтоНовыйЗапрос Тогда
		МассивДанныхИнформации = УниверсальныеМеханизмыКлиент.ПолучитьИнформациюОПрограмме();
		Запись.ТекстСлужебнойИнформации = Новый ФорматированнаяСтрока(МассивДанныхИнформации);	
	КонецЕсли;
	
	УстановитьДекорациюОтправлено();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если ЗначениеЗаполнено(Запись.Email)
		И Не ОбщегоНазначенияКлиентСервер.АдресЭлектроннойПочтыСоответствуетТребованиям(Запись.Email)
	Тогда
		Отказ = Истина;
		ПоказатьПредупреждение(, "Адрес email указан с ошибками");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьНаЛК(Команда)
	
	Если Модифицированность Тогда
		Записать();
	КонецЕсли;
	
	Если Не Модифицированность Тогда
		ОтправитьНаЛКСервер(Запись.УИДСообщения);
		ЭтаФорма.Прочитать();
		
		УстановитьДоступностьРедактирвоания();
		УстановитьДекорациюОтправлено();
		Оповестить("БылаПопыткаОтправитьЗапросНаЛК");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТипЗапросаПриИзменении(Элемент)
	
	УстановитьОбязательныеПоляПоТипу();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОтправитьНаЛКСервер(УИДСообщения)
	РегистрыСведений.ОбращенияВТехПоддержкуБИТ.СоздатьНаборЗаписей().ОбработатьОтправкуЗапросаНаЛКПоУИД(УИДСообщения);	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДекорациюОтправлено()
	
	Элементы.ДекорацияУспешноОтправлено.Видимость = Запись.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияЗапросовТехПоддержкаБИТ.УспешноОтправлен");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьРедактирвоания()
	
	Отправлено = Запись.Состояние = Перечисления.СостоянияЗапросовТехПоддержкаБИТ.УспешноОтправлен;
	
	ЭтотОбъект.ТолькоПросмотр = Отправлено;
	Элементы.ФормаОтправитьНаЛК.Доступность = Не Отправлено;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОбязательныеПоляПоТипу()
	
	Элементы.Телефон.АвтоОтметкаНезаполненного = (Запись.ТипЗапроса = Перечисления.ТипыЗапросовТехПоддержкаБИТ.ЗаказЗвонка) Или Запись.ТипЗапроса.Пустая();
	Элементы.Телефон.ОтметкаНезаполненного = Элементы.Телефон.АвтоОтметкаНезаполненного И Не ЗначениеЗаполнено(Запись.Телефон);
	Элементы.Email.АвтоОтметкаНезаполненного = (Запись.ТипЗапроса = Перечисления.ТипыЗапросовТехПоддержкаБИТ.ВопросПоПочте) Или Запись.ТипЗапроса.Пустая();
	Элементы.Email.ОтметкаНезаполненного = Элементы.Email.АвтоОтметкаНезаполненного И Не ЗначениеЗаполнено(Запись.Email);
	
КонецПроцедуры

#КонецОбласти
