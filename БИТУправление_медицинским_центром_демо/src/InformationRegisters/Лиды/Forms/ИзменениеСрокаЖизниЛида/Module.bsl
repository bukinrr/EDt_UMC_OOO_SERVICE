#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СрокЖизниЛида = Параметры.СрокЖизниЛида;
	КоличествоКлиентов = ПолучитьКоличествоКлиентов();
	КоличествоНеобработанныхКлиентов = ПолучитьКоличествоКлиентов(Истина);
	КоличествоОбработанныхКлиентов = Строка(КоличествоКлиентов-КоличествоНеобработанныхКлиентов) + "/" + Строка(КоличествоКлиентов);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	НастроитьВидимость();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбработатьВсехКлиентов(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ЗакрытиеВопросаИзмененияКоличестваСрокЖизниЛида", ЭтотОбъект);
	ТекстВопроса = НСтр("ru='Будет произведен пересчет лидов по всем клиетам. Это займет некоторое время.'");
	ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОставшихсяКлиентов(Команда)
	
	ОбработанныеКлиенты = Новый Массив;
	
	КоличествоИтераций = Окр(КоличествоНеобработанныхКлиентов/100+0.5,0,0);
	
	Для НомерИтерации = 1 По КоличествоИтераций Цикл
		
		Состояние(НСтр("ru='Обработано клиентов'"), (1-КоличествоНеобработанныхКлиентов/КоличествоКлиентов)*100);
		Пересчет(ОбработанныеКлиенты, КоличествоНеобработанныхКлиентов, Истина);
		КоличествоОбработанныхКлиентов = Строка(КоличествоКлиентов-КоличествоНеобработанныхКлиентов) + "/" + Строка(КоличествоКлиентов);
		НастроитьВидимость();
		ОбработкаПрерыванияПользователя();
	 	
	КонецЦикла;
	Состояние(НСтр("ru='Обработано клиентов'"), (1-КоличествоНеобработанныхКлиентов/КоличествоКлиентов)*100);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	КоличествоКлиентов = ПолучитьКоличествоКлиентов();
	КоличествоНеобработанныхКлиентов = ПолучитьКоличествоКлиентов(Истина);
	КоличествоОбработанныхКлиентов = Строка(КоличествоКлиентов-КоличествоНеобработанныхКлиентов) + "/" + Строка(КоличествоКлиентов);
	НастроитьВидимость();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура НастроитьВидимость()
	
	ВозможностьОбработатьОставшихсяКлиентов = КоличествоКлиентов <> КоличествоНеобработанныхКлиентов И КоличествоНеобработанныхКлиентов > 0;
	Элементы.КоличествоОбработанныхКлиентов.Видимость = ВозможностьОбработатьОставшихсяКлиентов;
	Элементы.ОбработатьОставшихсяКлиентов.Видимость = ВозможностьОбработатьОставшихсяКлиентов;

КонецПроцедуры

&НаКлиенте
Процедура ЗакрытиеВопросаИзмененияКоличестваСрокЖизниЛида(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ОбработанныеКлиенты = Новый Массив;
		УдалитьЛиды();
		УправлениеНастройками.УстановитьЗначениеПараметраУчетнойПолитики("СрокЖизниЛида", СрокЖизниЛида);
		
		КоличествоИтераций = Окр(КоличествоКлиентов/100+0.5,0,0);
		
		ЗаголовокСостояния = НСтр("ru='Нажмите Ctrl+Break, чтобы прервать'");
		Для НомерИтерации = 1 По КоличествоИтераций Цикл
			
			Состояние(НСтр("ru='Обработано клиентов'"), ОбработанныеКлиенты.Количество()/КоличествоКлиентов*100, ЗаголовокСостояния);
			Пересчет(ОбработанныеКлиенты, КоличествоНеобработанныхКлиентов);
			КоличествоОбработанныхКлиентов = Строка(КоличествоКлиентов-КоличествоНеобработанныхКлиентов) + "/" + Строка(КоличествоКлиентов);
			НастроитьВидимость();
			ОбработкаПрерыванияПользователя();
			
		КонецЦикла;
		Закрыть(СрокЖизниЛида);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЛиды()
	РегистрыСведений.Лиды.СоздатьНаборЗаписей().Записать();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура Пересчет(ОбработанныеКлиенты, КоличествоНеобработанныхКлиентов, ТолькоНеобработанные = Ложь)
	
	КоличествоКлиентовВТранзакции = 20;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 100
		|	Клиенты.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПродажиОбороты.Клиент КАК Клиент
		|		ИЗ
		|			РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заявка.Клиент
		|		ИЗ
		|			Документ.Заявка КАК Заявка) КАК СобытияПоКлиенту
		|		ПО Клиенты.Ссылка = СобытияПоКлиенту.Клиент
		|ГДЕ
		|	НЕ Клиенты.Ссылка В (&ОбработанныеКлиенты)
		|	";
	
	Если ТолькоНеобработанные Тогда
		Запрос.Текст = Запрос.Текст + " И Клиенты.Ссылка Не В (ВЫБРАТЬ Различные(Лиды.Клиент) Из РегистрСведений.Лиды КАК Лиды)";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ОбработанныеКлиенты", ОбработанныеКлиенты);
	
	Клиенты = Запрос.Выполнить().Выгрузить();
	КоличествоИтераций = Окр(Клиенты.Количество()/КоличествоКлиентовВТранзакции+0.5,0,0);
	
	Для НомерИтерации = 1 По КоличествоИтераций Цикл
		КлиентыКУдалению = Новый Массив;
		НачатьТранзакцию();
		Для Каждого Клиент Из Клиенты Цикл
			Если Клиенты.Индекс(Клиент) = КоличествоКлиентовВТранзакции Тогда
				Прервать;
			КонецЕсли;
			
			ДобавитьЛидыПоКлиенту(Клиент.Ссылка);
			
			КлиентыКУдалению.Добавить(Клиент.Ссылка);
			ОбработанныеКлиенты.Добавить(Клиент.Ссылка);
			КоличествоНеобработанныхКлиентов = КоличествоНеобработанныхКлиентов-1;
		КонецЦикла;
		
		Для Каждого КлиентКУдалению Из КлиентыКУдалению Цикл
			Клиенты.Удалить(Клиенты.НайтиСтроки(Новый Структура("Ссылка", КлиентКУдалению))[0]);
		КонецЦикла;
		
		ЗафиксироватьТранзакцию();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьЛидыПоКлиенту(Клиент)
	
	ДатаПервогоСобытия = ПолучитьДатуПервогоСобытия(Клиент);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Событие.Ссылка КАК Ссылка,
		|	Событие.ДатаФакт КАК Дата
		|ИЗ
		|	Документ.Событие КАК Событие
		|ГДЕ
		|	Событие.ПометкаУдаления = ЛОЖЬ
		|	И Событие.ИсточникИнформации <> ЗНАЧЕНИЕ(Справочник.ИсточникиИнформации.ПустаяСсылка)
		|	И Событие.Клиент = &Клиент
		|	И Событие.ДатаФакт <> ДАТАВРЕМЯ(1, 1, 1)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛистОжидания.Ссылка,
		|	ЛистОжидания.Дата
		|ИЗ
		|	Документ.ЛистОжидания КАК ЛистОжидания
		|ГДЕ
		|	ЛистОжидания.ПометкаУдаления = ЛОЖЬ
		|	И ЛистОжидания.ИсточникИнформации <> ЗНАЧЕНИЕ(Справочник.ИсточникиИнформации.ПустаяСсылка)
		|	И ЛистОжидания.Клиент = &Клиент
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
	
	Запрос.Параметры.Вставить("Клиент", Клиент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Количество() = 0 И ДатаПервогоСобытия <> Неопределено Тогда
		РегистрыСведений.Лиды.ДобавитьЛид(Новый Структура("Клиент, Период", Клиент, ДатаПервогоСобытия));
	КонецЕсли;
	
	ПустойЛидСоздан = Ложь;
	
	Пока Выборка.Следующий() Цикл
		Если Не ПустойЛидСоздан И ДатаПервогоСобытия <> Неопределено И НачалоДня(ДатаПервогоСобытия) < НачалоДня(Выборка.Дата) Тогда
			РегистрыСведений.Лиды.ДобавитьЛид(Новый Структура("Клиент, Период, ДатаОкончания", Клиент, ДатаПервогоСобытия, НачалоДня(Выборка.Дата)-1));
			ПустойЛидСоздан = Истина;
		КонецЕсли;
		РегистрыСведений.Лиды.ДобавитьПервичныйЛид(Новый Структура("Клиент, Лид, Период", Клиент, Выборка.Ссылка, Выборка.Дата), Новый Структура("ПометкаНаУдаление", Ложь), Не ПустойЛидСоздан);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДатуПервогоСобытия(Клиент)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(Продажи.Период) КАК Дата
	|ИЗ
	|	РегистрНакопления.Продажи КАК Продажи
	|ГДЕ
	|	Продажи.Клиент = &Клиент
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МИНИМУМ(Заявка.Дата)
	|ИЗ
	|	Документ.Заявка КАК Заявка
	|ГДЕ
	|	Заявка.Клиент = &Клиент
	|	И Заявка.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата";
	Запрос.УстановитьПараметр("Клиент", Клиент);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	Пока РезультатЗапроса.Следующий() Цикл
		Если ЗначениеЗаполнено(РезультатЗапроса.Дата) Тогда
			Возврат РезультатЗапроса.Дата;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьКоличествоКлиентов(ТолькоНеобработанные = Ложь)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(Клиенты.Ссылка) КАК КоличествоКлиентов
		|ИЗ
		|	Справочник.Клиенты КАК Клиенты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПродажиОбороты.Клиент КАК Клиент
		|		ИЗ
		|			РегистрНакопления.Продажи.Обороты КАК ПродажиОбороты
		|		
		|		ОБЪЕДИНИТЬ
		|		
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			Заявка.Клиент
		|		ИЗ
		|			Документ.Заявка КАК Заявка) КАК СобытияПоКлиенту
		|		ПО Клиенты.Ссылка = СобытияПоКлиенту.Клиент
		|";
	
	Если ТолькоНеобработанные Тогда
		Запрос.Текст = Запрос.Текст + Символы.ПС + "ГДЕ Клиенты.Ссылка Не В (ВЫБРАТЬ Различные(Лиды.Клиент) Из РегистрСведений.Лиды КАК Лиды)";
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат 0;
	Иначе
	    Возврат Результат.Выгрузить()[0].КоличествоКлиентов;
	КонецЕсли;
	
КонецФункции

#КонецОбласти