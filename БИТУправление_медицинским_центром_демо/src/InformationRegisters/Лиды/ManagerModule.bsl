#Область ПрограммныйИнтерфейс

// Добавить лид в регистр лидов.
//
// Параметры:
//  ДанныеЛида	 - Структура - данные лида в соответствии со структурой регистра.
//
Процедура ДобавитьЛид(ДанныеЛида) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НоваяЗапись = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(НоваяЗапись, ДанныеЛида);
	НоваяЗапись.Записать();
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Обновить запись лида в регистре
//
// Параметры:
//  ДанныеЛида			 - Структура - данные лида
//  ОбновляемыйПараметр	 - Структура - обновляемый параметр.
//
Процедура ОбновитьЗаписьЛида(ДанныеЛида, ОбновляемыйПараметр = Неопределено) Экспорт
	
	НаборЗаписей = СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Клиент.Установить(ДанныеЛида.Клиент);
	НаборЗаписей.Отбор.Период.Установить(ДанныеЛида.Период);
	НаборЗаписей.Отбор.Лид.Установить(ДанныеЛида.Лид);
	
	Если ОбновляемыйПараметр <> Неопределено Тогда
		НаборЗаписей.Прочитать();
		НаборЗаписей[0][ОбновляемыйПараметр.Имя] = ОбновляемыйПараметр.Значение;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

// Добавить первичный лид.
//
// Параметры:
//  ДанныеЛида				 - Структура - данные лида
//  ДополнительныеСвойства	 - Структура - дополнительные свойства
//  ПроверятьПрошлыеСобытия	 - Булево	 - проверять прошлые события
// 
// Возвращаемое значение:
//  Булево - лид создан.
//
Функция ДобавитьПервичныйЛид(ДанныеЛида, ДополнительныеСвойства, ПроверятьПрошлыеСобытия = Истина) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	ЛидСоздан = Ложь;
	
	СрокЖизниЛида = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("СрокЖизниЛида");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Лиды.Период КАК Период,
	|	Лиды.Лид КАК Лид,
	|	Лиды.ДатаОкончания КАК ДатаОкончания,
	|	Лиды.Клиент КАК Клиент
	|ИЗ
	|	РегистрСведений.Лиды КАК Лиды
	|ГДЕ
	|	Лиды.Клиент = &Клиент
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Запрос.УстановитьПараметр("Клиент", ДанныеЛида.Клиент);
	
	ТекущаяСтрока	 = Новый Структура("Клиент, ДатаОкончания, Лид, Период");
	ПредыдущаяСтрока = Новый Структура("Клиент, ДатаОкончания, Лид, Период");
	СледующаяСтрока	 = Новый Структура("Клиент, ДатаОкончания, Лид, Период");
	СледующаяСтрока2 = Новый Структура("Клиент, ДатаОкончания, Лид, Период");
	
	РезультатЗапросаЛиды = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапросаЛиды.Количество() = 0 И ПроверятьПрошлыеСобытия Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Продажи.Период) КАК Дата
		|ИЗ
		|	РегистрНакопления.Продажи КАК Продажи
		|ГДЕ
		|	Продажи.Клиент = &Клиент
		|	И Продажи.Период < &Дата
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(Заявка.Дата)
		|ИЗ
		|	Документ.Заявка КАК Заявка
		|ГДЕ
		|	Заявка.Клиент = &Клиент
		|	И Заявка.ПометкаУдаления = ЛОЖЬ
		|	И Заявка.Дата < &Дата
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата УБЫВ";
		Запрос.УстановитьПараметр("Клиент", ДанныеЛида.Клиент);
		Запрос.УстановитьПараметр("Дата", ДанныеЛида.Период);
		РезультатЗапроса = Запрос.Выполнить().Выбрать();
		Пока РезультатЗапроса.Следующий() Цикл
			Если ЗначениеЗаполнено(РезультатЗапроса.Дата)
				И РезультатЗапроса.Дата + 3600*24*СрокЖизниЛида > ДанныеЛида.Период
			Тогда
				Возврат Ложь;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Пока РезультатЗапросаЛиды.Следующий() Цикл
		Если РезультатЗапросаЛиды.Период < НачалоДня(ДанныеЛида.Период) Тогда
			ЗаполнитьЗначенияСвойств(ПредыдущаяСтрока, РезультатЗапросаЛиды);
		ИначеЕсли РезультатЗапросаЛиды.Период = НачалоДня(ДанныеЛида.Период) Тогда
			Возврат Ложь;
		ИначеЕсли РезультатЗапросаЛиды.Лид = ДанныеЛида.Лид Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, РезультатЗапросаЛиды);
		Иначе
			Если Не ЗначениеЗаполнено(СледующаяСтрока.Лид) Тогда
				ЗаполнитьЗначенияСвойств(СледующаяСтрока, РезультатЗапросаЛиды);
			Иначе
				ЗаполнитьЗначенияСвойств(СледующаяСтрока2, РезультатЗапросаЛиды);
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПредыдущаяСтрока.Лид) Тогда
		// Получение последней активности клиента
		
		ДатаНачала = ПредыдущаяСтрока.Период;
		ДатаОкончания = ?(ЗначениеЗаполнено(СледующаяСтрока.Клиент), СледующаяСтрока.Период, ДанныеЛида.Период);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(Продажи.Период) КАК Период
		|ИЗ
		|	РегистрНакопления.Продажи КАК Продажи
		|ГДЕ
		|	Продажи.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Продажи.Клиент = &Клиент
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	МАКСИМУМ(Заявка.Дата)
		|ИЗ
		|	Документ.Заявка КАК Заявка
		|ГДЕ
		|	Заявка.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И Заявка.Клиент = &Клиент
		|	И Заявка.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Период УБЫВ";
		
		Запрос.УстановитьПараметр("Клиент",			ДанныеЛида.Клиент);
		Запрос.УстановитьПараметр("ДатаНачала",		ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания",	ДатаОкончания);
		
		РезультатЗапросаАктивность = Запрос.Выполнить().Выбрать();
		ДатаПоследнейАктивности = ДатаНачала;
		
		Пока РезультатЗапросаАктивность.Следующий() Цикл
			Если ЗначениеЗаполнено(РезультатЗапросаАктивность.Период) Тогда
				ДатаПоследнейАктивности = РезультатЗапросаАктивность.Период;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		ДатаПоследнейАктивности = ДанныеЛида.Период;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ПометкаНаУдаление Тогда
		// Проверяем, является ли документ лидом
		Если Не ЗначениеЗаполнено(ТекущаяСтрока.Лид) Тогда
			Возврат Ложь;
		КонецЕсли;
		// Если является - удаляем
		РегистрыСведений.Лиды.ОбновитьЗаписьЛида(ТекущаяСтрока);
		
		// Добавляем вместо него по возможности другое событие/ЛО, которое не противоречит условию
		
		Если ЗначениеЗаполнено(СледующаяСтрока.Клиент) Тогда
			ДатаНачалаСледующегоЛида = СледующаяСтрока.Период;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Событие.Ссылка КАК Ссылка,
		|	Событие.ДатаФакт КАК Дата,
		|	Событие.Клиент КАК Клиент
		|ИЗ
		|	Документ.Событие КАК Событие
		|ГДЕ
		|	Событие.ПометкаУдаления = ЛОЖЬ
		|	И Событие.ИсточникИнформации <> ЗНАЧЕНИЕ(Справочник.ИсточникиИнформации.ПустаяСсылка)
		|	И Событие.Клиент = &Клиент
		|	И Событие.ДатаФакт > &ДатаНачала
		|	И (Событие.ДатаФакт < &ДатаОкончания
		|			ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЛистОжидания.Ссылка,
		|	ЛистОжидания.Дата,
		|	ЛистОжидания.Клиент
		|ИЗ
		|	Документ.ЛистОжидания КАК ЛистОжидания
		|ГДЕ
		|	ЛистОжидания.ПометкаУдаления = ЛОЖЬ
		|	И ЛистОжидания.ИсточникИнформации <> ЗНАЧЕНИЕ(Справочник.ИсточникиИнформации.ПустаяСсылка)
		|	И ЛистОжидания.Клиент = &Клиент
		|	И ЛистОжидания.Дата > &ДатаНачала
		|	И (ЛистОжидания.Дата < &ДатаОкончания
		|			ИЛИ &ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата";
		
		Запрос.УстановитьПараметр("ДатаНачала", ДатаПоследнейАктивности);
		Запрос.УстановитьПараметр("ДатаОкончания", ?(ЗначениеЗаполнено(СледующаяСтрока.Клиент), СледующаяСтрока.Период, Дата(1,1,1)));
		Запрос.УстановитьПараметр("Клиент", ДанныеЛида.Клиент);
		
		РезультатЗапросаОбращения = Запрос.Выполнить().Выбрать();
		
		Пока РезультатЗапросаОбращения.Следующий() Цикл
			
			Если ЗначениеЗаполнено(СледующаяСтрока.Клиент) Тогда
				Если СледующаяСтрока.Период = РезультатЗапросаОбращения.Дата Тогда
					Прервать;
				Иначе
					ДатаСледующегоЛида = СледующаяСтрока.Период;
				КонецЕсли;
			КонецЕсли;
			
			СтруктураДобавляемогоЛида = Новый Структура();
			СтруктураДобавляемогоЛида.Вставить("Период", РезультатЗапросаОбращения.Дата);
			СтруктураДобавляемогоЛида.Вставить("Лид", РезультатЗапросаОбращения.Ссылка);
			СтруктураДобавляемогоЛида.Вставить("Клиент", РезультатЗапросаОбращения.Клиент);
			
		КонецЦикла;
		
		Если СтруктураДобавляемогоЛида <> Неопределено
			И ЗначениеЗаполнено(СледующаяСтрока.Клиент)
			И СледующаяСтрока.Период - СтруктураДобавляемогоЛида.Период < 3600*24*СрокЖизниЛида
		Тогда
			// Удалить следующий лид, если между ним и новым дней меньше, чем в константе
			РегистрыСведений.Лиды.ОбновитьЗаписьЛида(СледующаяСтрока);
			
			Если ЗначениеЗаполнено(СледующаяСтрока2.Клиент) Тогда
				ДатаСледующегоЛида = НачалоДня(СледующаяСтрока2.Период) - 1;
			КонецЕсли;
		КонецЕсли;
		
		Если ДатаСледующегоЛида <> Неопределено Тогда
			// Надо закрыть текущий лид, если после него есть еще лиды
			СтруктураДобавляемогоЛида.Вставить("ДатаОкончания", ДатаСледующегоЛида);
		КонецЕсли;
		
	Иначе
		
		Если ЗначениеЗаполнено(ПредыдущаяСтрока.Клиент) Тогда			
			Если ДанныеЛида.Период - ДатаПоследнейАктивности < 3600*24*СрокЖизниЛида
				И ЗначениеЗаполнено(ПредыдущаяСтрока.Лид)
			Тогда
				Возврат Ложь;
			Иначе
				РегистрыСведений.Лиды.ОбновитьЗаписьЛида(ПредыдущаяСтрока, Новый Структура("Имя, Значение", "ДатаОкончания", НачалоДня(ДанныеЛида.Период) - 1));
				СтруктураДобавляемогоЛида = ДанныеЛида;
			КонецЕсли;
		Иначе
			СтруктураДобавляемогоЛида = ДанныеЛида;
		КонецЕсли;
		
		Если СтруктураДобавляемогоЛида <> Неопределено И ЗначениеЗаполнено(СледующаяСтрока.Клиент) Тогда
			Если СледующаяСтрока.Период - ДанныеЛида.Период < 3600*24*СрокЖизниЛида Тогда
				// Заменить следующую строку
				РегистрыСведений.Лиды.ОбновитьЗаписьЛида(СледующаяСтрока);
				Если ЗначениеЗаполнено(СледующаяСтрока2.Клиент) Тогда
					СтруктураДобавляемогоЛида.Вставить("ДатаОкончания", СледующаяСтрока2.Период - 1);
				КонецЕсли;
			Иначе
				СтруктураДобавляемогоЛида.Вставить("ДатаОкончания", СледующаяСтрока.Период - 1);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураДобавляемогоЛида <> Неопределено Тогда
		РегистрыСведений.Лиды.ДобавитьЛид(СтруктураДобавляемогоЛида);
		ЛидСоздан = Истина;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат ЛидСоздан;
	
КонецФункции

#КонецОбласти