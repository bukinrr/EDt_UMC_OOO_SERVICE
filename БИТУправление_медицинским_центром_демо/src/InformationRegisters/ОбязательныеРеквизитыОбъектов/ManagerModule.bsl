
#Область ПрограммныйИнтерфейс

// Стандартные проверяемые реквизиты справочников.
// 
// Возвращаемое значение:
// Структура  - Структура с полями регистра сведений "Обязательные реквизиты объектов"
//
Функция ПолучитьСтандартныеРеквизиты() Экспорт
	
	СтандартныеРеквизиты = Новый Массив;
	
	СтруктураРеквизита = Новый Структура;
	СтруктураРеквизита.Вставить("ИмяСправочника", "Клиенты");
	СтруктураРеквизита.Вставить("ИмяРеквизита", "ДатаРождения");
	СтруктураРеквизита.Вставить("ИмяРеквизитаПредставление", "Дата рождения");
	СтруктураРеквизита.Вставить("ТолькоПриЗаписиНового", Ложь);
	
	СтандартныеРеквизиты.Добавить(СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура;
	СтруктураРеквизита.Вставить("ИмяСправочника", "Клиенты");
	СтруктураРеквизита.Вставить("ИмяРеквизита", ПрефиксРеквизитовВидовКИ() + ОбозначениеЛюбойТелефон());
	СтруктураРеквизита.Вставить("ИмяРеквизитаПредставление", "Любой телефон");
	СтруктураРеквизита.Вставить("ТолькоПриЗаписиНового", Истина);
	
	СтандартныеРеквизиты.Добавить(СтруктураРеквизита);
	
	СтруктураРеквизита = Новый Структура;
	СтруктураРеквизита.Вставить("ИмяСправочника", "Клиенты");
	СтруктураРеквизита.Вставить("ИмяРеквизита", ПрефиксРеквизитовВидовКИ() + Справочники.ВидыКонтактнойИнформации.ТелефонСотовый.ИмяПредопределенныхДанных);
	СтруктураРеквизита.Вставить("ИмяРеквизитаПредставление", "Сотовый телефон");
	СтруктураРеквизита.Вставить("ТолькоПриЗаписиНового", Истина);
	
	СтандартныеРеквизиты.Добавить(СтруктураРеквизита);
	
	Возврат СтандартныеРеквизиты;
		
КонецФункции

// Проверяет заполненность обязательных реквизитов
//
// Параметры:
//  Объект		 - Ссылка Или Структура	 - Объект с полями на проверку
//  НовыйОбъект	 - Булево				 - Истина, если объект еще не записан
//  Отказ		 - Булево				 - Истина, если отказано в записи
// 
// Возвращаемое значение:
//  Строка - Текст ошибки
//
Функция ПроверитьЗаполненностьОбязательныхРеквизитов(Объект, НовыйОбъект, Отказ) Экспорт
	
	Если Найти(Строка(ТипЗнч(Объект)),"Ссылка" ) > 0 Тогда
		Возврат ПроверитьЗаполненностьОбязательныхРеквизитовСсылка(Объект, НовыйОбъект, Отказ); 
	ИначеЕсли ТипЗнч(Объект) = Тип("Структура") Тогда  	
		Возврат ПроверитьЗаполненностьОбязательныхРеквизитовСтруктура(Объект, НовыйОбъект, Отказ);
	КонецЕсли;
	
КонецФункции

// Описание вида контактной информации для редактирования проверок и вывода пользователю.
//
// Параметры:
//  ВидКИ	 - СправочникСсылка.ВидКонтактнойИнформации	 - вид контактной информации	 
// 
// Возвращаемое значение:
//  Структура - Структура, состоящая из двух строк: строкового идентификатора вида и представления при настройке проверки.
//
Функция ОписаниеПроверяемогоВидаКИ(ВидКИ) Экспорт
	
	СтруктураВозврата = Новый Структура;
	
	Если ЗначениеЗаполнено(ВидКИ.ИмяПредопределенныхДанных) Тогда
		СтруктураВозврата.Вставить("ИмяРеквизита", ПрефиксРеквизитовВидовКИ() + ВидКИ.ИмяПредопределенныхДанных);
		СтруктураВозврата.Вставить("Представление",ПредставлениеРеквизитаКИ(ВидКИ.ИмяПредопределенныхДанных));
	Иначе
		СтруктураВозврата.Вставить("ИмяРеквизита", ПрефиксРеквизитовВидовКИ() + СтрЗаменить(ВидКИ.УникальныйИдентификатор(), "-", "_"));
		СтруктураВозврата.Вставить("Представление", ВидКИ.Наименование);		
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

// Представление проверяемого реквизита на базе вида контакнтой информации.
//
// Параметры:
//  ИмяРеквизита - Строка - Внутреннее имя проверяемого реквизита.  
// 
// Возвращаемое значение:
//  Строка.
//
Функция ПредставлениеРеквизитаКИ(ИмяРеквизита) Экспорт
	
	Попытка
		
		УИД = СтрЗаменить(ИмяРеквизита, "_", "-");
		
		Ссылка = Справочники.ВидыКонтактнойИнформации.ПолучитьСсылку(Новый УникальныйИдентификатор(УИД));
		
		Возврат Ссылка.Наименование;
		
	Исключение 
		
		Синоним = ИмяРеквизита;
		
		Для Индекс = 2 По СтрДлина(Синоним) Цикл
			
			Символ = Сред(Синоним, Индекс, 1);
			Если Врег(Символ) = Символ Тогда
				Синоним = Лев(Синоним, Индекс - 1) + " " + Нрег(Символ) + Прав(Синоним, Стрдлина(Синоним) - Индекс);	
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Синоним;
			
	КонецПопытки;
		
КонецФункции

// Константа префикса проверяемых реквизитов на основе видов контактной информации.
// 
// Возвращаемое значение:
//  Строка. 
//
Функция ПрефиксРеквизитовВидовКИ() Экспорт
	
	Возврат "КонтактнаяИнформация";
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбозначениеЛюбойТелефон()
	
	Возврат "Телефон";
	
КонецФункции

Функция ПроверитьЗаполненностьОбязательныхРеквизитовСсылка(Объект, НовыйОбъект, Отказ)
	
	СписокОбязательныхРеквизитов = ПолучитьСписокОбязательныхРеквизитов(Объект.Ссылка);
	Для Каждого ЭлементСпискаРеквизит Из СписокОбязательныхРеквизитов  Цикл
		Если Не ЭлементСпискаРеквизит.Пометка Или (ЭлементСпискаРеквизит.Пометка И НовыйОбъект) Тогда 
			Попытка
				Если Не ЗначениеЗаполнено(Объект[ЭлементСпискаРеквизит.Значение])  Тогда
					Отказ = Истина;
					Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru ='Поле ""%1"" не заполнено'"), ЭлементСпискаРеквизит.Представление);
				КонецЕсли;
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;	
	
КонецФункции

Функция ПроверитьЗаполненностьОбязательныхРеквизитовСтруктура(Объект, НовыйОбъект, Отказ)
	
	ПроверятьКИТолькоТелефоны = Объект.Свойство("КИПроверятьТолькоТелефоны") И Объект.КИПроверятьТолькоТелефоны;
	
	СписокОбязательныхРеквизитов = ПолучитьСписокОбязательныхРеквизитов(Объект.Ссылка, ПроверятьКИТолькоТелефоны);
	Для Каждого ЭлементСпискаРеквизит Из СписокОбязательныхРеквизитов  Цикл
		Если (Не ЭлементСпискаРеквизит.Пометка Или (ЭлементСпискаРеквизит.Пометка И НовыйОбъект)) 
			И (Не (Объект.Свойство(ЭлементСпискаРеквизит.Значение) И ЗначениеЗаполнено(Объект[ЭлементСпискаРеквизит.Значение]))) 
		Тогда
			Отказ = Истина;
			Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru ='Поле ""%1"" не заполнено'"), ЭлементСпискаРеквизит.Представление);
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

Функция ПолучитьСписокОбязательныхРеквизитов(ЭлементСсылка, ПроверятьКИТолькоТелефоны = Ложь)
	
	МетаданныеОбъекта = ЭлементСсылка.Метаданные();
	
	ОбязательныеРеквизиты = РегистрыСведений.ОбязательныеРеквизитыОбъектов.СоздатьНаборЗаписей();
    ОбязательныеРеквизиты.Отбор.ИмяСправочника.Установить(МетаданныеОбъекта.Имя);
    ОбязательныеРеквизиты.Прочитать();
	
	СписокОбязательныхРеквизитов = Новый СписокЗначений;
	Для Каждого ЗаписьРеквизит Из ОбязательныеРеквизиты Цикл
		
		МетаданныеРеквизита = МетаданныеОбъекта.Реквизиты.Найти(ЗаписьРеквизит.ИмяРеквизита);
		Если МетаданныеРеквизита <> Неопределено Тогда
			СписокОбязательныхРеквизитов.Добавить(ЗаписьРеквизит.ИмяРеквизита, МетаданныеРеквизита.Синоним, ЗаписьРеквизит.ТолькоПриЗаписиНового);
		ИначеЕсли Найти(ЗаписьРеквизит.ИмяРеквизита, ПрефиксРеквизитовВидовКИ()) > 0 Тогда
			
			// Исключаем не телефоны, если не подлежат проверке
			Если ПроверятьКИТолькоТелефоны Тогда
				Если ЗначениеЗаполнено(ЗаписьРеквизит.ПредметПроверки) Тогда
					ВидКИ = ЗаписьРеквизит.ПредметПроверки;
				Иначе
					ИмяПредопределенного = СтрЗаменить(ЗаписьРеквизит.ИмяРеквизита, ПрефиксРеквизитовВидовКИ(), "");
					
					Если ИмяПредопределенного = ОбозначениеЛюбойТелефон() Тогда
						ВидКИ = Новый Структура("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
					Иначе
						// Предопределннный
						Попытка
							ВидКИ = Справочники.ВидыКонтактнойИнформации[ИмяПредопределенного];
						Исключение
							Продолжить;
						КонецПопытки;
					КонецЕсли;
				КонецЕсли;
				Если ВидКИ.Тип <> Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СписокОбязательныхРеквизитов.Добавить(ЗаписьРеквизит.ИмяРеквизита, ПредставлениеРеквизитаКИ(Прав(ЗаписьРеквизит.ИмяРеквизита, СтрДлина(ЗаписьРеквизит.ИмяРеквизита) - 20)), ЗаписьРеквизит.ТолькоПриЗаписиНового);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокОбязательныхРеквизитов;
	
КонецФункции 

#КонецОбласти
