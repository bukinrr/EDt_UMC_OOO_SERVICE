#Область РазделОписанияПеременных
Перем мНеРазрешитьНеуникальныеШтрихкоды;
#КонецОбласти

#Область ОбработчикиСобытий
// Обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ, Замещение)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если мНеРазрешитьНеуникальныеШтрихкоды Тогда
		
		Для Каждого ТекущаяЗапись Из ЭтотОбъект Цикл
			Если ЗначениеЗаполнено(ТекущаяЗапись.ШтрихКод) Тогда
				Запрос = Новый Запрос("
				|ВЫБРАТЬ ПЕРВЫЕ 1
				|	РегШтрихкоды.Владелец КАК Владелец,
				|	РегШтрихкоды.ШтрихКод КАК Штрихкод
				|ИЗ
				|	РегистрСведений.Штрихкоды КАК РегШтрихкоды
				|ГДЕ
				|	РегШтрихкоды.ШтрихКод = &ШтрихКод
				|");
				
				Запрос.УстановитьПараметр("ШтрихКод", ТекущаяЗапись.ШтрихКод);
				
				РезультатЗапроса = Запрос.Выполнить();
				Если Не РезультатЗапроса.Пустой() Тогда
					Выборка = РезультатЗапроса.Выбрать();
					Выборка.Следующий();
					ТекстСообщения = "Штрихкод: %1 уже имеет владельца ""%2"".";
					ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения,
						Выборка.ШтрихКод, СокрЛП(Выборка.Владелец)); 
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;


КонецПроцедуры // ПередЗаписью()
#КонецОбласти

#Область РазделИнициализации
мНеРазрешитьНеуникальныеШтрихкоды = Истина;
#КонецОбласти