#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Сотрудник") Тогда 
		Сотрудник = Параметры.Сотрудник;
	Иначе
		Пользователь = ОбщегоНазначения.ТекущийПользователь();
		Сотрудник = ОбщегоНазначения.ПолучитьЗначениеРеквизита(Пользователь, "Сотрудник");
	КонецЕсли;
	
	// Удаление неактуальных записей ожидающих оповещения
	НеактуальныеЗаписиОповещений = УправлениеЗаявками.ПолучитьЗаписиОповещенийОПриходеКлиентов(Сотрудник, Истина);
	УдалитьЗаписиКлиентовСервер(НеактуальныеЗаписиОповещений);
	
	// Вывод списка оповещений
	ЗаписиОповещений = Неопределено;
	Если Параметры.Свойство("ЗаписиОповещений") Тогда 
		ЗаписиОповещений = Параметры.ЗаписиОповещений;	
	КонецЕсли;
	
	ОбновитьЗаписиКлиентовСервер(ЗаписиОповещений);
	
	// Чтение настроек на форме
	ЧастотаЧтенияОповещений = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ОповещенияОПриходеКлиентов", "ЧастотаЧтенияОповещений", 0);
	ЧастотаЧтенияОповещений = ЧастотаЧтенияОповещений / 60;
	 
	ПоказыватьОповещение = Не УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(,"СкрыватьОповещенияОПриходеКлиентов");
	Элементы.ЧастотаЧтенияОповещений.Доступность = ПоказыватьОповещение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗакрытьФорму(Команда)
	
	// Удаление из регистра записей для оповещений, показанных на форме
	ЗаписиОповещений = Новый Массив;
	Для Каждого СтрокаЗаписи Из ЗаписиКлиентов Цикл
		ЗаписиОповещений.Добавить(Новый Структура("Сотрудник, Заявка", Сотрудник, СтрокаЗаписи.Заявка));
	КонецЦикла;
	УдалитьЗаписиКлиентовСервер(ЗаписиОповещений);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройку(Команда)
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("ЧастотаЧтенияОповещений", ЧастотаЧтенияОповещений * 60);
	
	РаботаСФормамиСервер.СохранитьНастройкиФормы(НастройкиФормы, "ОповещенияОПриходеКлиентов");
	
	УправлениеПользователями.УстановитьЗначение(,"СкрыватьОповещенияОПриходеКлиентов", Не ПоказыватьОповещение);
	
	УправлениеЗаявкамиКлиент.УправлениеОбрботчикомОжиданияПриходКлиента(ПоказыватьОповещение);
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЧастотаЧтенияОповещенийПриИзменении(Элемент)
	
	Элементы.СохранитьНастройку.Доступность = Истина;
	МаксимальноеВремя = УправлениеЗаявкамиКлиент.МаксимальнаяПериодичностьОповещенияОПриходеКлиента();
	Если ЧастотаЧтенияОповещений > МаксимальноеВремя Тогда
		ЧастотаЧтенияОповещений = МаксимальноеВремя;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОповещениеПриИзменении(Элемент)
	
	Элементы.ЧастотаЧтенияОповещений.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписиКлиентовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ОткрытьФорму("Документ.Заявка.ФормаОбъекта", Новый Структура("Ключ", Элементы.ЗаписиКлиентов.ТекущиеДанные.Заявка));

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УдалитьЗаписиКлиентовСервер(ЗаписиОповещений)

	Для Каждого ЗаписьОповещения Из ЗаписиОповещений Цикл
		Запись = РегистрыСведений.ОповещенияСотрудниковОПриходеКлиентов.СоздатьМенеджерЗаписи();
		Запись.Сотрудник = ЗаписьОповещения.Сотрудник;
		Запись.Заявка = ЗаписьОповещения.Заявка;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Попытка
				Запись.Удалить();
			Исключение
			КонецПопытки;
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

// Заполняет список записей при создании формы
&НаСервере
Процедура ОбновитьЗаписиКлиентовСервер(ЗаписиОповещений = Неопределено)
	
	Если ЗаписиОповещений = Неопределено Тогда  
		Если ЗначениеЗаполнено(Сотрудник) Тогда 
			ЗаписиОповещений = УправлениеЗаявками.ПолучитьЗаписиОповещенийОПриходеКлиентов(Сотрудник);
		КонецЕсли;	
	КонецЕсли;	
		
	Если ЗаписиОповещений <> Неопределено Тогда 
		Для Каждого Запись Из ЗаписиОповещений Цикл
			СтрокаЗапись = ЗаписиКлиентов.Добавить();
			СтрокаЗапись.Заявка = Запись.Заявка;
			СтрокаЗапись.Клиент = Запись.Заявка.Клиент;
			СтрокаУслуга = "";
			тДатаНачала = Дата(3000,1,1);
			Для Каждого СтрокаРаботы Из Запись.Заявка.Работы Цикл
				Если (ЗначениеЗаполнено(СтрокаРаботы.Сотрудник) И СтрокаРаботы.Сотрудник = Сотрудник)
					Или (Не ЗначениеЗаполнено(СтрокаРаботы.Сотрудник) И Запись.Заявка.Сотрудник = Сотрудник) Тогда 
					Если ЗначениеЗаполнено(СтрокаРаботы.Номенклатура) Тогда 
						СтрокаУслуга = СтрокаУслуга + ?(СтрокаУслуга = "", "", ", ") + Строка(СтрокаРаботы.Номенклатура);					
					КонецЕсли;
					тДатаНачала = Мин(тДатаНачала, СтрокаРаботы.ДатаНачала);
				КонецЕсли;
			КонецЦикла;
			СтрокаЗапись.ДатаНачала = тДатаНачала;
			СтрокаЗапись.Услуга = СтрокаУслуга;
		КонецЦикла;
		ЗаписиКлиентов.Сортировать("ДатаНачала");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
