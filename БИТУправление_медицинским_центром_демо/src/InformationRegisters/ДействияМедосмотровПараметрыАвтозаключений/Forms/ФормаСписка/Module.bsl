#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Отбор.Свойство("ДействиеМедосмотра", ДействиеМедосмотра);
	Если Не ДействиеМедосмотра.Пустая() Тогда
		
		ЗаполнениеПараметровПоШаблону( , ТаблицаПараметровШаблона); // Пустой шаблон.
		// Отбор шаблонов по специализации действия м/о
		Специализация = ДействиеМедосмотра.Специализация;
		НаборЗаписей = РегистрыСведений.СпециализацииШаблоновОсмотра.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Специализация.Установить(ДействиеМедосмотра.Специализация);
		НаборЗаписей.Прочитать();
		МассивШаблонов = НаборЗаписей.ВыгрузитьКолонку("ШаблонОсмотра");
		СписокЗначений = Новый СписокЗначений;
		СписокЗначений.ЗагрузитьЗначения(МассивШаблонов);
		
		РаботаСФормамиСервер.УстановитьОтборСписка("Ссылка", СписокЗначений, ТаблицаШаблонов);
		
		// Скрытие групп
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ШаблоныОсмотров.Ссылка КАК Ссылка,
		|	ШаблоныОсмотров.ЭтоГруппа КАК ЭтоГруппа
		|ИЗ
		|	Справочник.ШаблоныHTML КАК ШаблоныОсмотров
		|ГДЕ
		|	ШаблоныОсмотров.Специализация = &Специализация
		|ИТОГИ ПО
		|	Ссылка ТОЛЬКО ИЕРАРХИЯ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШаблоныОсмотров.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ШаблоныHTML КАК ШаблоныОсмотров
		|ГДЕ
		|	ШаблоныОсмотров.ЭтоГруппа"
		;
		Запрос.УстановитьПараметр("Специализация", Специализация);
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		ГруппыШаблонов = РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Ссылка");
		
		Выб = РезультатЗапроса[0].Выбрать();
		Пока Выб.Следующий() Цикл
			Если ЗначениеЗаполнено(Выб.Ссылка)
				И Выб.ЭтоГруппа
			Тогда
				Инд = ГруппыШаблонов.Найти(Выб.Ссылка);
				Если Инд <> Неопределено Тогда
					ГруппыШаблонов.Удалить(Инд);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		ЭлементОформления = ТаблицаШаблонов.УсловноеОформление.Элементы.Добавить();
		ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
		УслОформПоГруппе = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УслОформПоГруппе.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		УслОформПоГруппе.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		УслОформПоГруппе.ПравоеЗначение = ГруппыШаблонов;
	Иначе
		Элементы.ГруппаДобавленияПараметров.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	Если Элементы.ТаблицаПараметровШаблона.ТекущиеДанные <> Неопределено Тогда
		ПараметрШаблона = Элементы.ТаблицаПараметровШаблона.ТекущиеДанные.Параметр;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru='Параметр шаблона не выбран'"));
		Возврат;
	КонецЕсли;
	
	Шаблон = Элементы.ТаблицаШаблонов.ТекущиеДанные.Ссылка;
	ДобавитьНаСервере(ДействиеМедосмотра, Шаблон, ПараметрШаблона, Наименование);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьШаблон(Команда)
	Шаблон = ПредопределенноеЗначение("Справочник.ШаблоныHTML.ПустаяСсылка");
	ЗаполнениеПараметров(Шаблон);
	Элементы.ТаблицаШаблонов.ВыделенныеСтроки.Очистить();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаШаблоновПриАктивизацииСтроки(Элемент)
	
	Если Элементы.ТаблицаШаблонов.ТекущийЭлемент <> Неопределено Тогда
		Шаблон = Элемент.ТекущиеДанные.Ссылка;
	Иначе 
	    Шаблон = Неопределено
	КонецЕсли;
	
	ЗаполнениеПараметров(Шаблон);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнениеПараметров(Шаблон)
	ЗаполнениеПараметровПоШаблону(Шаблон, ТаблицаПараметровШаблона);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнениеПараметровПоШаблону(Шаблон = Неопределено, ТаблицаПараметров)
	
	ТаблицаПараметров.Очистить();
	ПараметрыШаблона = ПараметрыШаблонаПриема(Шаблон);
	
	Для Каждого Параметр Из ПараметрыШаблона Цикл
		
		ТаблицаПараметров.Добавить().Параметр = Параметр;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПараметрыШаблонаПриема(Шаблон)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Шаблон);
	Запрос.УстановитьПараметр("НеИспользоватьОтбор", Не ЗначениеЗаполнено(Шаблон));
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ШаблоныОсмотровСоответствияПараметрам.Параметр КАК Параметр
		|ИЗ
		|	Справочник.ШаблоныHTML.СоответствияПараметрам КАК ШаблоныОсмотровСоответствияПараметрам
		|ГДЕ &НеИспользоватьОтбор ИЛИ ШаблоныОсмотровСоответствияПараметрам.Ссылка = &Ссылка
		|";
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Параметр");
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьНаСервере(ДействиеМедосмотра, Шаблон, ПараметрШаблона, Наименование)
	
	МенеджерЗаписей = РегистрыСведений.ДействияМедосмотровПараметрыАвтозаключений.СоздатьМенеджерЗаписи();
	МенеджерЗаписей.ДействиеМедосмотра = ДействиеМедосмотра;
	МенеджерЗаписей.Наименование = Наименование;
	МенеджерЗаписей.Параметр = ПараметрШаблона;
	МенеджерЗаписей.ШаблонОсмотра = Шаблон;
	МенеджерЗаписей.Записать(Истина);
	
КонецПроцедуры

#КонецОбласти

