#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мУчетнаяПолитика =  УправлениеНастройками.ПолучитьУчетнуюПолитику();
	
	Заявки.Параметры.УстановитьЗначениеПараметра("ТекущаяДата", НачалоДня(ТекущаяДата()));
	Если ЗначениеЗаполнено(мУчетнаяПолитика.ПризнакПодтвержденнойЗаявки) Тогда
		Элементы.НеЗаданПризнакПодтвержденнойЗаявки.Видимость = Ложь;
	Иначе
		Элементы.Заявки.Видимость = Ложь;
	КонецЕсли;
	Элементы.ФормаЗвонок.Видимость = Не мУчетнаяПолитика.ИспользоватьCallЦентр;
	Элементы.ФормаЗавершитьОбработку.Доступность = Ложь;
	Элементы.ФормаПрерватьОбработку.Доступность = Ложь;
	Элементы.РедактироватьКомментарий.Доступность = Ложь;	
	
	ПереключательРежимаЗвонка = 1;
	
	мУчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	ПризнакПодтвержденнойЗаявки = мУчетнаяПолитика.ПризнакПодтвержденнойЗаявки;
	
	СостоянияЗаявкиДоПриходаКлиента = УправлениеЗаявками.СостоянияЗаявкиДоПриходаКлиента();
	
	Если ТипЗнч(ПризнакПодтвержденнойЗаявки) = Тип("СправочникСсылка.ВидыСостоянийЗаявок") Тогда
		Заявки.Параметры.УстановитьЗначениеПараметра("Свойство", Неопределено);
		СостояниеПодтвержденнойЗаявки = СостоянияЗаявкиДоПриходаКлиента.Найти(ПризнакПодтвержденнойЗаявки);
		Если Не СостояниеПодтвержденнойЗаявки = Неопределено Тогда
			СостоянияЗаявкиДоПриходаКлиента.Удалить(СостояниеПодтвержденнойЗаявки);
		КонецЕсли;
	Иначе
		Заявки.Параметры.УстановитьЗначениеПараметра("Свойство", ПризнакПодтвержденнойЗаявки);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Заявки, "ЗначениеСвойства", Истина, ВидСравненияКомпоновкиДанных.НеРавно);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Заявки, "Состояние", СостоянияЗаявкиДоПриходаКлиента, ВидСравненияКомпоновкиДанных.ВСписке);
	
	СохранитьЗапросыИПараметрыСписков();
	КоличествоСтрокВСписках = ОбновитьКоличествоСтрокСписков(АдресХранилищаЗапросовИПараметров);
	Для Каждого Список Из КоличествоСтрокВСписках Цикл
		ЭтотОбъект[Список.Ключ] = Список.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("АктуализироватьРегистрКомментарииПоЗвонкам", 300, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СобытиеЗакрытияФормыЗавершенияЗвонка" Тогда
		ПослеЗаписиКомментария(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьСписки();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКлиента(Команда)
	
	ОткрытьФормуОбъекта(ПолучитьПараметрыОткрытияФормы(ВыбранныйКлиент));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЗаявкиКлиента(Команда)
	
	СтруктураПараметры = Новый Структура;
	Если ЗначениеЗаполнено(ВыбранныйКлиент) Тогда
		СтруктураПараметры.Вставить("Отбор", Новый Структура("Клиент",ВыбранныйКлиент));
	КонецЕсли;
	СтруктураПараметры.Вставить("ТолькоТекущие", Истина);
	ОткрытьФорму("Документ.Заявка.ФормаСписка", СтруктураПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура Позвонить(Команда)
	
	Запись = ПроверкаНаличияКомментарияПоОбзвону(ВыбранныйОбъект, ВыбранныйКлиент);
	Если Не Запись["ЗаписьСуществует"] Или Запись["НомерСеанса"] = 0 Тогда			
		НачатьЗвонок(Команда.Имя);		
	ИначеЕсли ТекущаяДата() - Запись["Дата"] > 900 Тогда
		ТекстВопроса = НСтр("ru = 'Блокировка звонка длится дольше 15 минут. Пользователь, установивший блокировку звонка: ""%1"". Хотите снять блокировку?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, Запись["БлокирующийПользователь"]);
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			УдалитьЗаписьИзРегистра(ВыбранныйОбъект, ВыбранныйКлиент);				
			НачатьЗвонок(Команда.Имя);
		КонецЕсли;
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Звонок заблокирован другим пользователем.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьОбработку(Команда)
	
	Элементы.КомандыНачалаЗвонка.Доступность = Истина;
	Элементы.ФормаЗавершитьОбработку.Доступность = Ложь;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗаблокированныйОбъект", ЗаблокированныйОбъект);
	ПараметрыФормы.Вставить("ЗаблокированныйКлиент", ЗаблокированныйКлиент);
	
	ОткрытьФорму("Обработка.МассовыеОбзвоны.Форма.ФормаЗавершениеЗвонка", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОбновитьСписки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрерватьОбработку(Команда)
	
	ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(ВыбранныйОбъект, ВыбранныйКлиент, 1);
	ОбновитьСписки();
	Элементы.ФормаПрерватьОбработку.Доступность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьКомментарий(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыбранныйОбъект", ВыбранныйОбъект);
	ПараметрыФормы.Вставить("ВыбранныйКлиент", ВыбранныйКлиент);
	
	ОткрытьФорму("Обработка.МассовыеОбзвоны.Форма.ФормаРедактированияКомментария", ПараметрыФормы,,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ОбновитьСписки();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПриАктивизацииСтроки(Элемент)
	
	Если Не Элемент.ТекущиеДанные = Неопределено Тогда
		ВыбранныйОбъект = Элемент.ТекущиеДанные.Ссылка;
		ВыбранныйКлиент = Элемент.ТекущиеДанные.Клиент;
		Элементы.ПодменюПерейти.Доступность	= ТипЗнч(Элемент.ТекущиеДанные.Клиент) = Тип("СправочникСсылка.Клиенты");
		Если ТипЗнч(ВыбранныйОбъект) = Тип("ЗадачаСсылка.ЗадачиПользователя") Тогда
			ИнформацияОКлиенте = ПолучитьИнформациюОКлиенте(Элемент.ТекущиеДанные.Клиент, Элемент.ТекущиеДанные.КомментарийПоЗвонку, Элемент.ТекущиеДанные.КонтактноеЛицо);
		Иначе
			ИнформацияОКлиенте = ПолучитьИнформациюОКлиенте(Элемент.ТекущиеДанные.Клиент, Элемент.ТекущиеДанные.КомментарийПоЗвонку);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(ЭтаФорма, ИнформацияОКлиенте);
		
		Если Элемент.ТекущиеДанные.НомерСеанса <> 0 Тогда
			Элементы.ФормаПрерватьОбработку.Доступность = Истина;
		Иначе
			Элементы.ФормаПрерватьОбработку.Доступность = Ложь;
		КонецЕсли;
		
		Если Элемент.ТекущиеДанные.НаличиеЗаписиВРегистре Тогда
			Элементы.РедактироватьКомментарий.Доступность = Истина;
		Иначе
			Элементы.РедактироватьКомментарий.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбзвоныВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ОбзвоныКлиент" Тогда
		ПараметрыОткрытия = ПолучитьПараметрыОткрытияФормы(Элемент.ТекущиеДанные.Клиент);
		ОткрытьФормуОбъекта(ПараметрыОткрытия);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Соответствие;
	ПараметрыОткрытия.Вставить("Ссылка", "Задача.ЗадачиПользователя.Форма.ФормаЗадачиУпр");
	ПараметрыОткрытия.Вставить("Параметры", Новый Структура("Ключ", Элемент.ТекущиеДанные.Ссылка));
	ОткрытьФормуОбъекта(ПараметрыОткрытия);
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Для Каждого ПодчиненныйЭлемент Из ТекущаяСтраница.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(ПодчиненныйЭлемент) = Тип("ТаблицаФормы") Тогда
			ПриАктивизацииСтроки(Элементы[ПодчиненныйЭлемент.Имя]);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	СпискиКоличествоСтрок = Новый Соответствие;
	СпискиКоличествоСтрок.Вставить(Элемент.Имя, Элемент.Имя + "Количество");
	КоличествоСтрокВСписках = ОбновитьКоличествоСтрокСписков(АдресХранилищаЗапросовИПараметров, СпискиКоличествоСтрок);
	Для Каждого Список Из КоличествоСтрокВСписках Цикл
		ЭтотОбъект[Список.Ключ] = Список.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключательРежимаЗвонкаПриИзменении(Элемент)
	
	Элементы.ФормаПозвонитьБитфон.Видимость			 = ПереключательРежимаЗвонка = 1;
	Элементы.ФормаПозвонитьСоСтационарного.Видимость = ПереключательРежимаЗвонка = 1;
	Элементы.ФормаЗвонок.Видимость					 = ПереключательРежимаЗвонка = 2;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура УдалитьЗаписьИзРегистра(Объект, ВторичныйОбъект)
	
	Запись = РегистрыСведений.КомментарииПоЗвонкам.СоздатьМенеджерЗаписи();
	Запись.Объект			= Объект;
	Запись.ВторичныйОбъект	= ВторичныйОбъект;
	Запись.Прочитать();
	Если Запись.Выбран() Тогда		
		Попытка
			Запись.Удалить();
		Исключение
		КонецПопытки;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗвонок(ИмяКоманды)
	
	УдалитьЗаписиТекущегоСеанса();	
	
	Если ИмяКоманды = "ПозвонитьБитфон" Тогда
		бит_БитфонКлиент.ОткрытьБитфонНачатьРазговор(ВыбранныйКлиент);
	ИначеЕсли ИмяКоманды = "ПозвонитьСоСтационарного" Тогда
		бит_АТСКлиент.ОткрытьМониторНачатьРазговор(ВыбранныйКлиент);
	КонецЕсли;
	
	Заблокировать(ВыбранныйОбъект, ВыбранныйКлиент);
	
	Если ТипЗнч(ВыбранныйОбъект) = Тип("ДокументСсылка.Заявка") Тогда
		ЗаблокированныеЗаявкиНаДень.Очистить();
		ЗаблокированныеЗаявкиНаДеньСоответствие = ЗаблокироватьВсеЗаявкиКлиентаНаДень(ВыбранныйОбъект, АдресХранилищаЗапросовИПараметров);
		Для Каждого ЗаблокированнаяЗаявка Из ЗаблокированныеЗаявкиНаДеньСоответствие Цикл
			НоваяЗаблокированнаяЗаявка = ЗаблокированныеЗаявкиНаДень.Добавить();
			НоваяЗаблокированнаяЗаявка.Ссылка = ЗаблокированнаяЗаявка.Ключ;
			НоваяЗаблокированнаяЗаявка.Клиент = ЗаблокированнаяЗаявка.Значение;
		КонецЦикла;	
	КонецЕсли;
	
	ЗаблокированныйОбъект = ВыбранныйОбъект;
	ЗаблокированныйКлиент = ВыбранныйКлиент;
	Элементы.КомандыНачалаЗвонка.Доступность = Ложь;
	Элементы.ФормаЗавершитьОбработку.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписки()
	
	Если Элементы.Заявки.Видимость Тогда
		Элементы.Заявки.Обновить();
	КонецЕсли;
	Элементы.Обзвоны.Обновить();
	Элементы.Задачи.Обновить();
	КоличествоСтрокВСписках = ОбновитьКоличествоСтрокСписков(АдресХранилищаЗапросовИПараметров);
	Для Каждого Список Из КоличествоСтрокВСписках Цикл
		ЭтотОбъект[Список.Ключ] = Список.Значение;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура АктуализироватьРегистрКомментарииПоЗвонкам()	
	
	АктуализироватьРегистрКомментарииПоЗвонкамНаСервере();
		
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьЗаписиТекущегоСеанса()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомментарииПоЗвонкам.Объект КАК Объект,
		|	КомментарииПоЗвонкам.ВторичныйОбъект КАК ВторичныйОбъект
		|ИЗ
		|	РегистрСведений.КомментарииПоЗвонкам КАК КомментарииПоЗвонкам
		|ГДЕ
		|	КомментарииПоЗвонкам.НомерСеанса = &НомерСеансаИнформационнойБазы";
	
	Запрос.УстановитьПараметр("НомерСеансаИнформационнойБазы", НомерСеансаИнформационнойБазы());
	ЗаписиКУдалению = Запрос.Выполнить().Выгрузить();	
	Для каждого ЗаписьКУдалению Из ЗаписиКУдалению Цикл
		УдалитьЗаписьИзРегистра(ЗаписьКУдалению.Объект, ЗаписьКУдалению.ВторичныйОбъект);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция АктуализироватьРегистрКомментарииПоЗвонкамНаСервере()
	
	НомераАктивныхСеансов = Новый Массив;
	
	Для Каждого АктивныйСеанс Из ПолучитьСеансыИнформационнойБазы() Цикл
		НомераАктивныхСеансов.Добавить(АктивныйСеанс.НомерСеанса);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КомментарииПоЗвонкам.Объект КАК Объект,
		|	КомментарииПоЗвонкам.ВторичныйОбъект КАК ВторичныйОбъект,
		|	КомментарииПоЗвонкам.НомерСеанса КАК НомерСеанса
		|ИЗ
		|	РегистрСведений.КомментарииПоЗвонкам КАК КомментарииПоЗвонкам
		|ГДЕ
		|	НЕ КомментарииПоЗвонкам.НомерСеанса = 0
		|	И РАЗНОСТЬДАТ(КомментарииПоЗвонкам.Дата, &ТекущаяДата, МИНУТА) > 15";
	
	Запрос.УстановитьПараметр("ТекущаяДата", ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НомераАктивныхСеансов.Найти(Выборка.НомерСеанса) = Неопределено Тогда
			УдалитьЗаписьИзРегистра(Выборка.Объект, Выборка.ВторичныйОбъект);
		Иначе
			Запись = РегистрыСведений.КомментарииПоЗвонкам.СоздатьМенеджерЗаписи();
			Запись.Объект			= Выборка.Объект;
			Запись.ВторичныйОбъект	= Выборка.ВторичныйОбъект;
			Запись.Прочитать();
			Если Запись.Выбран() И Найти(Запись.Комментарий, "Блокировка звонка длится дольше 15 минут") = 0 Тогда
				Попытка
					ТекстКомментария = НСтр("ru = '%1" + Символы.ПС + "Блокировка звонка длится дольше 15 минут. Пользователь, установивший блокировку звонка: ""%2"".'");
					Запись.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстКомментария, Запись.Комментарий, Запись.БлокирующийПользователь);
					Запись.Записать();
				Исключение
				КонецПопытки;
			КонецЕсли
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ПослеЗаписиКомментария(Результат)
	
	Если ТипЗнч(ЗаблокированныйОбъект) = Тип("ЗадачаСсылка.ЗадачиПользователя") Тогда
		
		ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(ЗаблокированныйОбъект, ЗаблокированныйКлиент, Результат["РезультатЗвонка"], Результат["Комментарий"]);
		Если Результат["РезультатЗвонка"] = 1 Тогда
			ИзменитьОбъект(ЗаблокированныйОбъект,,Результат["Комментарий"]);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗаблокированныйОбъект) = Тип("ДокументСсылка.бит_СписокОбзвона") Тогда
		
		ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(ЗаблокированныйОбъект, ЗаблокированныйКлиент, Результат["РезультатЗвонка"], Результат["Комментарий"]);
		Если Результат["РезультатЗвонка"] = 1 Тогда
			ИзменитьОбъект(ЗаблокированныйОбъект, , Результат["Комментарий"], ЗаблокированныйКлиент);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗаблокированныйОбъект) = Тип("ДокументСсылка.Заявка") Тогда
		
		ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(ЗаблокированныйОбъект, ЗаблокированныйКлиент, Результат["РезультатЗвонка"], Результат["Комментарий"]);
		Для Каждого Заявка Из ЗаблокированныеЗаявкиНаДень Цикл
			ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(Заявка.Ссылка, Заявка.Клиент, 1);
		КонецЦикла;
		
		Если Результат["РезультатЗвонка"] = 1 Тогда // Выполнено
			
			ИзменитьОбъект(ЗаблокированныйОбъект, ПризнакПодтвержденнойЗаявки);
			
		ИначеЕсли Результат["РезультатЗвонка"] = 3 Тогда // Подтверждены все за день
			
			ИзменитьОбъект(ЗаблокированныйОбъект, ПризнакПодтвержденнойЗаявки);
			Для Каждого Заявка Из ЗаблокированныеЗаявкиНаДень Цикл
				ИзменитьОбъект(Заявка.Ссылка, ПризнакПодтвержденнойЗаявки);
			КонецЦикла;
			
		ИначеЕсли Результат["РезультатЗвонка"] = 4 Тогда // Отменена
			
			Если мУчетнаяПолитика.ЗапрашиватьПричинуЗакрытияЗаявок Тогда
				КалендарьПланированияКлиент.ОткрытьДиалогПричиныОтменыЗаявки(ЗаблокированныйОбъект);
			Иначе
				ОтменитьЗаявкуСервер(ЗаблокированныйОбъект);
			КонецЕсли;
			
		ИначеЕсли Результат["РезультатЗвонка"] = 5 Тогда // Отменены все на день
			
			Если мУчетнаяПолитика.ЗапрашиватьПричинуЗакрытияЗаявок Тогда
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("ЗаблокированныеЗаявкиНаДень", ЗаблокированныеЗаявкиНаДень);
				ПараметрыФормы.Вставить("Заявка", ЗаблокированныйОбъект);
				ОткрытьФорму("Обработка.МассовыеОбзвоны.Форма.ФормаПричинаОтменыЗаявок", ПараметрыФормы, ЭтотОбъект);
			Иначе
				Для Каждого Заявка Из ЗаблокированныеЗаявкиНаДень Цикл
					ОтменитьЗаявкуСервер(Заявка.Ссылка);
				КонецЦикла;
				ОтменитьЗаявкуСервер(ЗаблокированныйОбъект);
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьСписки();
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтменитьЗаявкуСервер(ЗаявкаОбъект)
	
	КалендарьПланирования.ОтменитьЗаявкуСервер(Неопределено, ЗаявкаОбъект);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьОбъект(Объект, ПризнакПодтвержденнойЗаявки = Неопределено, Комментарий = Неопределено, Клиент = Неопределено)
	
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.Заявка") Тогда
		Если ТипЗнч(ПризнакПодтвержденнойЗаявки) = Тип("СправочникСсылка.ВидыСостоянийЗаявок") Тогда
			Заявка = Объект.ПолучитьОбъект();
			Заявка.Состояние = ПризнакПодтвержденнойЗаявки;
			Попытка
				Заявка.Записать();
			Исключение
			КонецПопытки;
		Иначе
			Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
			Запись.Объект	= Объект;
			Запись.Свойство	= ПризнакПодтвержденнойЗаявки;
			Запись.Значение = Истина;			
		КонецЕсли;
		Попытка
			Запись.Записать();
		Исключение
		КонецПопытки;
	ИначеЕсли ТипЗнч(Объект) = Тип("ЗадачаСсылка.ЗадачиПользователя") Тогда
		
		Задача = Объект.ПолучитьОбъект();
		Задача.Описание = Задача.Описание + Символы.ПС + Комментарий;
		Задача.Выполнена = Истина;
		Попытка
			Задача.Записать();
		Исключение
		КонецПопытки;
		
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументСсылка.бит_СписокОбзвона") Тогда
		
		СписокОбзвона = Объект.ПолучитьОбъект();
		СтрокаКлиента = СписокОбзвона.Список.Найти(Клиент, "Контрагент");
		СтрокаКлиента.Обработан = Истина;
		СтрокаКлиента.Комментарий = СтрокаКлиента.Комментарий + Символы.ПС + Комментарий;
		Попытка
			СписокОбзвона.Записать();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменитьСтрокуРегистраСведенийКомментарииПоЗвонкам(ЗаблокированныйОбъект, ЗаблокированныйКлиент, РезультатЗвонка, Комментарий = Неопределено)
	
	Если РезультатЗвонка <> 2 Тогда
		УдалитьЗаписьИзРегистра(ЗаблокированныйОбъект, ЗаблокированныйКлиент);		
	Иначе	
		Запись = РегистрыСведений.КомментарииПоЗвонкам.СоздатьМенеджерЗаписи();
		Запись.Объект			= ЗаблокированныйОбъект;
		Запись.ВторичныйОбъект	= ЗаблокированныйКлиент;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Запись.НомерСеанса = 0;
			Запись.Дата = ТекущаяДата();
			Запись.Комментарий = Комментарий;
			Попытка
				Запись.Записать();
			Исключение
			КонецПопытки;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНомераТелефонов(Объект)
	
	НомераТелефоновМассив = КонтактнаяИнформацияСерверПереопределяемый.НайтиКонтактнуюИнформацию(Объект, , , Ложь);
	Телефоны = "";
	Для Каждого НомерТелефона Из НомераТелефоновМассив Цикл
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(Телефоны, НомерТелефона, Символы.ПС, Истина);
	КонецЦикла;
	
	Возврат Телефоны;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОткрытияФормы(ВыбранныйОбъект)
	
	Параметры = Новый Соответствие;	
	ТипЗначения = ТипЗнч(ВыбранныйОбъект);
	Параметры.Вставить("Ссылка", ВыбранныйОбъект.Метаданные().ПолноеИмя() + ".ФормаОбъекта");
	Параметры.Вставить("Параметры", Новый Структура("Ключ", ВыбранныйОбъект));
	Возврат Параметры;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуОбъекта(Параметры)
	
	ОткрытьФорму(Параметры["Ссылка"], Параметры["Параметры"]);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИнформациюОКлиенте(Объект, Комментарий, КонтактноеЛицо = Неопределено)
	
	КлиентФИО = "";
	КлиентВозраст = "";
	КлиентДатаРождения = "";
	КлиентПол = "";
	СписокТелефонов = "";
	КомментарийПоЗвонку = "";

	Если ТипЗнч(Объект) = Тип("СправочникСсылка.Клиенты") Тогда

		КомментарийПоЗвонку = Комментарий;
		КлиентФИО = ОбщегоНазначения.ФИОФизЛица(Объект);
		КлиентПол = Объект.Пол;
		КлиентДатаРождения = Объект.ДатаРождения;
		Если ЗначениеЗаполнено(Объект.ДатаРождения) Тогда
			КлиентВозраст = ОбщегоНазначенияКлиентСервер.ПолучитьВозрастСтрокой(Объект.ДатаРождения)
						  + " (" + Формат(Объект.ДатаРождения, "ДЛФ=D") + ")";
		КонецЕсли;
	Иначе
		КлиентФИО = Строка(Объект);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КонтактноеЛицо) Тогда
		СписокТелефонов = ПолучитьНомераТелефонов(КонтактноеЛицо);
	Иначе
		СписокТелефонов = ПолучитьНомераТелефонов(Объект);
	КонецЕсли;
	
	Результат = Новый Структура("КлиентФИО, КлиентВозраст, КлиентДатаРождения, КлиентПол, СписокТелефонов, КомментарийПоЗвонку",
								 КлиентФИО, КлиентВозраст, КлиентДатаРождения, КлиентПол, СписокТелефонов, КомментарийПоЗвонку);
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Процедура Заблокировать(Объект, ВторичныйОбъект)
	
	Запись = РегистрыСведений.КомментарииПоЗвонкам.СоздатьМенеджерЗаписи();
	Запись.Объект					= Объект;
	Запись.ВторичныйОбъект			= ВторичныйОбъект;
	Запись.Дата						= ТекущаяДата();
	Запись.НомерСеанса				= НомерСеансаИнформационнойБазы();
	ТекстКомментария				= НСтр("ru = 'Заблокирован пользователем ""%1""'");
	ТекстКомментария				= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстКомментария, ПараметрыСеанса.ТекущийПользователь);
	Запись.Комментарий				= ТекстКомментария;
	Запись.БлокирующийПользователь	= ПараметрыСеанса.ТекущийПользователь;
	Попытка
		Запись.Записать();
	Исключение
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверкаНаличияКомментарияПоОбзвону(Объект, ВторичныйОбъект)
	
	Запись = РегистрыСведений.КомментарииПоЗвонкам.СоздатьМенеджерЗаписи();
	Запись.Объект			= Объект;
	Запись.ВторичныйОбъект	= ВторичныйОбъект;
	
	Запись.Прочитать();	
	ЗаписьИнформация = Новый Соответствие;
	
	ЗаписьИнформация.Вставить("ЗаписьСуществует", Запись.Выбран());
	ЗаписьИнформация.Вставить("НомерСеанса", Запись.НомерСеанса);
	ЗаписьИнформация.Вставить("Дата", Запись.Дата);
	ЗаписьИнформация.Вставить("БлокирующийПользователь", Запись.БлокирующийПользователь);
	
	Возврат ЗаписьИнформация;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПосчитатьКоличествоВСпискеНаСервере(СпискиКоличествоСтрок, АдресХранилищаЗапросовИПараметров)
	
	КоличествоСтрокВСписке = Новый Соответствие;
	
	Для Каждого Список Из СпискиКоличествоСтрок Цикл
		
		ЗапросИПараметры = ПолучитьИзВременногоХранилища(АдресХранилищаЗапросовИПараметров)[Список.Ключ];
		
		Запрос = Новый Запрос;
		Запрос.Текст = ЗапросИПараметры.Запрос;
		СтрокаВЫБРАТЬ = Лев(Запрос.Текст, Найти(Запрос.Текст, Символы.ПС));
		
		ПозТаблицаИсточник = Найти(Запрос.Текст, Символы.ПС + "ИЗ" + Символы.ПС);
		ПозУпорядочивание = Найти(Запрос.Текст, Символы.ПС + "УПОРЯДОЧИТЬ ПО" + Символы.ПС);
		ТекстПослеПолейЗапроса = ?(ПозУпорядочивание = 0, Сред(Запрос.Текст, ПозТаблицаИсточник), Сред(Запрос.Текст, ПозТаблицаИсточник, ПозУпорядочивание-ПозТаблицаИсточник));
		
		Запрос.Текст = СтрокаВЫБРАТЬ + "Количество(*) КАК Количество" + ТекстПослеПолейЗапроса;
		
		Для Каждого ПараметрСКД Из ЗапросИПараметры.Параметры Цикл
			Запрос.УстановитьПараметр(ПараметрСКД.Ключ, ПараметрСКД.Значение);
		КонецЦикла;
		
		Попытка
			Выборка = Запрос.Выполнить().Выбрать();
		Исключение
			Продолжить;
		КонецПопытки;
		Если Выборка.Следующий() Тогда
			КоличествоСтрокВСписке.Вставить(Список.Ключ + "Количество", Выборка.Количество);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат КоличествоСтрокВСписке;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОбновитьКоличествоСтрокСписков(АдресХранилищаЗапросовИПараметров, СпискиКоличествоСтрок = Неопределено)
	
	Если СпискиКоличествоСтрок = Неопределено Тогда
		СпискиКоличествоСтрок = Новый Соответствие;
		СпискиКоличествоСтрок.Вставить("Задачи", "ЗадачиКоличество");
		СпискиКоличествоСтрок.Вставить("Заявки", "ЗаявкиКоличество");
		СпискиКоличествоСтрок.Вставить("Обзвоны", "ОбзвоныКоличество");
	КонецЕсли;
	
	Возврат ПосчитатьКоличествоВСпискеНаСервере(СпискиКоличествоСтрок, АдресХранилищаЗапросовИПараметров);
	
КонецФункции

&НаСервереБезКонтекста
Функция ЗаблокироватьВсеЗаявкиКлиентаНаДень(ВыбранныйОбъект, АдресХранилищаЗапросовИПараметров)
	
	ЗапросИПараметры = ПолучитьИзВременногоХранилища(АдресХранилищаЗапросовИПараметров).Заявки;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ЗапросИПараметры.Запрос
	+ Символы.ПС + "И ДокументЗаявка.ДатаНачала МЕЖДУ НачалоПериода(&Дата, День) И КонецПериода(&Дата, День)"
	+ Символы.ПС + "И ДокументЗаявка.Клиент = &Клиент"
	+ Символы.ПС + "И ДокументЗаявка.Ссылка <> &Ссылка";
	
	Для Каждого парам Из ЗапросИПараметры.Параметры Цикл
		Запрос.УстановитьПараметр(парам.Ключ, парам.Значение);
	КонецЦикла;
	
	Запрос.УстановитьПараметр("Дата",	ВыбранныйОбъект.ДатаНачала);
	Запрос.УстановитьПараметр("Клиент",	ВыбранныйОбъект.Клиент);
	Запрос.УстановитьПараметр("Ссылка",	ВыбранныйОбъект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	ЗаблокированныеЗаявкиНаДень = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Заблокировать(Выборка.Ссылка, Выборка.Клиент);
		ЗаблокированныеЗаявкиНаДень.Вставить(Выборка.Ссылка, Выборка.Клиент);
	КонецЦикла;
	
	Возврат ЗаблокированныеЗаявкиНаДень;
	
КонецФункции

&НаСервере
Процедура СохранитьЗапросыИПараметрыСписков()
	
	Списки = Новый Массив;
	Списки.Добавить("Задачи");
	Списки.Добавить("Заявки");
	Списки.Добавить("Обзвоны");
	
	СтруктураЗапросов = Новый Структура;
	
	Для Каждого ИмяСписка Из Списки Цикл
		
		Схема = Элементы[ИмяСписка].ПолучитьИсполняемуюСхемуКомпоновкиДанных();
		Настройки = Элементы[ИмяСписка].ПолучитьИсполняемыеНастройкиКомпоновкиДанных();
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
		МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
		
		Запрос = Схема.НаборыДанных[0].Запрос;
		ЗапросИПараметры = Новый Структура;
		ЗапросИПараметры.Вставить("Запрос", Запрос);
		ПараметрыЗапроса = Новый Структура;
		
		Для Каждого Парам Из МакетКомпоновки.ЗначенияПараметров Цикл
			ПараметрыЗапроса.Вставить(Парам.Имя, Парам.Значение);
		КонецЦикла;
		ЗапросИПараметры.Вставить("Параметры", ПараметрыЗапроса);
		
		СтруктураЗапросов.Вставить(ИмяСписка, ЗапросИПараметры);
		
	КонецЦикла;
	АдресХранилищаЗапросовИПараметров = ПоместитьВоВременноеХранилище(СтруктураЗапросов, Новый УникальныйИдентификатор());
	
КонецПроцедуры

#КонецОбласти