#Область ОписаниеПеременных
&НаКлиенте
Перем СтруктураПараметров Экспорт; // Структура параметров результата подбора.

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	мПриОткрытии(ЭтаФорма, СтруктураПараметров);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ, ВЫЗЫВАЕМЫЕ ИЗ ЭЛЕМЕНТОВ ФОРМЫ.

// Процедура - обработчик события "ОбработкаВыбора" поля ввода единицы измерения.
//  Пересчитывает цену при изменении единицы измерения.
//
&НаКлиенте
Процедура ЕдиницаИзмеренияОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	мЕдиницаИзмеренияОбработкаВыбора(ЭтаФорма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры // ЕдиницаИзмеренияОбработкаВыбора()
&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	мЕдиницаИзмеренияПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода количества.
//
&НаКлиенте
Процедура КоличествоПриИзменении(Элемент)
	
	мКоличествоПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры // КоличествоПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода цены.
//
&НаКлиенте
Процедура ЦенаПриИзменении(Элемент)
	
	мЦенаПриИзменении(ЭтаФорма, Элемент);
	
КонецПроцедуры // ЦенаПриИзменении()

// Процедура - обработчик события "Нажатие" кнопки "ОК".
//
&НаКлиенте
Процедура КнопкаОКНажатие(Элемент)
	
	СтруктураПараметров.ЕдиницаИзмерения = ЕдиницаИзмерения;
	СтруктураПараметров.Количество = Количество;
	СтруктураПараметров.Цена = Цена;
	СтруктураПараметров.ХарактеристикаНоменклатуры  = ХарактеристикаНоменклатуры;
	
	Закрыть(СтруктураПараметров);
	
КонецПроцедуры // КнопкаОКНажатие()

&НаКлиенте
Процедура СрокиГодностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтруктураПараметров.ЕдиницаИзмерения = ЕдиницаИзмерения;
	СтруктураПараметров.Количество = Количество;
	СтруктураПараметров.Цена = Цена;
	СтруктураПараметров.ХарактеристикаНоменклатуры  = Элемент.ТекущиеДанные.Характеристика;
	
	Закрыть(СтруктураПараметров);	
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если НЕ Элементы.СрокиГодности.Видимость Тогда
		
		СтруктураОтбора = Новый Структура("Представление, Дата", Элемент.ТекущиеДанные.НаборСвойств, Дата(0001, 01, 01));
	
		Строки = Соответствие.НайтиСтроки(СтруктураОтбора);
		
		Если Строки.Количество() > 0 Тогда
			
			СтруктураПараметров.ЕдиницаИзмерения = ЕдиницаИзмерения;
			СтруктураПараметров.Количество = Количество;
			//СтруктураПараметров.Цена = Цена;
			СтруктураПараметров.Цена = ?(СтруктураПараметров.ЗапрашиватьЦену, Цена, Неопределено);
			СтруктураПараметров.ХарактеристикаНоменклатуры  = Строки[0].Характеристика;	
			
			Закрыть(СтруктураПараметров);
			
		КонецЕсли; 
		
	КонецЕсли; 	
	
КонецПроцедуры

&НаКлиенте
Процедура ХарактеристикиПриАктивизацииСтроки(Элемент)
	
	Если НаборыСвойств.Количество() <> 0 Тогда
		
		НаборСвойств = Элемент.ТекущиеДанные.НаборСвойств;
		
		СтруктураОтбора = Новый Структура("Представление", НаборСвойств);
		
		Строки = Соответствие.НайтиСтроки(СтруктураОтбора);
		
		Если Строки.Количество() > 0 Тогда
			
			СрокиГодности.Очистить();
			
			ЕстьСрокиГодности = Ложь;
			
			Для Каждого Строка Из Строки Цикл
				
				НовыйСрокГодности      = СрокиГодности.Добавить();
				
				Если Строка.Дата <> Дата(0001, 01, 01) Тогда
					
					ЕстьСрокиГодности = Истина;
					
					НовыйСрокГодности.Дата = Строка.Дата;
					
				Иначе
					
					НовыйСрокГодности.Дата = НСтр("ru='Не заполнено'");
					
				КонецЕсли;
				
				НовыйСрокГодности.Остаток = ПолучитьОстаток(СтруктураПараметров.Номенклатура, Строка.Характеристика, СтруктураПараметров.Склад);
				
				НовыйСрокГодности.Характеристика = Строка.Характеристика;
				
			КонецЦикла;
			
			СрокиГодности.Сортировать("Остаток Возр, Дата Возр");
			
			Элементы.СрокиГодности.Видимость = ЕстьСрокиГодности;
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаФильтр(Команда)
	
	НаборыСвойств.Очистить();
	
	СрокиГодности.Очистить();	
	
	Элементы.КнопкаФильтр.Пометка = НЕ Элементы.КнопкаФильтр.Пометка;
	
	ЗаполнитьНаборыСвойств(СтруктураПараметров.Номенклатура, СтруктураПараметров.Склад);	
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Процедура заполнения формы ввода доп. параметров подбора номенклатуры в обработке.
//
// Параметры:
// 	Форма - <Форма> - открываемая форма ввода доп. параметров.
//  СтруктураПараметров - структура параметров результата подбора.
//
&НаКлиенте
Процедура мПриОткрытии(Форма, СтруктураПараметров) 
	
	Перем ЗапрашиватьКоличество, ЗапрашиватьЦену;
	
	СтруктураПараметров.Свойство("ЕдиницаИзмерения",Форма.ЕдиницаИзмерения);
	СтруктураПараметров.Свойство("Количество"	   ,Форма.Количество);
	СтруктураПараметров.Свойство("Цена"			   ,Форма.Цена);
	СтруктураПараметров.Свойство("Номенклатура"	   ,Форма.Номенклатура);
	ЗапрашиватьКоличество = СтруктураПараметров.ЗапрашиватьКоличество;
	ЗапрашиватьЦену		  = СтруктураПараметров.ЗапрашиватьЦену;
	//ВыводитьСрокиГодности = СтруктураПараметров.СрокиГодности;
	
	Форма.Элементы.Цена.Видимость = ЗапрашиватьЦену;
	Форма.Элементы.Количество.Видимость = ЗапрашиватьКоличество;
	Форма.Элементы.ЕдиницаИзмерения.Видимость = ЗапрашиватьКоличество Или (ЗапрашиватьЦену);
	
	//Форма.Элементы.СрокиГодности.Видимость = ВыводитьСрокиГодности;
	
	
	// Подстановка цены
	Если ЗапрашиватьЦену Тогда
		мПолучитьЦенуВФорму(Форма,СтруктураПараметров);		
	КонецЕсли;
	
	Если Не ЗапрашиватьКоличество И Не ЗапрашиватьЦену Тогда
		Форма.Элементы.Сумма.Видимость 				 = Ложь;
		Форма.Элементы.НадписьФормулаСумма.Видимость = Ложь;
	КонецЕсли;
	
	мОбновитьНадписьФормулаСумма(Форма);
	
	
	//Элементы.Характеристики.ПодчиненныеЭлементы.ХарактеристикиОстаток.Видимость = ЗначениеЗаполнено(СтруктураПараметров.Склад); 
	//Элементы.СрокиГодности.ПодчиненныеЭлементы.СрокиГодностиОстаток.Видимость = ЗначениеЗаполнено(СтруктураПараметров.Склад);
	
	
	Элементы.КнопкаФильтр.Пометка = Истина;
  	
	ЗаполнитьНаборыСвойств(СтруктураПараметров.Номенклатура, СтруктураПараметров.Склад);
	
КонецПроцедуры

// Процедура формирует и выводит сумму в информационной надписи.
//
&НаКлиенте
Процедура мОбновитьНадписьФормулаСумма(Форма) 
	
	НадписьФормулаСумма = Формат(Цена * Количество,"ЧДЦ=2; ЧН=");
	
КонецПроцедуры // МОбновитьНадписьФомулаСумма().

// Процедура - обработчик события "ПриИзменении" поля ввода количества.
//
&НаКлиенте
Процедура мКоличествоПриИзменении(Форма, Элемент) 
	
	мОбновитьНадписьФормулаСумма(Форма);
	
КонецПроцедуры // мКоличествоПриИзменении()

// Процедура - обработчик события "ПриИзменении" поля ввода цены.
//
&НаКлиенте
Процедура мЦенаПриИзменении(Форма, Элемент) 
	
	мОбновитьНадписьФормулаСумма(Форма);
	
КонецПроцедуры // мЦенаПриИзменении()

// Процедура - обработчик события "ОбработкаВыбора" поля ввода единицы измерения.
//  Пересчитывает цену при изменении единицы измерения.
//
&НаКлиенте
Процедура мЕдиницаИзмеренияОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) 
	
	// Сначала пытаемся найти цену для новой единицы, если не найдется, то будет вычислена пропорционально коэффициентам.
	СтараяЦена = Форма.Цена;
	Если ЗначениеЗаполнено(Форма.ЕдиницаИзмерения) Тогда
		СтарыйКоэффициент = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.ЕдиницаИзмерения,"Коэффициент");
	Иначе
		СтарыйКоэффициент = 0;
	КонецЕсли;
	
	РаботаСФормамиКлиент.мПолучитьЦенуВФормуКлиент(Форма, Форма.СтруктураПараметров, ВыбранноеЗначение);
	Если Форма.Цена = 0 Тогда
		Форма.Цена = СтараяЦена;
		
		Если СтарыйКоэффициент <> 0 Тогда
			НовыйКоэффициент = ДопСерверныеФункции.ПолучитьРеквизит(ВыбранноеЗначение,"Коэффициент");
			Форма.Цена = Форма.Цена * НовыйКоэффициент / СтарыйКоэффициент;
		КонецЕсли;
	КонецЕсли;
	Форма.Активизировать();
	
КонецПроцедуры // МЕдиницаИзмеренияОбработкаВыбора().

// Процедура - обработчик события "ПриИзменении" поля ввода единицы измерения.
//  Пересчитывает цену при изменении единицы измерения.
//
&НаКлиенте
Процедура мЕдиницаИзмеренияПриИзменении(Форма, Элемент) 
	
	мОбновитьНадписьФормулаСумма(Форма);
	
КонецПроцедуры // МЕдиницаИзмеренияПриИзменении().

&НаКлиенте
Процедура мПолучитьЦенуВФорму(Форма, СтруктураПараметров, НоваяЕдиница = Неопределено)
	
	Если СтруктураПараметров.Действие = "ПодборРаботы" Тогда
		ИмяТЧ = "Работы";
	Иначе
		ИмяТЧ = "Товары";
	КонецЕсли;
	
	ТекСтрока = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения, Коэффициент, Количество, Цена, Сумма");
	ЗаполнитьЗначенияСвойств(ТекСтрока,СтруктураПараметров);
	ТекСтрока.Цена = 0;
	Если НоваяЕдиница <> Неопределено Тогда
		ТекСтрока.ЕдиницаИзмерения = НоваяЕдиница;
	КонецЕсли;
	ТекСтрока.Коэффициент = ДопСерверныеФункции.ПолучитьРеквизит(ТекСтрока.ЕдиницаИзмерения, "Коэффициент");
	
	РаботаСДокументамиСервер.дкУстановитьЦенуСтрокиТабЧастиСервер(Форма.ВладелецФормы.Объект.Ссылка, ИмяТЧ, ТекСтрока);
	Форма.Цена = ТекСтрока.Цена;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаборыСвойств(Товар, Склад)
	
	ХарактеристикиНоменклатуры = Справочники.ХарактеристикиНоменклатуры.Выбрать(, Товар);
	
	СписокВыбора = Новый Массив;
	
	Соответствие.Очистить();
	
	Пока ХарактеристикиНоменклатуры.Следующий() Цикл
		
		Запрос = Новый Запрос;
		
		Запрос.УстановитьПараметр("Объект", ХарактеристикиНоменклатуры.Ссылка);
		Запрос.УстановитьПараметр("Склад", Склад);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Свойства.Свойство КАК Свойство,
		|	Свойства.Значение КАК Значение,
		|	ПартииТоваровНаСкладахОстатки.КоличествоОстаток КАК Остаток
		|ИЗ
		|	РегистрСведений.ЗначенияСвойствОбъектов КАК Свойства
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ХарактеристикиНоменклатуры КАК ХарактеристикиНоменклатуры
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладах.Остатки КАК ПартииТоваровНаСкладахОстатки
		|			ПО ХарактеристикиНоменклатуры.Ссылка = ПартииТоваровНаСкладахОстатки.ХарактеристикаНоменклатуры
		|		ПО Свойства.Объект = ХарактеристикиНоменклатуры.Ссылка
		|ГДЕ
		|	ХарактеристикиНоменклатуры.Ссылка = &Объект";
		
		Если Элементы.КнопкаФильтр.Пометка Тогда
			
			Запрос.Текст = Запрос.Текст + " И
			| (ПартииТоваровНаСкладахОстатки.КоличествоОстаток IS NULL ИЛИ
			| ПартииТоваровНаСкладахОстатки.Склад = &Склад)";
			
		ИначеЕсли ЗначениеЗаполнено(Склад) Тогда
			
			Запрос.Текст = Запрос.Текст + " И
			| ПартииТоваровНаСкладахОстатки.Склад = &Склад";	
			
		КонецЕсли; 
		
		Результат = Запрос.Выполнить().Выбрать();
		
		БуферПредставление = "";
		
		БуферДата = Дата(0001, 01, 01);
		
		БуферОстаток = 0;
		
		Если Результат.Количество() <> 0 Тогда
			
				
		Пока Результат.Следующий() Цикл
			
			
			//Если Результат.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.СрокГодности Тогда
			Если Результат.Свойство = ПланыВидовХарактеристик.СвойстваОбъектов.УдалитьСрокГодности Тогда
			
				
				БуферДата = Результат.Значение;
				
				Продолжить;
				
			КонецЕсли; 
					
			БуферПредставление = Строка(Результат.Свойство) + ": " + Строка(Результат.Значение) + "; " + БуферПредставление;
			
			БуферОстаток = ?(Результат.Остаток = NULL, 0, Результат.Остаток);
			
		КонецЦикла;
		
		СтруктураОтбора = Новый Структура("НаборСвойств", БуферПредставление);		
			
		Строки = НаборыСвойств.НайтиСтроки(СтруктураОтбора);
		
		Если Строки.Количество() = 0 Тогда
			
			НовыйНабор = НаборыСвойств.Добавить();
		
			НовыйНабор.НаборСвойств = БуферПредставление; 
			
			НовыйНабор.Остаток = БуферОстаток;
			
		Иначе
			
			Строки[0].Остаток = Строки[0].Остаток + БуферОстаток;
			
		КонецЕсли; 
			
		НовоеСоответствие = Соответствие.Добавить();
		
		НовоеСоответствие.Характеристика = ХарактеристикиНоменклатуры.Ссылка;
		
		НовоеСоответствие.Представление  = БуферПредставление;
		
		НовоеСоответствие.Дата           = БуферДата;
		
		КонецЕсли; 

			
	КонецЦикла;
	
	НаборыСвойств.Сортировать("Остаток Возр");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОстаток(Номенклатура, Характеристика, Склад)
	
	СтруктураОтбора = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Склад", Номенклатура, Характеристика, Склад);
	
	Остатки = РегистрыНакопления.ПартииТоваровНаСкладах.Остатки(,СтруктураОтбора);
	
	Возврат ?(Остатки.Количество() > 0, Остатки.Итог("Количество"), 0);
	
КонецФункции

#КонецОбласти