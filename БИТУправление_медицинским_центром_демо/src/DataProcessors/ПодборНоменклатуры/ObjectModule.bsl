#Если Клиент Тогда
	
#Область ПрограммныйИнтерфейс
	
// Процедура заполнения формы ввода доп. параметров подбора номенклатуры в обработке
//
// Параметры:
//  Форма				 - ФормаУправляемогоПриложения	 - открываемая форма ввода доп. параметров
//  СтруктураПараметров	 - Структура					 - структура параметров результата подбора
//
Процедура мПриОткрытии(Форма, СтруктураПараметров) Экспорт
	
	Перем ЗапрашиватьКоличество, ЗапрашиватьЦену;
	
	СтруктураПараметров.Свойство("ЕдиницаИзмерения",Форма.ЕдиницаИзмерения);
	СтруктураПараметров.Свойство("Количество"	   ,Форма.Количество);
	СтруктураПараметров.Свойство("Цена"			   ,Форма.Цена);
	СтруктураПараметров.Свойство("Номенклатура"	   ,Форма.Номенклатура);
	СтруктураПараметров.Свойство("ХарактеристикаНоменклатуры",Форма.ХарактеристикаНоменклатуры);
	
	ЗапрашиватьКоличество = Форма.ВладелецФормы.ЗапрашиватьКоличество И Форма.ВладелецФормы.ЭлементыФормы.ЗапрашиватьКоличество.Видимость;
	ЗапрашиватьЦену		  = Форма.ВладелецФормы.ЗапрашиватьЦену		  
							И Форма.ВладелецФормы.ЭлементыФормы.ЗапрашиватьЦену.Видимость 
							И Форма.Номенклатура.ВидНоменклатуры<>Перечисления.ВидыНоменклатуры.Набор;
	
	Форма.ЭлементыФормы.Цена.Доступность = ЗапрашиватьЦену;
	Форма.ЭлементыФормы.Количество.Доступность = ЗапрашиватьКоличество;
	Форма.ЭлементыФормы.ЕдиницаИзмерения.Доступность = ЗапрашиватьКоличество Или (ЗапрашиватьЦену);
	
	// Подстановка цены
	Если ЗапрашиватьЦену Тогда
		мПолучитьЦенуВФорму(Форма,СтруктураПараметров);		
	КонецЕсли;
	
	Если Не ЗапрашиватьКоличество И Не ЗапрашиватьЦену Тогда
		Форма.ЭлементыФормы.НадписьСумма.Доступность 		= Ложь;
		Форма.ЭлементыФормы.НадписьФормулаСумма.Доступность = Ложь;
	КонецЕсли;
	
	мОбновитьНадписьФормулаСумма(Форма);

КонецПроцедуры

// Процедура формирует и выводит сумму в информационной надписи.
//
// Параметры:
//  Форма - ФормаУправляемогоПриложения - форма.
//
Процедура мОбновитьНадписьФормулаСумма(Форма) Экспорт

	Форма.ЭлементыФормы.НадписьФормулаСумма.Заголовок = Формат(Форма.Цена * Форма.Количество,"ЧДЦ=2; ЧН=");

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода количества.
//
// Параметры:
//  Форма	 - ФормаУправляемогоПриложения	 - открываемая форма ввода доп. параметров
//  Элемент	 - ПолеФормы					 - элемент формы.
//
Процедура мКоличествоПриИзменении(Форма, Элемент) Экспорт

	мОбновитьНадписьФормулаСумма(Форма);

КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода цены.
//
// Параметры:
//  Форма	 - ФормаУправляемогоПриложения	 - открываемая форма ввода доп. параметров
//  Элемент	 - ПолеФормы					 - элемент формы.
//
Процедура мЦенаПриИзменении(Форма, Элемент) Экспорт

	мОбновитьНадписьФормулаСумма(Форма);

КонецПроцедуры

// Процедура - обработчик события "ОбработкаВыбора" поля ввода единицы измерения.
//  Пересчитывает цену при изменении единицы измерения.
//
// Параметры:
//  Форма				 - ФормаУправляемогоПриложения	 - открываемая форма ввода доп. параметров
//  Элемент				 - ПолеФормы					 - элемент формы.
//  ВыбранноеЗначение	 - Произвольный					 - значение.
//  СтандартнаяОбработка - Булево						 - признак стандартной обработки.
//
Процедура мЕдиницаИзмеренияОбработкаВыбора(Форма, Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	// Сначала пытаемся найти цену для новой единицы, если не найдется, то будет вычислена пропорционально коэффициентам.
	
	СтараяЦена = Форма.Цена;
	мПолучитьЦенуВФорму(Форма, Форма.СтруктураПараметров, ВыбранноеЗначение);
	Если Форма.Цена = 0 Тогда
		Форма.Цена = СтараяЦена;
		
		СтарыйКоэффициент = Элемент.Значение.Коэффициент;
		Если СтарыйКоэффициент <> 0 Тогда
			Форма.Цена = Форма.Цена * ВыбранноеЗначение.Коэффициент / СтарыйКоэффициент;
		КонецЕсли;
	КонецЕсли;
	Форма.Активизировать();
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода единицы измерения.
//  Пересчитывает цену при изменении единицы измерения.
//
// Параметры:
//  Форма				 - ФормаУправляемогоПриложения	 - открываемая форма ввода доп. параметров
//  Элемент				 - ПолеФормы					 - элемент формы.
//
Процедура мЕдиницаИзмеренияПриИзменении(Форма, Элемент) Экспорт

	мОбновитьНадписьФормулаСумма(Форма);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура мПолучитьЦенуВФорму(Форма, СтруктураПараметров, НоваяЕдиница = Неопределено)
	
	Если СтруктураПараметров.Действие = "ПодборРаботы" Тогда
		ИмяТЧ = "Работы";
	Иначе
		ИмяТЧ = "Товары";
	КонецЕсли;
	
	ТекСтрока = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, ЕдиницаИзмерения, Коэффициент, Количество, Цена, Сумма");
	ЗаполнитьЗначенияСвойств(ТекСтрока,СтруктураПараметров);
	ТекСтрока.Цена = 0;
	Если НоваяЕдиница <> Неопределено Тогда
		ТекСтрока.ЕдиницаИзмерения = НоваяЕдиница;
	КонецЕсли;
	ТекСтрока.Коэффициент = ТекСтрока.ЕдиницаИзмерения.Коэффициент;
	
	РаботаСДокументамиСервер.УстановитьЦенуСтрокиТабЧасти(Форма.ВладелецФормы.Объект, ИмяТЧ, ТекСтрока);
	Форма.Цена = ТекСтрока.Цена;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли