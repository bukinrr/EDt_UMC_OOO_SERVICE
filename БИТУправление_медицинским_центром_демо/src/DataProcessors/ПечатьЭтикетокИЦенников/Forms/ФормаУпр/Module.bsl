#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьНачальныеНастройкиОтбора();

	ЗагрузитьСохраненныеНастройкиОтбора();
	
	Элементы.ТоварыНоменклатура_ХарактеристикаНоменклатуры.Видимость = 
		УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ВестиУчетПоХарактеристикам");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СохранитьОтборыПользователя = Истина;
	
	Элементы.ФорматЭтикетки.СписокВыбора.Добавить(1,"Принтер этикеток");
	Элементы.ФорматЭтикетки.СписокВыбора.Добавить(2,"А4");
	
	ФорматЭтикеткиПриИзменении(Элементы.ФорматЭтикетки);
	
	// Если дата не установлена, берем рабочую дату.
	Если Не ЗначениеЗаполнено(Дата) Тогда
		
		Дата = ТекущаяДата(); 
		
	КонецЕсли;
	
	Если МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента() Тогда
		ОписаниеОшибки = "";
		
		ПоддерживаемыеТипыВО = Новый Массив();
		ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
		
		ОповещенияПриПодключении = Новый ОписаниеОповещения("ПодключитьОборудованиеЗавершение", ЭтотОбъект);    
		МенеджерОборудованияКлиент.НачатьПодключениеОборудованиеПоТипу(ОповещенияПриПодключении, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
		
	КонецЕсли;
	
	ПриИзмененииПечататьВОригинальномРазмере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		
		СохранитьНастройкиПриЗакрытии();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// МеханизмВнешнегоОборудования
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("СканерШтрихкода");
	
	МенеджерОборудованияКлиент.НачатьОтключениеОборудованиеПоТипу(Неопределено, УникальныйИдентификатор, ПоддерживаемыеТипыВО);
	// Конец МеханизмВнешнегоОборудования

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
		
	Если ИмяСобытия = "ScanData" Тогда
		
		Если ВводДоступен() Тогда
			ТипШК = Неопределено;
			РаботаСТорговымОборудованиемКлиент.ОбработатьСобытиеСШКФормы(ЭтаФорма, Параметр, ТипШК);
		КонецЕсли;
		
	ИначеЕсли ИмяСобытия = "ПечатьЭтикетокИЦенников_ЗаполнитьТаблицу" Тогда
		
		СохранитьОтборыПользователя = Ложь;
		ЗаполнитьНачальныеНастройкиОтбора();
		
		ОбновлениеТабЧастиПоРезультату(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДополнитьИзПоступленияТоваров(Команда)
	ПараметрыФормы = Новый Структура("МножественныйВыбор", Истина);
	Результат = ОткрытьФормуМодально("Документ.ПоступлениеТоваровУслуг.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	ОбновлениеТабЧастиПоРезультату(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьИзПеремещенияТоваров(Команда)
	ПараметрыФормы = Новый Структура("МножественныйВыбор",Истина);
	Результат = ОткрытьФормуМодально("Документ.ПеремещениеМатериалов.ФормаВыбора", ПараметрыФормы , ЭтаФорма);
	ОбновлениеТабЧастиПоРезультату(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьИзОприходованияТоваров(Команда)
	ПараметрыФормы = Новый Структура("МножественныйВыбор",Истина);
	Результат = ОткрытьФормуМодально("Документ.ОприходованиеТоваров.ФормаВыбора", ПараметрыФормы , ЭтаФорма);
	ОбновлениеТабЧастиПоРезультату(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПоОстаткам(Команда)
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.Остаток > 0 Тогда
			
			СтрокаТовары.КоличествоЭкземпляров = СтрокаТовары.Остаток;
			
		Иначе
			
			СтрокаТовары.КоличествоЭкземпляров = 1;
	
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьЦены(Команда)
	Если Прейскурант.Пустая() Тогда
		Сообщение = новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru='Не выбран прейскурант!'");
		Сообщение.Поле = "Прейскурант";
		Сообщение.Сообщить();
	Иначе
		Ответ = Вопрос(НСтр("ru='Пересчитать цены?'"), РежимДиалогаВопрос.ДаНет,,,,);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			ПересчитатьЦеныНаСервере();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "заполнить" командной панели табличного поля "Товары".
&НаКлиенте
Процедура КоманднаяПанельТоварыЗаполнить(Команда)
	
	ЗаполнитьТабличнуюЧастьТовары();
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Выделить все" командной панели табличного поля "Товары".
&НаКлиенте
Процедура КоманднаяПанельТоварыВыделитьВсе(Команда)
	
	УстановитьПометки(Истина);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "Очистить выделение" командной панели табличного поля "Товары".
&НаКлиенте
Процедура КоманднаяПанельТоварыОчиститьВыделение(Команда)
	
	УстановитьПометки(Ложь);
	
КонецПроцедуры

// Процедура вызывается при нажатии кнопки "ЗаполнитьПоКоличеству" командной панели табличного поля "Товары".
&НаКлиенте
Процедура КоманднаяПанельТоварыЗаполнитьПоКоличеству(Команда)
	
	КоличествоЭкземпляров = 1;
	
	Если Не ВвестиЧисло(КоличествоЭкземпляров, "Введите количество экземпляров", 4, 0) Тогда
		Возврат;
	КонецЕсли;
	
	Если КоличествоЭкземпляров <= 0 Тогда
		Предупреждение("Недопустимое количество экземпляров!");
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТовары Из Товары Цикл
		
		Если СтрокаТовары.Печатать Тогда
			
			СтрокаТовары.КоличествоЭкземпляров = КоличествоЭкземпляров;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	Печать();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФорматЭтикеткиПриИзменении(Элемент)
	
	Если ФорматЭтикетки = 2 Тогда
		Если ШиринаЭтикетки = 0 И ВысотаЭтикетки = 0 Тогда
			ШиринаЭтикетки = 42;
			ВысотаЭтикетки = 23;
		КонецЕсли;
		Элементы.ШиринаЭтикетки.Доступность = Ложь;
		Элементы.ВысотаЭтикетки.Доступность = Ложь;
	Иначе
		Элементы.ШиринаЭтикетки.Доступность = Истина;
		Элементы.ВысотаЭтикетки.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьВОригинальномРазмереПриИзменении(Элемент)
	ПриИзмененииПечататьВОригинальномРазмере();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные.КоличествоЭкземпляров <= 0 Тогда
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Номенклатура)
			И Элемент.ТекущиеДанные.КоличествоЭкземпляров = 0
		Тогда
			Элемент.ТекущиеДанные.КоличествоЭкземпляров = 1;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатура_СсылкаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			РеквизитыНоменклатуры = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ТекущиеДанные.Номенклатура, "ВидНоменклатуры, ЕдиницаХраненияОстатков");
			Если РеквизитыНоменклатуры.ВидНоменклатуры = ПредопределенноеЗначение("Перечисление.ВидыНоменклатуры.Материал") Тогда
				Если Не ЗначениеЗаполнено(ТекущиеДанные.Упаковка) Тогда
					ТекущиеДанные.Упаковка = РеквизитыНоменклатуры.ЕдиницаХраненияОстатков;
				КонецЕсли;
			КонецЕсли;
			
		КонецЕсли;
			
		ТоварыНоменклатура_ИзмерениеШтрихкодаПриИзменении(Элемент);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатура_ИзмерениеШтрихкодаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Товары.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Номенклатура) Тогда
			ДанныеШтрихода = ПолучитьШтрихкодНоменклатуры(ТекущиеДанные.Номенклатура, ТекущиеДанные.Характеристика, ТекущиеДанные.Упаковка);
			ЗаполнитьЗначенияСвойств(ТекущиеДанные, ДанныеШтрихода);
		Иначе
			ТекущиеДанные.Штрихкод = "";
			ТекущиеДанные.ТипШтрихкода = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиенте
Функция СШКНоменклатура(ДанныеНоменклатуры, СШК) Экспорт
	
	Номенклатура				= ДанныеНоменклатуры.Номенклатура;
	Количество					= ДанныеНоменклатуры.Количество;
	ХарактеристикаНоменклатуры	= ДанныеНоменклатуры.ХарактеристикаНоменклатуры;
	СерияНоменклатуры			= ДанныеНоменклатуры.СерияНоменклатуры;
	Единица						= ДанныеНоменклатуры.ЕдиницаИзмерения;
	Цена						= ДанныеНоменклатуры.Цена;
	
	Если ХарактеристикаНоменклатуры = Неопределено Тогда
		ХарактеристикаНоменклатуры = ПредопределенноеЗначение("Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка"); 
	КонецЕсли;
	
	Отбор = Новый Структура("Номенклатура, Упаковка, Характеристика, Серия",
							Номенклатура, Единица, ХарактеристикаНоменклатуры, СерияНоменклатуры);
	ОтборКлючиНаУдаление = Новый Массив;						
	Для Каждого КлючЗначение Из Отбор Цикл
		Если Не ЗначениеЗаполнено(КлючЗначение.Значение) Тогда
			ОтборКлючиНаУдаление.Добавить(КлючЗначение.Ключ);
		КонецЕсли;
	КонецЦикла;
	Для Каждого Ключ Из ОтборКлючиНаУдаление Цикл
		Отбор.Удалить(Ключ);
	КонецЦикла;
		
	РезультатПоиска = Товары.НайтиСтроки(Отбор);
	
	Если РезультатПоиска.Количество()=0 Тогда
		НоваяСтрока = Товары.Добавить();
		НоваяСтрока.Номенклатура = Номенклатура;
		НоваяСтрока.КоличествоЭкземпляров = 1;
		НоваяСтрока.Упаковка = Единица;
		НоваяСтрока.Характеристика = ХарактеристикаНоменклатуры;
		НоваяСтрока.Серия = СерияНоменклатуры;
		НоваяСтрока.Штрихкод = СШК;
		СтруктураЦен = Ценообразование.ПолучитьЦену(Прейскурант,Номенклатура,, ХарактеристикаНоменклатуры,Единица);	
		НоваяСтрока.Цена = СтруктураЦен.Цена;
	Иначе
		РезультатПоиска[0].КоличествоЭкземпляров = РезультатПоиска[0].КоличествоЭкземпляров+1;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПодключитьОборудованиеЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Если Не РезультатВыполнения.Результат Тогда
		ТекстСообщения = НСтр( "ru = 'При подключении оборудования произошла ошибка:
				|""%ОписаниеОшибки%"".'" );
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%ОписаниеОшибки%" , РезультатВыполнения.ОписаниеОшибки);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьНачальныеНастройкиОтбора()
	
	Обработка = РеквизитФормыВЗначение("ОбработкаОбъект");

	СхемаКомпоновкиДанных = Обработка.ПолучитьМакет("ОтборНоменклатуры");
		
	АдресСхемы = ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, УникальныйИдентификатор);	
	
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
	КомпоновщикНастроек.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьСохраненныеНастройкиОтбора()
	
	ХранилищеОтбора = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ХранилищеОтбора");
	Если ТипЗнч(ХранилищеОтбора) = Тип("ХранилищеЗначения") Тогда
		Попытка
			КомпоновщикНастроек.ЗагрузитьНастройки(ХранилищеОтбора.Получить());
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ТолькоСОстатком		 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ТолькоСОстатком",	 Истина);
	ТолькоСоШтрихкодами	 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ТолькоСоШтрихкодами", Истина);
	ТолькоСЦеной		 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ТолькоСЦеной",		 Ложь);
	
	Шаблон				 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "Шаблон");
	Филиал				 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "Филиал");
	Прейскурант			 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "Прейскурант");
	
	ФорматЭтикетки		 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ФорматЭтикетки", 2);
	ШиринаЭтикетки		 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ШиринаЭтикетки", 42);
	ВысотаЭтикетки		 = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ВысотаЭтикетки", 23);
	
	ПечататьВОригинальномРазмере = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ПечатьЭтикетокИЦенников", "ПечататьВОригинальномРазмере");
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Прейскурант) Тогда
		Прейскурант = УправлениеНастройками.ПолучитьПрейскурантФилиала(Филиал);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Шаблон) Тогда
		Выб = Справочники.ШаблоныЭтикетокИЦенников.Выбрать();
		Если Выб.Следующий()
			И Не Выб.ПометкаУдаления
			И Не Выб.ЭтоГруппа
		Тогда
			Шаблон = Выб.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПриЗакрытии()
	
	СтруктураНастроек = Новый Структура;
	
	Если СохранитьОтборыПользователя Тогда
		СтруктураНастроек.Вставить("ХранилищеОтбора", Новый ХранилищеЗначения(КомпоновщикНастроек.ПолучитьНастройки()));
	КонецЕсли;
	
	СтруктураНастроек.Вставить("Шаблон",	  Шаблон);
	СтруктураНастроек.Вставить("Прейскурант", Прейскурант);
	СтруктураНастроек.Вставить("Филиал",	  Филиал);
	
	СтруктураНастроек.Вставить("ФорматЭтикетки", ФорматЭтикетки);
	СтруктураНастроек.Вставить("ШиринаЭтикетки", ШиринаЭтикетки);
	СтруктураНастроек.Вставить("ВысотаЭтикетки", ВысотаЭтикетки);
	
	СтруктураНастроек.Вставить("ПечататьВОригинальномРазмере", ПечататьВОригинальномРазмере);
	
	СтруктураНастроек.Вставить("ТолькоСОстатком",		 ТолькоСОстатком);
	СтруктураНастроек.Вставить("ТолькоСоШтрихкодами",	 ТолькоСоШтрихкодами);
	СтруктураНастроек.Вставить("ТолькоСЦеной",			 ТолькоСЦеной);
	
	РаботаСФормамиСервер.СохранитьНастройкиФормы(СтруктураНастроек, "ПечатьЭтикетокИЦенников");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииПечататьВОригинальномРазмере()

	Элементы.ВысотаЭтикетки.Доступность = Не ПечататьВОригинальномРазмере;
	Элементы.ШиринаЭтикетки.Доступность = Не ПечататьВОригинальномРазмере;
	
КонецПроцедуры	

// Процедура устанавливает или снимает пометки у строк табличной части "Товары".
&НаКлиенте
Процедура УстановитьПометки(Пометка)
	
	Для Каждого СтрокаТовара Из Товары Цикл
		СтрокаТовара.Печатать = Пометка;
	КонецЦикла;
	
КонецПроцедуры

// Процедура заполняет табличную часть Товары по выбранным параметрам и отборам.
&НаКлиенте
Процедура ЗаполнитьТабличнуюЧастьТовары()
	
	Если НЕ ЗначениеЗаполнено(Филиал) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран филиал!'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Прейскурант) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран прейскурант!'"));
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Шаблон) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Не выбран шаблон макета!'"));
		Возврат;
	КонецЕсли;
	
	Товары.Очистить();
	ЗаполнитьТабличнуюЧастьТоварыСервер();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТабличнуюЧастьТоварыСервер()
	
	ТаблицаНоменклатуры = ПолучитьТаблицуНоменклатуры();
	ВыборкаЦен	 = ПолучитьЦеныНоменклатуры(ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
	ВыборкаШК	 = ПолучитьШтрихкодыНоменклатуры(ТаблицаНоменклатуры.ВыгрузитьКолонку("Номенклатура"));
	
	ТаблицаНоменклатуры.Колонки.Добавить("КоличествоЭкземпляров", Новый ОписаниеТипов("Число"));
	ТаблицаНоменклатуры.Колонки.Добавить("Штрихкод", Новый ОписаниеТипов("Строка"));
	ТаблицаНоменклатуры.Колонки.Добавить("ТипШтрихкода");
	ТаблицаНоменклатуры.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));

	ОтборШКМатериал	 = Новый Структура("Номенклатура, Характеристика, Серия, ЕдиницаИзмерения");
	ОтборШКУслуга	 = Новый Структура("Номенклатура, Характеристика, Серия");
	
	ОтборЦеныМатериал	 = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения");
	ОтборЦеныУслуга		 = Новый Структура("Номенклатура, Характеристика");
	ОтборЦеныПХМатериал	 = Новый Структура("Номенклатура, ЕдиницаИзмерения");
	ОтборЦеныПХУслуга	 = Новый Структура("Номенклатура");
	
	Для Каждого СтрокаНоменклатуры Из ТаблицаНоменклатуры Цикл
		
		// Определяем ШК строки.
		ОтборШК = ?(СтрокаНоменклатуры.ЭтоУслуга, ОтборШКУслуга, ОтборШКМатериал);
		ЗаполнитьЗначенияСвойств(ОтборШК, СтрокаНоменклатуры);
		
		ШКСтроки = ПодобратьШтрикходНоменклатуре(СтрокаНоменклатуры, ВыборкаШК, ОтборШК);
		Если ШКСтроки.Количество() = 0 И Не СтрокаНоменклатуры.ЭтоУслуга Тогда
			ОтборШК.ЕдиницаИзмерения = Справочники.ЕдиницыИзмерения.ПустаяСсылка();
			ШКСтроки = ШтрихкодыНоменклатурыПоОтбору(СтрокаНоменклатуры, ВыборкаШК, ОтборШК);
		КонецЕсли;
		
		Если ТолькоСоШтрихкодами И ШКСтроки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Определяем цену строки
		Если Не ЦенаСтрокиТоваров(СтрокаНоменклатуры, ВыборкаЦен) Тогда
			Продолжить;
		КонецЕсли;
		
		// Определяем остаток строки
		Если СтрокаНоменклатуры.Остаток <= 0 Тогда
			Если ТолькоСОстатком Тогда
				Продолжить;
			Иначе
				СтрокаНоменклатуры.КоличествоЭкземпляров = 1;
			КонецЕсли;
		Иначе
			СтрокаНоменклатуры.КоличествоЭкземпляров = Макс(1, Окр(СтрокаНоменклатуры.Остаток));
		КонецЕсли;
		
		// Добавление строк на форму
		Если ШКСтроки.Количество() = 0 Тогда
			ШКСтроки.Добавить(Новый Структура);
		КонецЕсли;
		
		Для Каждого ДанныеШК Из ШКСтроки Цикл
			СтрокаТовары = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовары, СтрокаНоменклатуры);
			ЗаполнитьЗначенияСвойств(СтрокаТовары, ДанныеШК);
			СтрокаТовары.Упаковка = СтрокаНоменклатуры.ЕдиницаИзмерения;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Функция ПолучитьТаблицуНоменклатуры()
	
	Обработка = РеквизитФормыВЗначение("ОбработкаОбъект");
	СхемаКомпоновкиДанных = Обработка.ПолучитьМакет("ОтборНоменклатуры");
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	КомпоновщикНастроекВрем = Новый КомпоновщикНастроекКомпоновкиДанных;
	
	КомпоновщикНастроекВрем.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных)));
	
	//КомпоновщикНастроекВрем.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	КомпоновщикНастроекВрем.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных,
		КомпоновщикНастроекВрем.Настройки, , ,
		Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаНоменклатуры = ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	Возврат ТаблицаНоменклатуры;
	
КонецФункции

&НаСервере
Функция ПолучитьЦеныНоменклатуры(Номенклатура)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Прейскурант", Прейскурант);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
	|	ЦеныНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ЦеныНоменклатурыСрезПоследних.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЦеныНоменклатурыСрезПоследних.Цена КАК Цена
	|ИЗ
	|	РегистрСведений.ЦеныНоменклатуры.СрезПоследних(
	|			&Дата,
	|			Прейскурант = &Прейскурант
	|				И Номенклатура В (&Номенклатура)) КАК ЦеныНоменклатурыСрезПоследних"
	;
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Функция ПолучитьШтрихкодыНоменклатуры(Номенклатура)
	
	ТипыШК_МДЛП = Новый Массив;
	ТипыШК_МДЛП.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.ШтрихкодГС1);
	ТипыШК_МДЛП.Добавить(ПланыВидовХарактеристик.ТипыШтрихкодов.ШтрихкодМДЛП);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("ТипыШК_МДЛП", ТипыШК_МДЛП);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Штрихкоды.Владелец КАК Номенклатура,
	|	Штрихкоды.ХарактеристикаНоменклатуры КАК Характеристика,
	|	Штрихкоды.СерияНоменклатуры КАК Серия,
	|	Штрихкоды.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	Штрихкоды.ТипШтрихкода КАК ТипШтрихкода,
	|	Штрихкоды.Штрихкод КАК Штрихкод
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК Штрихкоды
	|ГДЕ
	|	Штрихкоды.Владелец В(&Номенклатура)
	|	И НЕ Штрихкоды.ТипШтрихкода В (&ТипыШК_МДЛП)"
	;
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

&НаСервере
Функция ПодобратьШтрикходНоменклатуре(СтрокаНоменклатуры, ВыборкаШК, ОтборШК)
	
	ШКСтроки = ШтрихкодыНоменклатурыПоОтбору(СтрокаНоменклатуры, ВыборкаШК, ОтборШК);
	Если ШКСтроки.Количество() = 0 Тогда
		
		// Пробуем перебрать возможные сочетания пустых-заполненных полей отбора ШК с учетом того, какие заполенны сейчас.
		
		ПоляОтбора = Новый Структура;
		Если ОтборШК.Свойство("ЕдиницаИзмерения") И ЗначениеЗаполнено(ОтборШК.ЕдиницаИзмерения) Тогда
			ПоляОтбора.Вставить("ЕдиницаИзмерения", Справочники.ЕдиницыИзмерения.ПустаяСсылка());
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборШК.Характеристика) Тогда
			ПоляОтбора.Вставить("Характеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		КонецЕсли;
		Если ЗначениеЗаполнено(ОтборШК.Серия) Тогда
			ПоляОтбора.Вставить("Серия", Справочники.СерииНоменклатуры.ПустаяСсылка());
		КонецЕсли;
		
		КолОтборов = Pow(2, ПоляОтбора.Количество());
		ТаблицаОтборы = Новый ТаблицаЗначений;
		ТаблицаОтборы.Колонки.Добавить("ЕдиницаИзмерения",	 Новый ОписаниеТипов("СправочникСсылка.ЕдиницыИзмерения"));
		ТаблицаОтборы.Колонки.Добавить("Характеристика",	 Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
		ТаблицаОтборы.Колонки.Добавить("Серия",				 Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	
		Для Сч = 1 По КолОтборов Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаОтборы.Добавить(), ОтборШК);
		КонецЦикла;
		
		Вес = 2;
		Для Каждого кзПолеОтбора Из ПоляОтбора Цикл
			
			Для Сч = 1 По КолОтборов Цикл
				
				// Затираем значение в каждом втором отборе.
				Если (Сч % Вес) >= Вес/2 Тогда
					ТаблицаОтборы[Сч-1][кзПолеОтбора.Ключ] = кзПолеОтбора.Значение;
				КонецЕсли;
				
			КонецЦикла;
			
			Вес = Вес * 2;
			
		КонецЦикла;
		ТаблицаОтборы.Свернуть("ЕдиницаИзмерения, Характеристика, Серия", "");
		ТаблицаОтборы.Сортировать("Серия УБЫВ, Характеристика УБЫВ, ЕдиницаИзмерения УБЫВ");
		
		Для Каждого СтрокаОтбор Из ТаблицаОтборы Цикл
			
			Отбор = Новый Структура("ЕдиницаИзмерения, Характеристика, Серия");
			ЗаполнитьЗначенияСвойств(Отбор, СтрокаОтбор);
			
			ШКСтроки = ШтрихкодыНоменклатурыПоОтбору(СтрокаНоменклатуры, ВыборкаШК, Отбор);
			Если ШКСтроки.Количество() <> 0 Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ШКСтроки;
	
КонецФункции

&НаСервере
Функция ШтрихкодыНоменклатурыПоОтбору(СтрокаНоменклатуры, ВыборкаШК, Знач ОтборШК)
	
	ШКСтроки = Новый Массив;
	ВыборкаШК.Сбросить();
	ОтборШК.Вставить("Номенклатура", СтрокаНоменклатуры.Номенклатура);
	Пока ВыборкаШК.НайтиСледующий(ОтборШК) Цикл
		ШКСтроки.Добавить(Новый Структура("Штрихкод, ТипШтрихкода", ВыборкаШК.Штрихкод, ВыборкаШК.ТипШтрихкода));
	КонецЦикла;
	
	Возврат ШКСтроки;
	
КонецФункции

&НаСервере
Функция ЦенаСтрокиТоваров(СтрокаНоменклатуры, ВыборкаЦен)
	
	ЕстьЦена = Ложь;
	
	Если СтрокаНоменклатуры.ЭтоУслуга Тогда
		Отбор = Новый Структура("Номенклатура, Характеристика");
		ОтборПХ = Новый Структура("Номенклатура");
	Иначе
		Отбор = Новый Структура("Номенклатура, Характеристика, ЕдиницаИзмерения");
		ОтборПХ = Новый Структура("Номенклатура, ЕдиницаИзмерения");
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(Отбор, СтрокаНоменклатуры);
	ВыборкаЦен.Сбросить();
	Если ВыборкаЦен.НайтиСледующий(Отбор) Тогда
		СтрокаНоменклатуры.Цена = ВыборкаЦен.Цена;
		ЕстьЦена = Истина;
		
	ИначеЕсли ЗначениеЗаполнено(СтрокаНоменклатуры.Характеристика) Тогда
		// Может, тогда общая цена на номенклатуру есть.
		ЗаполнитьЗначенияСвойств(ОтборПХ, СтрокаНоменклатуры);
		ВыборкаЦен.Сбросить();
		Если ВыборкаЦен.НайтиСледующий(Отбор) Тогда
			СтрокаНоменклатуры.Цена = ВыборкаЦен.Цена;
			ЕстьЦена = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ЕстьЦена Или Не ТолькоСЦеной;
	
КонецФункции

&НаКлиенте
Процедура Печать()
	
	ОчиститьСообщения();
	
	МаксимальнаяПорцияПечати = 300;
	ПорогКрупнойПорцииПечати = 50;
	
	СтрокиНаПечать = Товары.НайтиСтроки(Новый Структура("Печатать", Истина));
	
	КоличествоЭкзВсего = 0;
	Для Каждого СтрокаТовара Из СтрокиНаПечать Цикл
		КоличествоЭкзВсего = КоличествоЭкзВсего + СтрокаТовара.КоличествоЭкземпляров;
	КонецЦикла;
	
	Если СтрокиНаПечать.Количество() = 0 Тогда
		
		ПоказатьПредупреждение(,НСтр("ru = 'Не выбрано ни одного товара'"));
		Возврат;
		
	ИначеЕсли КоличествоЭкзВсего > МаксимальнаяПорцияПечати Тогда
		
		ТекстОшибки = НСтр("ru = 'Выбрано для печати слишком большое количество. Допускается отпарвка на печать порции не более чем из %1 этикеток'");
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстОшибки, МаксимальнаяПорцияПечати);
		
		ПоказатьПредупреждение(, ТекстОшибки);
		Возврат;
		
	ИначеЕсли КоличествоЭкзВсего > ПорогКрупнойПорцииПечати Тогда
		
		ТекстВопроса = НСтр("ru='Выбрано более %1 экземпляров на печать.'") + " " + НСтр("ru='Продолжить?'");
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстВопроса, ПорогКрупнойПорцииПечати);
		
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена, 60);
		Если Ответ <> КодВозвратаДиалога.ОК Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		
		ПараметрКоманды = Новый Массив;   // Добавим объект обработки печати ценников и этикеток в массив параметров печати.
		ПараметрКоманды.Добавить(ОбработкаОбъект); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[0].
		ПараметрКоманды.Добавить(Товары); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[1].
		ПараметрКоманды.Добавить(Шаблон); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[2].
		ПараметрКоманды.Добавить(Прейскурант); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[3].
		ПараметрКоманды.Добавить(Филиал); // В дальнейшем будем обращаться к объекту через ПараметрКоманды[4].
		РежимПечати = "Этикетки";
		
		ПараметрПечати = Новый Массив;// Добавим объект для сохранения параметров устройства печати.
		ПараметрПечати.Добавить(ФорматЭтикетки);
		ПараметрПечати.Добавить(ВысотаЭтикетки);
		ПараметрПечати.Добавить(ШиринаЭтикетки);
		ПараметрПечати.Добавить(ПечататьВОригинальномРазмере);

		ТабДок = ВыполнитьПечатьСервер(ПараметрКоманды,ПараметрПечати);
		
		Если Не ТабДок = Неопределено Тогда 

			Если ФорматЭтикетки = 2 тогда 
				ТабДок.АвтоМасштаб = Истина;
			КонецЕсли;
			ТабДок.ОтображатьГруппировки = Ложь;
			ТабДок.ОтображатьЗаголовки   = Ложь;
			ТабДок.ОтображатьСетку       = Ложь;
			ТабДок.ПолеСверху = 0;
			ТабДок.ПолеСнизу  = 0;
			ТабДок.ПолеСправа = 0;
			ТабДок.ПолеСлева  = 0;
			ТабДок.Показать(НСтр("ru='Печать этикеток'"));
			УниверсальныеМеханизмыСервер.НапечататьДокумент(ТабДок,1,, НСтр("ru='Печать этикеток'"),,);
		Иначе ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Ошибка формирования этикеток'"));
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ВыполнитьПечатьСервер(ПараметрКоманды,ПараметрПечати)
	
	ОбъектФорма = РеквизитФормыВЗначение("ОбработкаОбъект");
	Возврат ОбъектФорма.Печать(ПараметрКоманды, ПараметрПечати, Неопределено, Неопределено, ОбъектФорма);
	
КонецФункции

&НаСервере
Процедура ПересчитатьЦеныНаСервере()
	Товары.Загрузить(Ценообразование.ПолучитьЦеныНоменклатуры(Товары.Выгрузить(), Дата, Прейскурант));	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеТабЧастиПоРезультату(Результат)
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		ОбработкаЗавершенияВыбораДополненияНаСервере(Результат);
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ОбработкаЗавершенияВыбораДополненияНаСервере(Результат)
	
	Таблица = Новый ТаблицаЗначений;
	Таблица = Товары.Выгрузить();
	Таблица.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеТоваровУслуг.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслуг.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПоступлениеТоваровУслуг.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ПоступлениеТоваровУслуг.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПоступлениеТоваровУслуг.Количество КАК Количество,
	|	0 КАК Цена,
	|	ПоступлениеТоваровУслуг.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Поступление
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчетТовары.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	АвансовыйОтчетТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	АвансовыйОтчетТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	АвансовыйОтчетТовары.Количество КАК Количество,
	|	0 КАК Цена,
	|	АвансовыйОтчетТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ АвансовыйОтчет
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|ГДЕ
	|	АвансовыйОтчетТовары.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПеремещениеМатериалов.Номенклатура КАК Номенклатура,
	|	ПеремещениеМатериалов.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ПеремещениеМатериалов.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ПеремещениеМатериалов.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПеремещениеМатериалов.Количество КАК Количество,
	|	0 КАК Цена,
	|	ПеремещениеМатериалов.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Перемещение
	|ИЗ
	|	Документ.ПеремещениеМатериалов.Товары КАК ПеремещениеМатериалов
	|ГДЕ
	|	ПеремещениеМатериалов.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОприходованиеТоваров.Номенклатура КАК Номенклатура,
	|	ОприходованиеТоваров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ОприходованиеТоваров.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ОприходованиеТоваров.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ОприходованиеТоваров.Количество КАК Количество,
	|	0 КАК Цена,
	|	ОприходованиеТоваров.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Оприходование
	|ИЗ
	|	Документ.ОприходованиеТоваров.Товары КАК ОприходованиеТоваров
	|ГДЕ
	|	ОприходованиеТоваров.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УстановкаЦенНоменклатура.Номенклатура КАК Номенклатура,
	|	УстановкаЦенНоменклатура.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	NULL КАК СерияНоменклатуры,
	|	УстановкаЦенНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	УстановкаЦенНоменклатура.Цена КАК Цена,
	|	1 КАК Количество,
	|	УстановкаЦенНоменклатура.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ УстановкаЦен
	|ИЗ
	|	Документ.УстановкаЦен.Номенклатура КАК УстановкаЦенНоменклатура
	|ГДЕ
	|	УстановкаЦенНоменклатура.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвентаризацияТоваровТовары.Номенклатура КАК Номенклатура,
	|	ИнвентаризацияТоваровТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ИнвентаризацияТоваровТовары.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ИнвентаризацияТоваровТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ИнвентаризацияТоваровТовары.Количество КАК Количество,
	|	0 КАК Цена,
	|	ИнвентаризацияТоваровТовары.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ Инвентаризация
	|ИЗ
	|	Документ.ИнвентаризацияТоваров.Товары КАК ИнвентаризацияТоваровТовары
	|ГДЕ
	|	ИнвентаризацияТоваровТовары.Ссылка В(&Документы)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Поступление.НомерСтроки КАК НомерСтроки,
	|	Поступление.Номенклатура КАК Номенклатура,
	|	Поступление.ХарактеристикаНоменклатуры КАК Характеристика,
	|	Поступление.СерияНоменклатуры КАК СерияНоменклатуры,
	|	Поступление.ЕдиницаИзмерения КАК Упаковка,
	|	Поступление.Количество КАК КоличествоЭкземпляров,
	|	Поступление.Цена КАК Цена
	|ПОМЕСТИТЬ Объединеные
	|ИЗ
	|	Поступление КАК Поступление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыйОтчет.НомерСтроки,
	|	АвансовыйОтчет.Номенклатура,
	|	АвансовыйОтчет.ХарактеристикаНоменклатуры,
	|	АвансовыйОтчет.СерияНоменклатуры,
	|	АвансовыйОтчет.ЕдиницаИзмерения,
	|	АвансовыйОтчет.Количество,
	|	АвансовыйОтчет.Цена
	|ИЗ
	|	АвансовыйОтчет КАК АвансовыйОтчет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Оприходование.НомерСтроки,
	|	Оприходование.Номенклатура,
	|	Оприходование.ХарактеристикаНоменклатуры,
	|	Оприходование.СерияНоменклатуры,
	|	Оприходование.ЕдиницаИзмерения,
	|	Оприходование.Количество,
	|	Оприходование.Цена
	|ИЗ
	|	Оприходование КАК Оприходование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Перемещение.НомерСтроки,
	|	Перемещение.Номенклатура,
	|	Перемещение.ХарактеристикаНоменклатуры,
	|	Перемещение.СерияНоменклатуры,
	|	Перемещение.ЕдиницаИзмерения,
	|	Перемещение.Количество,
	|	Перемещение.Цена
	|ИЗ
	|	Перемещение КАК Перемещение
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УстановкаЦен.НомерСтроки,
	|	УстановкаЦен.Номенклатура,
	|	УстановкаЦен.ХарактеристикаНоменклатуры,
	|	УстановкаЦен.СерияНоменклатуры,
	|	УстановкаЦен.ЕдиницаИзмерения,
	|	УстановкаЦен.Количество,
	|	УстановкаЦен.Цена
	|ИЗ
	|	УстановкаЦен КАК УстановкаЦен
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Инвентаризация.НомерСтроки,
	|	Инвентаризация.Номенклатура,
	|	Инвентаризация.ХарактеристикаНоменклатуры,
	|	Инвентаризация.СерияНоменклатуры,
	|	Инвентаризация.ЕдиницаИзмерения,
	|	Инвентаризация.Количество,
	|	Инвентаризация.Цена
	|ИЗ
	|	Инвентаризация КАК Инвентаризация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(Объединеные.НомерСтроки) КАК НомерСтроки,
	|	Объединеные.Номенклатура КАК Номенклатура,
	|	Объединеные.Характеристика КАК Характеристика,
	|	Объединеные.СерияНоменклатуры КАК СерияНоменклатуры,
	|	Объединеные.Упаковка КАК Упаковка,
	|	СУММА(Объединеные.КоличествоЭкземпляров) КАК КоличествоЭкземпляров,
	|	Объединеные.Цена КАК Цена
	|ПОМЕСТИТЬ ОбъединеныеГрупп
	|ИЗ
	|	Объединеные КАК Объединеные
	|
	|СГРУППИРОВАТЬ ПО
	|	Объединеные.Номенклатура,
	|	Объединеные.Упаковка,
	|	Объединеные.Характеристика,
	|	Объединеные.Цена,
	|	Объединеные.СерияНоменклатуры
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Штрихкоды.Штрихкод КАК Штрихкод,
	|	Штрихкоды.ТипШтрихкода КАК ТипШтрихкода,
	|	ОбъединеныеГрупп.Номенклатура КАК Номенклатура,
	|	ОбъединеныеГрупп.Характеристика КАК Характеристика,
	|	ОбъединеныеГрупп.Упаковка КАК Упаковка,
	|	ВЫБОР
	|		КОГДА ОбъединеныеГрупп.Характеристика = Штрихкоды.ХарактеристикаНоменклатуры
	|				И ОбъединеныеГрупп.Упаковка = Штрихкоды.ЕдиницаИзмерения
	|			ТОГДА 1
	|		КОГДА ОбъединеныеГрупп.Характеристика = Штрихкоды.ХарактеристикаНоменклатуры
	|				И Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|			ТОГДА 2
	|		КОГДА ОбъединеныеГрупп.Упаковка = Штрихкоды.ЕдиницаИзмерения
	|				И Штрихкоды.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 3
	|		КОГДА Штрихкоды.ЕдиницаИзмерения = ЗНАЧЕНИЕ(Справочник.ЕдиницыИзмерения.ПустаяСсылка)
	|				И Штрихкоды.ХарактеристикаНоменклатуры = ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)
	|			ТОГДА 4
	|		ИНАЧЕ 100
	|	КОНЕЦ КАК Приоритет
	|ПОМЕСТИТЬ ШтрихкодыНоменклатуры
	|ИЗ
	|	ОбъединеныеГрупп КАК ОбъединеныеГрупп
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	|		ПО ОбъединеныеГрупп.Номенклатура = Штрихкоды.Владелец
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОбъединеныеГрупп.НомерСтроки КАК НомерСтроки,
	|	ОбъединеныеГрупп.Номенклатура КАК Номенклатура,
	|	ОбъединеныеГрупп.Характеристика КАК Характеристика,
	|	ОбъединеныеГрупп.СерияНоменклатуры КАК Серия,
	|	ОбъединеныеГрупп.Упаковка КАК Упаковка,
	|	ЕСТЬNULL(ШтрихкодыНоменклатуры.Штрихкод, """") КАК Штрихкод,
	|	ШтрихкодыНоменклатуры.ТипШтрихкода КАК ТипШтрихкода,
	|	ОбъединеныеГрупп.КоличествоЭкземпляров КАК КоличествоЭкземпляров,
	|	ОбъединеныеГрупп.Цена КАК Цена
	|ИЗ
	|	ОбъединеныеГрупп КАК ОбъединеныеГрупп
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ШтрихкодыНоменклатуры.Номенклатура КАК Номенклатура,
	|			ШтрихкодыНоменклатуры.Характеристика КАК Характеристика,
	|			ШтрихкодыНоменклатуры.Упаковка КАК Упаковка,
	|			МИНИМУМ(ШтрихкодыНоменклатуры.Приоритет) КАК Приоритет
	|		ИЗ
	|			ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|		ГДЕ
	|			ШтрихкодыНоменклатуры.Приоритет <> 100
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ШтрихкодыНоменклатуры.Номенклатура,
	|			ШтрихкодыНоменклатуры.Характеристика,
	|			ШтрихкодыНоменклатуры.Упаковка) КАК ПриоритетыШтрихкодов
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШтрихкодыНоменклатуры КАК ШтрихкодыНоменклатуры
	|			ПО ПриоритетыШтрихкодов.Номенклатура = ШтрихкодыНоменклатуры.Номенклатура
	|				И ПриоритетыШтрихкодов.Характеристика = ШтрихкодыНоменклатуры.Характеристика
	|				И ПриоритетыШтрихкодов.Упаковка = ШтрихкодыНоменклатуры.Упаковка
	|				И ПриоритетыШтрихкодов.Приоритет = ШтрихкодыНоменклатуры.Приоритет
	|		ПО ОбъединеныеГрупп.Номенклатура = ПриоритетыШтрихкодов.Номенклатура
	|			И ОбъединеныеГрупп.Характеристика = ПриоритетыШтрихкодов.Характеристика
	|			И ОбъединеныеГрупп.Упаковка = ПриоритетыШтрихкодов.Упаковка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОбъединеныеГрупп.Номенклатура.Наименование";
	
	Запрос.УстановитьПараметр("Документы",Результат);
	Таблица = Запрос.Выполнить().Выгрузить();
	
	// При выборе одного документа для заполнения номенклатуры, выводить номенклатуру по порядку как в документе.
	Если Результат.Количество() = 1 Тогда
		Таблица.Сортировать("НомерСтроки");
	КонецЕсли;
	
	Если Не Прейскурант.Пустая() Тогда
		Таблица = Ценообразование.ПолучитьЦеныНоменклатуры(Таблица, Дата, Прейскурант);
	КонецЕсли;

	Отбор = Новый Структура("Номенклатура, Характеристика, Серия, Упаковка, Цена");
	Для Каждого СтрокаДокумента Из Таблица Цикл
		
		ДобавитьСтрокуТоваров = Истина;
		ЗаполнитьЗначенияСвойств(Отбор, СтрокаДокумента);
		мсСтр = Товары.НайтиСтроки(Отбор);
		Для Каждого СтрокаТовара Из мсСтр Цикл
			Если СтрокаТовара.Штрихкод = СтрокаДокумента.Штрихкод Тогда
				ДобавитьСтрокуТоваров = Ложь;
				Прервать;
			ИначеЕсли Не ЗначениеЗаполнено(СтрокаТовара.Штрихкод) Тогда
				ДобавитьСтрокуТоваров = Ложь;
				СтрокаТовара.Штрихкод = СтрокаДокумента.Штрихкод;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ДобавитьСтрокуТоваров Тогда
			СтрокаТовара = Товары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовара, СтрокаДокумента);
			СтрокаТовара.Печатать = Истина;
		Иначе
			СтрокаТовара.КоличествоЭкземпляров = СтрокаТовара.КоличествоЭкземпляров + СтрокаДокумента.КоличествоЭкземпляров;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьШтрихкодНоменклатуры(Номенклатура, Характеристика, ЕдиницаИзмерения)
	
	Результат = Новый Структура("Штрихкод, ТипШтрихкода");
	
	Штрихкоды = РегистрыСведений.Штрихкоды.СоздатьНаборЗаписей();
	Штрихкоды.Отбор.Владелец.Установить(Номенклатура);
	Штрихкоды.Отбор.ХарактеристикаНоменклатуры.Установить(Характеристика);
	
	Если ЗначениеЗаполнено(ЕдиницаИзмерения)
		И Номенклатура.ВидНоменклатуры = Перечисления.ВидыНоменклатуры.Материал
	Тогда
		Штрихкоды.Отбор.ЕдиницаИзмерения.Установить(ЕдиницаИзмерения);
	КонецЕсли;
	
	Штрихкоды.Прочитать();
	
	Если Штрихкоды.Количество() > 0 Тогда
		ЗаполнитьЗначенияСвойств(Результат, Штрихкоды[0]);
	КонецЕсли;
		
	Возврат Результат;
	
КонецФункции

#КонецОбласти
