#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ИспользоватьСНИЛС = Истина;
	Если Параметры.Свойство("Клиент") Тогда
		Клиент = Параметры.Клиент;
		Объект.СНИЛС = Клиент.СНИЛС;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ДекорацияНомерСтраницы.Заголовок = Строка(НомерСтраницы+1) + "/" + Формат(ВсегоСтраниц,"ЧН=1");
	УстановитьДоступностьКнопокСтраниц();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДокументыНаФормеВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.ДокументыНаФорме.ТекущиеДанные.Статус > 0 Тогда
		ОткрытьВыбранныйДокумент(Элементы.ДокументыНаФорме.ТекущиеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНаФормеПриАктивизацииСтроки(Элемент)
	Если Элементы.ДокументыНаФорме.ТекущиеДанные <> Неопределено Тогда
		Элементы.ОткрытьДокумент.Доступность = Элементы.ДокументыНаФорме.ТекущиеДанные.Статус > 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДокументыНаФормеЗагрузитьПриИзменении(Элемент)
	Элементы.ЗагрузитьДокументы.Доступность = ДокументыНаФорме.НайтиСтроки(Новый Структура("Загрузить", Истина)).Количество() > 0;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументПоИдентификаторуРЭМДНажатие(Элемент)
	ОткрытьФорму("Обработка.ЗапроситьДокументИзРЭМД.Форма.Форма", Новый Структура("Клиент", Клиент), ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПолучитьДокументы(Команда)
	
	ПолучитьДокументыНаСервере();
	УстановитьДоступностьКнопокСтраниц();
	
	Если НайденныеДокументы.НайтиСтроки(Новый Структура("ОтправленЗапросНаПолучение, Документ", Истина, Неопределено)).Количество() > 0 Тогда
		ПодключитьОбработчикОжидания("ПроверитьЗагруженныеДокументы", 300);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Вперед(Команда)
	
	НомерСтраницы = НомерСтраницы + 1;
	ЗаполнитьДокументыНаФорме();
	УстановитьДоступностьКнопокСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура Назад(Команда)
	
	НомерСтраницы = НомерСтраницы - 1;
	ЗаполнитьДокументыНаФорме();
	УстановитьДоступностьКнопокСтраниц();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьДокумент(Команда)
	ОткрытьВыбранныйДокумент(Элементы.ДокументыНаФорме.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьДокументы(Команда)
	ЗагрузитьВыбранныеДокументы();
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьНаСервере();
	ЗаполнитьДокументыНаФорме();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПолучитьДокументыНаСервере()
	
	НомерСтраницы = 0;
	НайденныеДокументы.Очистить();
	ДокументыНаФорме.Очистить();
	ВсегоНайдено = 0;
	ТекстОшибки = "";
	
	Если ИспользоватьСНИЛС Тогда
		СНИЛС = СтроковыеФункцииКлиентСервер.ПолучитьЦифрыСтроки(Объект.СНИЛС);
		Если СтрДлина(СНИЛС) <> 11 Тогда
			ТекстОшибки = "Некорректный СНИЛС";
		КонецЕсли;
	Иначе
		СНИЛС = Неопределено;
	КонецЕсли;
	
	Если ИспользоватьДату Тогда
		Если ЗначениеЗаполнено(ДатаДокумента) Тогда
			ДатаПоиска = Формат(ДатаДокумента,"ДФ=yyyy-MM-dd");
		Иначе
			ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "") + "Не заполнена дата";
		КонецЕсли;
	Иначе
		ДатаПоиска = Неопределено;
	КонецЕсли;
	
	Если ИспользоватьВидДокумента Тогда
		Если ЗначениеЗаполнено(ВидДокумента) Тогда
			КодВидаДокумента = ВидДокумента.УИДЕГИСЗ;
		Иначе
			ТекстОшибки = ТекстОшибки + ?(ЗначениеЗаполнено(ТекстОшибки), Символы.ПС, "") + "Не указан вид документа";
		КонецЕсли;
	Иначе
		КодВидаДокумента = Неопределено;
	КонецЕсли;
	
	МассивИдентификаторовРЭМД = Новый Массив;
	
	Если Не ЗначениеЗаполнено(ТекстОшибки) Тогда
		Результат = ИнтеграцияЕГИСЗ_РЭМД.ПоискДокументовВРЭМД(,,КодВидаДокумента,,ДатаПоиска,,СНИЛС);
		Если Результат = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ВсегоСтраниц = Окр(Результат.Найденные.Количество()/10+0.5, 0, 0);
		Для Каждого НайденныйДокумент Из Результат.Найденные Цикл
			МассивИдентификаторовРЭМД.Добавить(НайденныйДокумент.emdrid);
			НоваяСтрока = НайденныеДокументы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, НайденныйДокумент);
			НоваяСтрока.ДатаСозданияДокумента = ОбщегоНазначенияКлиентСервер.ПолучитьДатуИзСтроки(НоваяСтрока.registrationDateTime);
		КонецЦикла;
		
		ФайлыПоИдентификаторуРЭМД = Обработки.ПоискДокументовРЭМД.ПолучитьФайлыДокументовПоУИДРЭМД(МассивИдентификаторовРЭМД);
		
		ДокументыПоТекущейМИС = ПолучитьДокументыПоТекущейМИС(МассивИдентификаторовРЭМД);
		ЗапрошенныеДокументы = ПолучитьЗапрошенныеДокументы(МассивИдентификаторовРЭМД);
		
		Для Каждого НайденныйДокумент Из НайденныеДокументы Цикл
			НайденныйДокумент.ФайлДокумента = ФайлыПоИдентификаторуРЭМД.Получить(НайденныйДокумент.emdrid);
			НайденныйДокумент.Документ = ДокументыПоТекущейМИС.Получить(НайденныйДокумент.emdrid);
			НайденныйДокумент.ОтправленЗапросНаПолучение = ЗапрошенныеДокументы.Найти(НайденныйДокумент.emdrid) <> Неопределено;
		КонецЦикла;		
	Иначе
		Сообщить(ТекстОшибки);
	КонецЕсли;
	
	ЗаполнитьДокументыНаФорме();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДокументыНаФорме()
	
	ДокументыНаФорме.Очистить();
	Элементы.ДекорацияНомерСтраницы.Заголовок = Строка(НомерСтраницы+1) + "/" + Формат(ВсегоСтраниц,"ЧН=1");
	
	АтрибутыАдреса = Новый Массив;
	АтрибутыАдреса.Добавить("AREANAME");
	АтрибутыАдреса.Добавить("STREETNAME");
	АтрибутыАдреса.Добавить("HOUSE");
	
	Для Инд = 0 По 10 Цикл
		ТекИнд = НомерСтраницы*10+Инд;
		Если ТекИнд >= НайденныеДокументы.Количество() Тогда
			Прервать;
		КонецЕсли;
		
		ТекущаяСтрока = НайденныеДокументы[ТекИнд];
		Если Не ТекущаяСтрока.ПолученыМетаданные Тогда
			МетаданныеДокумента = ИнтеграцияЕГИСЗ_РЭМД.ПолучитьМетаданныеДокументаИзРЭМД(ТекущаяСтрока.emdrid,"");
			ТекущаяСтрока.description = МетаданныеДокумента.Структура.description;
			ТекущаяСтрока.organization = МетаданныеДокумента.Структура.organization;
			
			ЧастиФИО = Новый Массив;
			ЧастиФИО.Добавить(МетаданныеДокумента.Структура.signer.surname);
			ЧастиФИО.Добавить(МетаданныеДокумента.Структура.signer.name);
			Если МетаданныеДокумента.Структура.signer.Свойство("patrName") Тогда
				ЧастиФИО.Добавить(МетаданныеДокумента.Структура.signer.patrName);
			КонецЕсли;
			ТекущаяСтрока.ФИОВрача = СтрСоединить(ЧастиФИО, " ");
			
			ТекущаяСтрока.ПолученыМетаданные = Истина;
		КонецЕсли;
		СтрокаДокументаНаФорме = ДокументыНаФорме.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДокументаНаФорме, ТекущаяСтрока);
		
		Если ЗначениеЗаполнено(ТекущаяСтрока.Документ) Тогда
			СтрокаДокументаНаФорме.Статус = 3;
		ИначеЕсли ЗначениеЗаполнено(ТекущаяСтрока.ФайлДокумента) Тогда
			СтрокаДокументаНаФорме.Статус = 2;
		ИначеЕсли ТекущаяСтрока.ОтправленЗапросНаПолучение Тогда
			СтрокаДокументаНаФорме.Статус = 1;
		КонецЕсли;
		
		СтрокиДанныхОрганизации = НаименованияОрганизаций.НайтиСтроки(Новый Структура("organization", ТекущаяСтрока.organization));
		Если СтрокиДанныхОрганизации.Количество() = 0 Тогда
			
			ДанныеОрганизации = ИнтеграцияЕГИСЗСервер.ДанныеОрганизацииПоOid(ТекущаяСтрока.organization);
			
			НаименованиеОрганизации = ДанныеОрганизации.Наименование;
			Если Не ЗначениеЗаполнено(НаименованиеОрганизации) Тогда
				НаименованиеОрганизации = ТекущаяСтрока.organization;
			КонецЕсли;
			
			ЧастиАдреса = Новый Массив;
			Для Каждого АтрибутАдреса Из АтрибутыАдреса Цикл
				Если ДанныеОрганизации.Свойство(АтрибутАдреса) Тогда
					ЧастиАдреса.Добавить(ДанныеОрганизации[АтрибутАдреса]);
				КонецЕсли;
			КонецЦикла;
			
			АдресОрганизации = СтрСоединить(ЧастиАдреса, ",");
			
			НовыеДанныеОрганизации = НаименованияОрганизаций.Добавить();
			НовыеДанныеОрганизации.organization = ТекущаяСтрока.organization;
			НовыеДанныеОрганизации.НаименованиеОрганизации = НаименованиеОрганизации;
			НовыеДанныеОрганизации.АдресОрганизации = АдресОрганизации;
			
		Иначе
			НаименованиеОрганизации = СтрокиДанныхОрганизации[0].НаименованиеОрганизации;
			АдресОрганизации = СтрокиДанныхОрганизации[0].АдресОрганизации;
		КонецЕсли;
		СтрокаДокументаНаФорме.НаименованиеОрганизации = НаименованиеОрганизации;
		СтрокаДокументаНаФорме.АдресОрганизации = АдресОрганизации;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКнопокСтраниц()
	
	Элементы.Назад.Доступность = НомерСтраницы > 0;
	Элементы.Вперед.Доступность = НомерСтраницы < ВсегоСтраниц-1;
	Элементы.Обновить.Доступность = НайденныеДокументы.Количество() > 0;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыбранныйДокумент(ТекущийДокумент)
	
	Если ТекущийДокумент.Статус = 1 Тогда
		Сообщить(НСтр("ru='Запрос на получение файла отправлен в РЭМД, но файл еще не загружен в МИС.'"));
	ИначеЕсли ТекущийДокумент.Статус = 2 Тогда
		ОткрытьФайлДокумента(ТекущийДокумент.ФайлДокумента, ТекущийДокумент.emdrid);
	ИначеЕсли ТекущийДокумент.Статус = 3 Тогда
		ПоказатьЗначение(, ТекущийДокумент.Документ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлДокумента(ФайлДокумента, emdrid)
	
	ПутьКФайлу = РаботаСФайламиКлиент.ОткрытьФайл(ФайлДокумента,,,Истина);
	Если Не ЗначениеЗаполнено(ПутьКФайлу) Тогда 
		Если Вопрос("Невозможно получить файл, возможно он был удален или перемещен. Удалить его?", 
			РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да 
		Тогда
			РаботаСФайламиКлиент.УдалитьФайл(ФайлДокумента);
			НайденныйДокумент = НайденныеДокументы.НайтиСтроки(Новый Структура("emdrid", Элементы.ДокументыНаФорме.ТекущиеДанные.emdrid))[0];
			ДокументНаФорме = ДокументыНаФорме.НайтиСтроки(Новый Структура("emdrid", Элементы.ДокументыНаФорме.ТекущиеДанные.emdrid))[0];
			
			НайденныйДокумент.ФайлДокумента = Неопределено;
			ДокументНаФорме.ФайлДокумента = Неопределено;
			ДокументНаФорме.Статус = ?(НайденныйДокумент.ОтправленЗапросНаПолучение, 1 , 0);
		КонецЕсли;
	Иначе
		Если ВзаимодействияКлиентСервер.РасширениеФайла(ПутьКФайлу) = "xml" Тогда
			Попытка
				ФайлXSLСхемы = КаталогВременныхФайлов() + "DischSum.xsl";
				Файл = Новый Файл(ФайлXSLСхемы);
				Если Не Файл.Существует() Тогда
					ДДXSLСхемы = ПолучитьXSLСхему();
					ДДXSLСхемы.Записать(ФайлXSLСхемы);
				КонецЕсли;
			Исключение КонецПопытки;
		КонецЕсли;
		ЗапуститьПриложение(ПутьКФайлу);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьXSLСхему()
	
	Возврат Обработки.ПоискДокументовРЭМД.ПолучитьМакет("XSLСхема");
	
КонецФункции

&НаСервере
Процедура ЗагрузитьВыбранныеДокументы()
	ДокументыДляЗагрузки = ДокументыНаФорме.НайтиСтроки(Новый Структура("Загрузить", Истина));
	Для Каждого ДокументДляЗагрузки Из ДокументыДляЗагрузки Цикл
		ИнтеграцияЕГИСЗ_РЭМД.ЗапроситьДокументИзРЭМД(ДокументДляЗагрузки.emdrid, Клиент);
		НайденныеДокументы.НайтиСтроки(Новый Структура("emdrid", ДокументДляЗагрузки.emdrid))[0].ОтправленЗапросНаПолучение = Истина;
		ДокументДляЗагрузки.Статус = 1;
		ДокументДляЗагрузки.Загрузить = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДокументыПоТекущейМИС(МассивИдентификаторовРЭМД)
	
	ДокументыПоТекущейМИС = Новый Соответствие;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СообщенияРЭМД.Документ КАК Документ,
		|	СообщенияРЭМД.ИдентификаторРЭМД КАК ИдентификаторРЭМД
		|ИЗ
		|	Справочник.СообщенияРЭМД КАК СообщенияРЭМД
		|ГДЕ
		|	СообщенияРЭМД.ИдентификаторРЭМД В(&ИдентификаторыРЭМД)
		|	И СообщенияРЭМД.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ИдентификаторыРЭМД", МассивИдентификаторовРЭМД);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ДокументыПоТекущейМИС.Вставить(Выборка.ИдентификаторРЭМД, Выборка.Документ);
	КонецЦикла;
	
	Возврат ДокументыПоТекущейМИС;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗапрошенныеДокументы(МассивИдентификаторовРЭМД)
	
	ЗапрошенныеДокументы = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ИнтеграцияЕГИСЗСообщенияРЭМД.ИдентификаторРЭМД КАК ИдентификаторРЭМД
		|ИЗ
		|	РегистрСведений.ИнтеграцияЕГИСЗСообщенияРЭМД КАК ИнтеграцияЕГИСЗСообщенияРЭМД
		|ГДЕ
		|	ИнтеграцияЕГИСЗСообщенияРЭМД.ТипВызова = &ТипВызова
		|	И ИнтеграцияЕГИСЗСообщенияРЭМД.ИдентификаторРЭМД В(&ИдентификаторыРЭМД)";
	
	Запрос.УстановитьПараметр("ИдентификаторыРЭМД", МассивИдентификаторовРЭМД);
	Запрос.УстановитьПараметр("ТипВызова", Перечисления.ТипВызоваРЭМД.Отправка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗапрошенныеДокументы.Добавить(Выборка.ИдентификаторРЭМД);
	КонецЦикла;
	
	Возврат ЗапрошенныеДокументы;
	
КонецФункции

&НаСервере
Процедура ОбновитьНаСервере()
	
	Обработки.ПоискДокументовРЭМД.ОбновитьСтатусыЗапрошенныхДокументов(НайденныеДокументы.НайтиСтроки(Новый Структура("ОтправленЗапросНаПолучение, Документ", Истина, Неопределено)));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗагруженныеДокументы()
	
	Задание = ПроверитьЗагруженныеДокументыНаСервере();
	
	НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
	
	Обработчик = Новый ОписаниеОповещения("ПослеПроверкиЗагруженныхДокументовВФоне", ЭтотОбъект);
	ДлительныеОперацииКлиент.ОжидатьЗавершение(Задание, Обработчик, НастройкиОжидания);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьЗагруженныеДокументыНаСервере()
	Возврат ПроверитьЗагруженныеДокументыВФоне(УникальныйИдентификатор, НайденныеДокументы.НайтиСтроки(Новый Структура("ОтправленЗапросНаПолучение, Документ", Истина, Неопределено)));
КонецФункции

&НаСервереБезКонтекста
Функция ПроверитьЗагруженныеДокументыВФоне(Знач УникальныйИдентификатор, ЗапрошенныеДокументы)
	ИмяМетода = "Обработки.ПоискДокументовРЭМД.ОбновитьСтатусыЗапрошенныхДокументов";
	
	НастройкиЗапуска = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	НастройкиЗапуска.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка статусов загрузки запрошенных документов'");
	
	Возврат ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ЗапрошенныеДокументы, НастройкиЗапуска);
КонецФункции

&НаКлиенте
Процедура ПослеПроверкиЗагруженныхДокументовВФоне(Задание, ДополнительныеПараметры) Экспорт
	
	Если Задание = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Задание.Статус = "Выполнено" Тогда
		УИДыПолученныхФайлов = УИДыПолученныхФайлов(Задание.АдресРезультата);
		Если УИДыПолученныхФайлов.Количество() > 0 Тогда
			Состояние(НСтр("ru='Получены файлы из РЭМД'"));
			ЗаполнитьДокументыНаФорме();
		КонецЕсли;
		Если НайденныеДокументы.НайтиСтроки(Новый Структура("ОтправленЗапросНаПолучение, Документ", Истина, Неопределено)).Количество() = 0 Тогда
			ОтключитьОбработчикОжидания("ПроверитьЗагруженныеДокументы");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УИДыПолученныхФайлов(АдресРезультата)
	Возврат ПолучитьИзВременногоХранилища(АдресРезультата);
КонецФункции

#КонецОбласти