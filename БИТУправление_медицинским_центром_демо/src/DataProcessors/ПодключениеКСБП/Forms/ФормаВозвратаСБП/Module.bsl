///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2021, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не Параметры.Свойство("ДокументВозврата")
			Или Не Параметры.Свойство("ДокументОплаты") 
			Или Не Параметры.Свойство("ЭквайринговыйТерминал") Тогда
		ВызватьИсключение НСтр("ru = 'Некорректные параметры формы.'");
	КонецЕсли;
	
	СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.НеВыполнена");
	ДокументОплаты = Параметры.ДокументОплаты;
	ДокументВозврата = Параметры.ДокументВозврата;
	ЭквайринговыйТерминал = Параметры.ЭквайринговыйТерминал;
	ТорговаяТочка = ИнтеграцияСБП.ПолучитьТорговуюТочкуПоЭквайринговомуТерминалу(ЭквайринговыйТерминал);
	//Если НеЗначениеЗаполнено(ТорговаяТочка) Тогда
	//	ВызватьИсключение НСтр("ru = 'Не.'");	
	//КонецЕсли;
	//ТорговаяТочка = Параметры.ЭквайринговыйТерминал;
	
	ДоступныОперации = ИнтеграцияСПлатежнымиСистемами.НастройкиТорговойТочки(
		ТорговаяТочка);
	
	Если ДоступныОперации.ВыборПлатежнойСистемыВозврата Тогда
		ПлатежныеСистемыВозврата = ИнтеграцияСПлатежнымиСистемами.ПлатежныеСистемыВозврата(
			ТорговаяТочка);
		Для Каждого КлючЗначение Из ПлатежныеСистемыВозврата Цикл
			Элементы.ПлатежнаяСистема.СписокВыбора.Добавить(
				КлючЗначение.Ключ,
				КлючЗначение.Значение);
			Элементы.ПлатежнаяСистема.СписокВыбора.СортироватьПоПредставлению();
		КонецЦикла;
	Иначе
		Элементы.ПлатежнаяСистема.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументОплаты) Тогда
		Элементы.ИдентификаторОплаты.Видимость = Ложь;
		Элементы.ПлатежнаяСистема.Видимость = Ложь;
	Иначе
		Элементы.ДокументОплаты.Видимость = Ложь;
	КонецЕсли;
	
	УстановитьВидимостьДоступность();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОписаниеОшибкиОбработкаНавигационнойСсылки(
		Элемент,
		НавигационнаяСсылкаФорматированнойСтроки,
		СтандартнаяОбработка)
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "open:log" Тогда
		СтандартнаяОбработка = Ложь;
		ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьВозврат(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВозврат Тогда
		ИнициироватьВозвратОплаты();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодтверждение Тогда
		ПодтвердитьВозврат();
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыполняется Тогда
		ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
	Иначе
		Если СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.Выполнена") Тогда
			ИдентификаторОперации = Строка(ИнтеграцияСБП.ПолучитьИдентификаторОперации(ДокументВозврата));
			Результат = Новый Структура;
			Результат.Вставить("Результат", Истина);
			Результат.Вставить("СсылочныйНомер", "");
			Результат.Вставить("НомерКарты", "");
			Результат.Вставить("НомерЧекаЭТ", ИдентификаторОперации);
			ЭтотОбъект.Закрыть(Результат);
		Иначе
			Результат = Новый Структура;
			Результат.Вставить("Результат", Ложь);
			Результат.Вставить("ОписаниеОшибки", ТекстОшибки);
			ЭтотОбъект.Закрыть(Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отложить(Команда)
	
	Возврат;
	//Отложен = УстановитьОтложенноеПолучениеСтатуса(ДокументВозврата);
	//
	//Если Отложен Тогда
	//	Результат = Новый Структура;
	//	Результат.Вставить("СтатусОперации", ПредопределенноеЗначение("Перечисление._ДемоСтатусыОперацияСБП.Выполняется"));
	//	ЭтотОбъект.Закрыть(Результат);
	//Иначе
	//	ОбщегоНазначенияКлиент.СообщитьПользователю(
	//		НСтр("ru = 'Не удалось отложить чек.'"));
	//КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ИнициироватьВозвратОплаты()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	УстановитьВидимостьДоступность();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ДокументВозврата",    ДокументВозврата);
	ПараметрыПроцедуры.Вставить("ИдентификаторОплаты", ИдентификаторОплаты);
	ПараметрыПроцедуры.Вставить("ДокументОплаты",      ДокументОплаты);
	ПараметрыПроцедуры.Вставить("ТорговаяТочка",       ТорговаяТочка);
	ПараметрыПроцедуры.Вставить("ПлатежнаяСистема",    ?(ЗначениеЗаполнено(ПлатежнаяСистема),
		ПлатежнаяСистема,
		Неопределено));
	
	РезультатВыполнения = ИнициироватьВозвратОплатыНаСервере(
		ПараметрыПроцедуры,
		УникальныйИдентификатор);
	
	ИдентификаторЗаданияФормированияQRКода = РезультатВыполнения.ИдентификаторЗадания;
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ИнициироватьВозвратОплатыЗавершение",
		ЭтотОбъект);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ИнициироватьВозвратОплатыЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ИнициироватьВозвратОплатыНаСервере(ПараметрыПроцедуры, УникальныйИдентификатор)
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Возврат оплаты в платежной системе.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияСБП.ВозвратОплаты",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ИнициироватьВозвратОплатыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ОбработатьСтатусВозврата(РезультатОперации);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка;
		УстановитьВидимостьДоступность(
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьСтатусВозврата()
	
	Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация;
	УстановитьВидимостьДоступность();
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
	ПараметрыОжидания.Интервал = 1;
	
	РезультатВыполнения = ОпределитьСтатусВозвратаНаСервере(
		ДокументВозврата,
		ТорговаяТочка,
		ЭтотОбъект.УникальныйИдентификатор);
	
	ИдентификаторЗаданияПроверкиСтатуса = РезультатВыполнения.ИдентификаторЗадания;
	ОповещениеОЗавершении = Новый ОписаниеОповещения(
		"ОпределитьСтатусВозвратаЗавершение",
		ЭтотОбъект);
	
	Если РезультатВыполнения.Статус = "Выполнено" Тогда
		ОпределитьСтатусВозвратаЗавершение(РезультатВыполнения, Неопределено);
		Возврат;
	КонецЕсли;
	
	ДлительныеОперацииКлиент.ОжидатьЗавершение(
		РезультатВыполнения,
		ОповещениеОЗавершении,
		ПараметрыОжидания);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьСтатусВозвратаНаСервере(
		ДокументВозврата,
		ТорговаяТочка,
		УникальныйИдентификатор)
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ДокументВозврата", ДокументВозврата);
	ПараметрыПроцедуры.Вставить("ТорговаяТочка",  ТорговаяТочка);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка статуса возврата.'");
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(
		"ИнтеграцияСБП.СтатусВозвратОплаты",
		ПараметрыПроцедуры,
		ПараметрыВыполнения);
	
	Возврат РезультатВыполнения;
	
КонецФункции

&НаКлиенте
Процедура ОпределитьСтатусВозвратаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		РезультатОперации = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		ОбработатьСтатусВозврата(РезультатОперации, Ложь);
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка;
		УстановитьВидимостьДоступность(
			Результат.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодтвердитьВозврат()
	
	РезультатОперации = ПодтвердитьВозвратНаСервере(
		ДокументВозврата,
		ТорговаяТочка);
	ОбработатьСтатусВозврата(РезультатОперации);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодтвердитьВозвратНаСервере(ДокументВозврата, ТорговаяТочка)
	
	Возврат ИнтеграцияСБП.ПодтвердитьВозврат(
		ДокументВозврата,
		ТорговаяТочка);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьСтатусВозврата(РезультатОперации, ЗапускПроверкиСтатуса = Истина)
	
	Если РезультатОперации.СтатусОперации = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииТребуетсяПодтверждение() Тогда
		Элементы.ДекорацияПодтверждение.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Денежные средства будут переведены %1 (номер телефона %2) %3 на расчетный счет %4. Проверьте реквизиты и подтвердите перевод.'"),
			РезультатОперации.Подтверждение.ФИО,
			РезультатОперации.Подтверждение.НомерТелефона,
			?(ЗначениеЗаполнено(ПлатежнаяСистема), "в "+ Элементы.ПлатежнаяСистема.СписокВыбора.НайтиПоЗначению(ПлатежнаяСистема).Представление, ""),
			РезультатОперации.Подтверждение.НомерСчета);
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодтверждение;
		УстановитьВидимостьДоступность();
		СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.Выполняется");
	ИначеЕсли РезультатОперации.СтатусОперации = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполняется() Тогда
		Если ЗапускПроверкиСтатуса Тогда
			ПодключитьОбработчикОжидания("ОпределитьСтатусВозврата", 0.1, Истина);
		Иначе
			Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыполняется;
			УстановитьВидимостьДоступность();
		КонецЕсли;
		СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.Выполняется");
		ДоступнаОтложеннаяОперация = Истина;
	ИначеЕсли РезультатОперации.СтатусОперации = ИнтеграцияСПлатежнымиСистемамиКлиентСервер.СтатусОперацииВыполнена() Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗавершение;
		СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.Выполнена");
		УстановитьВидимостьДоступность();
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка;
		СтатусОперации = ПредопределенноеЗначение("Перечисление.СтатусыОперацияСБП.Ошибка");
		УстановитьВидимостьДоступность(
			РезультатОперации.СообщениеОбОшибке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьДоступность(ОписаниеОшибки = "")
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаДлительнаяОперация Тогда
		Элементы.ФормаЗавершитьВозврат.Видимость = Ложь;
		Элементы.ФормаОтмена.Видимость = Ложь;
		Элементы.ФормаОтложить.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВозврат Тогда
		Элементы.ФормаЗавершитьВозврат.Видимость = Истина;
		Элементы.ФормаЗавершитьВозврат.Заголовок = НСтр("ru = 'Вернуть'");
		Элементы.ФормаОтмена.Видимость = Ложь;
		Элементы.ФормаОтложить.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаЗавершение Тогда
		Элементы.ФормаЗавершитьВозврат.Видимость = Истина;
		Элементы.ФормаЗавершитьВозврат.Заголовок = НСтр("ru = 'Завершить возврат'");
		Элементы.ДекорацияНадписьУспешноеЗавершение.Заголовок = НСтр("ru = 'Возврат успешно выполнен.'");
		Элементы.ФормаОтмена.Видимость = Ложь;
		Элементы.ФормаОтложить.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВыполняется Тогда
		Элементы.ФормаЗавершитьВозврат.Видимость = Истина;
		Элементы.ФормаЗавершитьВозврат.Заголовок = НСтр("ru = 'Получить статус'");
		Элементы.ДекорацияНадписьУспешноеЗавершение.Заголовок = НСтр("ru = 'Платежная система не подтвердила возврат.'");
		Элементы.ФормаОтмена.Видимость = Ложь;
		//Элементы.ФормаОтложить.Видимость = Истина;
		Элементы.ФормаОтложить.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПодтверждение Тогда
		Элементы.ФормаЗавершитьВозврат.Видимость = Истина;
		Элементы.ФормаЗавершитьВозврат.Заголовок = НСтр("ru = 'Подтвердить'");
		Элементы.ФормаОтмена.Видимость = Ложь;
		Элементы.ФормаОтложить.Видимость = Ложь;
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОшибка Тогда
		ТекстОшибки = ОписаниеОшибки;
		ЧастиСтрок = Новый Массив;
		ЧастиСтрок.Добавить(ОписаниеОшибки);
		ЧастиСтрок.Добавить(Символы.ПС);
		ЧастиСтрок.Добавить(Символы.ПС);
		ЧастиСтрок.Добавить(НСтр("ru = 'Подробнее см.'"));
		ЧастиСтрок.Добавить(" ");
		ЧастиСтрок.Добавить(
			Новый ФорматированнаяСтрока(
				НСтр("ru = 'журнал регистрации.'")
				,
				,
				,
				,
				"open:log"));
		
		Элементы.ДекорацияОписаниеОшибки.Заголовок = Новый ФорматированнаяСтрока(ЧастиСтрок);
		
		Элементы.ФормаЗавершитьВозврат.Видимость = Истина;
		Элементы.ФормаЗавершитьВозврат.Заголовок = НСтр("ru = 'Завершить возврат'");
		Элементы.ФормаОтмена.Видимость = Истина;
		Элементы.ФормаОтложить.Видимость = ДоступнаОтложеннаяОперация;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УстановитьОтложенноеПолучениеСтатуса(ДокументОплаты)
	
	Возврат ИнтеграцияСПлатежнымиСистемами.УстановитьОтложенноеПолучениеСтатуса(
		ДокументОплаты,
		Истина);
	
КонецФункции

&НаКлиенте
Процедура Отмена(Команда)
	ЭтотОбъект.Закрыть();	
КонецПроцедуры

#КонецОбласти
