#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	МакетБлоков = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Блоки");
	Для Итер = 2 По МакетБлоков.ВысотаТаблицы Цикл
		НоваяСтрока = ТаблицаДанныхМодулей.Добавить();
		НоваяСтрока.ИмяМодуля = МакетБлоков.Область(Итер, 1).Текст;
		НоваяСтрока.Представление = МакетБлоков.Область(Итер, 2).Текст;
		НоваяСтрока.HTMLКод = МакетБлоков.Область(Итер, 3).Текст;
	КонецЦикла;
	
	ИмяМодуля = Параметры.ИмяМодуля;
	
	Имя = ИмяПользователя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для Каждого Эл Из ТаблицаДанныхМодулей Цикл
		Элементы.ИмяМодуля.СписокВыбора.Добавить(Эл.ИмяМодуля, Эл.Представление);
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(ИмяМодуля) Тогда
		ИмяМодуля = "Лаборатории";
	КонецЕсли;
	
	ИмяМодуляПриИзменении(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	ТекстНеЗаполнено = "";
	
	Отказ = Ложь;
	Если Не ЗначениеЗаполнено(Имя) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстНеЗаполнено, " - укажите Ваше имя", Символы.ПС);
	КонецЕсли;
	
	СтрокаПроверкиТелефона = СтрЗаменить(Телефон, "(", "");
	СтрокаПроверкиТелефона = СтрЗаменить(СтрокаПроверкиТелефона, ")", "");
	СтрокаПроверкиТелефона = СтрЗаменить(СтрокаПроверкиТелефона, "-", "");
	СтрокаПроверкиТелефона = СтрЗаменить(СтрокаПроверкиТелефона, "+", "");
	СтрокаПроверкиТелефона = СтрЗаменить(СтрокаПроверкиТелефона, " ", "");
	
	Если СтрДлина(СтрокаПроверкиТелефона) <> 11 Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстНеЗаполнено, " - укажите телефон", Символы.ПС);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Email) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстНеЗаполнено, " - укажите адрес электронной почты", Символы.ПС);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстНеЗаполнено) Тогда
		ПоказатьПредупреждение(, "Пожалуйста, заполните все обязательные поля:" + Символы.ПС + ТекстНеЗаполнено,30);
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		Оповещение = Новый ОписаниеОповещения("ОтправитьНаКлиенте", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, "Отправить заявку?", РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНаКлиенте(ОтветПодтверждение, ДопПараметры) Экспорт
	
	Если ОтветПодтверждение = КодВозвратаДиалога.ОК Тогда
	
		Состояние(НСтр("ru='Отправка'"));
		СлужебнаяИнформация = ПолучитьИнформациюОПрограмме(); 
		РезультатОтправки = ОтправитьНаСервере(СлужебнаяИнформация);
		
		Если ПустаяСтрока(РезультатОтправки) Тогда
			ПоказатьПредупреждение(,"Заявка успешно отправлена", 30);
		Иначе
			ПоказатьПредупреждение(,"Заявка не отправлена по причине: " + РезультатОтправки, 30);
			ОбщегоНазначения.СообщитьПользователю("Заявка не отправлена по причине: " + РезультатОтправки);	
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИмяМодуляПриИзменении(Элемент)
	
	Элементы.Лаборатория.Видимость = ИмяМодуля = "Лаборатории";
	
	РезультатПоиска = ТаблицаДанныхМодулей.НайтиСтроки(Новый Структура("ИмяМодуля", ИмяМодуля));
	Если РезультатПоиска.Количество() <> 0 Тогда
		ОписаниеМодуля = РезультатПоиска[0].HTMLКод;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункци

&НаСервере
Функция ОтправитьНаСервере(СлужебнаяИнформация)
	
	ОбъектОбработки = РеквизитФормыВЗначение("Объект");
	СтруктураСообщения = ПолучитьСтруктуруСообщения(СлужебнаяИнформация);
	
	ТекстСообщения = ПолучитьТекстовоеПредставление(СтруктураСообщения);
	JSONЗапись = ПреобразоватьДанныеВJSON(СтруктураСообщения);
	
	ТелоПисьма = ТекстСообщения + Символы.ПС + JSONЗапись;
	ТемаСообщения = "Подключение к модулю " + ИмяМодуля;
	
	РезультатОтправки = ОбъектОбработки.ОтправитьСообщение(ТемаСообщения, ТелоПисьма);
	
	Возврат РезультатОтправки;
	
КонецФункции

&НаСервере
Функция ПолучитьСтруктуруСообщения(СлужебнаяИнформация)
	
	Данные = Новый Структура;
	Данные.Вставить("ИмяМодуля", ИмяМодуля);
	Данные.Вставить("Email",	 Email);
	Данные.Вставить("Имя",		 Имя);
	Данные.Вставить("Телефон",	 Телефон);
	Данные.Вставить("Комментарий", Комментарий);
	Данные.Вставить("СлужебнаяИнформация", СлужебнаяИнформация);
	Данные.Вставить("СведенияОбОрганизациях", ПроцедурыСпециализацииПоставки.ОрганизацииБазыСтрокой());
	
	Если ИмяМодуля = "Лаборатории" Тогда
		Данные.Вставить("Лаборатория", Строка(Лаборатория));
	КонецЕсли;
	
	Возврат Данные;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстовоеПредставление(СтруктураДанных)
	
	ТекстовыйВид = "Тема запроса: Подключение модуля " + СтруктураДанных.ИмяМодуля + 
					?(СтруктураДанных.Свойство("Лаборатория")," " + СтруктураДанных.Лаборатория, "")+ Символы.ПС;
	ТекстовыйВид = ТекстовыйВид + "Имя: " +  СтруктураДанных.Имя + Символы.ПС;	
	ТекстовыйВид = ТекстовыйВид + "Телефон: " +  СтруктураДанных.Телефон + Символы.ПС;	
	ТекстовыйВид = ТекстовыйВид + "Email для ответа: " + СтруктураДанных.Email + Символы.ПС;
	ТекстовыйВид = ТекстовыйВид + "Комментарий: " + """" + СтруктураДанных.Комментарий + """" + Символы.ПС;
	ТекстовыйВид = ТекстовыйВид + "Организации: " + СтруктураДанных.СведенияОбОрганизациях + Символы.ПС;
	ТекстовыйВид = ТекстовыйВид + Символы.ПС + СтруктураДанных.СлужебнаяИнформация + Символы.ПС;
	
	Возврат ТекстовыйВид; 
		
КонецФункции

&НаКлиенте
Функция ПолучитьИнформациюОПрограмме()
	
	МассивДанныхИнформации = УниверсальныеМеханизмыКлиент.ПолучитьИнформациюОПрограмме();
	
	Информация = "";
	Для Каждого Элемент Из МассивДанныхИнформации Цикл
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(Информация, Элемент, Символы.ПС)
	КонецЦикла;
	
	Возврат Информация;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьДанныеВJSON(СтруктураДанных)
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, СтруктураДанных, Новый НастройкиСериализацииJSON);
	
	Возврат ЗаписьJSON.Закрыть();
	
КонецФункции

&НаСервереБезКонтекста
Функция РежимБазы()
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая(СтрокаСоединенияИнформационнойБазы()) Тогда
		Возврат "Файловый";
	ИначеЕсли ОбщегоНазначенияКлиентСервер.КлиентПодключенЧерезВебСервер() Тогда
		Возврат "ВебСерверный";
	Иначе
		Возврат "Серверный";
	КонецЕсли; 
	
КонецФункции 

#КонецОбласти