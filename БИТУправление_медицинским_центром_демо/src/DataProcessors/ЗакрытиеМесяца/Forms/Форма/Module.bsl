#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Период = НачалоМесяца(ТекущаяДата());
	
	ГраницаПартионныйУчет = Последовательности.ПартионныйУчет.ПолучитьГраницу();
	Если ГраницаПартионныйУчет <> Неопределено Тогда
		ДатаГраницыПартионногоУчета = ГраницаПартионныйУчет.Дата;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ЗаполнитьТаблицуОпераций();
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ЗаписьДокументаРаспределениеЗатрат" Тогда 
		ЗаполнитьТаблицуОпераций();
		НастроитьФорму();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьЗакрытиеМесяца(Команда)

	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		ПоказатьПредупреждение(,Нстр("ru = 'Перед выполнением операции необходимо указать месяц закрытия!'"));
		Возврат;
	КонецЕсли;
	
	НевыполненныеОперации = ТаблицаОпераций.НайтиСтроки(Новый Структура("Выполнена", Ложь));
	Если НевыполненныеОперации.Количество() = 0 Тогда 
		ПоказатьПредупреждение(,Нстр("ru = 'Выполнены все операции закрытия месяца уже выполнены!'"));
		Возврат;
	КонецЕсли;
	
	Для Каждого стрТаблицаОпераций Из ТаблицаОпераций Цикл
		ПроверитьПредыдущиеИВыполнитьОперацию(стрТаблицаОпераций);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьЗакрытиеМесяца(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда
		Предупреждение(Нстр("ru = 'Перед выполнением операции необходимо указать месяц закрытия!'"));
		Возврат;
	КонецЕсли;
	
	ВыполненныеОперации = ТаблицаОпераций.НайтиСтроки(Новый Структура("Выполнена", Истина));
	Если ВыполненныеОперации.Количество() = 0 Тогда 
		Предупреждение(Нстр("ru = 'Отсутствуют выполненные операции закрытия месяца за '") + Формат(Объект.Период, "ДФ='MMMM yyyy'") + Нстр("ru = ' г.!'"));
		Возврат;
	КонецЕсли;
	
	Ответ = Вопрос(Нстр("ru = 'Хотите отменить закрытие месяца за '") + Формат(Объект.Период, "ДФ='MMMM yyyy'") + Нстр("ru = ' г.?'"), РежимДиалогаВопрос.ДаНет);
	Если Ответ = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	КонецЕсли;

	Если ТаблицаОпераций.Количество() <> 0 Тогда 
		ОтменитьОперацию(ТаблицаОпераций[0]);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПериодПриИзменении(Элемент)

	Объект.Период = НачалоМесяца(Объект.Период);
	
	ЗаполнитьТаблицуОпераций();
	НастроитьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	
	Попытка
		Объект.Период = НачалоМесяца(ДобавитьМесяц(Объект.Период, Направление));
	Исключение 
	КонецПопытки;
	
	ПериодПриИзменении(Элемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаГраницыПартионногоУчетаНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОткрытьФорму("Обработка.ПроведениеПоПартиям.Форма");	
	
КонецПроцедуры

&НаКлиенте
Процедура ОперацияНажатие(Элемент)
	
	Если Не ЗначениеЗаполнено(Объект.Период) Тогда 
		Возврат;	
	КонецЕсли;

	Индекс = СтрЗаменить(Элемент.Имя, "Операция", "");
	Попытка 
		Индекс = Число(Индекс);
	Исключение
		Возврат;
	КонецПопытки;
	
	СтрокиТаблицы = ТаблицаОпераций.НайтиСтроки(Новый Структура("НомерЭлементаФормы", Индекс));
	Если СтрокиТаблицы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ИндексПредыдущий = Индекс - 1; 
	Если ИндексПредыдущий > 0 Тогда 
		СтрокиТаблицыПредыдущие = ТаблицаОпераций.НайтиСтроки(Новый Структура("НомерЭлементаФормы", ИндексПредыдущий));
		Если СтрокиТаблицыПредыдущие.Количество() <> 0 Тогда
			СтрокаТаблицыПредыдущая = СтрокиТаблицыПредыдущие[0];
			Если Не СтрокаТаблицыПредыдущая.Выполнена Тогда 
				Возврат;	
			КонецЕсли;
 		КонецЕсли;
	КонецЕсли;	
		
	СтрокаТаблицы = СтрокиТаблицы[0];
			
	СписокКоманд = КомандыОперации(СтрокаТаблицы);
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("СтрокаТаблицы", СтрокаТаблицы);
	ПараметрыОперации.Вставить("Элемент", Элемент);
	ОповещениеВыбораИзМеню = Новый ОписаниеОповещения("ОперацияНажатиеЗавершение", ЭтотОбъект, ПараметрыОперации);
	
	ПоказатьВыборИзМеню(ОповещениеВыбораИзМеню, СписокКоманд, Элемент);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуОперацийСервер(Дата)
	
	Массив = Новый Массив;
	
	Для Индекс = 1 По Перечисления.ВидыОперацийРаспределениеЗатрат.Количество() Цикл
		Операция = Новый Структура("ВидОперации, НомерЭлементаФормы, Ссылка");
		Операция.ВидОперации        = Перечисления.ВидыОперацийРаспределениеЗатрат.Получить(Индекс - 1);
		Операция.НомерЭлементаФормы = Индекс;
		Операция.Ссылка				= ЗакрытиеМесяца.ПроверитьНаличиеДокументаОперацииЗакрытияМесяца(Дата, Операция.ВидОперации); 		
		
		Если ЗначениеЗаполнено(Операция.Ссылка)
			И (Не ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Операция.Ссылка ,"Проведен")
				Или Операция.Ссылка.Проведен)
		Тогда 
			Операция.Вставить("Выполнена", Истина);		
		КонецЕсли;
		
		Массив.Добавить(Операция);
	КонецЦикла;

	Возврат Массив;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьТаблицуОпераций()
	
	ТаблицаОпераций.Очистить();
	
	мсОперации = ЗаполнитьТаблицуОперацийСервер(Объект.Период);
	Для Каждого Операция Из мсОперации Цикл 
		СтрокаТаблицы = ТаблицаОпераций.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Операция);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура НастроитьФорму()
	
	МожноРедактироватьОперации = ОбщегоНазначения.ЕстьПравоДоступа("Редактирование", "Документ.РаспределениеЗатрат");
	Элементы.ГруппаКолонкаОпераций.Доступность = МожноРедактироватьОперации;
	Элементы.ВыполнитьЗакрытиеМесяца.Доступность = МожноРедактироватьОперации;
	Элементы.ОтменитьЗакрытиеМесяца.Доступность = МожноРедактироватьОперации;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОпераций Цикл
		
		ТекущийЭлементНадписи = Элементы.Найти("Операция" + СтрокаТаблицы.НомерЭлементаФормы);
		
		Если ТекущийЭлементНадписи = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущийЭлементНадписи.Заголовок  = СтрокаТаблицы.ВидОперации;
		
	КонецЦикла;
	
	ОбновитьСостояниеЗакрытияМесяцаНаФорме();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеЗакрытияМесяцаНаФорме()
	
	ЗакрытиеМесяцаВыполнено = Истина;
	
	Для Каждого СтрокаТаблицы Из ТаблицаОпераций Цикл
		
		ТекущийЭлементНадписи = Элементы.Найти("Операция" + СтрокаТаблицы.НомерЭлементаФормы);
		ТекущийЭлементСостояния = Элементы.Найти("Состояние" + СтрокаТаблицы.НомерЭлементаФормы);
		
		ТекущийЭлементНадписи.ЦветТекста = ЦветОперации(СтрокаТаблицы);
		ТекущийЭлементСостояния.Картинка = КартинкаОперации(СтрокаТаблицы);
			
		ТекущийЭлементСтрелкиВыполнить = Элементы.Найти("СтрелкаВыполнить" + СтрокаТаблицы.НомерЭлементаФормы);
		ТекущийЭлементСтрелкиПропустить = Элементы.Найти("СтрелкаПропустить" + СтрокаТаблицы.НомерЭлементаФормы);
		Если ТекущийЭлементСтрелкиВыполнить <> Неопределено И ТекущийЭлементСтрелкиПропустить <> Неопределено Тогда
			ТекущийЭлементСтрелкиВыполнить.Видимость = СтрокаТаблицы.Выполнена; 
			ТекущийЭлементСтрелкиПропустить.Видимость = Не СтрокаТаблицы.Выполнена; 
		КонецЕсли;
		
		Если Не СтрокаТаблицы.Выполнена Тогда  	
			ЗакрытиеМесяцаВыполнено = Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗакрытиеМесяцаВыполнено Тогда
		Статус = "Выполнено";
		Элементы.Статус.ЦветТекста = WebЦвета.Зеленый; 
	Иначе 
		Статус = "Не выполнено";
		Элементы.Статус.ЦветТекста = WebЦвета.Черный; 
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЦветОперации(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Выполнена Тогда
		Возврат WebЦвета.Зеленый;
	Иначе
		Возврат WebЦвета.Черный;
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Функция КартинкаОперации(СтрокаТаблицы)
	
	Если СтрокаТаблицы.Выполнена Тогда
		Возврат БиблиотекаКартинок.СостояниеОбменаДаннымиУспех;
	Иначе
		Возврат БиблиотекаКартинок.ИнформацияПоНедоступнымПолям;
	КонецЕсли;

КонецФункции

&НаКлиенте
Функция КомандыОперации(СтрокаТаблицы)
	
	СписокКоманд = Новый СписокЗначений;
	
	Выполнена = СтрокаТаблицы.Выполнена;
	
	Если Выполнена Тогда
		СписокКоманд.Добавить("Отменить", НСтр("ru = 'Отменить операцию'"),, БиблиотекаКартинок.ОтменаПроведения);
		СписокКоманд.Добавить("ОткрытьДокумент", НСтр("ru = 'Открыть документ'"),, БиблиотекаКартинок.Предпросмотр);
	Иначе 
		СписокКоманд.Добавить("Выполнить", НСтр("ru = 'Выполнить операцию'"),, БиблиотекаКартинок.Провести);
	КонецЕсли;
	
	Возврат СписокКоманд;
	
КонецФункции

&НаКлиенте
Процедура ОперацияНажатиеЗавершение(Команда, ПараметрыОперации) Экспорт

	Если Команда <> Неопределено Тогда
		ОбработкаНажатияКнопкиМеню(Команда.Значение, ПараметрыОперации.Элемент, ПараметрыОперации.СтрокаТаблицы);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаНажатияКнопкиМеню(Команда, Элемент, СтрокаТаблицы)
	
	Если Команда = "Выполнить" Тогда
		ПроверитьПредыдущиеИВыполнитьОперацию(СтрокаТаблицы);
	ИначеЕсли Команда = "Отменить" Тогда
		Ответ = Вопрос(Нстр("ru = 'Хотите отменить эту операцию за '") + Формат(Объект.Период, "ДФ='MMMM yyyy'") + Нстр("ru = ' г.?'") + Символы.ПС
						+ Нстр("ru = 'Все последующие выполненные операции за данный период также будут отменены!'"), РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда 
			Возврат;	
		КонецЕсли;
		ОтменитьОперацию(СтрокаТаблицы);
	ИначеЕсли Команда = "ОткрытьДокумент" Тогда
		Если ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) Тогда 
			ОткрытьЗначение(СтрокаТаблицы.Ссылка);
		ИначеЕсли СтрокаТаблицы.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРаспределениеЗатрат.ОтражениеНачисленийЗарплатыКакЗатрат") Тогда
			Отбор = Новый Структура("Дата", КонецМесяца(Объект.Период));
			ОткрытьФорму("Документ.ОтражениеЗатратПоЗарплате.ФормаСписка", Новый Структура("Отбор", Отбор));
		КонецЕсли;
	КонецЕсли;	
		
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПредыдущиеИВыполнитьОперацию(СтрокаТаблицы)
	
	ПредыдущиеВыполнены = Истина;
	
	Для Индекс = 0 По ТаблицаОпераций.Индекс(СтрокаТаблицы) - 1 Цикл 
		Если Не ТаблицаОпераций[Индекс].Выполнена Тогда 
			ПредыдущиеВыполнены = Ложь;	
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ПредыдущиеВыполнены И Не СтрокаТаблицы.Выполнена Тогда 
		ВыполнитьОперацию(СтрокаТаблицы);	
	КонецЕсли;			
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВыполнитьОперациюСервер(Знач ВидОперации, Знач Ссылка, Знач Дата)
	
	Результат = Ложь;
	
	Если ЗначениеЗаполнено(Ссылка) Тогда 
		ДокументОбъект = Ссылка.ПолучитьОбъект();
		Если ДокументОбъект.Проведен Тогда
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Исключение
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось выполнить операцию'") + " """ +  Строка(ВидОперации) + """! " + НСтр("ru='Не удалось отменить проведение документа по причине: '") + ОписаниеОшибки());
			КонецПопытки;
		КонецЕсли;
	Иначе 
		Ссылка = ЗакрытиеМесяца.ПроверитьНаличиеДокументаОперацииЗакрытияМесяца(Дата, ВидОперации);
		Если Ссылка <> Неопределено Тогда
			ДокументОбъект = Ссылка.ПолучитьОбъект();
		Иначе
			ДокументОбъект = Документы.РаспределениеЗатрат.СоздатьДокумент();
			ДокументОбъект.Дата = КонецМесяца(Дата); 
			ДокументОбъект.ВидОперации = ВидОперации; 
		КонецЕсли;		
	КонецЕсли;
	
	Документы.РаспределениеЗатрат.ПерезаполнениеРаспределенияЗатрат(ДокументОбъект);
	
	Попытка
		ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение);
		Результат = Истина;
		
		Если ДокументОбъект.Затраты.Количество() <> ДокументОбъект.Затраты.НайтиСтроки(Новый Структура("ОшибкаРаспределения","")).Количество() Тогда
			ШаблонСообщения = НСтр("ru='Операция ""%1"" выполнена, но не все затраты были распределены. Более подробная информация находится в документе распределения'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ВидОперации));
		КонецЕсли;
	Исключение
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось выполнить операцию'") + " """ +  Строка(ВидОперации) + """! " + ОписаниеОшибки());
	КонецПопытки;
	
	Если Результат Тогда 
		Возврат ДокументОбъект.Ссылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
		
КонецФункции

&НаКлиенте
Процедура ВыполнитьОперацию(СтрокаТаблицы)

	Если СтрокаТаблицы.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРаспределениеЗатрат.ОтражениеНачисленийЗарплатыКакЗатрат") Тогда  
		Если ЗакрытиеМесяца.СоздатьДокументыОтраженияЗарплатыКакЗатрат(Объект.Период) Тогда
			СтрокаТаблицы.Выполнена = Истина;	
		КонецЕсли;
	Иначе 	
		ДокументСсылка = ВыполнитьОперациюСервер(СтрокаТаблицы.ВидОперации, СтрокаТаблицы.Ссылка, Объект.Период);
		Если ДокументСсылка <> Неопределено Тогда 
			СтрокаТаблицы.Ссылка = ДокументСсылка;
			СтрокаТаблицы.Выполнена = Истина;	
		КонецЕсли;
	КонецЕсли;

	ОбновитьСостояниеЗакрытияМесяцаНаФорме();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтменитьОперациюСервер(Знач ВидОперации, Знач Ссылка, Знач Дата)
	
	Результат = Истина;
	
	Если ВидОперации = Перечисления.ВидыОперацийРаспределениеЗатрат.ОтражениеНачисленийЗарплатыКакЗатрат Тогда 
		
		ОтменитьОперациюОтраженияЗарплаты(Дата);
		
	Иначе 	
		
		Если Не ЗначениеЗаполнено(Ссылка) Тогда 
			Ссылка = ЗакрытиеМесяца.ПроверитьНаличиеДокументаОперацииЗакрытияМесяца(Дата, ВидОперации);
		КонецЕсли;
		
		Если Ссылка <> Неопределено Тогда
			Если Ссылка.Проведен Тогда 
				ДокументОбъект = Ссылка.ПолучитьОбъект();
				Попытка
					ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
				Исключение
					Результат = Ложь;
					ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось выполнить операцию'") + " """ +  Строка(ВидОперации) + """! " + ОписаниеОшибки());
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Новый Структура("Результат, Ссылка", Результат, Ссылка)
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтменитьОперациюОтраженияЗарплаты(Дата)
	
	НаименованиеОперации = Строка(Перечисления.ВидыОперацийРаспределениеЗатрат.ОтражениеНачисленийЗарплатыКакЗатрат);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	Ссылка КАК ДокументСсылка
	|ИЗ
	|	Документ.ОтражениеЗатратПоЗарплате
	|ГДЕ
	|	НЕ ПометкаУдаления
	|	И НАЧАЛОПЕРИОДА(Дата, МЕСЯЦ) = &НачалоМесяца";
	
	Запрос.УстановитьПараметр("НачалоМесяца", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.ДокументСсылка.ПолучитьОбъект();
		Если ДокументОбъект.Проведен Тогда 
			Попытка
				ДокументОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			Исключение
				Результат = Ложь;
				ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось выполнить операцию'") + " """ +  НаименованиеОперации + """! " + ОписаниеОшибки());
				Прервать;	
			КонецПопытки;
		КонецЕсли;
		
		ДокументОбъект.ПометкаУдаления = Истина;
		Попытка
			ДокументОбъект.Записать();
		Исключение
			Результат = Ложь;
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не удалось выполнить операцию'") + " """ +  НаименованиеОперации + """! " + ОписаниеОшибки());
			Прервать;	
		КонецПопытки;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура ОтменитьОперацию(СтрокаТаблицы)
	
	Если СтрокаТаблицы.ВидОперации = ПредопределенноеЗначение("Перечисление.ВидыОперацийРаспределениеЗатрат.ОтражениеНачисленийЗарплатыКакЗатрат") Тогда 
		Ответ = Неопределено;
		ПоказатьВопрос(Новый ОписаниеОповещения("ОтменитьОперациюПослеОтвета", ЭтотОбъект, Новый Структура("СтрокаТаблицы", СтрокаТаблицы)), Нстр("ru = 'Все созданные документы отражения затрат за '") + Формат(Объект.Период, "ДФ='MMMM yyyy'") + Нстр("ru = ' будут помечены на удаление.'") + " " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ДаНет);
        Возврат;
	КонецЕсли;
	
	ОтменитьОперациюЗакрытия(СтрокаТаблицы);
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОперациюПослеОтвета(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	СтрокаТаблицы = ДополнительныеПараметры.СтрокаТаблицы;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда 
		Возврат;	
	КонецЕсли;
	
	ОтменитьОперациюЗакрытия(СтрокаТаблицы);

КонецПроцедуры

&НаКлиенте
Процедура ОтменитьОперациюЗакрытия(Знач СтрокаТаблицы)
	
	Перем Индекс, ИндексСтроки, СтруктураОтменыОперации;
	
	ИндексСтроки = ТаблицаОпераций.Индекс(СтрокаТаблицы);
	Индекс = ТаблицаОпераций.Количество() - 1; 
	
	Пока Индекс >= 0 Цикл   
		Если Индекс >= ИндексСтроки  Тогда
			СтруктураОтменыОперации = ОтменитьОперациюСервер(ТаблицаОпераций[Индекс].ВидОперации, ТаблицаОпераций[Индекс].Ссылка, Объект.Период);
			Если СтруктураОтменыОперации.Результат Тогда
				ТаблицаОпераций[Индекс].Ссылка = СтруктураОтменыОперации.Ссылка;
				ТаблицаОпераций[Индекс].Выполнена = Ложь;
			КонецЕсли;
		КонецЕсли;
		Индекс = Индекс - 1;
	КонецЦикла;
	
	ОбновитьСостояниеЗакрытияМесяцаНаФорме();

КонецПроцедуры

#КонецОбласти
