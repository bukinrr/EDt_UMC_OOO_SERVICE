#Область ОбработчикиСобытийФормы

//////////////////////////////////////////////////////////////////////
// Обработчики событий формы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокПользователей();
	Пользователь = ИмяПользователя();
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
	Элементы.Скопировать.Видимость = ПравоДоступа("Администрирование", Метаданные);
	Элементы.СохранитьИнтерфейсДляВсехПользователей.Видимость = Элементы.Скопировать.Видимость;

	Интерфейс = Элементы.Интерфейс.СписокВыбора[0];
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура СохранитьИнтерфейсДляПользователя(Команда)
	
	Если Не ЗначениеЗаполнено(Пользователь) Тогда
		Предупреждение(НСтр("ru = 'Невозможно сохранить вариант интерфейса, так как не выбран пользователь.'"));
		Возврат;	
	КонецЕсли;
	
	мПользователи = Новый Массив;
	мПользователи.Добавить(Пользователь);
	
	СохранитьВариантИнтерфейсаДляПользователей(Интерфейс, мПользователи);
	
	Ответ = Вопрос(НСтр("ru = 'Для применения настроек необходимо перезапустить программу. Выполнить перезапуск?'"), РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПрекратитьРаботуСистемы(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИнтерфейсДляВсехПользователей(Команда)
	
	Ответ = Вопрос(НСтр("ru = 'Уверены, что хотите установить выбранный вариант интерфейса для всех пользователей?'"), РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	мПользователи = Элементы.Пользователь.СписокВыбора.Скопировать().ВыгрузитьЗначения();
	
	Если мПользователи.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Невозможно сохранить вариант интерфейса, так как в системе не заведен ни один пользователь.'"));
		Возврат;
	КонецЕсли;
	
	СохранитьВариантИнтерфейсаДляПользователей(Интерфейс, мПользователи);
	
	Ответ = Вопрос(НСтр("ru = 'Для применения настроек необходимо перезапустить программу. Выполнить перезапуск?'"), РежимДиалогаВопрос.ДаНет);
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ПрекратитьРаботуСистемы(Истина);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить()
	
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьВыполнить()
	
	Если Элементы.ОтфильтрованныеФормы.ВыделенныеСтроки.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Для копирования нужно выбрать настройки, которые требуется скопировать.'"));
		Возврат;
	КонецЕсли;
	
	СписокПользователей = Элементы.Пользователь.СписокВыбора.Скопировать();
	
	Если СписокПользователей.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Невозможно скопировать настройки, так как в системе не заведен ни один пользователь.'"));
		Возврат;
	КонецЕсли;
	
	ЭлементСписка = СписокПользователей.НайтиПоЗначению(Пользователь);
	Если ЭлементСписка <> Неопределено Тогда
		СписокПользователей.Удалить(ЭлементСписка);
	КонецЕсли;
	
	Если СписокПользователей.ОтметитьЭлементы(НСтр("ru = 'Отметьте пользователей, которым нужно скопировать настройки'")) Тогда
		ПользователиПриемник = Новый Массив;
		Для Каждого Элемент Из СписокПользователей Цикл
			Элементы.Пользователь.СписокВыбора.НайтиПоЗначению(Элемент.Значение).Пометка = Элемент.Пометка;
			Если Элемент.Пометка Тогда
				ПользователиПриемник.Добавить(Элемент.Значение);
			КонецЕсли;
		КонецЦикла;
		
		Если ПользователиПриемник.Количество() = 0 Тогда
			Предупреждение(НСтр("ru = 'Для копирования нужно отметить пользователей, которым требуется скопировать настройки.'"));
			Возврат;
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'После копирования настроек пользователю,
		|форма у пользователя будет открываться с настройками, которые ему скопируются. 
		|При этом его собственные настройки будут потеряны. 
		|Вы действительно хотите скопировать настройки выбранным пользователям?'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		
		СкопироватьНаСервере(ПользователиПриемник);
		ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки скопированы'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВыполнить()
	
	ТекстВопроса = НСтр("ru = 'После удаления настроек форма будет открываться с настройками по умолчанию. 
	|Вы действительно хотите удалить настройки?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		
		Возврат;
		
	КонецЕсли;
	
	УдалитьНаСервере();
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
	ПоказатьОповещениеПользователя(НСтр("ru = 'Настройки удалены'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьВыполнить()
	
	ПрименитьФильтр();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	ОбновитьСписокФорм();
	ПрименитьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискПриИзменении(Элемент)
	
	ПрименитьФильтр();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	УстановитьСнятьВыбор(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьСнятьВыбор(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьВыбор(ЗначениеФлага)
	
	Для Каждого СтрокаСписка Из ОтфильтрованныеФормы Цикл 
		СтрокаСписка.Пометка = ЗначениеФлага;
		
		СтрокаФормы = Формы.НайтиПоЗначению(СтрокаСписка.Значение);
		Если СтрокаФормы <> Неопределено Тогда
			СтрокаФормы.Пометка = СтрокаСписка.Пометка;
		КонецЕсли;
	КонецЦикла;
	Элементы.ОтфильтрованныеФормы.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСписокПользователей()
	
	Если ПравоДоступа("Администрирование", Метаданные) Тогда
	
		СписокПользователей = ПользователиИнформационнойБазы.ПолучитьПользователей();
		
	Иначе 
		СписокПользователей = Новый Массив;
		СписокПользователей.Добавить(ПользователиИнформационнойБазы.ТекущийПользователь());
	КонецЕсли;
		
	Для Каждого ТекПользователь Из СписокПользователей Цикл
		
		Элементы.Пользователь.СписокВыбора.Добавить(ТекПользователь.Имя);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписокФорм()
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Формы = Обработка.ПолучитьСписокФормСНастройками(Пользователь);
	Для Каждого СтрокаСписка Из Формы Цикл
		СтрокаСписка.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВыбранныеФормы()
	
	ВыбранныеФормы = Новый Массив;
	
	Для Каждого СтрокаСписка Из ОтфильтрованныеФормы Цикл
		Если СтрокаСписка.Пометка Тогда
			ВыбранныеФормы.Добавить(СтрокаСписка.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВыбранныеФормы;
	
КонецФункции

&НаСервере
Процедура СкопироватьНаСервере(ПользователиПриемник)

	МассивНастроекДляКопирования = ВыбранныеФормы();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.СкопироватьНастройкиФорм(Пользователь, ПользователиПриемник, МассивНастроекДляКопирования);
		
КонецПроцедуры

&НаСервере
Процедура УдалитьНаСервере()
	
	МассивНастроекДляУдаления = ВыбранныеФормы();
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.УдалитьНастройкиФорм(Пользователь, МассивНастроекДляУдаления);
	
КонецПроцедуры

&НаСервере
Процедура ПрименитьФильтр()
	
	ОтфильтрованныеФормы.Очистить();
	
	Для Каждого ЭлементФорма Из Формы Цикл
		
		Если Поиск = "" Или Найти(ВРег(ЭлементФорма.Представление), ВРег(Поиск)) <> 0 Тогда
			
			ОтфильтрованныеФормы.Добавить(ЭлементФорма.Значение, ЭлементФорма.Представление, ЭлементФорма.Пометка, ЭлементФорма.Картинка);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПримененныйПоиск = Поиск;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьВариантИнтерфейсаДляПользователей(Интерфейс, мПользователи)
	
	Для Каждого Пользователь Из мПользователи Цикл
				
		Настройка = ХранилищеСистемныхНастроек.Загрузить("Общее/НастройкиКлиентскогоПриложения", "",, Пользователь);
		
		Если Настройка = Неопределено Тогда
			Настройка = Новый НастройкиКлиентскогоПриложения; 
		КонецЕсли;
		
		Если Интерфейс = "ТаксиКомпактный" Тогда
			Настройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Компактный;
			Настройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
		ИначеЕсли Интерфейс = "Версия82" Тогда
			Настройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Версия8_2;
		ИначеЕсли Интерфейс = "ТаксиОбычный" Тогда
			Настройка.ВариантМасштабаФормКлиентскогоПриложения = ВариантМасштабаФормКлиентскогоПриложения.Обычный;
			Настройка.ВариантИнтерфейсаКлиентскогоПриложения = ВариантИнтерфейсаКлиентскогоПриложения.Такси;
		КонецЕсли;
		ХранилищеСистемныхНастроек.Сохранить("Общее/НастройкиКлиентскогоПриложения", "", Настройка,, Пользователь);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти