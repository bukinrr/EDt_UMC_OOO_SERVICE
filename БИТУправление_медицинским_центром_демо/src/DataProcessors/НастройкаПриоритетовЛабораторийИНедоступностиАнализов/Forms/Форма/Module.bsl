&НаКлиенте
Перем ПредложитьПересчитатьКеш;

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокЛабораторий(ТаблицаУстановкиПриоритетов);
	
	Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	ОсновнаяЛаборатория = УправлениеНастройками.ПолучитьПараметрУчетнойПолитикиФилиала("ОсновнаяЛаборатория", Филиал);
	ОбновитьТаблицуНоменклатурыИПриоритетов();
	
	Элементы.ОсновнаяЛабораторияДляФилиала.Доступность = ПравоДоступа("Изменение", Метаданные.РегистрыСведений.УчетнаяПолитикаФилиалов);
	
КонецПроцедуры


&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	Иначе
		Если ПредложитьПересчитатьКеш = Истина Тогда
			
			Ответ = Вопрос(НСтр("ru='Если в этом сеансе будут оформляться заборы анализов, требуется обновить кеш лаборатории. Обновить?'"),РежимДиалогаВопрос.ДаНет,30);
			Если Ответ <> КодВозвратаДиалога.Нет Тогда
				СообщитьВыполнениеОперации(НСтр("ru='Обновление кеша данных лаборатории'"));
				глКешНСИЛаборатории = ЛабораторияКлиент.ПолучитьКешНСИЛабораторийДляСтороныКлиента(Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЗаполнитьСписокЛабораторий(ТаблицаУстановкиПриоритетов)
	
	ТаблицаУстановкиПриоритетов.Очистить();
	
	Лаборатории = Справочники.Лаборатории.Выбрать(Новый Структура("ПометкаУдаления", Ложь));
	сч = 1;
	Пока Лаборатории.Следующий() Цикл
		Стр = ТаблицаУстановкиПриоритетов.Добавить();
		Стр.Использовать = Истина;
		Стр.Лаборатория = Лаборатории.Ссылка;
		Стр.Приоритет = сч;
		сч = сч + 1;			
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Процедура УстановитьПриоритет(Команда)
	
	НоменклатураСтрок = ПолучитьНоменклатуруВыбранныхСтрок(Элементы.НоменклатураИПриоритеты.ВыделенныеСтроки);
	
	УстановитьПриоритетНаСервере(НоменклатураСтрок, ТаблицаУстановкиПриоритетов, Филиал);
	ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
	
	ПредложитьПересчитатьКеш = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНоменклатуру(Команда)
	ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНоменклатуруВыбранныхСтрок(ВыбранныеСтроки)
	
	НоменклатураСтрок = Новый Массив;
	Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
		НоменклатураСтрок.Добавить(НоменклатураИПриоритеты.НайтиПоИдентификатору(ВыбраннаяСтрока).Номенклатура);
	КонецЦикла;
	
	Возврат НоменклатураСтрок;
	
КонецФункции

&НаКлиенте
Процедура ТаблицаУстановкиПриоритетовИспользоватьПриИзменении(Элемент)
	ОбновитьТаблицуПриоритетов();
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаУстановкиПриоритетовПриоритетПриИзменении(Элемент)
	ОбновитьТаблицуПриоритетов();
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетДобавить(Команда)
	
	ТекДанные = Элементы.ТаблицаУстановкиПриоритетов.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Или ТекДанные.Приоритет < 2 Тогда
		Возврат;	
	КонецЕсли;
	
	Рез = ТаблицаУстановкиПриоритетов.НайтиСтроки(Новый Структура("Приоритет", ТекДанные.Приоритет - 1));
	Для Каждого Стр Из Рез Цикл
		Стр.Приоритет = ТекДанные.Приоритет;	
	КонецЦикла;
		
	ТекДанные.Приоритет = ТекДанные.Приоритет - 1;
	
	ОбновитьТаблицуПриоритетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриоритетУбавить(Команда)
	
	ТекДанные = Элементы.ТаблицаУстановкиПриоритетов.ТекущиеДанные;
	
	Если ТекДанные = Неопределено Или ТекДанные.Приоритет < 1 Тогда
		Возврат;	
	КонецЕсли;
	
	Рез = ТаблицаУстановкиПриоритетов.НайтиСтроки(Новый Структура("Приоритет", ТекДанные.Приоритет + 1));
	Для Каждого Стр Из Рез Цикл
		Стр.Приоритет = ТекДанные.Приоритет;	
	КонецЦикла;
		
	ТекДанные.Приоритет = ТекДанные.Приоритет + 1;
	
	ОбновитьТаблицуПриоритетов();

КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьВсеЛаборатории(Команда)
	Для Каждого Стр Из ТаблицаУстановкиПриоритетов Цикл
		Стр.Использовать = Истина;
	КонецЦикла;
	ОбновитьТаблицуПриоритетов();
КонецПроцедуры

&НаКлиенте
Процедура НеИспользоватьВсеЛаборатории(Команда)
	Для Каждого Стр Из ТаблицаУстановкиПриоритетов Цикл
		Стр.Использовать = Ложь;
	КонецЦикла;
	ОбновитьТаблицуПриоритетов();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНедоступность(Команда)
	
	Если Не ЗначениеЗаполнено(Лаборатория) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не выбрана лаборатория!");
		Возврат;
	КонецЕсли;
	
	НоменклатураСтрок = ПолучитьНоменклатуруВыбранныхСтрок(Элементы.НоменклатураИПриоритеты.ВыделенныеСтроки);

	УстановитьНедоступностьАнализов(НоменклатураСтрок, Филиал, Лаборатория, ДатаНачалаНедоступности, ДатаОкончанияНедоступности);
	Элементы.ТекущиеНедоступныеАнализы.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПриоритетыИзДругогоФилиала(Команда)
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		ПредупреждениеНеВыбранФилиал();
		Возврат;
	КонецЕсли;
	
	ОтборФилиала = Новый Структура("Ссылка", ПолучитьСЗФилиалы(Филиал));
	Оповещение = Новый ОписаниеОповещения("СкопироватьПриоритетыИзДругогоФилиалаПослеВыбораФилиала", ЭтаФорма);
	ОткрытьФорму("Справочник.Филиалы.ФормаВыбора", Новый Структура("Отбор", ОтборФилиала),,,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьПриоритетыИзДругогоФилиалаПослеВыбораФилиала(ФилиалИсточник, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(ФилиалИсточник) Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьСуществующиеЗаписи = Ложь;
	
	Если ЕстьПриоритетыУФилиала(Филиал) Тогда
		Ответ = Вопрос(НСтр("ru='У текущего филиала уже заполнены приоритеты. Уверены, что хотите удалить их?'"), РежимДиалогаВопрос.ОКОтмена, 60, КодВозвратаДиалога.Отмена);
		Если Ответ = КодВозвратаДиалога.ОК Тогда
			УдалитьСуществующиеЗаписи = Истина;	
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	СкопироватьПриоритеты(ФилиалИсточник, Филиал);
	
	ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
	
	СообщитьВыполнениеОперации(НСтр("ru='Копирование приоритетов лабораторий завершено'"));
	
КонецПроцедуры

&НаКлиенте
Процедура ФилиалПриИзменении(Элемент)
	
	ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
	Если ЗначениеЗаполнено(Филиал) Тогда
		ОсновнаяЛаборатория = УправлениеНастройками.ПолучитьПараметрУчетнойПолитикиФилиала("ОсновнаяЛаборатория", Филиал);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОсновнаяЛабораторияДляФилиалаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Филиал) Тогда
		СохранитьОсновнуюЛабораториюДляФилиала(Филиал, ОсновнаяЛаборатория);
	Иначе
		ПредупреждениеНеВыбранФилиал();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКэшНСИ(Команда)
	глКешНСИЛаборатории = ЛабораторияКлиент.ПолучитьКешНСИЛабораторийДляСтороныКлиента(Истина);
	ПредложитьПересчитатьКеш = Ложь;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте()
	
	ТекущиеДанные = Элементы.НоменклатураИПриоритеты.ТекущиеДанные;
	
	НоменклатураИПриоритеты.ПолучитьЭлементы().Очистить();
	ОбновитьТаблицуНоменклатурыИПриоритетов();
	
	Если ТекущиеДанные <> Неопределено Тогда
		ИдентификаторСтроки = 0; 
		НайтиСтрокуДерева(НоменклатураИПриоритеты.ПолучитьЭлементы(), ТекущиеДанные, ИдентификаторСтроки);
		Элементы.НоменклатураИПриоритеты.ТекущаяСтрока = ИдентификаторСтроки;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элементы.НоменклатураИПриоритеты.ТекущаяСтрока) Тогда
		// Раскрыть верхний уровень
		Для Каждого СтрокаДерева Из НоменклатураИПриоритеты.ПолучитьЭлементы() Цикл
			Элементы.НоменклатураИПриоритеты.Развернуть(СтрокаДерева.ПолучитьИдентификатор(), Ложь);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьПриоритетНаСервере(Знач ВыбраннаяНоменклатура, Знач ТаблицаУстановкиПриоритетов, Филиал)
	
	НаборЗаписей = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Филиал.Установить(Филиал);
	
	мНоменклатура = ПолучитьНоменклатуруВыбранныхЭлементов(ВыбраннаяНоменклатура);
	Для Каждого Номенклатура Из мНоменклатура Цикл
		
		НаборЗаписей.Очистить();
		НаборЗаписей.Отбор.Номенклатура.Установить(Номенклатура);
		
		Для Каждого СтрПриоритет Из ТаблицаУстановкиПриоритетов Цикл
			
			Если СтрПриоритет.Использовать Тогда
				
				Запись = НаборЗаписей.Добавить();
				Запись.Филиал = Филиал;
				Запись.Номенклатура = Номенклатура;
				Запись.Приоритет = СтрПриоритет.Приоритет;
				Запись.Лаборатория = СтрПриоритет.Лаборатория;
				
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьНоменклатуруВыбранныхЭлементов(ВыбраннаяНоменклатура)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Номенклатура.Ссылка
	                      |ИЗ
	                      |	Справочник.Номенклатура КАК Номенклатура
	                      |ГДЕ
	                      |	Номенклатура.Ссылка В ИЕРАРХИИ(&Номенклатура)
	                      |	И НЕ Номенклатура.ЭтоГруппа
	                      |	И Номенклатура.Анализ");
	Запрос.УстановитьПараметр("Номенклатура", ВыбраннаяНоменклатура);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ОбновитьТаблицуПриоритетов()	
	
	СчНеИспользуемых = 0;
	СчИспользуемых = 1;
	
	ТаблицаУстановкиПриоритетов.Сортировать("Использовать Убыв, Приоритет Убыв");
	Для Каждого Стр Из ТаблицаУстановкиПриоритетов Цикл
		Если Не Стр.Использовать Тогда 
			Стр.Приоритет = СчНеИспользуемых;
			СчНеИспользуемых = СчНеИспользуемых - 1;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаУстановкиПриоритетов.Сортировать("Использовать Убыв, Приоритет Возр");				
	Для Каждого Стр Из ТаблицаУстановкиПриоритетов Цикл
		Если Стр.Использовать Тогда
			Стр.Приоритет = СчИспользуемых;
			СчИспользуемых = СчИспользуемых + 1;
		КонецЕсли;
	КонецЦикла;		
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УстановитьНедоступностьАнализов(ВыбраннаяНоменклатура, Филиал, Лаборатория, ДатаНачалаНедоступности, ДатаОкончанияНедоступности)
	
	мНоменклатура = ПолучитьНоменклатуруВыбранныхЭлементов(ВыбраннаяНоменклатура);
	
	Для Каждого СтрНоменклатура Из мНоменклатура Цикл
		Запись = РегистрыСведений.ПериодыНедоступностиАнализов.СоздатьМенеджерЗаписи();
		Запись.Лаборатория 	 = Лаборатория;
		Запись.Номенклатура  = СтрНоменклатура;
		Запись.Период 		 = ДатаНачалаНедоступности;
		Запись.ДатаОкончания = ДатаОкончанияНедоступности;
		Запись.Записать();	
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСЗФилиалы(ТекФилиал)
	
	сзФилиалы = Новый СписокЗначений;
	
	Выб = Справочники.Филиалы.Выбрать();
	Пока Выб.Следующий() Цикл
		Если Не Выб.ПометкаУдаления
			И Выб.Ссылка <> ТекФилиал
		Тогда
			сзФилиалы.Добавить(Выб.Ссылка, Выб.Наименование);
		КонецЕсли;
	КонецЦикла;
	
	Возврат сзФилиалы;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СкопироватьПриоритеты(ФилиалИсх, ФилиалВыбранный)
	
	нзПриоритетыИсх = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
	нзПриоритетыИсх.Отбор.Филиал.Установить(ФилиалИсх);
	нзПриоритетыИсх.Прочитать();
	
	нзПриоритетыВыбр = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
	нзПриоритетыВыбр.Отбор.Филиал.Установить(ФилиалВыбранный);
	нзПриоритетыВыбр.Прочитать();
	нзПриоритетыВыбр.Очистить();
	нзПриоритетыВыбр.Записать();
	
	Для Каждого СтрИсх Из нзПриоритетыИсх Цикл
		СтрВыбр = нзПриоритетыВыбр.Добавить();	
		СтрВыбр.Лаборатория = СтрИсх.Лаборатория;
		СтрВыбр.Номенклатура = СтрИсх.Номенклатура;
		СтрВыбр.Приоритет = СтрИсх.Приоритет;
		СтрВыбр.Филиал = ФилиалВыбранный;
	КонецЦикла;
	
	нзПриоритетыВыбр.Записать();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьПриоритетыУФилиала(Филиал)
	
	нзПриоритеты = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
	нзПриоритеты.Отбор.Филиал.Установить(Филиал);
	нзПриоритеты.Прочитать();
	
	Если нзПриоритеты.Количество() > 0 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
		
КонецФункции

&НаСервере
Процедура ОбновитьТаблицуНоменклатурыИПриоритетов()
	
	НоменклатураИПриоритеты.ПолучитьЭлементы().Очистить();
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Филиал", Филиал);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.Ссылка КАК Номенклатура,
	               |	Номенклатура.Код,
	               |	Номенклатура.Артикул,
	               |	Номенклатура.Родитель,
	               |	Номенклатура.ЭтоГруппа,
	               |	ВЫБОР
	               |		КОГДА Номенклатура.ЭтоГруппа
	               |			ТОГДА 1
	               |		ИНАЧЕ 2
	               |	КОНЕЦ КАК Картинка
	               |ПОМЕСТИТЬ Анализы
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	(Номенклатура.Анализ
	               |				И НЕ Номенклатура.Архив
	               |			ИЛИ Номенклатура.ЭтоГруппа)
	               |	И НЕ Номенклатура.ПометкаУдаления
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Приоритеты.Номенклатура,
	               |	МИНИМУМ(Приоритеты.Приоритет) КАК Приоритет,
	               |	Приоритеты.Лаборатория
	               |ПОМЕСТИТЬ Приоритеты
	               |ИЗ
	               |	РегистрСведений.ПриоритетыРаспределенияАнализовПоЛабораториям КАК Приоритеты
	               |ГДЕ
	               |	Приоритеты.Филиал = &Филиал
	               |	И Приоритеты.Номенклатура В
	               |			(ВЫБРАТЬ
	               |				Анализы.Номенклатура
	               |			ИЗ
	               |				Анализы)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Приоритеты.Номенклатура,
	               |	Приоритеты.Лаборатория
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	Анализы.Номенклатура,
	               |	Анализы.Код,
	               |	Анализы.Артикул,
	               |	Анализы.Родитель,
	               |	Анализы.ЭтоГруппа,
	               |	Анализы.Картинка
	               |ИЗ
	               |	Анализы КАК Анализы
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(Приоритеты.Приоритет) КАК Приоритет
	               |ИЗ
	               |	Приоритеты КАК Приоритеты
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Анализы.Номенклатура КАК Номенклатура,
	               |	Анализы.Код КАК Код,
	               |	Анализы.Артикул КАК Артикул,
	               |	Анализы.Родитель КАК Родитель,
	               |	Анализы.ЭтоГруппа КАК ЭтоГруппа,
	               |	Анализы.Картинка КАК Картинка,
	               |	Приоритеты.Лаборатория,
	               |	Приоритеты.Приоритет
	               |ИЗ
	               |	Анализы КАК Анализы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Приоритеты КАК Приоритеты
	               |		ПО Анализы.Номенклатура = Приоритеты.Номенклатура
	               |ИТОГИ
	               |	МАКСИМУМ(Код),
	               |	МАКСИМУМ(Артикул),
	               |	МАКСИМУМ(Родитель),
	               |	МАКСИМУМ(ЭтоГруппа),
	               |	МИНИМУМ(Картинка)
	               |ПО
	               |	Номенклатура ИЕРАРХИЯ";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ТаблицаНоменклатуры = РезультатЗапроса[2].Выгрузить();
	ТаблицаНоменклатуры.Очистить();
	
	ВыбМаксимальныйПриоритет = РезультатЗапроса[3].Выбрать();
	Выб1Ур = РезультатЗапроса[4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Если ВыбМаксимальныйПриоритет.Следующий() Тогда
		МаксимальныйПриоритет = ?(ВыбМаксимальныйПриоритет.Приоритет = NULL, 0, ВыбМаксимальныйПриоритет.Приоритет);
	Иначе
		МаксимальныйПриоритет = 0;
	КонецЕсли;
	
	ЗначенияПриоритетов = Новый Соответствие;
	Для Сч = 1 По МаксимальныйПриоритет Цикл
		Колонка = ТаблицаНоменклатуры.Колонки.Добавить("Приоритет" + Сч, Новый ОписаниеТипов("СправочникСсылка.Лаборатории"), Строка(Сч) + " приоритет", 15);
		ЗначенияПриоритетов.Вставить(Сч, Колонка.Имя);
	КонецЦикла;
	
	ОтобразитьТаблицуЗначенийНаФорме(ТаблицаНоменклатуры, ЭтаФорма, "НоменклатураИПриоритеты", Элементы.НоменклатураИПриоритеты);
	
	ДеревоНоменклатуры = РеквизитФормыВЗначение("НоменклатураИПриоритеты");
	
	ЗаполнениеИзЗапросаОбработатьУровень(Выб1Ур,ДеревоНоменклатуры.Строки,ЗначенияПриоритетов);
	
	УдалитьПустыеГруппы(ДеревоНоменклатуры.Строки);
	
	ЗначениеВРеквизитФормы(ДеревоНоменклатуры, "НоменклатураИПриоритеты"); 
	 	
КонецПроцедуры

Процедура ЗаполнениеИзЗапросаОбработатьУровень(ВыбУр,УровеньДерева,ЗначенияПриоритетов, ТекущаяНоменклатура = Неопределено)
	
	Пока ВыбУр.Следующий() Цикл
		
		Если ВыбУр.ЭтоГруппа Тогда
			
			Если ВыбУр.Номенклатура = ТекущаяНоменклатура Тогда
				Продолжить;
			Иначе
				СтрокаНоменклатуры = УровеньДерева.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНоменклатуры, ВыбУр);
				
				ВыбСледУр = ВыбУр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией,"Номенклатура");
				ЗаполнениеИзЗапросаОбработатьУровень(ВыбСледУр, СтрокаНоменклатуры.Строки, ЗначенияПриоритетов, СтрокаНоменклатуры.Номенклатура);
			КонецЕсли;			
		Иначе
			СтрокаНоменклатуры = УровеньДерева.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаНоменклатуры, ВыбУр);
			
			ВыбПриоритеты = ВыбУр.Выбрать();
			Пока ВыбПриоритеты.Следующий() Цикл
				ИмяКолонки = ЗначенияПриоритетов.Получить(ВыбПриоритеты.Приоритет);
				Если ИмяКолонки <> Неопределено Тогда
					СтрокаНоменклатуры[ИмяКолонки] = ВыбПриоритеты.Лаборатория;
				КонецЕсли;
			КонецЦикла;		
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УдалитьПустыеГруппы(УровеньДерева)
	
	мОбр = УровеньДерева.Количество() - 1;
	Для Сч = 0 По мОбр Цикл
		
		СтрокаДерева = УровеньДерева[мОбр - Сч];
		Если СтрокаДерева.ЭтоГруппа Тогда
			Если ВеткаДереваБезЭлементов(СтрокаДерева) Тогда
				УровеньДерева.Удалить(СтрокаДерева);
			Иначе
				УдалитьПустыеГруппы(СтрокаДерева.Строки)
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ВеткаДереваБезЭлементов(СтрокаДерева)
	
	Для Каждого СтрокаСледУр Из СтрокаДерева.Строки Цикл
		
		Если СтрокаСледУр.ЭтоГруппа Тогда
			Если Не ВеткаДереваБезЭлементов(СтрокаСледУр) Тогда
				Возврат Ложь;
			КонецЕсли;
		Иначе
			Возврат Ложь;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаСервереБезКонтекста
Функция ОтобразитьТаблицуЗначенийНаФорме(ТаблицаЗначений,
										 Форма,
										 РеквизитТаблицаИмя = Неопределено,
										 ТаблицаФормы = Неопределено,
										 ЭлементРодитель = Неопределено) 
	
	СтруктураРезультат = Новый Структура("РеквизитТаблица, ТаблицаФормы");
	
	ИмяРеквизитаТаблицыПоУмолчанию = "НоваяТаблица";
	ВсеРеквизитыТаблицы = Неопределено;
	
	МассивРеквизитов = Новый Массив;
	Если РеквизитТаблицаИмя = Неопределено Тогда
		// Создадим реквизит формы - таблицу. 
				МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяРеквизитаТаблицыПоУмолчанию, Новый ОписаниеТипов("ТаблицаФормы")));
		Форма.ИзменитьРеквизиты(МассивРеквизитов);
		
		РеквизитТаблица = Форма[ИмяРеквизитаТаблицыПоУмолчанию];
		РеквизитТаблицаИмя = ИмяРеквизитаТаблицыПоУмолчанию; 
	Иначе
		РеквизитТаблица = Форма[РеквизитТаблицаИмя];
		ВсеРеквизитыТаблицы = Форма.ПолучитьРеквизиты(РеквизитТаблицаИмя);
	КонецЕсли;
	
	Если ТаблицаФормы = Неопределено Тогда
		// Создадим таблицу формы - отображение реквизита таблицы.
		ТаблицаФормы = Форма.Элементы.Добавить(РеквизитТаблицаИмя, Тип("ТаблицаФормы"), Форма.Элементы.ПараметрыРасчетаЦены, ЭлементРодитель); 	
	КонецЕсли;
	
	// Создадим реквизиты-колонки.
	МассивРеквизитов.Очистить();
	Для каждого ТекКолонка Из ТаблицаЗначений.Колонки Цикл
		ИмяСоздаваемойКолонкиРеквизита = ТекКолонка.Имя;
		
		Если НЕ ВсеРеквизитыТаблицы=Неопределено Тогда
			// Выполним проверку существания реквизита.
			РеквизитЕсть = Ложь;
			
			Для каждого СуществущийРеквизит Из ВсеРеквизитыТаблицы Цикл
				Если СуществущийРеквизит.Имя = ИмяСоздаваемойКолонкиРеквизита Тогда
					РеквизитЕсть = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
			Если РеквизитЕсть Тогда
				Продолжить;
			КонецЕсли;
			
			МассивРеквизитов.Добавить(Новый РеквизитФормы(ИмяСоздаваемойКолонкиРеквизита,
														  ТекКолонка.ТипЗначения,
														  РеквизитТаблицаИмя));
		КонецЕсли;
	КонецЦикла;
	
	// Создаём реквизиты-колонки таблицы.
	Форма.ИзменитьРеквизиты(МассивРеквизитов);
	
	// Создаём элементы формы - колонки таблицы формы.
	Для Каждого ТекКолонка Из ТаблицаЗначений.Колонки Цикл
		ИмяКолонкиРеквизита = ТекКолонка.Имя;
		ИмяСоздаваемогоПоляФормы = РеквизитТаблицаИмя + ИмяКолонкиРеквизита;
		// Проверим существование такого элемента формы.
		ПоискЭлемента = Форма.Элементы.Найти(ИмяСоздаваемогоПоляФормы);
		Если ПоискЭлемента <> Неопределено Тогда
			Продолжить;			
		КонецЕсли;
		
		НоваяКолонка 			 	= Форма.Элементы.Добавить(ИмяСоздаваемогоПоляФормы, Тип("ПолеФормы"), ТаблицаФормы);       
		НоваяКолонка.Вид 		 	= ВидПоляФормы.ПолеВвода;
		НоваяКолонка.ПутьКДанным 	= ТаблицаФормы.Имя+"."+ИмяКолонкиРеквизита;
		НоваяКолонка.Заголовок	 	= ТекКолонка.Заголовок;
		НоваяКолонка.ТолькоПросмотр = Истина;
		НоваяКолонка.Видимость 	 	= Истина;
		НоваяКолонка.Ширина 	 	= ТекКолонка.Ширина;
	КонецЦикла;
		
	СтруктураРезультат.РеквизитТаблица = РеквизитТаблица;
	СтруктураРезультат.ТаблицаФормы = ТаблицаФормы;
	
	Возврат СтруктураРезультат;
	
КонецФункции

&НаКлиенте 
Процедура НайтиСтрокуДерева(КоллекцияЭлементовДерева, ТекущиеДанные, ИдентификаторСтроки, ПрекратитьПоиск = Ложь) 
	
	Для Каждого СтрокаДерева Из КоллекцияЭлементовДерева Цикл 
		Если ПрекратитьПоиск Тогда 
			Возврат; 
		КонецЕсли; 
		
		Если СтрокаДерева.Номенклатура = ТекущиеДанные.Номенклатура Тогда
			
			Если СтрокаДерева.ЭтоГруппа Тогда
				ИдентификаторСтроки = Неопределено;
			Иначе
				ИдентификаторСтроки = СтрокаДерева.ПолучитьИдентификатор();
			КонецЕсли;
			
			ПрекратитьПоиск = Истина; 
			Возврат; 
		КонецЕсли; 
		
		КоллекцияЭлементов = СтрокаДерева.ПолучитьЭлементы(); 
		
		Если КоллекцияЭлементов.Количество() > 0 Тогда 
			НайтиСтрокуДерева(КоллекцияЭлементов, ТекущиеДанные, ИдентификаторСтроки, ПрекратитьПоиск); 
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьОсновнуюЛабораториюДляФилиала(Филиал, ОсновнаяЛаборатория)
	
	нзУчетнаяПолитикаФилиалов = РегистрыСведений.УчетнаяПолитикаФилиалов.СоздатьНаборЗаписей();
	нзУчетнаяПолитикаФилиалов.Отбор.Филиал.Установить(Филиал);
	нзУчетнаяПолитикаФилиалов.Прочитать();
	
	Если нзУчетнаяПолитикаФилиалов.Количество() = 0 Тогда
		Стр = нзУчетнаяПолитикаФилиалов.Добавить();
		Стр.Филиал = Филиал;
	КонецЕсли;
	
	Для Каждого Стр Из нзУчетнаяПолитикаФилиалов Цикл
		Стр.ОсновнаяЛаборатория = ОсновнаяЛаборатория;
	КонецЦикла;
	
	нзУчетнаяПолитикаФилиалов.Записать();
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПереченьЛабораторий(Команда)
	
	ТаблицаУстановкиПриоритетовКопия = ТаблицаУстановкиПриоритетов;
	ЗаполнитьСписокЛабораторий(ТаблицаУстановкиПриоритетовКопия);
	
	КопироватьДанныеФормы(ТаблицаУстановкиПриоритетовКопия, ТаблицаУстановкиПриоритетов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПриоритетыФилиала(Команда)
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		ПредупреждениеНеВыбранФилиал();
		Возврат;
	КонецЕсли;
	
	Если Не ПредупреждениеПотеряИнформации() Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьПриоритетыФилиала(Филиал);
	ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
	
	ПредложитьПересчитатьКеш = Истина;
	
	СообщитьВыполнениеОперации();
	
КонецПроцедуры

&НаКлиенте
Процедура СообщитьВыполнениеОперации(ТекстСообщения = Неопределено)
	
	Если ТекстСообщения = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Операция выполнена.'");
	КонецЕсли;
	
	ПоказатьПредупреждение(, ТекстСообщения, 15);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьПриоритетыФилиала(Филиал)
	
	НаборЗаписей = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Филиал.Установить(Филиал);
	НаборЗаписей.Записать();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛабораториюИзФилиала(Команда)
	
	Если Не ЗначениеЗаполнено(Филиал) Тогда
		ПредупреждениеНеВыбранФилиал();
		Возврат;
	КонецЕсли;
	
	УдалитьПриоритетыВыборЛаборатории(Филиал);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьЛабораториюИзВсехФилиалов(Команда)
	
	УдалитьПриоритетыВыборЛаборатории();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПриоритетыВыборЛаборатории(Филиал = Неопределено)
	
	Оповещение = Новый ОписаниеОповещения("УдалитьПриоритетыЗавершениеВыбораЛаборатории", ЭтаФорма, Новый Структура("Филиал", Филиал));
	ОткрытьФорму("Справочник.Лаборатории.ФормаВыбора",,ЭтаФорма,Филиал,,,Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПриоритетыЗавершениеВыбораЛаборатории(Лаборатория, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Лаборатория) Тогда
	
		Если Не ПредупреждениеПотеряИнформации() Тогда
			Возврат;
		КонецЕсли;
		
		УдалитьПриоритетыЛаборатории(Лаборатория, ДополнительныеПараметры.Филиал);
		
		ОбновитьТаблицуНоменклатурыИПриоритетовНаКлиенте();
		
		ПредложитьПересчитатьКеш = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПредупреждениеПотеряИнформации()
	
	Если Вопрос(НСтр("ru='Информация будет безвозвратно удалена.'") + " " + НСтр("ru = 'Продолжить?'"), РежимДиалогаВопрос.ОКОтмена, 30, КодВозвратаДиалога.Отмена) = КодВозвратаДиалога.ОК Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьПриоритетыЛаборатории(Лаборатория, Филиал = Неопределено)
	
	// Список удаляемых приоритетов
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ
	             |	ПриоритетыРаспределенияАнализовПоЛабораториям.Филиал КАК Филиал,
	             |	ПриоритетыРаспределенияАнализовПоЛабораториям.Номенклатура КАК Номенклатура,
	             |	ПриоритетыРаспределенияАнализовПоЛабораториям.Приоритет КАК Приоритет,
	             |	ПриоритетыРаспределенияАнализовПоЛабораториям.Лаборатория КАК Лаборатория
	             |ИЗ
	             |	РегистрСведений.ПриоритетыРаспределенияАнализовПоЛабораториям КАК ПриоритетыРаспределенияАнализовПоЛабораториям
	             |ГДЕ
	             |	(&Филиал = НЕОПРЕДЕЛЕНО ИЛИ ПриоритетыРаспределенияАнализовПоЛабораториям.Филиал = &Филиал)
	             |	И ПриоритетыРаспределенияАнализовПоЛабораториям.Лаборатория = &Лаборатория
	             |
	             |УПОРЯДОЧИТЬ ПО
	             |	Номенклатура,
	             |	Приоритет УБЫВ";
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("Лаборатория", Лаборатория);
	ВыборкаЗаписей=Запрос.Выполнить().Выбрать();
	
	СчТр = 50;
	Сч = 0;
	
	НачатьТранзакцию();
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		ПриоритетЗаписиНаУдаление = ВыборкаЗаписей.Приоритет;
		ФилиалЗаписиНаУдаление = ВыборкаЗаписей.Филиал;
		НоменклатураЗаписиНаУдаление = ВыборкаЗаписей.Номенклатура; 		
		// Удаление записи
		Запись = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьМенеджерЗаписи();
		Запись.Филиал = ФилиалЗаписиНаУдаление;
		Запись.Номенклатура = НоменклатураЗаписиНаУдаление;
		Запись.Приоритет = ПриоритетЗаписиНаУдаление;
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
		
		// Изменение приоритетов
		НаборПриоритетовУдаленнойЗаписи = РегистрыСведений.ПриоритетыРаспределенияАнализовПоЛабораториям.СоздатьНаборЗаписей();
		НаборПриоритетовУдаленнойЗаписи.Отбор.Номенклатура.Установить(НоменклатураЗаписиНаУдаление);
		НаборПриоритетовУдаленнойЗаписи.Отбор.Филиал.Установить(ФилиалЗаписиНаУдаление);
		НаборПриоритетовУдаленнойЗаписи.Прочитать();
		
		ЕстьИзменения = Ложь;
		Для Каждого ЗаписьНабора Из НаборПриоритетовУдаленнойЗаписи Цикл 
			Если ЗаписьНабора.Приоритет>ПриоритетЗаписиНаУдаление Тогда
				ЗаписьНабора.Приоритет = ЗаписьНабора.Приоритет-1;
				ЕстьИзменения = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьИзменения Тогда
			НаборПриоритетовУдаленнойЗаписи.Записать();
		КонецЕсли;
		
		Сч = Сч + 1;
		Если Сч = СчТр Тогда
			ЗафиксироватьТранзакцию();
			НачатьТранзакцию();
			Сч = 0;
		КонецЕсли;
		
	КонецЦикла;
	ЗафиксироватьТранзакцию();

КонецПроцедуры

&НаКлиенте
Процедура ПредупреждениеНеВыбранФилиал()
	ПоказатьПредупреждение(, НСтр("ru='Не выбран филиал!'"), 30);
КонецПроцедуры

#КонецОбласти