&НаКлиенте
Перем мВыдаватьПредупреждениеПриЗакрытииФормы;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Проверка, что форма открыта программно
	Если Не Параметры.Свойство("ИмяФайлаСообщенияОбмена") Тогда
		
		НСтрока = НСтр("ru = 'Форма не может быть открыта интерактивно.'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтрока,,,, Отказ);
		Возврат;
		
	КонецЕсли;
	
	// Инициализируем обработку переданными параметрами
	ЗаполнитьЗначенияСвойств(Объект, Параметры,, "СписокИспользуемыхПолей, СписокПолейТаблицы");
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	// Определяем свойство "СписокИспользуемыхПолей"
	ОбработкаОбъект.СписокИспользуемыхПолей.Очистить();
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(Параметры.СписокИспользуемыхПолей, ОбработкаОбъект.СписокИспользуемыхПолей);
	
	// Определяем свойство "СписокПолейТаблицы"
	ОбработкаОбъект.СписокПолейТаблицы.Очистить();
	ОбщегоНазначенияКлиентСервер.ЗаполнитьКоллекциюСвойств(Параметры.СписокПолейТаблицы, ОбработкаОбъект.СписокПолейТаблицы);
	
	// Загружаем таблицу неутвержденных связей
	ТаблицаНеутвержденныхСвязей = ПолучитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаТаблицыНеутвержденныхСвязей);
	УдалитьИзВременногоХранилища(Параметры.АдресВременногоХранилищаТаблицыНеутвержденныхСвязей);
	ОбработкаОбъект.ТаблицаНеутвержденныхСвязей.Загрузить(ТаблицаНеутвержденныхСвязей);
	
	// Получаем таблицу автоматического сопоставления объектов
	ОбработкаОбъект.ВыполнитьАвтоматическоеСопоставлениеОбъектов(Отказ, Параметры.СписокПолейСопоставления);
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	// Устанавливаем заголовки и видимость полей таблицы на форме.
	УстановитьВидимостьПолейТаблицы("ТаблицаАвтоматическиСопоставленныхОбъектов", Параметры.МаксимальноеКоличествоПользовательскихПолей);
	
	// Установка заголока формы
	Заголовок = Параметры.Заголовок;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Объект.ТаблицаАвтоматическиСопоставленныхОбъектов.Количество() = 0
		Или мВыдаватьПредупреждениеПриЗакрытииФормы <> Истина Тогда
		Возврат;
	КонецЕсли;
			
	Отказ = Истина;
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	ПоказатьПредупреждение(, НСтр("ru = 'Форма содержит данные автоматического сопоставления. Действие отменено.'"));


КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура Применить(Команда)
	
	мВыдаватьПредупреждениеПриЗакрытииФормы = Ложь;
	
	// Контекстный вызов сервера
	Закрыть(ПоместитьТаблицуАвтоматическиСопоставленныхОбъектовВоВременноеХранилище());
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	мВыдаватьПредупреждениеПриЗакрытииФормы = Ложь;
	
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	УстановитьПометкиНаСервере(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	УстановитьПометкиНаСервере(Истина);
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ
#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПоместитьТаблицуАвтоматическиСопоставленныхОбъектовВоВременноеХранилище()
	
	Возврат ПоместитьВоВременноеХранилище(Объект.ТаблицаАвтоматическиСопоставленныхОбъектов.Выгрузить(Новый Структура("Пометка", Истина), "УникальныйИдентификаторПриемника, УникальныйИдентификаторИсточника, ТипИсточника, ТипПриемника"));
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьПолейТаблицы(Знач ИмяТаблицыФормы, Знач МаксимальноеКоличествоПользовательскихПолей)
	
	ИмяПоляИсточника = СтрЗаменить("#ИмяТаблицыФормы#ИсточникПолеNN","#ИмяТаблицыФормы#", ИмяТаблицыФормы);
	ИмяПоляПриемника = СтрЗаменить("#ИмяТаблицыФормы#ПриемникПолеNN","#ИмяТаблицыФормы#", ИмяТаблицыФормы);
	
	// Снимаем видимость всех полей таблицы сопоставления
	Для НомерПоля = 1 По МаксимальноеКоличествоПользовательскихПолей Цикл
		
		ПолеИсточника = СтрЗаменить(ИмяПоляИсточника, "NN", Строка(НомерПоля));
		ПолеПриемника = СтрЗаменить(ИмяПоляПриемника, "NN", Строка(НомерПоля));
		
		ЭтаФорма.Элементы[ПолеИсточника].Видимость = Ложь;
		ЭтаФорма.Элементы[ПолеПриемника].Видимость = Ложь;
		
	КонецЦикла;
	
	// Устанавливаем видимость полей таблицы сопоставления выбранных пользователем.
	Для Каждого Элемент ИЗ Объект.СписокИспользуемыхПолей Цикл
		
		НомерПоля = Объект.СписокИспользуемыхПолей.Индекс(Элемент) + 1;
		
		ПолеИсточника = СтрЗаменить(ИмяПоляИсточника, "NN", Строка(НомерПоля));
		ПолеПриемника = СтрЗаменить(ИмяПоляПриемника, "NN", Строка(НомерПоля));
		
		// Устанавливаем видимость полей
		ЭтаФорма.Элементы[ПолеИсточника].Видимость = Элемент.Пометка;
		ЭтаФорма.Элементы[ПолеПриемника].Видимость = Элемент.Пометка;
		
		// Устанавливаем заголовки полей
		ЭтаФорма.Элементы[ПолеИсточника].Заголовок = Элемент.Значение;
		ЭтаФорма.Элементы[ПолеПриемника].Заголовок = Элемент.Значение;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкиНаСервере(Пометка)
	
	ТаблицаЗначений = Объект.ТаблицаАвтоматическиСопоставленныхОбъектов.Выгрузить();
	
	ТаблицаЗначений.ЗаполнитьЗначения(Пометка, "Пометка");
	
	Объект.ТаблицаАвтоматическиСопоставленныхОбъектов.Загрузить(ТаблицаЗначений);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ИНИЦИАЛИЗАЦИЯ

мВыдаватьПредупреждениеПриЗакрытииФормы = Истина;

#КонецОбласти
