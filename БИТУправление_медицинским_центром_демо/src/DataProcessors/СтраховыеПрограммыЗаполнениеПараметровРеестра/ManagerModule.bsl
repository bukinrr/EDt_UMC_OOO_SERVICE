#Область ПрограммныйИнтерфейс

// Получить диагнозы приема в порядке приоритетов.
//
// Параметры:
//  Прием							 - ДокументСсылка.Прием - прием 
//  ПриоритетыКлассификацийДиагнозов - Строка - строка разделенная запятыми .
// 
// Возвращаемое значение:
//  ТаблицаЗначений - диагнозы приема.
//
Функция ПолучитьДиагнозыПриема(Прием, ПриоритетыКлассификацийДиагнозов = Неопределено) Экспорт
	
	Диагнозы = Новый ТаблицаЗначений;
	Диагнозы.Колонки.Добавить("Диагноз");
	Диагнозы.Колонки.Добавить("Характер");
	Диагнозы.Колонки.Добавить("Приоритет");
	Диагнозы.Колонки.Добавить("Зуб");
	Диагнозы.Колонки.Добавить("СегментЗуба");
	
	пчКлассификация = Перечисления.КлассификацииДиагнозов;
	
	ЕстьЗубыВДиагнозе = МедицинскаяДеятельностьПовтИсп.ЕстьЗубыВДиагнозахПриемов();
	
	// Подготовка данных расчета приоритетов. Создаем структуру с весами для каждой классификации диагноза.
	ПриоритетыКлассификаций = Новый Структура("Классификация1, Классификация2, Классификация3", 0,0,0);
	
	Если ЗначениеЗаполнено(ПриоритетыКлассификацийДиагнозов) Тогда
		ПорядокКлассификаций = СтрРазделить(ПриоритетыКлассификацийДиагнозов, ",", Ложь);
		Для Каждого Классификация Из ПорядокКлассификаций Цикл
			Если ПриоритетыКлассификаций.Свойство(Классификация) Тогда
				ПриоритетыКлассификаций[Классификация] = 10 / 10 * (ПорядокКлассификаций.Найти(Классификация) + 1);  // От 1 до 0,01.
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЗначенияПриоритетов = Новый Соответствие;
	ЗначенияПриоритетов.Вставить(пчКлассификация.ПустаяСсылка(), 9);
	
	ЗначенияПриоритетов.Вставить(пчКлассификация.Окончательный, 1);
	ЗначенияПриоритетов.Вставить(пчКлассификация.Предварительный, 2);
	
	ЗначенияПриоритетов.Вставить(пчКлассификация.Острое, 1);
	ЗначенияПриоритетов.Вставить(пчКлассификация.ОбострениеХронического, 2);
	ЗначенияПриоритетов.Вставить(пчКлассификация.ХроническоеВпервыеВыявленное, 3);
	ЗначенияПриоритетов.Вставить(пчКлассификация.ХроническоеРанееВыявленное, 4);
	
	ЗначенияПриоритетов.Вставить(пчКлассификация.ОсновноеЗаболевание, 1);
	ЗначенияПриоритетов.Вставить(пчКлассификация.ОсложнениеОсновногоЗаболевания, 2);
	ЗначенияПриоритетов.Вставить(пчКлассификация.СопутствующееЗаболевание, 3);
	
	ТипЧисло = Новый ОписаниеТипов("Число");
	
	// Перебор диагнозов приёма.
	Для Каждого СтрокаДиагноза Из Прием.Диагнозы Цикл
		
		СтрокаТаблицы = Диагнозы.Добавить();
		СтрокаТаблицы.Диагноз = СтрокаДиагноза.Диагноз;
		СтрокаТаблицы.Характер = СтрокаДиагноза.Классификация2;
		
		Если ЕстьЗубыВДиагнозе Тогда
			СтрокаТаблицы.Зуб = СтрокаДиагноза["ЗубВКарте"];
			СтрокаТаблицы.СегментЗуба = СтрокаДиагноза["СегментВЗубе"];
		КонецЕсли;
		
		ПриоритетПоКлассификация1 = ТипЧисло.ПривестиЗначение(ЗначенияПриоритетов.Получить(СтрокаДиагноза.Классификация1));
		ПриоритетПоКлассификация2 = ТипЧисло.ПривестиЗначение(ЗначенияПриоритетов.Получить(СтрокаДиагноза.Классификация2));
		ПриоритетПоКлассификация3 = ТипЧисло.ПривестиЗначение(ЗначенияПриоритетов.Получить(СтрокаДиагноза.Классификация3));
		
		СтрокаТаблицы.Приоритет = ПриоритетПоКлассификация1 * ПриоритетыКлассификаций.Классификация1
								+ ПриоритетПоКлассификация2 * ПриоритетыКлассификаций.Классификация2
								+ ПриоритетПоКлассификация3 * ПриоритетыКлассификаций.Классификация3;
	КонецЦикла;
	
	Диагнозы.Сортировать("Приоритет");
	
	Возврат Диагнозы;
	
КонецФункции

// Порядок способов авто определения.
// 
// Возвращаемое значение:
//  Структура.
//
Функция ПолучитьПорядокСпособовАвтоОпределения() Экспорт
	
	пчСпособыПриемов = Перечисления.СпособыОпределенияПриемаДляПродажПоСтраховымПрограммам;
	пчСпособыДиагнозов = Перечисления.СпособыОпределенияДиагнозаДляПродажПоСтраховымПрограммам;
	
	Результат = Новый Структура("Диагнозы, Приемы", Новый Массив, Новый Массив);
	
	Результат.Приемы.Добавить(пчСпособыПриемов.ПоОбщейЗаявке);
	Результат.Приемы.Добавить(пчСпособыПриемов.ПоДатеПосещения);
	Результат.Приемы.Добавить(пчСпособыПриемов.ПоПриемамПоследнихДней);
	
	Результат.Диагнозы.Добавить(пчСпособыДиагнозов.ЕдинственныйВПриеме);
	Результат.Диагнозы.Добавить(пчСпособыДиагнозов.ОстрейшийВПриеме);
	Результат.Диагнозы.Добавить(пчСпособыДиагнозов.ОстрейшийВПриемеИНаиболееОсновной);
	
	Возврат Результат;
	
КонецФункции

// Изменяет признак "Проверено" всем строкам динамического списка, из которого получены схема и настройки СКД.
//
// Параметры:
//  Схема		 - СхемаКомпоновкиДанных - схема
//  Настройки	 - Структура - структура настроек
//  Проверено	 - Булево - проверено ли.
//
Процедура ПроставитьПроверенностьСтрок(Схема, Настройки, Проверено) Экспорт
	
	#Область ПодготовкаДанных
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Документ",	Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("КлючСтроки",	Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("ИмяТЧ",		Настройки);
	
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проверено");
	ЭлементОтбора.ПравоеЗначение = Не Проверено;
	ЭлементОтбора.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДанныеЗаписей = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	#КонецОбласти
	
	// Обрабатываем полученные записи.
	Запись = РегистрыСведений.ПараметрыПродажПоСтраховымПрограммам.СоздатьМенеджерЗаписи();
	Для Каждого ИзмеренияЗаписи Из ДанныеЗаписей Цикл
		ЗаполнитьЗначенияСвойств(Запись, ИзмеренияЗаписи);
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Запись.Проверено = Проверено;
			Запись.Записать(Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьВыбранноеПолеСтруктуреКомпоновки(Поле, Настройки)
	
	Выбор = Настройки.Структура[0].Выбор;
	Элемент = Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	Элемент.Поле = Новый ПолеКомпоновкиДанных(Поле);
	
КонецПроцедуры

Процедура ВыполнитьАвтоОпределениеПараметровПоНастройкамСписка (Схема, Настройки,
																ДопустимыеСпособыДляПриема = Неопределено, 
																ДопустимыеСпособыДляДиагноза = Неопределено,
																Документ = Неопределено, ПерезаполнятьДанные = Ложь) Экспорт
	
	#Область ПодготовкаДанных
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Документ",	Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("КлючСтроки",	Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("ИмяТЧ",		Настройки);
	
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Диагноз",		Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Зуб",			Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("СегментЗуба",	Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Прием",		Настройки);
	ДобавитьВыбранноеПолеСтруктуреКомпоновки("Сотрудник",	Настройки);
	
	ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Проверено");
	ЭлементОтбора.ПравоеЗначение = Ложь;
	ЭлементОтбора.Использование = Истина;
	
	Если ЗначениеЗаполнено(Документ) Тогда
		ЭлементОтбора = Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Документ");
		ЭлементОтбора.ПравоеЗначение = Документ;
		ЭлементОтбора.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ДанныеЗаписей = ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	#КонецОбласти
	
	// Обрабатываем полученные записи.
	ВыполнитьАвтоОпределениеПараметров(ДанныеЗаписей, ДопустимыеСпособыДляПриема, ДопустимыеСпособыДляДиагноза, ПерезаполнятьДанные);
	
КонецПроцедуры

// Автоопределение:
// 1. Перебираем способы определения прёмов
// 1.0.5 только для тех доков, у которых есть записи без приёма
// 1.1. документ - определение - запись (только записи без приёма).
//
// 2. Перебираем способы диагнозов
// 2.1 только тех, у кого есть записи с заполненным приёмом
// 2.2. документ-определение-запись (только с приёмом без диагноза.

Процедура ВыполнитьАвтоОпределениеПараметров(ДанныеЗаписей, ДопустимыеСпособыДляПриема, ДопустимыеСпособыДляДиагноза, ПерезаполнятьДанные)
	
	СпособыОпределения = ПолучитьПорядокСпособовАвтоОпределения();
	
	НаборЗаписей = РегистрыСведений.ПараметрыПродажПоСтраховымПрограммам.СоздатьНаборЗаписей();
	
	ОбработанныеСтроки = Новый Массив;
	ОбработанныеДокументы = Новый Массив;
	
	ТаблицаДокументыЗаписей = ДанныеЗаписей.Скопировать(,"Документ");
	ТаблицаДокументыЗаписей.Свернуть("Документ");
	ДокументыЗаписей = ТаблицаДокументыЗаписей.ВыгрузитьКолонку("Документ");
	
	Отбор = Новый Структура("Документ");
	
	// Определяем, требуется ли перезаполнять уже заполненные данные
	ПерезаполнятьДанныеПриемов	 = ПерезаполнятьДанные И (ДопустимыеСпособыДляПриема	= Неопределено Или ДопустимыеСпособыДляПриема.Количество() <> 0);
	ПерезаполнятьДанныеДиагнозов = ПерезаполнятьДанные И (ДопустимыеСпособыДляДиагноза  = Неопределено Или ДопустимыеСпособыДляДиагноза.Количество() <> 0);
	
	// Перебор способов определения приёма.
	Для Каждого СпособОпределения Из СпособыОпределения.Приемы Цикл
		Если ДопустимыеСпособыДляПриема <> Неопределено
			И ДопустимыеСпособыДляПриема.Найти(СпособОпределения) = Неопределено
		Тогда
			Продолжить;
		КонецЕсли;
		
		// Перебор документов
		Для Каждого Документ Из ДокументыЗаписей Цикл
			Если Не ЗначениеЗаполнено(Документ)
				Или ОбработанныеДокументы.Найти(Документ) <> Неопределено
			Тогда
				Продолжить;
			КонецЕсли;
			
			// Определяем приём только тем документам, у которых есть записи без него.
			Отбор.Документ = Документ;
			СтрокиДокумента = ДанныеЗаписей.НайтиСтроки(Отбор);
			СтрокиКЗаполнению = Новый Массив;
			Для Каждого СтрокаДокумента Из СтрокиДокумента Цикл
				Если	(Не ЗначениеЗаполнено(СтрокаДокумента.Диагноз) И Не ЗначениеЗаполнено(СтрокаДокумента.Прием))
					Или	(Не ЗначениеЗаполнено(СтрокаДокумента.Диагноз) И ПерезаполнятьДанные)
					Или	ПерезаполнятьДанныеПриемов
				Тогда
					СтрокиКЗаполнению.Добавить(СтрокаДокумента);
				КонецЕсли;
			КонецЦикла;
			
			Если СтрокиКЗаполнению.Количество() > 0 Тогда
				РезультатОпределения = ВыполнитьАвтоОпределениеПриемаДокументаПоСпособу(СпособОпределения, Документ, СтрокиКЗаполнению);
				
				// Отрабатываем успешное автоопределение.
				Если ВыполнитьАвтоОпределениеПриемаДокументаПоСпособу(СпособОпределения, Документ, СтрокиКЗаполнению) Тогда
					НаборЗаписей.Отбор.Документ.Установить(Документ);
					НаборЗаписей.Прочитать();
					Для Каждого Запись Из НаборЗаписей Цикл 
						Для Каждого ЗаполненнаяСтрока Из СтрокиКЗаполнению Цикл
							Если Запись.КлючСтроки = ЗаполненнаяСтрока.КлючСтроки
								И Запись.ИмяТЧ = ЗаполненнаяСтрока.ИмяТЧ
							Тогда
								Запись.Прием = ЗаполненнаяСтрока.Прием;
								Запись.СпособОпределенияПриема = СпособОпределения;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					НаборЗаписей.Записать(Истина);
					
					ОбработанныеДокументы.Добавить(Документ);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ОбработанныеДокументы.Очистить();
	
	// Перебор способов определения диагноза (зуба, сегмента зуба).
	Для Каждого СпособОпределения Из СпособыОпределения.Диагнозы Цикл
		Если ДопустимыеСпособыДляДиагноза <> Неопределено
			И ДопустимыеСпособыДляДиагноза.Найти(СпособОпределения) = Неопределено
		Тогда
			Продолжить;
		КонецЕсли;
		
		// Перебор документов
		Для Каждого Документ Из ДокументыЗаписей Цикл
			Если Не ЗначениеЗаполнено(Документ)
				Или ОбработанныеДокументы.Найти(Документ) <> Неопределено
			Тогда
				Продолжить;
			КонецЕсли;
			
			// Определяем диагноз только тем документам, у которых есть записи без него.
			Отбор.Документ = Документ;
			СтрокиДокумента = ДанныеЗаписей.НайтиСтроки(Отбор);
			СтрокиКЗаполнению = Новый Массив;
			Для Каждого СтрокаДокумента Из СтрокиДокумента Цикл
				Если ЗначениеЗаполнено(СтрокаДокумента.Прием)
					И (Не ЗначениеЗаполнено(СтрокаДокумента.Диагноз) Или ПерезаполнятьДанныеДиагнозов)
				Тогда
					СтрокиКЗаполнению.Добавить(СтрокаДокумента);
				КонецЕсли;
			КонецЦикла;
			
			Если СтрокиКЗаполнению.Количество() > 0 Тогда
				
				// Отрабатываем успешное автоопределение.
				Если ВыполнитьАвтоОпределениеДиагнозаДокументаПоСпособу(СпособОпределения, Документ, СтрокиКЗаполнению) Тогда
					НаборЗаписей.Отбор.Документ.Установить(Документ);
					НаборЗаписей.Прочитать();
					Для Каждого Запись Из НаборЗаписей Цикл 
						Для Каждого ЗаполненнаяСтрока Из СтрокиКЗаполнению Цикл
							Если Запись.КлючСтроки = ЗаполненнаяСтрока.КлючСтроки
								И Запись.ИмяТЧ = ЗаполненнаяСтрока.ИмяТЧ
							Тогда
								Запись.Диагноз = ЗаполненнаяСтрока.Диагноз;
								Запись.Зуб = ЗаполненнаяСтрока.Зуб;
								Запись.СегментЗуба = ЗаполненнаяСтрока.СегментЗуба;
								Запись.СпособОпределенияДиагноза = СпособОпределения;
							КонецЕсли;
						КонецЦикла;
					КонецЦикла;
					НаборЗаписей.Записать(Истина);
					
					ОбработанныеДокументы.Добавить(Документ);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ВыполнитьАвтоОпределениеПриемаДокументаПоСпособу(СпособОпределения, Документ, ИзмеренияЗаписей)
	
	// Ставится в Истина, если хотя бы для одной строки что-то нашлось.
	РезультатОпределения = Ложь;
	
	пчСпособыПриемов = Перечисления.СпособыОпределенияПриемаДляПродажПоСтраховымПрограммам;

	Если СпособОпределения = пчСпособыПриемов.ПоОбщейЗаявке Тогда
		РезультатОпределения = ВыполнитьАвтоОпределениеПриемаДокументаПоОбщейЗаявке(Документ, ИзмеренияЗаписей);
	ИначеЕсли СпособОпределения = пчСпособыПриемов.ПоДатеПосещения Тогда
		РезультатОпределения = ВыполнитьАвтоОпределениеПриемаДокументаПоДатеПосещения(Документ, ИзмеренияЗаписей);
	ИначеЕсли СпособОпределения = пчСпособыПриемов.ПоПриемамПоследнихДней Тогда
		РезультатОпределения = ВыполнитьАвтоОпределениеПриемаДокументаПоПриемамПоследнихДней(Документ, ИзмеренияЗаписей);
	КонецЕсли;
	
	Возврат РезультатОпределения;
	
КонецФункции

Функция ВыполнитьАвтоОпределениеДиагнозаДокументаПоСпособу(СпособОпределения, Документ, ИзмеренияЗаписей)
	
	РезультатОпределения = Ложь;
	
	// При появлении специфичных способов определения, их следует разместить в начале оператора
	// Если СпособОпределения = ... с уходом в ветке Иначе в текущий код.
	РезультатОпределения = ВыполнитьАвтоОпределениеДиагнозаДокументаПоПростымПриоритетам(ИзмеренияЗаписей, СпособОпределения);
	
	Возврат РезультатОпределения;
	
КонецФункции

Функция ВыполнитьАвтоОпределениеПриемаДокументаПоОбщейЗаявке(Документ, ИзмеренияЗаписей)
	
	РезультатОпределения = Ложь;
	
	Заявка = Документ.ДокументОснование;
	Клиент = Документ.Клиент;
	
	Если ЗначениеЗаполнено(Заявка)
		И ТипЗнч(Заявка) = Тип("ДокументСсылка.Заявка")
	Тогда
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументОснование", Заявка);
		Запрос.УстановитьПараметр("Клиент", Клиент);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Прием.Ссылка,
		|	Прием.Врач
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	Прием.Клиент = &Клиент
		|	И Прием.ДокументОснование = &ДокументОснование
		|	И Прием.Проведен
		|	И НЕ Прием.ПометкаУдаления"
		;
		Выб = Запрос.Выполнить().Выбрать();
		Пока Выб.Следующий() Цикл
			Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
				Если СтрокаЗаписи.Сотрудник = Выб.Врач Тогда
					РезультатОпределения = Истина;
					СтрокаЗаписи.Прием = Выб.Ссылка;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат РезультатОпределения;
	
КонецФункции

Функция ВыполнитьАвтоОпределениеПриемаДокументаПоДатеПосещения(Документ, ИзмеренияЗаписей)
	
	РезультатОпределения = Ложь;
	
	ДатаПосещения = НачалоДня(Документ.Дата);
	Клиент = Документ.Клиент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаПосещения", ДатаПосещения);
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Прием.Ссылка,
	|	Прием.Врач КАК Врач
	|ИЗ
	|	Документ.Прием КАК Прием
	|ГДЕ
	|	НАЧАЛОПЕРИОДА(Прием.Дата, ДЕНЬ) = &ДатаПосещения
	|	И Прием.Клиент = &Клиент
	|	И Прием.Проведен
	|	И НЕ Прием.ПометкаУдаления
	|ИТОГИ ПО
	|	Врач"
	;
	ВыбВрач = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыбВрач.Следующий() Цикл
		Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
			Если СтрокаЗаписи.Сотрудник = ВыбВрач.Врач Тогда
				Выб = ВыбВрач.Выбрать();
				Если Выб.Количество() = 1 Тогда
					Выб.Следующий();
					РезультатОпределения = Истина;
					СтрокаЗаписи.Прием = Выб.Ссылка;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат РезультатОпределения;
	
КонецФункции

Функция ВыполнитьАвтоОпределениеПриемаДокументаПоПриемамПоследнихДней(Документ, ИзмеренияЗаписей)
	
	РезультатОпределения = Ложь;
	
	РазбегПосещений = 7; // Дней.
	
	ДатаПосещения = НачалоДня(Документ.Дата);
	Клиент = Документ.Клиент;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаПосещения", ДатаПосещения);
	Запрос.УстановитьПараметр("ДатаНач", ДатаПосещения - 7 * 86400);
	Запрос.УстановитьПараметр("ДатаКон", КонецДня(ДатаПосещения + 7 * 86400));
	Запрос.УстановитьПараметр("Клиент", Клиент);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Прием.Ссылка,
	|	Прием.Врач,
	|	ВЫБОР
	|		КОГДА Прием.Дата >= &ДатаПосещения
	|			ТОГДА РАЗНОСТЬДАТ(Прием.Дата, &ДатаПосещения, ДЕНЬ)
	|		ИНАЧЕ РАЗНОСТЬДАТ(&ДатаПосещения, Прием.Дата, ДЕНЬ)
	|	КОНЕЦ КАК ДавностьПосещения
	|ИЗ
	|	Документ.Прием КАК Прием
	|ГДЕ
	|	Прием.Дата МЕЖДУ &ДатаНач И &ДатаКон
	|	И Прием.Клиент = &Клиент
	|	И Прием.Проведен
	|	И НЕ Прием.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДавностьПосещения"
	;
	Выб = Запрос.Выполнить().Выбрать();
	Пока Выб.Следующий() Цикл
		Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
			Если Не ЗначениеЗаполнено(СтрокаЗаписи.Прием)
				И СтрокаЗаписи.Сотрудник = Выб.Врач
			Тогда
				РезультатОпределения = Истина;
				СтрокаЗаписи.Прием = Выб.Ссылка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат РезультатОпределения;
	
КонецФункции

Функция ВыполнитьАвтоОпределениеДиагнозаДокументаПоПростымПриоритетам(ИзмеренияЗаписей, СпособОпределения)
	
	РезультатОпределения = Ложь;
	
	пчСпособыДиагнозов = Перечисления.СпособыОпределенияДиагнозаДляПродажПоСтраховымПрограммам;
	
	// Составляем перечень всех различных приёмов в обрабатываемых строках.
	Приемы = Новый Массив;
	Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
		Если ЗначениеЗаполнено(СтрокаЗаписи.Прием)
			И Приемы.Найти(СтрокаЗаписи.Прием) = Неопределено
		Тогда
			Приемы.Добавить(СтрокаЗаписи.Прием);
		КонецЕсли;
	КонецЦикла;
	
	// Заполнение по данным приёмов строк измерений записей.
	Для Каждого Прием Из Приемы Цикл
		
		Если СпособОпределения = пчСпособыДиагнозов.ЕдинственныйВПриеме Тогда
			ВыполнитьАвтоОпределениеДиагнозаДокументаЕдинственныйВПриеме(ИзмеренияЗаписей, Прием, РезультатОпределения);
			
		ИначеЕсли СпособОпределения = пчСпособыДиагнозов.ОстрейшийВПриеме Тогда
			ВыполнитьАвтоОпределениеДиагнозаДокументаОсновнойВПриеме(ИзмеренияЗаписей, Прием, "Классификация2", РезультатОпределения);
			
		ИначеЕсли СпособОпределения = пчСпособыДиагнозов.ОстрейшийВПриемеИНаиболееОсновной Тогда
			ВыполнитьАвтоОпределениеДиагнозаДокументаОсновнойВПриеме(ИзмеренияЗаписей, Прием, "Классификация2,Классификация3", РезультатОпределения);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РезультатОпределения;
	
КонецФункции

Процедура ВыполнитьАвтоОпределениеДиагнозаДокументаЕдинственныйВПриеме(ИзмеренияЗаписей, Прием, РезультатОпределения)
	
	Диагнозы = ПолучитьДиагнозыПриема(Прием);
	Если Диагнозы.Количество() = 1 Тогда
		РезультатОпределения = Истина;
		Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
			Если СтрокаЗаписи.Прием = Прием Тогда
				ЗаполнитьДиагнозСтрокиЗаписи(СтрокаЗаписи, Диагнозы[0]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьАвтоОпределениеДиагнозаДокументаОсновнойВПриеме(ИзмеренияЗаписей, Прием, Приоритеты, РезультатОпределения)
	
	Диагнозы = ПолучитьДиагнозыПриема(Прием, Приоритеты);
	
	Если Диагнозы.Количество() = 1
		Или (Диагнозы.Количество() > 1 И Диагнозы[0].Приоритет <> Диагнозы[1].Приоритет) // Если в топе не два равноценных.
	Тогда
		РезультатОпределения = Истина;
		Для Каждого СтрокаЗаписи Из ИзмеренияЗаписей Цикл
			Если СтрокаЗаписи.Прием = Прием Тогда
				ЗаполнитьДиагнозСтрокиЗаписи(СтрокаЗаписи, Диагнозы[0]);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДиагнозСтрокиЗаписи(СтрокаЗаписи, Данные)
	
	СтрокаЗаписи.Диагноз = Данные.Диагноз;
	Если МедицинскаяДеятельностьПовтИсп.ЕстьЗубыВДиагнозахПриемов() И ЗначениеЗаполнено(Данные.Зуб) Тогда
		СтрокаЗаписи.Зуб = Данные.Зуб;
		СтрокаЗаписи.СегментЗуба = Данные.СегментЗуба;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
