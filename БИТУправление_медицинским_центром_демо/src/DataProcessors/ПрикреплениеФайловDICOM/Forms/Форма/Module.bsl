///////////////////////////////////////////////////////////////
// Методы формы
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЭтаФорма.МедицинскаяКарта = Параметры.МедицинскаяКарта;
	МедКарта = СтрЗаменить(Параметры.МедицинскаяКарта," ","");
	НовоеСлово = DICOMРаботаСДрайвером.ПрямаяТранслитерация(МедКарта);
	ЭтаФорма.МедицинскаяКарта = НовоеСлово;
	
	Если Параметры.Свойство("ИдентификаторыИсследований") Тогда
		Для каждого ИД из Параметры.ИдентификаторыИсследований Цикл
			нУИД = ИдентификаторыИсследований.Добавить();
			нУИД.StudyUID = ИД;
		КонецЦикла;
	КонецЕсли;
	
	
	ИспользоватьОбщуюФормуПросмотраИзображений = (Метаданные.ОбщиеФормы.Найти("ФормаПросмотраИзображений") <> Неопределено);
	Элементы.ФормаКомандаОткрытьИзображение.Видимость = ИспользоватьОбщуюФормуПросмотраИзображений;
	
	Если Параметры.Свойство("Пациент") Тогда
		ЭтаФорма.Пациент = Параметры.Пациент;
	КонецЕсли;
	
	НастройкиDICOM = DICOMРаботаСДрайвером.ПолучитьНастройки("STORESCP_КаталогФайлов, STORESCP_ИспользоватьКлиент");
	
	Если НастройкиDICOM.STORESCP_ИспользоватьКлиент = Истина Тогда
		НастройкиDICOM_КаталогФайлов = НастройкиDICOM.STORESCP_КаталогФайлов;
	Иначе
		Попытка
			НастройкиDICOM_КаталогФайлов = Константы.STORESCP_КаталогФайлов.Получить();
		Исключение
			НастройкиDICOM_КаталогФайлов = Неопределено;
		КонецПопытки;
	КонецЕсли;
	
	НастройкиDICOM_КаталогФайловНаКлиенте = НастройкиDICOM.STORESCP_ИспользоватьКлиент;
	Если НастройкиDICOM_КаталогФайловНаКлиенте = Ложь Тогда
		Если ЗначениеЗаполнено(НастройкиDICOM_КаталогФайлов) Тогда
			ОбработатьФайлыВКаталогеХранилищаНаСервере();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = ""Необходимо настроить каталог файлов хранилища DICOM. Обратитесь к администратору"""));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если  НастройкиDICOM_КаталогФайловНаКлиенте = Истина Тогда
		Если ЗначениеЗаполнено(НастройкиDICOM_КаталогФайлов) Тогда
			ОбработатьФайлыВКаталогеХранилища();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = ""Необходимо настроить каталог файлов хранилища DICOM. Обратитесь к администратору"""));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////////////////
// Методы элементов формы
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлыПриАктивизацииСтроки(Элемент)
	ТекДанные =Элементы.ДеревоФайловПациента.ТекущиеДанные;
	Если ФлагПоказыватьПревью = Истина И ТекДанные <> Неопределено Тогда
		УстановитьАдресХранилищаУзла(ТекДанные);
		ПревьюКартинки = ТекДанные.АдресХранилища;
	Иначе
		ПревьюКартинки = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФлагПоказыватьПревьюПриИзменении(Элемент)
	ФайлыПриАктивизацииСтроки(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьТекущееИзбражение();
КонецПроцедуры

&НаКлиенте
Процедура ФайлыФлагПриИзменении(Элемент)
	УзелДерева = Элементы.ДеревоФайловПациента.ТекущиеДанные;
	Если НЕ УзелДерева = Неопределено Тогда
		УстановитьВыделениеУзла(УзелДерева, УзелДерева.Выбран);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

///////////////////////////////////////////////////////////////
// Методы команд формы
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВсе(Команда)
	УзелДерева = Неопределено;
	Пока РаботаСКоллекциями.ОбходДерева_Следующий(ЭтаФорма.ДеревоФайловПациента, УзелДерева) Цикл
		УзелДерева.Выбран = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьВыделение(Команда)
	
	УзелДерева = Неопределено;
	Пока РаботаСКоллекциями.ОбходДерева_Следующий(ЭтаФорма.ДеревоФайловПациента, УзелДерева) Цикл
		УзелДерева.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры


&НаКлиенте
Процедура ВыбратьФайлы(Команда)
	ПараметрыВыбора = Новый Массив();
	УзелДерева = Неопределено;
	Пока РаботаСКоллекциями.ОбходДерева_Следующий(ЭтаФорма.ДеревоФайловПациента, УзелДерева) Цикл
		Если УзелДерева.Выбран = Истина И ЗначениеЗаполнено(УзелДерева.АдресХранилища) Тогда
			СтрПараметров = Новый Структура(
			"АдресХранилища, ПутьКФайлу, ПолноеИмяФайла,ИмяФайла,
			|Размер, Расширение,ВремяИзменения,УниверсальноеВремяИзменения"
			);
			ЗаполнитьЗначенияСвойств(СтрПараметров, УзелДерева);
			ПараметрыВыбора.Добавить(СтрПараметров);
		КонецЕсли;
	КонецЦикла;
	ЭтаФорма.Закрыть(ПараметрыВыбора);
КонецПроцедуры

&НаКлиенте
Процедура ПеречитатьДанные(Команда)
	Если  НастройкиDICOM_КаталогФайловНаКлиенте = Ложь Тогда
		Если ЗначениеЗаполнено(НастройкиDICOM_КаталогФайлов) Тогда
			ВызватьССервера_ОбработатьФайлыВКаталогеХранилища();
		Иначе
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = ""Необходимо настроить каталог файлов хранилища DICOM. Обратитесь к администратору"""));
		КонецЕсли;
	Иначе
		ОбработатьФайлыВКаталогеХранилища();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИзображение(Команда)
	ОткрытьТекущееИзбражение();
КонецПроцедуры

#КонецОбласти

//////////////////////////////////////////////////////////////
// Вспомогательные методы
#Область СлужебныйПрограммныйИнтерфейс

&НаСервере
Процедура ВызватьССервера_ОбработатьФайлыВКаталогеХранилища()
	ОбработатьФайлыВКаталогеХранилищаНаСервере();		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьТекущееИзбражение()
	ТекДанные =Элементы.ДеревоФайловПациента.ТекущиеДанные;
	Если ИспользоватьОбщуюФормуПросмотраИзображений И ТекДанные <> Неопределено Тогда
		ИмяОткрываемойФормы = "ОбщаяФорма.ФормаПросмотраИзображений";
		ПараметрыОткрытия = Новый Структура;
		СвойстваФайла = Новый Структура;
		СвойстваФайла.Вставить("ИмяФайла",ТекДанные.ИмяФайла);
		СвойстваФайла.Вставить("Расширение",ТекДанные.Расширение);
		Если НЕ ЗначениеЗаполнено(ТекДанные.АдресХранилища) И ЗначениеЗаполнено(ТекДанные.ПутьКФайлу) Тогда
			Ответ = Истина;
			ТекДанные.АдресХранилища = ПоместитьВХранилище(ТекДанные.ПутьКФайлу);
		КонецЕсли;
		ПараметрыОткрытия.Вставить("Ключ",ТекДанные.АдресХранилища);
		ПараметрыОткрытия.Вставить("СвойстваФайла",СвойстваФайла);
		ОткрытьФормуМодально(ИмяОткрываемойФормы, ПараметрыОткрытия);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВыделениеУзла(Узел, Выбран)
	Узел.Выбран = Выбран;
	Если Выбран = Истина Тогда
		УстановитьАдресХранилищаУзла(Узел)
	КонецЕсли;
	ЭлементыУзла = Узел.ПолучитьЭлементы();
	Если ЭлементыУзла.Количество() > 0 Тогда
		Для каждого Узе Из ЭлементыУзла Цикл
			УстановитьВыделениеУзла(Узе, Выбран);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПоместитьВХранилище(ПутьКФайлу) 
	ЗагружаемыйФайл =  Новый ДвоичныеДанные(ПутьКФайлу);
	Адрес = ПоместитьВоВременноеХранилище(ЗагружаемыйФайл, Новый УникальныйИдентификатор());
	Возврат Адрес;
КонецФункции

&НаКлиенте
Процедура УстановитьАдресХранилищаУзла(Узел)
	
	Если Узел <> Неопределено Тогда
		Если НЕ ЗначениеЗаполнено(Узел.АдресХранилища) И ЗначениеЗаполнено(Узел.ПутьКФайлу) Тогда
			Узел.АдресХранилища = ПоместитьВХранилище(Узел.ПутьКФайлу);
		Конецесли;
	КонецЕсли;
	
КонецПроцедуры



#Если НаКлиенте Тогда
&НаКлиенте 
Процедура ОбработатьФайлыВКаталогеХранилища()
#Иначе
&НаСервере
Процедура ОбработатьФайлыВКаталогеХранилищаНаСервере()
#КонецЕсли
	мКаталогиРезультатов = Новый Массив(); // обработанные результаты
	ТаблицаФайловПациента.Очистить();
	
	Интерфейс = DICOMРаботаСДрайверомКлиентСервер.ПолучитьИнтерфейсDICOM();
	МассивИменФайлов = ИдентификаторыИсследований;
	// Нимя = МассивИменФайлов.Добавить();
	
	КаталогХранилища = НастройкиDICOM_КаталогФайлов;
	// Ищем файлы/каталоги по известным уникальным именам, обрабатываем сырые данные в *.dcm файлах
	Для каждого ИмяФайла из МассивИменФайлов Цикл  
		НайденныеФайлы = НайтиФайлы(КаталогХранилища, "study_" + ИмяФайла.StudyUID);
		Для каждого ФайлКаталог из НайденныеФайлы Цикл
			Если ФайлКаталог.ЭтоФайл() Тогда
				
			ИначеЕсли ФайлКаталог.ЭтоКаталог() Тогда	
				ФайлыСерий = НайтиФайлы(ФайлКаталог.ПолноеИмя, "*");
				Для каждого ФайлСерии Из ФайлыСерий Цикл
					Если ФайлСерии.ЭтоФайл() Тогда
						Если Интерфейс <> Неопределено Тогда
							
							ПолноеИмяФайла = ФайлСерии.ПолноеИмя;
							СодержимоеФайла = Интерфейс.Dcmdump(ПолноеИмяФайла); // считаем данные заголовков из файла
							Если ЗначениеЗаполнено(СодержимоеФайла) Тогда
								КаталогХраненияРезультата = DICOMРаботаСДрайвером.СформироватьПутьКФайлуВКаталоге(ФайлКаталог.ПолноеИмя, ФайлСерии.ИмяБезРасширения);
								СоздатьКаталог(КаталогХраненияРезультата); // создадим каталог в котором будем хранить выжимку из файла dcm
								
								ПутьКФайлуИнфо = DICOMРаботаСДрайвером.СформироватьПутьКФайлуВКаталоге(КаталогХраненияРезультата, "metadata.txt");
								ФайлИнфо = Новый ЗаписьТекста(ПутьКФайлуИнфо); // запишем в файл данные заголовков внутри каталога
								ФайлИнфо.ЗаписатьСтроку(СодержимоеФайла);
								ФайлИнфо.Закрыть();
								
								// выгрузим графические данные внутрь каталога
								Результат = Интерфейс.Dcm2pnm("-input", ПолноеИмяФайла, "-output", КаталогХраненияРезультата + "\" +ФайлСерии.Имя + ".bmp", "-format", "bmp");
								// создадим каталог исходных данных внутри нового каталога
								КаталогИсходныхДанных = DICOMРаботаСДрайвером.СформироватьПутьКФайлуВКаталоге(КаталогХраненияРезультата, "DCMData"); 
								СоздатьКаталог(КаталогИсходныхДанных);
								НовоеРасположениеФайлаРезультата = DICOMРаботаСДрайвером.СформироватьПутьКФайлуВКаталоге(КаталогИсходныхДанных, ФайлСерии.Имя);
								// перенесем исходный файл в каталог исходных данных
								ПереместитьФайл(ПолноеИмяФайла, НовоеРасположениеФайлаРезультата); 				
								мКаталогиРезультатов.Добавить(Новый Структура("Каталог, Серия", КаталогХраненияРезультата, ФайлСерии.ИмяБезРасширения));	
							КонецЕсли;
						КонецЕсли;
					Иначе
						мКаталогиРезультатов.Добавить(Новый Структура("Каталог, Серия",ФайлСерии.ПолноеИмя, ФайлСерии.ИмяБезРасширения));
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	ПредставлениеПациента = ЭтаФорма.Пациент + "(" + ЭтаФорма.МедицинскаяКарта+ ")";
	
	// Считаем данные 
	Для каждого СтрКаталог из мКаталогиРезультатов Цикл
		// Найдем файл с информацией
		ИнформационныйФайл = Новый Файл(СтрКаталог.Каталог + "\" + "metadata.txt");
		Если ИнформационныйФайл.Существует() Тогда
			Чтение = Новый ТекстовыйДокумент();
			Чтение.Прочитать(ИнформационныйФайл.ПолноеИмя);
			ЗаголовкиDICOM = Чтение.ПолучитьТекст();
			ДанныеЗаголовкаСерии = DICOMРаботаСДанными.ПрочитатьЗаголовокDICOM(ЗаголовкиDICOM);	
			НайденныеИзображенияВПапкахСерий = НайтиФайлы(СтрКаталог.Каталог, "*.bmp");
			Для каждого ИзображениеВПапкеСерии Из НайденныеИзображенияВПапкахСерий Цикл
				НоваяСтрока = ЭтаФорма.ТаблицаФайловПациента.Добавить();
				НоваяСтрока.Представление			= ПредставлениеПациента;
				НоваяСтрока.ДатаИсследования		= DICOMРаботаСДанными.ДатаИсследования(ДанныеЗаголовкаСерии);
				НоваяСтрока.ВремяИсследования		= DICOMРаботаСДанными.ВремяИсследования(ДанныеЗаголовкаСерии);
				НоваяСтрока.УИДИсследования			= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодStudyInstanceUID()); // УИ исследования
				НоваяСтрока.ОписаниеИсследования	= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодStudyDescription());
				НоваяСтрока.Комментарии				= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодPatientComments());
				НоваяСтрока.РегистрационныйНомер	= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодAccessionNumber());
				// информация по серии
				НоваяСтрока.ТипИсследования = ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодModality());
				НоваяСтрока.УИДСерии		= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодSeriesInstanceUID()); // УИ серии
				НоваяСтрока.НомерСерии		= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодSeriesNumber()); // Номер серии
				// данные пациента
				НоваяСтрока.Пациент			= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодPatientName());
				НоваяСтрока.КодПациента		= ДанныеЗаголовкаСерии.Получить(DICOMРаботаСДанными.КодPatientID());
				НоваяСтрока.Пол				= DICOMРаботаСДанными.ПолПациента(ДанныеЗаголовкаСерии);
				НоваяСтрока.ДатаРождения	= DICOMРаботаСДанными.ДатаРожденияПациента(ДанныеЗаголовкаСерии);
				// данные файла
				НоваяСтрока.ИмяФайла					= ИзображениеВПапкеСерии.ИмяБезРасширения;
				НоваяСтрока.Расширение					= ИзображениеВПапкеСерии.Расширение;
				НоваяСтрока.ПолноеИмяФайла				= НоваяСтрока.ИмяФайла + НоваяСтрока.Расширение;
				НоваяСтрока.ПутьКФайлу					= ИзображениеВПапкеСерии.ПолноеИмя;
				НоваяСтрока.Размер						= ИзображениеВПапкеСерии.Размер();
				НоваяСтрока.УниверсальноеВремяИзменения = ИзображениеВПапкеСерии.ПолучитьУниверсальноеВремяИзменения();
				НоваяСтрока.ВремяИзменения				= ИзображениеВПапкеСерии.ПолучитьВремяИзменения();
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ЭтаФорма.ДеревоФайловПациента.ПолучитьЭлементы().Очистить();
	
	Для каждого СтрокаТаблицы Из ТаблицаФайловПациента Цикл
		
		УзелПациента = РаботаСКоллекциями.НайтиВДереве(
		ЭтаФорма.ДеревоФайловПациента, Новый Структура("Пациент", СтрокаТаблицы.Пациент), , Истина
		);
		Если УзелПациента = Неопределено Тогда
			УзелПациента = ЭтаФорма.ДеревоФайловПациента.ПолучитьЭлементы().Добавить();
			УзелПациента.Пациент = СтрокаТаблицы.Пациент;
			УзелПациента.КомментарииОписание = СтрокаТаблицы.Комментарии;
			УзелПациента.ДатаРожденияРегистрационныйНомерКоличествоСнимков = СтрокаТаблицы.ДатаРождения;
			УзелПациента.Пол = СтрокаТаблицы.Пол;
			УзелПациента.КодПациентаТипИсследования = СтрокаТаблицы.КодПациента;
			УзелПациента.Представление = СтрокаТаблицы.Пациент;
			УзелПациента.КартинкаОтображения = БиблиотекаКартинок.Пользователь;
		КонецЕсли;
		
		УзелИсследования = РаботаСКоллекциями.НайтиВДереве(
		ЭтаФорма.ДеревоФайловПациента,  
		Новый Структура("УИДИсследования", СтрокаТаблицы.УИДИсследования), , Истина
		);
		Если УзелИсследования = Неопределено Тогда
			УзелИсследования = УзелПациента.ПолучитьЭлементы().Добавить();
			УзелИсследования.УИДИсследования = СтрокаТаблицы.УИДИсследования;
			УзелИсследования.КомментарииОписание = СтрокаТаблицы.ОписаниеИсследования;
			УзелИсследования.ДатаРожденияРегистрационныйНомерКоличествоСнимков = СтрокаТаблицы.РегистрационныйНомер;
			УзелИсследования.Представление = СтрокаТаблицы.ДатаИсследования + 
			(СтрокаТаблицы.ВремяИсследования - '00010101');
			УзелИсследования.КартинкаОтображения = БиблиотекаКартинок.Календарь;
		КонецЕсли;
		
		УзелСерии = РаботаСКоллекциями.НайтиВДереве(
		ЭтаФорма.ДеревоФайловПациента,  
		Новый Структура("УИДСерии", СтрокаТаблицы.УИДСерии), , Истина
		);
		
		Если УзелСерии = Неопределено Тогда
			УзелСерии = УзелИсследования.ПолучитьЭлементы().Добавить();
			УзелСерии.КодПациентаТипИсследования = СтрокаТаблицы.ТипИсследования;
			УзелСерии.УИДСерии = СтрокаТаблицы.УИДСерии;
			УзелСерии.Представление = СтрокаТаблицы.НомерСерии;
			УзелСерии.КартинкаОтображения = БиблиотекаКартинок.ВыборКомпоновкиДанных;
		КонецЕсли;
		УзелСерии.ДатаРожденияРегистрационныйНомерКоличествоСнимков = УзелСерии.КоличествоСнимков + 1;
		
		УзелСнимок = УзелСерии.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(УзелСнимок, СтрокаТаблицы);
		УзелСнимок.УИДИсследования = "";
		УзелСнимок.УИДСерии = "";
		УзелСнимок.Пациент = "";
		УзелСнимок.Пол = "";
		УзелСнимок.Представление = СтрокаТаблицы.ИмяФайла;
		УзелСнимок.КартинкаОтображения = БиблиотекаКартинок.Картинка;
		
	КонецЦикла;
	ЭтаФорма.Элементы.ДеревоФайловПациента.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни; 
КонецПроцедуры
#КонецОбласти