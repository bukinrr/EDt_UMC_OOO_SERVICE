/////////////////////////////////////////////////////////////////////
// Обработчики формы
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//STORAGESCP
	стрСервис = ЭтаФорма.Сервисы.Добавить();
	стрСервис.ИмяСервиса = "Storage SCP";
	стрСервис.Идентификатор = "STORAGESCP";
	стрСервис.Свойства = "сервер";
	
	ПолучитьСвойства(стрСервис);
	
	стрСервис.ПериодОчистки = Константы.STORESCP_ОчищатьКаталогЧерез.Получить();
	СтатусСлужбы = DICOMРаботаСДрайверомКлиентСервер.ПолучитьСтатусStorageSCP();
	стрСервис.Статус = СтатусСтрокой(СтатусСлужбы);
	стрСервис.Автозапуск = Константы.STORESCP_АвтоматическийЗапуск.Получить();
	
	//MWLSCP
	стрСервис = ЭтаФорма.Сервисы.Добавить();
	стрСервис.ИмяСервиса	= "MWL SCP";
	стрСервис.Идентификатор = "MWLSCP";
	стрСервис.Свойства		= "сервер";
	
	ПолучитьСвойства(стрСервис);
	СтатусСлужбы = DICOMРаботаСДрайвером.ПолучитьСтатусMWLCSP();
	стрСервис.Статус = СтатусСтрокой(СтатусСлужбы);
	стрСервис.Автозапуск = Константы.MWLSCP_АвтоматическийЗапуск.Получить();

	ЭтаФорма.ПолныеПрава = РольДоступна("ПолныеПрава");
	
	НастройкиDICOM = DICOMРаботаСДрайвером.ПолучитьНастройки();
	
	ЭтаФорма.ПериодОчисткиНаКлиенте = НастройкиDICOM.STORESCP_ОчищатьКаталогЧерез;
	ЭтаФорма.АвтозапускНаКлиенте = НастройкиDICOM.STORESCP_АвтоматическийЗапуск;
	
	ОтборStorage = Новый Структура("Идентификатор","STORAGESCP");
	РезультатыОтбора = ЭтаФорма.Сервисы.НайтиСтроки(ОтборStorage);
	
	Если ЗначениеЗаполнено(НастройкиDICOM.STORESCP_ИспользоватьКлиент) Тогда
		СлужбыНаКлиенте = НастройкиDICOM.STORESCP_ИспользоватьКлиент;
	Иначе
		СлужбыНаКлиенте = Ложь;
	КонецЕсли;

	Если Не СлужбыНаКлиенте Тогда
		РезультатыОтбора[0].Использовать = Истина;
	КонецЕсли;


КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	стрСервис = ЭтаФорма.Сервисы.Добавить();
	стрСервис.ИмяСервиса	= "Storage SCP";
	стрСервис.Идентификатор = "STORAGESCU";
	стрСервис.Свойства		= "клиент";
	стрСервис.ПериодОчистки = ЭтаФорма.ПериодОчисткиНаКлиенте;
	стрСервис.Автозапуск	= ЭтаФорма.АвтозапускНаКлиенте;
	
	СтатусSCP = DICOMРаботаСДрайверомКлиентСервер.ПолучитьСтатусStorageSCP();
	стрСервис.Статус = СтатусСтрокой(СтатусSCP);
	
	ОтборStorage = Новый Структура("Идентификатор","STORAGESCP");
	Найденные = ЭтаФорма.Сервисы.НайтиСтроки(ОтборStorage);
	
	Если Не Найденные[0].Использовать Тогда
		стрСервис.Использовать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

/////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры
#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ПолучитьСвойства(строкаТЗ)

	Попытка
		Если строкаТЗ.Идентификатор = "MWLSCP" Тогда
			AETitle = Константы.MWLSCP_ИспользуемыйAETitle.Получить();
		Иначе
			AETitle = Константы.STORESCP_ИспользуемыйAETitle.Получить();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(AETitle.Host) Тогда
			строкаТЗ.Свойства = строкаТЗ.Свойства + ", " + AETitle.Host;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Попытка
		Если строкаТЗ.Идентификатор = "MWLSCP" Тогда
			AETitle = Константы.MWLSCP_ИспользуемыйAETitle.Получить();
		Иначе
			AETitle = Константы.STORESCP_ИспользуемыйAETitle.Получить();
		КонецЕсли;
		
		Если ЗначениеЗаполнено(AETitle.Port) Тогда
			строкаТЗ.Свойства = строкаТЗ.Свойства + ", " + AETitle.Port;
		КонецЕсли;
	Исключение
	КонецПопытки;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтатусСтрокой(Статус)
	
	Если Статус = Неопределено Тогда
		Возврат "Нет данных";
	ИначеЕсли Статус = Истина Тогда
		Возврат "Запущена";
	ИначеЕсли Статус = Ложь Тогда
		Возврат "Остановлена";
	КонецЕсли;
		
КонецФункции

#КонецОбласти

/////////////////////////////////////////////////////////////////////
// Команды формы
#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Запуск(Команда)
	Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные <> Неопределено Тогда
		Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCU" Тогда
			DICOMРаботаСДрайверомКлиентСервер.ЗапускStorageSCP();
		ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCP" Тогда
			Если ЭтаФорма.ПолныеПрава Тогда
				ЗапускStorageSCP_Сервер();
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Недостаточно прав.");
			КонецЕсли;
		ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "MWLSCP" Тогда
			Если ЭтаФорма.ПолныеПрава Тогда
				DICOMРаботаСДрайвером.ЗапускMWLCSP();
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Недостаточно прав.");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ОбновитьСостояниеСервисов", 2, Истина);
	//ОбновитьСостояниеСервисов();
КонецПроцедуры

&НаКлиенте
Процедура Остановка(Команда)
	
	Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные <> Неопределено Тогда
		Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCU" Тогда
			DICOMРаботаСДрайверомКлиентСервер.ОстановкаStorageSCP();
		ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCP" Тогда
			Если ЭтаФорма.ПолныеПрава Тогда
				ОстановкаStorageSCP_Сервер();
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Недостаточно прав.");
			КонецЕсли;
		ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "MWLSCP" Тогда
			Если ЭтаФорма.ПолныеПрава Тогда
				DICOMРаботаСДрайвером.ОстановкаMWLCSP();
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Недостаточно прав.");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ПодключитьОбработчикОжидания("ОбновитьСостояниеСервисов", 2, Истина);
	//ОбновитьСостояниеСервисов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние(Команда)
	ОбновитьСостояниеСервисов();
КонецПроцедуры

&НаСервере
Процедура ЗапускStorageSCP_Сервер()
	
	DICOMРаботаСДрайверомКлиентСервер.ЗапускStorageSCP();
	
КонецПроцедуры

&НаСервере
Процедура ОстановкаStorageSCP_Сервер()
	
	DICOMРаботаСДрайверомКлиентСервер.ОстановкаStorageSCP();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояниеСервисов()
	ОтборStorage = Новый Структура("Идентификатор","STORAGESCU");
	Найденные = ЭтаФорма.Сервисы.НайтиСтроки(ОтборStorage);
	Статус = DICOMРаботаСДрайверомКлиентСервер.ПолучитьСтатусStorageSCP();
	Если Найденные.Количество() = 1 Тогда
		Найденные[0].Статус = СтатусСтрокой(Статус);	
	КонецЕсли;
	
	ОбновитьСостояниеНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьСостояниеНаСервере()
	Для Каждого стрСервис Из ЭтаФорма.Сервисы Цикл
		Если стрСервис.Идентификатор = "STORAGESCP" Тогда
			Статус = DICOMРаботаСДрайверомКлиентСервер.ПолучитьСтатусStorageSCP();
			стрСервис.Статус = СтатусСтрокой(Статус);
		ИначеЕсли стрСервис.Идентификатор = "MWLSCP" Тогда
			Статус = DICOMРаботаСДрайвером.ПолучитьСтатусMWLCSP();
			стрСервис.Статус = СтатусСтрокой(Статус);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// Обработчики элементов
#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура СервисыПериодОчисткиПриИзменении(Элемент)
	Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCU" Тогда
		ЗаписатьНайстройки();
	ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCP" Тогда
		ЗаписатьКонстанту(ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.ПериодОчистки);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьНайстройки()
	
	БлокируемыеКлючи = Новый ТаблицаЗначений;
	БлокируемыеКлючи.Колонки.Добавить("Пользователь", Новый ОписаниеТипов("СправочникСсылка.Пользователи"));
	строкаТЧ = БлокируемыеКлючи.Добавить();
	строкаТЧ.Пользователь = DICOMРаботаСДрайвером.ТекущийПользователь();

	НачатьТранзакцию(РежимУправленияБлокировкойДанных.Управляемый);
	
	DICOMРаботаСДрайвером.ЗаблокироватьРегистр(БлокируемыеКлючи,	"РегистрСведений.НастройкиDICOM", "Пользователь");

	НаборЗаписей = РегистрыСведений.НастройкиDICOM.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Пользователь.Установить(DICOMРаботаСДрайвером.ТекущийПользователь());
	НаборЗаписей.Прочитать();
	Если НаборЗаписей.Количество() = 0 Тогда
		НаборЗаписей.Добавить();
	КонецЕсли;
	Отбор = Новый Структура("Идентификатор","STORAGESCU");
	Найденные = ЭтаФорма.Сервисы.НайтиСтроки(Отбор);
	
	НаборЗаписей[0].STORESCP_ИспользоватьКлиент		= Найденные[0].Использовать;
	НаборЗаписей[0].STORESCP_ОчищатьКаталогЧерез		= Найденные[0].ПериодОчистки;
	НаборЗаписей[0].STORESCP_АвтоматическийЗапуск	= Найденные[0].Автозапуск;
	НаборЗаписей.Записать();
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКонстанту(Значение)
	Если РольДоступна("ПолныеПрава") Тогда
		Константы.STORESCP_ОчищатьКаталогЧерез.Установить(Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СервисыАвтозапускПриИзменении(Элемент)
	Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCU" Тогда
		ЗаписатьНайстройки();
	ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCP" Тогда
		ЗаписатьКонстантуАвтозапуск(
				"STORESCP_АвтоматическийЗапуск",
				ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Автозапуск
			);
	ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "MWLSCP" Тогда
		ЗаписатьКонстантуАвтозапуск(
				"MWLSCP_АвтоматическийЗапуск",
				ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Автозапуск
			);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьКонстантуАвтозапуск(ИмяКонстанты, Значение)
	Если РольДоступна("ПолныеПрава") Тогда
		Константы[ИмяКонстанты].Установить(Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СервисыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СервисыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СервисыИспользоватьПриИзменении(Элемент)

	Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Использовать = Истина Тогда
		Если ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCU" Тогда
			Отбор = Новый Структура("Идентификатор","STORAGESCU");
			Результат = ЭтаФорма.Сервисы.НайтиСтроки(Отбор);
			Результат[0].Использовать = Ложь;
		ИначеЕсли ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Идентификатор = "STORAGESCP" Тогда
			Отбор = Новый Структура("Идентификатор","STORAGESCP");
			Результат = ЭтаФорма.Сервисы.НайтиСтроки(Отбор);
			Результат[0].Использовать = Ложь;
		КонецЕсли;
		ЗаписатьНайстройки();
	Иначе
		ЭтаФорма.Элементы.Сервисы.ТекущиеДанные.Использовать = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти