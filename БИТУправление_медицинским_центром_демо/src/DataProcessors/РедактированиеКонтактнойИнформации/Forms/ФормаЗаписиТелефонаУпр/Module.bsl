#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначенияЗаполнения") 
		И ТипЗнч(Параметры.ЗначенияЗаполнения) = Тип("Структура")
	Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма.Объект, Параметры.ЗначенияЗаполнения);
		Параметры.ЗначенияЗаполнения.Свойство("Редактирование", ЭтаФорма.Редактирование);
	КонецЕсли;	
	
	ПоляКлючаЗаписи = Новый Структура("Объект, Тип, Вид", Объект.Объект, Объект.Тип, Объект.Вид);
	КлючЗаписи = РегистрыСведений.КонтактнаяИнформация.СоздатьКлючЗаписи(ПоляКлючаЗаписи);
	
	// Чтение свойств, не переданных из формы вызова.
	Запись = РегистрыСведений.КонтактнаяИнформация.СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(Запись, КлючЗаписи);
	Запись.Прочитать();
	
	Редактирование = Запись.Выбран();
	
	Если Редактирование Тогда
		ЗаполнитьЗначенияСвойств(Объект, Запись, , "Объект, Тип, Вид");
	КонецЕсли;
	
	Объект.Тип = Объект.Вид.Тип;
	ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + ?(Объект.Объект = неопределено,""," ["+Объект.Объект.Наименование+"]");

	СписокВидов = КонтактнаяИнформацияСервер.ЗаполнитьСписокВидовКонтактнойИнформации(Объект.Вид);
	Для Каждого Стр Из СписокВидов Цикл
    	Элементы.Вид.СписокВыбора.Добавить(Стр.Значение);
	КонецЦикла;	

	Попытка 
		Элементы.НадписьВладелец.Заголовок = Объект.Объект["НаименованиеПолное"];
	Исключение
		Попытка
			Элементы.НадписьВладелец.Заголовок = Объект.Наименование;
		Исключение
		КонецПопытки;
	КонецПопытки;	
	
	ВводПоМаске = Объект.Вид.ИспользоватьМаскуВвода; // Пересчитывается при открытии.
	ПолеВводПоМаске = Объект.Представление;
	НастроитьВидимостьЭлементовПоВводуПоМаске(Ложь);
	НастроитьДоступностьЭлементов(Не Редактирование);
	
	Если ВводПоМаске Тогда
		ТекущийЭлемент = Элементы.ПолеВводПоМаске;
	Иначе
		ТекущийЭлемент = Элементы.Поле3;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Редактирование
		И ВводПоМаске
		И ЗначениеЗаполнено(Объект.Представление)
		И ПолеВводПоМаске <> Элементы.ПолеВводПоМаске.ТекстРедактирования
	Тогда
		ВводПоМаске = Ложь;
		НастроитьВидимостьЭлементовПоВводуПоМаске(Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОсновныеДействияФормыДействиеОК(Команда)
	
	ЗаписатьТелефон(Истина);

КонецПроцедуры

&НаКлиенте
Процедура ОсновныеДействияФормыДействиеЗаписать(Команда)
	
	ЗаписатьТелефон();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

Процедура ВидОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВидНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура Поле1ПриИзменении(Элемент)
	ПереформироватьНомер();
КонецПроцедуры

&НаКлиенте
Процедура Поле2ПриИзменении(Элемент)
	ПереформироватьНомер();
КонецПроцедуры

&НаКлиенте
Процедура Поле3ПриИзменении(Элемент)
	ПереформироватьНомер();
КонецПроцедуры

&НаКлиенте
Процедура Поле4ПриИзменении(Элемент)
	ПереформироватьНомер();
КонецПроцедуры

&НаКлиенте
Процедура ВидПриИзменении(Элемент)
	
	НастроитьДоступностьЭлементов();
	НастроитьВидимостьЭлементовПоВводуПоМаске();
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМаскуВводаПриИзменении(Элемент)
	
	НастроитьВидимостьЭлементовПоВводуПоМаске(Ложь);
	
	Если ВводПоМаске Тогда 
		ПолеВводПоМаске = Объект.Поле3;
		Элементы.ПолеВводПоМаске.ОбновитьТекстРедактирования();
	Иначе
		Объект.Поле3 = ПолеВводПоМаске;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ИспользоватьМаскуВводаПриИзмененииОтложенный", 0.01, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПолеВводПоМаскеПриИзменении(Элемент)
	ПереформироватьНомер();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаписатьТелефон(Закрыть = Ложь)
	Если ЗаписатьСервер() Тогда
		Модифицированность = Ложь;
		Если Закрыть Тогда
			Закрыть(Истина);
		КонецЕсли;	
		// Оповещение динамических списков контактной информации без основной таблицы об изменении данных.
		Оповестить("КонтактнаяИнформацияИзменение", Объект.Объект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗаписатьСервер()
	Об = ДанныеФормыВЗначение(Объект, Тип("ОбработкаОбъект.РедактированиеКонтактнойИнформации"));
	Возврат Об.ЗаписатьСервер(Объект.ЗначениеПоУмолчанию, Редактирование, КлючЗаписи);
КонецФункции	

&НаСервере
Процедура НастроитьДоступностьЭлементов(Создание = Ложь)
	
	Если ЗначениеЗаполнено(Объект.Вид) Тогда 
		ВидИспользоватьМаскуВвода = Объект.Вид.ИспользоватьМаскуВвода;
		Элементы.ИспользоватьМаскуВвода.Доступность	= ВидИспользоватьМаскуВвода;
		Если Создание Тогда 
			ВводПоМаске = ВидИспользоватьМаскуВвода;
		КонецЕсли;		
	Иначе 	
		Элементы.ИспользоватьМаскуВвода.Доступность	= Ложь;
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура НастроитьВидимостьЭлементовПоВводуПоМаске(ОбновитьЗначениеВводПоМаске = Истина)
	
	ВидИспользоватьМаскуВвода = Объект.Вид.ИспользоватьМаскуВвода;
	Если ОбновитьЗначениеВводПоМаске Тогда
		ВводПоМаске = ВидИспользоватьМаскуВвода;
	КонецЕсли;
	
	Элементы.Поле1.Видимость				  = Не ВводПоМаске;
	Элементы.Поле2.Видимость				  = Не ВводПоМаске;
	Элементы.Поле3.Видимость				  = Не ВводПоМаске;
	Элементы.Поле4.Видимость				  = Не ВводПоМаске;
	Элементы.ПолеВводПоМаске.Видимость		  = ВводПоМаске;
	Если ВводПоМаске Тогда
		Элементы.ПолеВводПоМаске.Маска = Объект.Вид.МаскаВводаТелефонногоНомера;
	КонецЕсли;
	
	Элементы.Поле4.ПоложениеЗаголовка = ?(ВводПоМаске, ПоложениеЗаголовкаЭлементаФормы.Лево, ПоложениеЗаголовкаЭлементаФормы.Верх);
	
	Элементы.ИспользоватьМаскуВвода.Видимость = ВидИспользоватьМаскуВвода;
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьМаскуВводаПриИзмененииОтложенный()
	
	Если ВводПоМаске Тогда 
		ПолеВводПоМаске = Элементы.ПолеВводПоМаске.ТекстРедактирования;
		ПереформироватьНомер();	
 	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереформироватьНомер()
	
	Если ВводПоМаске Тогда 
		Объект.Представление = ?((Не ПустаяСтрока(ПолеВводПоМаске)),ПолеВводПоМаске,"");
	    Объект.Поле3 = СМС_ФормированиеСообщений.НормализоватьСотовыйТелефон(ПолеВводПоМаске);
	Иначе  
		Объект.Представление = Объект.Поле1;
		Объект.Представление = Объект.Представление + ?((Не ПустаяСтрока(Объект.Поле2)),(ПроверкаПустойСтроки(Объект.Представление, Ложь)+"(" + Объект.Поле2 + ")"),"");
		Объект.Представление = Объект.Представление + ?((Не ПустаяСтрока(Объект.Поле3)),(ПроверкаПустойСтроки(Объект.Представление, ПустаяСтрока(Объект.Поле2)) + Объект.Поле3),"");
	КонецЕсли;
	
	Если Не ПустаяСтрока(Объект.Представление) Тогда
		Объект.Представление = Объект.Представление + ?((Не ПустаяСтрока(Объект.Поле4)),(ПроверкаПустойСтроки(Объект.Представление) + "доб. " + Объект.Поле4),"");
	Иначе
		Объект.Представление = Объект.Поле4;
	КонецЕсли; 
		
КонецПроцедуры

// Функция проверяет строку на наличие значимых символов.
//
// Параметры:
//  ВыбСтрока		 - Строка	 - строка для проверки.
//  ПризнакЗапятой	 - Булево	 - нужна ли запятая
// 
// Возвращаемое значение:
//  Строка - пробел или пустое значение строки.
//
&НаКлиентеНаСервереБезКонтекста
Функция ПроверкаПустойСтроки(ВыбСтрока, ПризнакЗапятой=Истина)
	
	Если ПустаяСтрока(ВыбСтрока) Тогда
		Возврат "";
	Иначе
		Возврат ?(ПризнакЗапятой,",","")+" ";
	КонецЕсли; 
	
КонецФункции 

#КонецОбласти
