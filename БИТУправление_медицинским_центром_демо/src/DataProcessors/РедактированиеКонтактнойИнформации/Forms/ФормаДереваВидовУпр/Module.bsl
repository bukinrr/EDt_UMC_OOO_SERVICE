#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") Тогда 
		Объект.Объект = Параметры.Объект;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Объект) Тогда
		Отказ = Истина;
		
		РаботаСФормамиСервер.ЗапретИнтерактивногоОткрытия(Отказ);
	Иначе
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + " ["+ЭтаФорма.Объект.Объект.ПолучитьОбъект().Наименование+"]";
	КонецЕсли;	
	
	СформироватьДеревоВидовКИ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	#Если ТолстыйКлиент Тогда
		ТолькоПредопределенные = ВосстановитьЗначение("ТолькоПредопределенные");
	#КонецЕсли
	
	Элементы.ДеревоВидов.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни; 
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Не ЗавершениеРаботы Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ВидКонтактнойИнформацииИзменение" Тогда
		СформироватьДеревоВидовКИ();
		Для Каждого СтрокаВерхнегоУровня Из ДеревоВидов.ПолучитьЭлементы() Цикл
			Элементы.ДеревоВидов.Развернуть(СтрокаВерхнегоУровня.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	Если Элементы.ДеревоВидов.ТекущаяСтрока <> Неопределено Тогда
		
		ТекущиеДанные = Элементы.ДеревоВидов.ТекущиеДанные.ВидыКонтактнойИнформации;
		Если ТипЗнч(ТекущиеДанные) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
			ТекущийТип = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущиеДанные, "Тип");
		Иначе
			ТекущийТип = ТекущиеДанные;
		КонецЕсли;	           
		
		Если ОбщегоНазначения.ЕстьПравоДоступа("Добавление", "Справочник.ВидыКонтактнойИнформации") Тогда
			ДобавитьВидКонтактнойИнформации(ТекущийТип);
		Иначе
			Предупреждение("Нет права на добавление новых видов контактной информации", 30);
		КонецЕсли;

	КонецЕсли;	

КонецПроцедуры

&НаКлиенте
Процедура РедактироватьВид(Команда)
	ПараметрыФормы = Новый Структура("Ключ", Элементы.ДеревоВидов.ТекущиеДанные.ВидыКонтактнойИнформации);
	ОткрытьФорму("Справочник.ВидыКонтактнойИнформации.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

&НаКлиенте
Процедура ДействиеВыбрать(Команда)
	
	Если Элементы.ДеревоВидов.ТекущиеДанные <> Неопределено Тогда
		ВыбранныйВидКИ = Элементы.ДеревоВидов.ТекущиеДанные.ВидыКонтактнойИнформации;
		Если ТипЗнч(ВыбранныйВидКИ) = Тип("СправочникСсылка.ВидыКонтактнойИнформации") Тогда
			
			СтрокаФормы = КонтактнаяИнформацияСервер.ПолучитьСтрокуФормыПоВиду(ВыбранныйВидКИ);
			
			Если ЗначениеЗаполнено(СтрокаФормы) Тогда
				
				Если СтрокаФормы = "Обработка.РедактированиеКонтактнойИнформации.Форма.ФормаЗаписиАдресаУпр" Тогда
					
					ПараметрыОткрытия = Новый Структура;
					ПараметрыОткрытия.Вставить("ВидКонтактнойИнформации", ВыбранныйВидКИ);
					ПараметрыОткрытия.Вставить("ЗначенияПолей",           
						КонтактнаяИнформацияСервер.ЗначенияПолейСГородомИзКэшаФилиала(Объект.Объект, ВыбранныйВидКИ, глКэшАдресовФилиалов));
					ПараметрыОткрытия.Вставить("Представление",           Неопределено);
					ПараметрыОткрытия.Вставить("Объект",				  Объект.Объект);
					
					Оповещение = Новый ОписаниеОповещения("ОбработкаОповещенияЗаполненияКИ", ЭтаФорма, Новый Структура("Объект", Объект.Объект));
					УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыОткрытия, Неопределено, Оповещение);
					
				Иначе
					
					ЗначенияЗаполнения = Новый Структура;
					ЗначенияЗаполнения.Вставить("Вид", ВыбранныйВидКИ);
					ЗначенияЗаполнения.Вставить("Объект", Объект.Объект);
					ЗначенияЗаполнения.Вставить("Редактирование", Ложь);
					Закрыть();
					
					ОткрытьФорму(СтрокаФормы, Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
					
				КонецЕсли;
				
			ИначеЕсли СтрокаФормы = "" Тогда 
				ОткрытьФорму("РегистрСведений.КонтактнаяИнформация.ФормаЗаписи");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТолькоПредопределенныеПриИзменении(Элемент)
	СформироватьДеревоВидовКИ();
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВидовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДействиеВыбрать(Неопределено)
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьДеревоВидовКИ()
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ
	|	ВидыКонтактнойИнформации.Ссылка КАК ВидКонтактнойИнформации,
	|	ВидыКонтактнойИнформации.Тип,
	|	ВЫБОР КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон)
	|			ТОГДА 3
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес)
	|					ТОГДА 2
	|				ИНАЧЕ ВЫБОР
	|						КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Другое)
	|							ТОГДА 7
	|						ИНАЧЕ ВЫБОР
	|								КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.АдресЭлектроннойПочты)
	|									ТОГДА 4
	|								ИНАЧЕ ВЫБОР
	|										КОГДА ВидыКонтактнойИнформации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.ВебСтраница)
	|											ТОГДА 5
	|										ИНАЧЕ 0
	|									КОНЕЦ
	|							КОНЕЦ
	|					КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Картинка
	|ИЗ
	|	Справочник.ВидыКонтактнойИнформации КАК ВидыКонтактнойИнформации
	|ГДЕ
	|    НЕ ВидыКонтактнойИнформации.ПометкаУдаления
	|";
	
	Если ТолькоПредопределенные Тогда
		ТекстЗапроса = ТекстЗапроса +"
		|И
		|    ВидыКонтактнойИнформации.Предопределенный
		|";
	КонецЕсли; 	
	
	Если ЗначениеЗаполнено(Объект.Тип) Тогда
		ТекстЗапроса = ТекстЗапроса +"
		|И
		|    ВидыКонтактнойИнформации.Тип = &ТипКонтактнойИнформации
		|";
		Запрос.УстановитьПараметр("ТипКонтактнойИнформации", Объект.Тип);
	КонецЕсли; 	
	
	ТекстЗапроса = ТекстЗапроса + "
	|ИТОГИ ПО
	|	ВидыКонтактнойИнформации.Тип
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.Текст = ТекстЗапроса;
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Дерево = ДанныеФормыВЗначение(ДеревоВидов, ТИп("ДеревоЗначений"));
	
	Дерево.Строки.Очистить();
	
	// Загрузка разных картинок для видов ки.
	киКартинки = ЗагрузитьКартинкиВХранилища();
	
	// КИ объекта.
	НаборЗаписейКИ = РегистрыСведений.КонтактнаяИнформация.СоздатьНаборЗаписей();
	НаборЗаписейКИ.Отбор.Объект.Установить(Объект.Объект);
	НаборЗаписейКИ.Прочитать();
	
	// Делаем перебор результата
	Пока Выборка.Следующий() Цикл
		Строка = Дерево.Строки.Добавить();
		Строка.ВидыКонтактнойИнформации = Выборка.Тип;
		ТекКартинка = киКартинки.Получить(Строка(Выборка.Тип));
		Строка.Картинка = ТекКартинка;
		ВыборкаВлож = Выборка.Выбрать();
		Пока ВыборкаВлож.Следующий() Цикл
			Если НЕ ВыборкаВлож.ВидКонтактнойИнформации = NULL Тогда
				// Если контактная информация данного вида ещё не была введена.
				Если КонтактнаяИнформацияСервер.КоличествоЗаписейКонтактнойИнформации(НаборЗаписейКИ, ВыборкаВлож.ВидКонтактнойИнформации) = 0 Тогда
					СтрокаВлож = Строка.Строки.Добавить();
					СтрокаВлож.ВидыКонтактнойИнформации = ВыборкаВлож.ВидКонтактнойИнформации;
					СтрокаВлож.Картинка = ТекКартинка;
				КонецЕсли;	
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла;  
	
	ЗначениеВДанныеФормы(Дерево, ДеревоВидов);

КонецПроцедуры

&НаСервере
Функция ЗагрузитьКартинкиВХранилища()
	
	Соот = Новый Соответствие;
	Соот.Вставить("Адрес", ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияАдрес));
	Соот.Вставить("Телефон",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияТелефон));		
	Соот.Вставить("Номер ICQ",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияICQ));						
	Соот.Вставить("E-Mail",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияЭлектроннаяПочта));										
	Соот.Вставить("Веб-страница",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияВебСтраница));
	Соот.Вставить("Skype",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.Skype));
	Соот.Вставить("Другое",ПоместитьВоВременноеХранилище(БиблиотекаКартинок.КонтактнаяИнформацияДругое));				
	
	Возврат Соот;
	
КонецФункции	

// Добавляет новый вид контактной информации заданного типа.
&НаКлиенте
Процедура ДобавитьВидКонтактнойИнформации(Тип = Неопределено) 
	ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("Тип, Наименование", Тип, Строка(Тип)));
	ОткрытьФорму("Справочник.ВидыКонтактнойИнформации.ФормаОбъекта", ПараметрыФормы);
КонецПроцедуры

// Обработка оповещения о заполнении КИ.
//
// Параметры:
//  Результат				 - Структура - описание записи контактной информации.
//  ДополнительныеПараметры	 - Структура - с обязательным полем "Объект" - ссылка на владельца КИ.
//
&НаКлиенте
Процедура ОбработкаОповещенияЗаполненияКИ(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		//+бит
		ТипАдреса = "";
		ЧтениеЗначения = Новый ЧтениеJSON;
		ЧтениеЗначения.УстановитьСтроку(Результат.Значение);
		Пока ЧтениеЗначения.Прочитать() Цикл
			Тип = ЧтениеЗначения.ТипТекущегоЗначения;
			Если Тип = ТипЗначенияJSON.ИмяСвойства Тогда 
				Если ЧтениеЗначения.ТекущееЗначение = "addressType" Тогда 
					ЧтениеЗначения.Прочитать();
					Тип = ЧтениеЗначения.ТипТекущегоЗначения;
					Если Тип = ТипЗначенияJSON.Строка Тогда 
						ТипАдреса = ЧтениеЗначения.ТекущееЗначение;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
		Если ТипАдреса = "Административно-территориальный" Тогда
			Результат.Значение = "";
		КонецЕсли;
		КонтактнаяИнформацияСервер.ЗаписатьКонтактнуюИнформацию(ДополнительныеПараметры.Объект, Результат.Тип, Результат.Вид, Результат.КонтактнаяИнформация, Результат.Значение);  
		//-бит
		// Оповещение динамических списков контактной информации без основной таблицы об изменении данных.
		Оповестить("КонтактнаяИнформацияИзменение", ДополнительныеПараметры.Объект);
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти