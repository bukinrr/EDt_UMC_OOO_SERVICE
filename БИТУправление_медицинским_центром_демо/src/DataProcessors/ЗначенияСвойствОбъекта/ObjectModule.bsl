#Область ПрограммныйИнтерфейс

// Возвращает признак модификаци значений свойств.
// 
// Возвращаемое значение:
//  Булево.
//
Функция ЗначенияСвойствМодифицированы() Экспорт

	ТаблицаСвойств = СвойстваИЗначения.Выгрузить();
	ТаблицаСвойств.Колонки.Удалить("НомерСтроки");
	
	ТаблицаЗапроса = ПрочитатьТаблицуСвойствИЗначений();
	// Приведем типы Неопределено к Null.
	Для каждого СтрокаТЗ Из ТаблицаЗапроса Цикл
		Для каждого КолонкаТЗ Из ТаблицаЗапроса.Колонки Цикл
			Если СтрокаТЗ[КолонкаТЗ.Имя] = Null Тогда
				СтрокаТЗ[КолонкаТЗ.Имя] = Неопределено;
			КонецЕсли; 
		КонецЦикла;
	КонецЦикла; 
	
	Возврат НЕ ОбщегоНазначения.СравнитьТаблицыНаборовЗаписей(ТаблицаЗапроса, ТаблицаСвойств);

КонецФункции // ЗначенияСвойствМодифицированы()

// Процедура заполняет табличную часть обработки свойствами и значениями свойств объекта.
//  При заполнении используются значения реквизитов обработки:
//  ОбъектОтбораЗначений - объект, значения свойств которого отбираются.
//  НазначениеСвойств - значение реквизита, по которому отбораются свойства.
//
Процедура ПрочитатьЗаполнитьСвойстваИЗначения() Экспорт

	СвойстваИЗначения.Загрузить(ПрочитатьТаблицуСвойствИЗначений());
	Для Каждого СтрокаСвойства Из СвойстваИЗначения Цикл
		Если СтрокаСвойства.Значение = Неопределено
			И ЗначениеЗаполнено(СтрокаСвойства.Свойство)
			И СтрокаСвойства.Свойство.ТипЗначения.Типы().Количество() <> 0 
		Тогда
			СтрокаСвойства.Значение = СтрокаСвойства.Свойство.ТипЗначения.ПривестиЗначение(СтрокаСвойства.Значение);
		КонецЕсли; 
	КонецЦикла;

КонецПроцедуры

// Процедура проверяет, должно ли новое свойство попасть в табличную часть обработки, 
// если да - добавляет свойство и активизирует соответствующую строку в табличном поле.
// Предназначена для вызова из обработчиков форм ОбработкаЗаписиНовогоОбъекта.
//
// Параметры:
//  Свойство - ПланВидовХарактеристикСсылка.СвойстваОбъектов - добавляемое свойство.
//
Процедура ПроверитьДобавитьНовоеСвойство(Свойство) Экспорт

	// Запросом проверяется, должно ли новое свойство быть отобрано в табличную часть.

	Запрос = Новый Запрос();

	Запрос.УстановитьПараметр("Свойство",                Свойство);
	Запрос.УстановитьПараметр("НазначениеСвойств",       НазначениеСвойств);
	Запрос.УстановитьПараметр("СписокНазначенийСвойств", СписокНазначенийСвойств());

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвойстваОбъектов.Ссылка                                     КАК Свойство
	|
	|ИЗ
	|// Отбирается свойство.
	|	(
	|	ВЫБРАТЬ 
	|		ПланВидовХарактеристик.СвойстваОбъектов.Ссылка          КАК Ссылка
	|
	|	ИЗ
	|		ПланВидовХарактеристик.СвойстваОбъектов
	|
	|	ГДЕ
	|		ПланВидовХарактеристик.СвойстваОбъектов.НазначениеСвойства В ( &НазначениеСвойств )
	|		И
	|		ПланВидовХарактеристик.СвойстваОбъектов.Ссылка             = &Свойство
	|
	|	)                                                           КАК СвойстваОбъектов
	|
	|ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ
	|// Присоединяются группы, которым назначено свойство, для отбора свойств.
	|	РегистрСведений.НазначенияСвойствОбъектов
	|ПО
	|	РегистрСведений.НазначенияСвойствОбъектов.Свойство = &Свойство
	|
	|ГДЕ
	|// Свойство должно быть назанчено или всем объектам,
	|// или одной из групп - родителей объекта.
	|	РегистрСведений.НазначенияСвойствОбъектов.Объект ЕСТЬ NULL
	|	ИЛИ
	|	РегистрСведений.НазначенияСвойствОбъектов.Объект В ( &СписокНазначенийСвойств )
	|";

	Если Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;

	// Определение позиции свойства в табличной части.

	Для Индекс = 0 По СвойстваИЗначения.Количество() - 1 Цикл
		Если Свойство.Наименование < СвойстваИЗначения[Индекс].Свойство.Наименование Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;

	// Вставка свойства с соответствующую позицию.

	НоваяСтрока = СвойстваИЗначения.Вставить(Индекс);

	НоваяСтрока.ПометкаУдаления = Свойство.ПометкаУдаления;
	НоваяСтрока.Свойство        = Свойство;

КонецПроцедуры

// Функция записывает значения свойств в информационную базу.
// 
// Возвращаемое значение:
//  Булево - успешность записи.
//
Функция ЗаписатьЗначенияСвойств() Экспорт
	
	НаборЗаписейЗначенияСвойств = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	
	Для каждого Строка Из СвойстваИЗначения Цикл
		Если ЗначениеЗаполнено(Строка.Значение) Тогда
			Запись = НаборЗаписейЗначенияСвойств.Добавить();
			
			Запись.Объект   = ОбъектОтбораЗначений;
			Запись.Свойство = Строка.Свойство;
			Запись.Значение = Строка.Значение;
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписейЗначенияСвойств.Отбор.Объект.Установить(ОбъектОтбораЗначений);
	
	Попытка
		НаборЗаписейЗначенияСвойств.Записать();
	Исключение
		#Если Клиент Тогда
			Предупреждение("Не удалось записать значения свойств:" + Символы.ПС + ОписаниеОшибки());
		#КонецЕсли
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПрочитатьТаблицуСвойствИЗначений()
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("НазначениеСвойств",       ?(НазначениеСвойств = Неопределено, СвойстваИЗначенияСервер.ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке(ОбъектОтбораЗначений), НазначениеСвойств));
	Запрос.УстановитьПараметр("ОбъектОтбораЗначений",    ОбъектОтбораЗначений);
	Запрос.УстановитьПараметр("СписокНазначенийСвойств", СписокНазначенийСвойств());
	
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
	|	СвойстваОбъектов.ПометкаУдаления                            КАК ПометкаУдаления,
	|	СвойстваОбъектов.Ссылка                                     КАК Свойство,
	|	СвойстваОбъектов.Наименование                               КАК Наименование,
	|	РегистрСведений.ЗначенияСвойствОбъектов.Значение            КАК Значение,
	|	ВЫБОР КОГДА СвойстваОтбор.НомерСтроки ЕСТЬ NULL ТОГДА ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК АвтоматическийРасчет
	|
	|ИЗ
	|// Отбираются свойства, предназначенные для заданного типа объектов.
	|	(
	|	ВЫБРАТЬ 
	|		ПланВидовХарактеристик.СвойстваОбъектов.Ссылка          КАК Ссылка,
	|		ПланВидовХарактеристик.СвойстваОбъектов.Наименование    КАК Наименование,
	|		ПланВидовХарактеристик.СвойстваОбъектов.ПометкаУдаления КАК ПометкаУдаления
	|
	|	ИЗ
	|		ПланВидовХарактеристик.СвойстваОбъектов
	|
	|	ГДЕ
	|		ПланВидовХарактеристик.СвойстваОбъектов.НазначениеСвойства В ( &НазначениеСвойств )
	|       И НЕ ПланВидовХарактеристик.СвойстваОбъектов.ПометкаУдаления
	|	)                                                           КАК СвойстваОбъектов
	|
	|ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ
	|// Присоединяются значения свойств, назначенные для заданного объекта.
	|	РегистрСведений.ЗначенияСвойствОбъектов
	|ПО
	|	РегистрСведений.ЗначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка
	|	И
	|	РегистрСведений.ЗначенияСвойствОбъектов.Объект = &ОбъектОтбораЗначений
	|
	|ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ
	|// Присоединяются группы, которым назначено свойство, для отбора свойств.
	|// Если свойству назначено значение, оно отбирается в любом случае.
	|	РегистрСведений.НазначенияСвойствОбъектов
	|ПО
	|	РегистрСведений.НазначенияСвойствОбъектов.Свойство = СвойстваОбъектов.Ссылка
	|	И
	|	РегистрСведений.ЗначенияСвойствОбъектов.Значение ЕСТЬ NULL
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовХарактеристик.СвойстваОбъектов.Отборы КАК СвойстваОтбор
	|ПО 
	|	СвойстваОтбор.Ссылка = СвойстваОбъектов.Ссылка
	|	И СвойстваОтбор.НомерСтроки = 1
	|
	|ГДЕ
	|// Если значение свойства не задано, свойство должно быть назанчено
	|// или всем объектам, или одной из групп - родителей объекта.
	|	РегистрСведений.НазначенияСвойствОбъектов.Объект ЕСТЬ NULL
	|	ИЛИ
	|	РегистрСведений.НазначенияСвойствОбъектов.Объект В ( &СписокНазначенийСвойств )
	|
	|УПОРЯДОЧИТЬ ПО
	|	СвойстваОбъектов.Наименование
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Функция формирует список значений, содержащий объект отбора назначений свойств
//  и всех его родителей. Список используется в качестве параметра запросов.
// 
// Возвращаемое значение:
//  CписокЗначений - содержащий объект отбора назначений и всех его родителей.
//
Функция СписокНазначенийСвойств()

	СписокНазначенийСвойств = Новый СписокЗначений;
	ЭтоСправочник = Ложь;
	
	Если ЗначениеЗаполнено(ОбъектОтбораНазначений) Или 
		 ОбъектОтбораНазначений = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка() 
	Тогда
		ЭтоСправочник = Метаданные.Справочники.Содержит(ОбъектОтбораНазначений.Метаданные());
	КонецЕсли;
	
	Назначение = ОбъектОтбораНазначений;
	
	Пока ЗначениеЗаполнено(Назначение) Цикл
		
		СписокНазначенийСвойств.Добавить(Назначение);
		
		Если ЭтоСправочник Тогда
			Назначение = Назначение.Родитель;
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЭтоСправочник И ОбъектОтбораНазначений.Метаданные().Владельцы.Количество()<>0 И ЗначениеЗаполнено(ОбъектОтбораНазначений.Владелец) Тогда
		СписокНазначенийСвойств.Добавить(ОбъектОтбораНазначений.Владелец);
	КонецЕсли;
	
	Возврат СписокНазначенийСвойств;
	
КонецФункции

#КонецОбласти