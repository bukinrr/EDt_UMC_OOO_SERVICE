
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Элементы.ПараметрыАдминистрированияИнформационнойБазы.Видимость = Ложь;
		Элементы.ЗапретитьРаботуРегламентныхЗаданий.Видимость = Ложь;
	КонецЕсли;
	
	Обработка = РеквизитФормыВЗначение("Объект");
	Обработка.ПолучитьПараметрыБлокировки();
	ЗначениеВРеквизитФормы(Обработка, "Объект");
	НачальныйСтатусЗапретаРаботыПользователей = Объект.ВременноЗапретитьРаботуПользователей;
	ОбновитьСтраницуНастройки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Предупреждение("Данная обработка предназначена только для работы в клиент-сервером режиме базы данных");
		Отказ = Истина;
		Возврат;
	КонецЕсли;		
	
	Если РаботаПользователейЗавершается = Истина Тогда
		Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.СтраницаСостоянияБлокировки;
		ОбновитьСтраницуСостояния(ЭтаФорма);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		НазванияСоединенийИБ = "";
		КоличествоСеансов = СтрЧислоСтрок(НазванияСоединенийИБ);
	Иначе	
		КоличествоСеансов = ПолучитьСеансыИнформационнойБазы().Количество();
	КонецЕсли;
	
	// Проверки возможности установки блокировки.
	Если Объект.НачалоДействияБлокировки > Объект.ОкончаниеДействияБлокировки Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Дата окончания блокировки не может быть меньше даты начала блокировки. Блокировка не установлена.'"),,
			"Объект.ОкончаниеДействияБлокировки",,Отказ);
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.НачалоДействияБлокировки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Не указана дата начала блокировки.'"),,	"Объект.НачалоДействияБлокировки",,Отказ);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия <> "ЗавершениеРаботыПользователей" Тогда
		Возврат;
	КонецЕсли;
	
	КоличествоСеансов = Параметр.КоличествоСеансов;
	ОбновитьСостояниеБлокировки(ЭтаФорма);
	Если Параметр.Статус = "Готово" Тогда
		Закрыть();
	ИначеЕсли Параметр.Статус = "Ошибка" Тогда
		Предупреждение(НСтр("ru = 'Не удалось завершить работу всех активных пользователей.
			|Подробности см. в Журнале регистрации.'"), 30);
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АктивныеПользователи(Команда)
	
	ОткрытьФорму("Обработка.АктивныеПользователи.Форма",, ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПредусловияБлокировки()
	
	ПроверитьЗаполнение();

КонецФункции

&НаКлиенте
Процедура ПараметрыАдминистрированияИнформационнойБазы(Команда)
	
	ОткрытьФорму("ОбщаяФорма.ПараметрыАдминистрированияСервернойИБ");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКоманд

&НаКлиенте
Процедура Применить()
	
	ОчиститьСообщения();
	
	Объект.ВременноЗапретитьРаботуПользователей = Не НачальныйСтатусЗапретаРаботыПользователей;
	Если Объект.ВременноЗапретитьРаботуПользователей Тогда
		
		КоличествоСеансов = 1;
		Попытка
			ПроверитьПредусловияБлокировки();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			Возврат;
		КонецПопытки;
		
		ЗаголовокВопроса = НСтр("ru = 'Блокировка работы пользователей'");
		Если КоличествоСеансов > 1 И Объект.НачалоДействияБлокировки < ТекущаяДата() + 5 * 60 Тогда
			ТекстВопроса = НСтр("ru = 'Сейчас будет завершена работа всех активных пользователей.
				|Указано слишком близкое время начала действия блокировки, к которому пользователи могут не успеть сохранить все свои данные и завершить работу.
				|Рекомендуется установить время начала на 5 минут относительно текущего времени.
				|
				|• Да, чтобы скорректировать время начала и продолжить (рекомендуется);
				|• Нет, чтобы продолжить без корректировки.'");
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,,, ЗаголовокВопроса);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.НачалоДействияБлокировки = ТекущаяДата() + 5 * 60;
			ИначеЕсли Ответ <> КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		ИначеЕсли Объект.НачалоДействияБлокировки > ТекущаяДата() + 5 * 60 Тогда
			ТекстВопроса = НСтр("ru = 'Сейчас будет завершена работа всех активных пользователей.
				|Указано слишком большое время начала действия блокировки, до которого в приложение могут успеть войти другие пользователи.
				|Рекомендуется установить время начала на 5 минут относительно текущего времени.
				|
				|• Да, чтобы скорректировать время начала и продолжить (рекомендуется);
				|• Нет, чтобы продолжить без корректировки.'");
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена,,, ЗаголовокВопроса);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				Объект.НачалоДействияБлокировки = ТекущаяДата() + 5 * 60;
			ИначеЕсли Ответ <> КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		Иначе	
			ТекстВопроса = НСтр("ru = 'Сейчас будет завершена работа всех активных пользователей.
				|Продолжить?'");
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена,,, ЗаголовокВопроса);
			Если Ответ <> КодВозвратаДиалога.ОК Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьСнятьБлокировку();
	ПоказатьОповещениеПользователя(НСтр("ru = 'Блокировка работы пользователей'"),
		"e1cib/app/Обработка.БлокировкаРаботыПользователей",
		?(Объект.ВременноЗапретитьРаботуПользователей, НСтр("ru = 'Блокировка установлена.'"), НСтр("ru = 'Блокировка снята.'")), 
		БиблиотекаКартинок.Информация32);
	СоединенияИБКлиент.УстановитьОбработчикиОжиданияЗавершенияРаботыПользователей(
		Объект.ВременноЗапретитьРаботуПользователей);
	Если Объект.ВременноЗапретитьРаботуПользователей Тогда	
		ОбновитьСтраницуСостояния(ЭтаФорма);
	Иначе
		ОбновитьСтраницуНастройки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Остановить(Команда)
	
	ОтменитьБлокировку();
	ПоказатьОповещениеПользователя(НСтр("ru = 'Блокировка работы пользователей'"),
		"e1cib/app/Обработка.БлокировкаРаботыПользователей",
		НСтр("ru = 'Блокировка отменена.'"), 
		БиблиотекаКартинок.Информация32);
	СоединенияИБКлиент.УстановитьОбработчикиОжиданияЗавершенияРаботыПользователей(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ВспомогательныеПроцедуры

&НаСервере
Процедура УстановитьСнятьБлокировку()
	
	РеквизитФормыВЗначение("Объект").ВыполнитьУстановку();
	НачальныйСтатусЗапретаРаботыПользователей = Объект.ВременноЗапретитьРаботуПользователей;
	КоличествоСеансов = ПолучитьСеансыИнформационнойБазы().Количество();
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьБлокировку()
	
	РеквизитФормыВЗначение("Объект").ОтменитьБлокировку();
	НачальныйСтатусЗапретаРаботыПользователей = Объект.ВременноЗапретитьРаботуПользователей;
	Элементы.ГруппаРежим.ТекущаяСтраница = Элементы.СтраницаНастройки;
	ОбновитьСтраницуНастройки();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтраницуНастройки()
	
	Элементы.КомандаПрименить.Видимость = Истина;
	Элементы.КомандаПрименить.КнопкаПоУмолчанию = Истина;
	Элементы.КомандаОстановить.Видимость = Ложь;
	Элементы.КомандаПрименить.Заголовок = ?(Объект.ВременноЗапретитьРаботуПользователей,
		НСтр("ru='Снять блокировку'"), НСтр("ru='Установить блокировку'"));
	Элементы.ЗапретитьРаботуРегламентныхЗаданий.Заголовок = ?(Объект.ВременноЗапретитьРаботуПользователей,
		НСтр("ru='Оставить блокировку работы регламентных заданий'"), НСтр("ru='Также запретить работу регламентных заданий'"));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСтраницуСостояния(Форма)
	
	Форма.Элементы.КомандаОстановить.Видимость = Истина;
	Форма.Элементы.КомандаПрименить.Видимость = Ложь;
	Форма.Элементы.КомандаЗакрыть.КнопкаПоУмолчанию = Истина;
	ОбновитьСостояниеБлокировки(Форма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьСостояниеБлокировки(Форма)
	
	Форма.Элементы.Состояние.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru='Пожалуйста, подождите...
			|Работа пользователей завершается. Осталось активных сеансов: %1'"),
			Форма.КоличествоСеансов);
	
КонецПроцедуры

#КонецОбласти
