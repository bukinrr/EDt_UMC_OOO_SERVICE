#Область РазделОписанияПеременных

&НаКлиенте
Перем соотвКешИзображенийШаблонов;

&НаКлиенте
Перем СтрокаПереходСтроки, СтрокаПеренос;

#КонецОбласти

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Элементы.КомандаВывестиАнамнез.Видимость = 
		ЗначениеЗаполнено(УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ШаблонАнамнезаЖизни"));
		
	ПросмотрДеревом = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаПросмотраИсторииБолезни", "ИерархическийПросмотрПриемов", Ложь);
	Элементы.ПриемыИерархическийПросмотр.Пометка = ПросмотрДеревом;

	МногостраничныйПросмотр = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаПросмотраИсторииБолезни", "МногостраничныйПросмотр", Ложь);
	Элементы.МногостраничныйПросмотр.Пометка = МногостраничныйПросмотр;
	
	ПросмотрПоРазделам = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаПросмотраИсторииБолезни", "ПросмотрПоРазделам", Ложь);
	Элементы.ПросмотрПоРазделам.Пометка = ПросмотрПоРазделам;
	
	ПечататьКаждыйПриемНаНовомЛисте = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаПросмотраИсторииБолезни", "ПечататьКаждыйПриемНаНовомЛисте", Истина);
	Элементы.ПечататьКаждыйПриемНаНовомЛисте.Пометка = ПечататьКаждыйПриемНаНовомЛисте;
	
	Клиент = Параметры.Клиент;
	МедицинскаяКарта = Параметры.МедицинскаяКарта;
	
	ИспользуетсяРазделениеПечатныхВерсийПриема = ЗначениеЗаполнено(УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("РежимРазметкиКлиентскойОбластиШаблоновПриема"));
	
	Если Метаданные.Документы.Найти("РасчетФакторовРиска") <> Неопределено Тогда // Версия КОРП
		ИспользуютсяФакторыРиска = Истина;
		
		мРеквизиты = Новый Массив;
		ТипыМедицинскогоДокумента = Новый Массив;
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.РасчетФакторовРиска"));
		мРеквизиты.Добавить(Новый РеквизитФормы("Документ", Новый ОписаниеТипов(ТипыМедицинскогоДокумента),"ФакторыРиска", "Документ"));
		ИзменитьРеквизиты(мРеквизиты);
		
		ЭлементДокумента = Элементы.Добавить("ФакторыРискаДокументПриема", Тип("ПолеФормы"), Элементы.ФакторыРиска);
		ЭлементДокумента.Вид = ВидПоляФормы.ПолеВвода;
		ЭлементДокумента.ПутьКДанным = "ФакторыРиска.Документ";
		ЭлементДокумента.ТолькоПросмотр = Истина;
	Иначе
		Элементы.СтраницаФакторыРиска.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьКонстантыФормы();
	
	Если ЗначениеЗаполнено(Клиент) И ЗначениеЗаполнено(МедицинскаяКарта) Тогда
		ЗаполнитьРеквизитПриемы();
		РаботаСШаблонамиHTMLКлиентСервер.ИнициализироватьНастройкиИзображенийПриема(соотвКешИзображенийШаблонов, СписокШаблонов, ЭтаФорма.УникальныйИдентификатор);
		Если ПросмотрДеревом Тогда
			РазвернутьДеревоПриёмов();
		КонецЕсли;
		ЗагрузитьПриемы();
		
		ОбновитьФакторыРискаНаКлиента();
	КонецЕсли;
	
	МногостраничныйПросмотрПриИзменении();
	НастроитьСостояниеФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Клиент = Параметры.Клиент;
	МедицинскаяКарта = Параметры.МедицинскаяКарта;
	
	ОтборПриИзменении(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиФормы = Новый Структура;
	НастройкиФормы.Вставить("ИерархическийПросмотрПриемов", ПросмотрДеревом);
	НастройкиФормы.Вставить("МногостраничныйПросмотр",		МногостраничныйПросмотр);
	НастройкиФормы.Вставить("ПечататьКаждыйПриемНаНовомЛисте", ПечататьКаждыйПриемНаНовомЛисте);
	НастройкиФормы.Вставить("ПросмотрПоРазделам",           ПросмотрПоРазделам);
	
	РаботаСФормамиСервер.СохранитьНастройкиФормы(НастройкиФормы, "ФормаПросмотраИсторииБолезни"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.МедицинскиеКарты") Тогда
		
		МедицинскаяКарта = ВыбранноеЗначение;
		
		Приемы.ПолучитьЭлементы().Очистить();
	
		ЗаполнитьРеквизитПриемы();
		РаботаСШаблонамиHTMLКлиентСервер.ИнициализироватьНастройкиИзображенийПриема(соотвКешИзображенийШаблонов, СписокШаблонов, ЭтаФорма.УникальныйИдентификатор);
		Если ПросмотрДеревом Тогда
			РазвернутьДеревоПриёмов();
		КонецЕсли;
		
		НастроитьСостояниеФормы();
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененСоставФайлов" Тогда
		Если ТипЗнч(Источник) = Тип("СправочникСсылка.Клиенты") Тогда 
			Если Источник = Клиент Тогда 
				УстановитьПодсказкуКомандеПрикрепленныеФайлы(Параметр);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Источник) = Тип("ДокументСсылка.Прием") Тогда
			Если СписокПриемов.НайтиПоЗначению(Источник) <> Неопределено Тогда 
				ОтборПриИзменении(Неопределено);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВключитьМногостраничныйПросмотр(Команда)
	
	МногостраничныйПросмотр = Не МногостраничныйПросмотр;
	Если Не МногостраничныйПросмотр И ПросмотрПоРазделам Тогда
		ПросмотрПоРазделам = Ложь;
		Элементы.ПросмотрПоРазделам.Пометка = Ложь;
	КонецЕсли;
	МногостраничныйПросмотрПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура МногостраничныйПросмотрПриИзменении()
	
	Если МногостраничныйПросмотр Тогда
		Элементы.МногостраничныйПросмотр.Пометка = Истина;
		Элементы.ПриемыПоказывать.Видимость = Истина;
		Элементы.ОтметитьВсе.Видимость = Истина;
		Элементы.СнятьВсе.Видимость = Истина;
	Иначе
		Элементы.МногостраничныйПросмотр.Пометка = Ложь;
		Элементы.ПриемыПоказывать.Видимость = Ложь;
		Элементы.ОтметитьВсе.Видимость = Ложь;
		Элементы.СнятьВсе.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ФакторыРискаПоказывать.Видимость = МногостраничныйПросмотр;
	
	ЗагрузитьПриемы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВключитьПросмотрПоРазделам(Команда)
	
	ПросмотрПоРазделам = Не ПросмотрПоРазделам;
	ПросмотрПоРазделамПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ПросмотрПоРазделамПриИзменении()
	
	Если ПросмотрПоРазделам Тогда
		Элементы.ПросмотрПоРазделам.Пометка = Истина;
		
		Если Не МногостраничныйПросмотр Тогда 
			МногостраничныйПросмотр = Истина;
			МногостраничныйПросмотрПриИзменении();
		КонецЕсли;		
		
		УстановленоОтображениеДокумента = Ложь;
		Доки = Приемы.ПолучитьЭлементы();
		Для Каждого Док Из Доки Цикл 
			Для Каждого ПодчиненныйДокумент Из Док.ПолучитьЭлементы() Цикл
				Если ПодчиненныйДокумент.Показывать Тогда
					УстановленоОтображениеДокумента = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если УстановленоОтображениеДокумента Тогда 
				Прервать;	
			КонецЕсли;
		КонецЦикла;
		
		Если Не УстановленоОтображениеДокумента Тогда 
			УстановитьСнятьОтображениеВсехДокументов(Истина);
		Иначе
			ЗагрузитьПриемыПоРазделам();
		КонецЕсли;
		
	Иначе
		Элементы.ПросмотрПоРазделам.Пометка = Ложь;
		МногостраничныйПросмотрПриИзменении();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметитьВсе(Команда)
	
	УстановитьСнятьОтображениеВсехДокументов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)
	
	УстановитьСнятьОтображениеВсехДокументов(Ложь);

КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьОтображениеВсехДокументов(ЗначениеФлагаПоказывать)
	
	Доки = Приемы.ПолучитьЭлементы();
	
	Для Каждого Док Из Доки Цикл 
		
		Док.Показывать = ЗначениеФлагаПоказывать;
		
		Для Каждого ПодчиненныйДокумент Из Док.ПолучитьЭлементы() Цикл
			ПодчиненныйДокумент.Показывать = ЗначениеФлагаПоказывать;
		КонецЦикла;
		
	КонецЦикла;
	
	ПриемыПечататьПриИзменении("");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтменитьВсеПервичного(Команда)
	УстановитьСнятьОтображениеВсехДокументовПервичного(Истина);
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсеПервичного(Команда)
	УстановитьСнятьОтображениеВсехДокументовПервичного(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСнятьОтображениеВсехДокументовПервичного(ЗначениеФлагаПоказывать)
	
	ТекущийЭлементДерева = Приемы.НайтиПоИдентификатору(Элементы.Приемы.ТекущаяСтрока);
	Если ТекущийЭлементДерева <> Неопределено Тогда
		
		Если ТекущийЭлементДерева.ПолучитьРодителя() = Неопределено Тогда
			ТекущийЭлемент1Ур = ТекущийЭлементДерева;
		Иначе
			ТекущийЭлемент1Ур = ТекущийЭлементДерева.ПолучитьРодителя();
		КонецЕсли;
		
		Для Каждого Элемент2Ур Из ТекущийЭлемент1Ур.ПолучитьЭлементы() Цикл
			Элемент2Ур.Показывать = ЗначениеФлагаПоказывать;
		КонецЦикла;
		ТекущийЭлемент1Ур.Показывать = ЗначениеФлагаПоказывать;
		
	КонецЕсли;
	
	ПриемыПечататьПриИзменении("");
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВывестиТитульник(Команда)
	
	Если ЗначениеЗаполнено(МедицинскаяКарта) Тогда
		МедицинскаяДеятельностьКлиент.НапечататьМедкарту(МедицинскаяКарта, ДатаНачала, ДатаОкончания);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура КомандаВывестиАнамнез(Команда)
	
	Если Не Элементы.КомандаВывестиАнамнез.Пометка Тогда
		Элементы.КомандаВывестиАнамнез.Пометка = Истина;
		ПолеОсмотр = ПолучитьТекстАнамнеза(Клиент);
	Иначе
		ПриемыПечататьПриИзменении("");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИерархическийПросмотр(Команда)
	
	Элементы.ПриемыИерархическийПросмотр.Пометка = Не Элементы.ПриемыИерархическийПросмотр.Пометка;
	ПросмотрДеревом = Элементы.ПриемыИерархическийПросмотр.Пометка;
	ЗаполнитьРеквизитПриемы();
	РаботаСШаблонамиHTMLКлиентСервер.ИнициализироватьНастройкиИзображенийПриема(соотвКешИзображенийШаблонов, СписокШаблонов, ЭтаФорма.УникальныйИдентификатор);
	Если ПросмотрДеревом Тогда
		РазвернутьДеревоПриёмов();
	КонецЕсли;
	Элементы.ПриемыКонтекстноеМенюОтменитьВсеПервичного.Видимость	= ПросмотрДеревом И МногостраничныйПросмотр;
	Элементы.ПриемыКонтекстноеМенюСнятьВсеПервичного.Видимость		= ПросмотрДеревом И МногостраничныйПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ПечататьКаждыйПриемНаНовомЛисте(Команда)
	
	ПечататьКаждыйПриемНаНовомЛисте = Не ПечататьКаждыйПриемНаНовомЛисте;
	Элементы.ПечататьКаждыйПриемНаНовомЛисте.Пометка = ПечататьКаждыйПриемНаНовомЛисте;
	
	ИзменитьВыводДокументовСНовойСтраницыВСформированномHTML();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПолеОсмотрПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	ОчиститьПолеПриёма();
	ЗаполнитьМедкартуПоОсновной();
	ЗаполнитьРеквизитПриемы();
	РаботаСШаблонамиHTMLКлиентСервер.ИнициализироватьНастройкиИзображенийПриема(соотвКешИзображенийШаблонов, СписокШаблонов, ЭтаФорма.УникальныйИдентификатор);
	
	ОбновитьФакторыРискаНаКлиента();
	
	Если ПросмотрДеревом Тогда
		РазвернутьДеревоПриёмов();
	КонецЕсли;
	НастроитьСостояниеФормы();
	ПросмотрПоРазделамПриИзменении();

КонецПроцедуры

&НаКлиенте
Процедура ОтборПриИзменении(Элемент)
	
	ОчиститьПолеПриёма();
	Если ЗначениеЗаполнено(Клиент) Тогда
		
		ЗаполнитьРеквизитПриемы();
		РаботаСШаблонамиHTMLКлиентСервер.ИнициализироватьНастройкиИзображенийПриема(соотвКешИзображенийШаблонов, СписокШаблонов, ЭтаФорма.УникальныйИдентификатор);
		Если ПросмотрДеревом Тогда
			РазвернутьДеревоПриёмов();
		КонецЕсли;
		НастроитьСостояниеФормы();
		
		Если Не ПросмотрПоРазделам Тогда 
			ЗагрузитьПриемы();
		Иначе
			ЗагрузитьПриемыПоРазделам();
		КонецЕсли;
		
		ОбновитьФакторыРискаНаКлиента(Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемыПриАктивизацииСтроки(Элемент)
	
	Если Не МногостраничныйПросмотр Тогда
		ВывестиДанныеТекущегоПриема();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиДанныеТекущегоПриема()
	
	Если Элементы.Приемы.ТекущиеДанные <> Неопределено Тогда
		ЗагрузитьДанныеОсмотра();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Приемы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Поле = Элементы.ПриемыКоличествоФайлов Тогда
		ФормаФайловДокумента = ПолучитьФорму("ОбщаяФорма.ФормаФайлов", Новый Структура("Владелец, ВыводитьИерархию, ВключатьПредпросмотр", ТекущиеДанные.ДокументПриема, Ложь, Истина), ЭтаФорма);
		ФормаФайловДокумента.ОткрытьМодально();
	Иначе
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ТекущиеДанные.ДокументПриема);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемыПечататьПриИзменении(Элемент)
	
	Если Не ПросмотрПоРазделам Тогда
		ЗагрузитьПриемы();
	Иначе
		ЗагрузитьПриемыПоРазделам();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗаполнитьКонстантыФормы()
	
	// Переход страницы после каждого приёма (кроме последнего) будет добавляться только при включении настройки переноса.
	СтрокаПереходСтроки = СтрШаблон("<br name='%1'>", NameТеговРазделителейДокументов());
	СтрокаПеренос = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLРазрывСтраницы(Ложь);
	СтрокаПеренос = СтрШаблон("<span name='%1'>" + НРег(СтрокаПеренос) + "</span>", NameТеговРазделителейДокументов());
	
КонецПроцедуры

// ----------- Заполнение списка приемов ---------------------------------.

&НаСервере
Процедура ЗаполнитьРеквизитПриемы()
	
	СтруктураПриемы = ПолучитьПриемыПоКлиенту(Клиент);
	СтруктураПриемы.Вставить("HTMLПредставленияДокументов", HTMLПредставлениеМедДокументов(СтруктураПриемы.Список, УникальныйИдентификатор));
	ЗагрузитьПриемыВРеквизит(СтруктураПриемы);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПриемыПоКлиенту(ЭтотКлиент)
	
	Запрос = Новый Запрос();
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Прием.Ссылка КАК Ссылка,
		|	Прием.Врач КАК Врач,
		|	Прием.Дата КАК Дата,
		|	Прием.ОписаниеШаблоновПриема КАК ОписаниеШаблоновПриема,
		|	ЕСТЬNULL(Прием.ПервичныйПрием.Закрыт, ИСТИНА) КАК Закрыт,
		|	Прием.ПервичныйПрием КАК ПервичныйПрием
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	Прием.Клиент = &Клиент
		|	И НЕ Прием.ПометкаУдаления
		|	И &Условия
		|";
	
	мУсловия = Новый Массив;
	Если ЗначениеЗаполнено(МедицинскаяКарта) Тогда
		мУсловия.Добавить("Прием.МедицинскаяКарта = &Карта");
		Запрос.УстановитьПараметр("Карта", МедицинскаяКарта);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаНачала) Тогда
		мУсловия.Добавить("НачалоПериода(Прием.Дата,ДЕНЬ) >= &ДатаНач");
		Запрос.УстановитьПараметр("ДатаНач", ДатаНачала);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаОкончания) Тогда
		мУсловия.Добавить("НачалоПериода(Прием.Дата,ДЕНЬ) <= &ДатаКон");
		Запрос.УстановитьПараметр("ДатаКон", ДатаОкончания);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Врач) Тогда
		мУсловия.Добавить("Прием.Врач В ИЕРАРХИИ (&Врач)");
		Запрос.УстановитьПараметр("Врач", Врач);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Специализация) Тогда
		мУсловия.Добавить("Прием.ШаблоныПриема.ШаблонПриема В (ВЫБРАТЬ СпециализацииШаблонов.ШаблонОсмотра ИЗ РегистрСведений.СпециализацииШаблоновОсмотра КАК СпециализацииШаблонов ГДЕ СпециализацииШаблонов.Специализация = &Специализация)");
		Запрос.УстановитьПараметр("Специализация", Специализация);
	КонецЕсли;
	
	Если мУсловия.Количество() = 0 Тогда
		Запрос.УстановитьПараметр("Условия", Истина);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Условия", СтрСоединить(мУсловия, Символы.ПС + "	И "));
	КонецЕсли;
	
	Если Метаданные.Документы.Найти("ВрачебнаяКомиссия") <> Неопределено Тогда
		МодульМенеджераВК = ОбщегоНазначения.ОбщийМодуль("Документы.ВрачебнаяКомиссия");
		МодульМенеджераВК.ДополнитьТекстЗапросаДляПолученияПриемовЭМКПоВрачебнойКомиссии(ЭтотОбъект, ТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|УПОРЯДОЧИТЬ ПО Дата";
	
	Если ПросмотрДеревом Тогда
		
		ТекстЗапроса = ТекстЗапроса + "
			|ИТОГИ
			|	МАКСИМУМ(ПервичныйПрием) КАК Ссылка,
			|	МАКСИМУМ(Закрыт)
			|ПО
			|	Прием.ПервичныйПрием";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Клиент", ЭтотКлиент);
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить();
	ДеревоПриемов = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ТаблицаПриемов = Результат.Выгрузить();
	// Перевод дерева в плоскую таблицу
	Если ПросмотрДеревом Тогда
		ТаблицаПриемов.Очистить();
		Для Каждого СтрокаПервичныйПрием Из ДеревоПриемов.Строки Цикл
			Для Каждого СтрокаПрием Из СтрокаПервичныйПрием.Строки Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаПриемов.Добавить(), СтрокаПрием);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	СписокПриемов.ЗагрузитьЗначения(ТаблицаПриемов.ВыгрузитьКолонку("Ссылка"));
	
	// Формируем список шаблонов осмотра в приемах
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема,
		|	Прием.Дата КАК ДатаПриема
		|ПОМЕСТИТЬ ШаблоныПриемов
		|ИЗ
		|	Документ.Прием КАК Прием
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|		ПО Прием.Ссылка В(&СписокПриемов)
		|		 И Прием.Ссылка = ПриемШаблоныПриема.Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЕСТЬNULL(ВерсииШаблонов.ВерсияШаблона, ШаблоныПриемов.ШаблонПриема) КАК ШаблонПриема
		|ИЗ
		|	ШаблоныПриемов КАК ШаблоныПриемов
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ДатыВерсий.ШаблонПриема КАК ШаблонПриема,
		|			ДатыВерсий.ДатаПриема КАК ДатаПриема,
		|			ДатыВерсий.ДатаВерсии КАК ДатаВерсии,
		|			ВерсииШаблоновHTML.Ссылка КАК ВерсияШаблона
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ШаблоныПриемов.ШаблонПриема КАК ШаблонПриема,
		|				ШаблоныПриемов.ДатаПриема КАК ДатаПриема,
		|				МАКСИМУМ(ВерсииШаблоновHTML.Дата) КАК ДатаВерсии
		|			ИЗ
		|				ШаблоныПриемов КАК ШаблоныПриемов
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
		|					ПО ШаблоныПриемов.ШаблонПриема = ВерсииШаблоновHTML.Владелец
		|						И (ВерсииШаблоновHTML.Дата >= ШаблоныПриемов.ДатаПриема)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				ШаблоныПриемов.ШаблонПриема,
		|				ШаблоныПриемов.ДатаПриема) КАК ДатыВерсий
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
		|				ПО ДатыВерсий.ШаблонПриема = ВерсииШаблоновHTML.Владелец
		|					И (ВерсииШаблоновHTML.Дата = ДатыВерсий.ДатаВерсии)) КАК ВерсииШаблонов
		|		ПО ШаблоныПриемов.ШаблонПриема = ВерсииШаблонов.ШаблонПриема
		|			И ШаблоныПриемов.ДатаПриема = ВерсииШаблонов.ДатаПриема";
	
	Запрос.УстановитьПараметр("СписокПриемов", СписокПриемов);
	СписокШаблонов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ШаблонПриема"));
	
	// Поиск файлов по приемам
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХранилищеДополнительнойИнформации.Объект КАК Прием,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ХранилищеДополнительнойИнформации.Ссылка) КАК КоличествоФайлов
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
		|ГДЕ
		|	НЕ ХранилищеДополнительнойИнформации.ПометкаУдаления
		|	И ХранилищеДополнительнойИнформации.Объект В(&СписокПриемов)
		|
		|СГРУППИРОВАТЬ ПО
		|	ХранилищеДополнительнойИнформации.Объект";
	
	Запрос.УстановитьПараметр("СписокПриемов", СписокПриемов);
	СоотвПриемыСФайлами = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СоотвПриемыСФайлами.Вставить(Выборка.Прием, Выборка.КоличествоФайлов);
	КонецЦикла;
	
	Возврат Новый Структура("Дерево, Список, ПриемыСФайлами", ДеревоПриемов, ТаблицаПриемов, СоотвПриемыСФайлами);
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПриемыВРеквизит(СтруктураПриемы)
	
	СтарыеОтметкиПриемов = ПолучитьОтметкиПриемов(Приемы);
	
	ГруппыПриемов = Приемы.ПолучитьЭлементы();
	ГруппыПриемов.Очистить();
	
	Если Не ПросмотрДеревом Тогда
		
		Для Каждого ДокументПриема Из СтруктураПриемы.Список Цикл
			
			ИмяТипаДокумента = ДопСерверныеФункции.ИмяСсылочногоТипа(ДокументПриема.Ссылка);
			
			НоваяСтрока = ГруппыПриемов.Добавить();
			НоваяСтрока.ДокументПриема = ДокументПриема.Ссылка;
			НоваяСтрока.Закрыт = ДокументПриема.Закрыт;
			Если ИмяТипаДокумента = "Документ.Прием" Тогда
				HTMLПредставление = СтруктураПриемы.HTMLПредставленияДокументов.Получить(ДокументПриема.Ссылка);
				Если ЗначениеЗаполнено(HTMLПредставление) Тогда
					НоваяСтрока.ТекстОсмотра = РаботаСDOMКлиентСервер.ПолучитьКодТелаHTMLИзКодаДокумента(HTMLПредставление);
				КонецЕсли;
				НоваяСтрока.ТипДокументаПриема = "Прием";
			ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" Тогда // Версия КОРП
				НоваяСтрока.ТекстОсмотра = ДокументПриема.Ссылка.HTMLПредставление;
				НоваяСтрока.ТипДокументаПриема = "ВК";
			Иначе
				НоваяСтрока.ТипДокументаПриема = "Медосмотр";
			КонецЕсли;
			НоваяСтрока.КоличествоФайлов = СтруктураПриемы.ПриемыСФайлами.Получить(ДокументПриема.Ссылка);
			НоваяСтрока.ДатаДокументаПриема = ДокументПриема.Дата;
			НоваяСтрока.Врач = ДокументПриема.Врач;
			НоваяСтрока.ОписаниеШаблоновПриема = ДокументПриема.ОписаниеШаблоновПриема;
			
			СтараяОтметка = СтарыеОтметкиПриемов.Получить(НоваяСтрока.ДокументПриема);
			Если СтараяОтметка <> Неопределено Тогда
				НоваяСтрока.Показывать = СтараяОтметка;
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		ЗаполнитьВладельцевПоДереву(СтруктураПриемы.Дерево, ГруппыПриемов, СтруктураПриемы, СтарыеОтметкиПриемов);
	КонецЕсли;
	
	// Отметка приема как отображаемого, если он единственный
	Элементы1Ур = Приемы.ПолучитьЭлементы();
	Если Элементы1Ур.Количество() = 1
		И Элементы1Ур[0].ПолучитьЭлементы().Количество() = 0
	Тогда
		Элементы1Ур[0].Показывать = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОтметкиПриемов(РеквизитПриемы)
	
	Результат = Новый Соответствие;
	
	Для Каждого Элемент1Ур Из РеквизитПриемы.ПолучитьЭлементы() Цикл
		
		Результат.Вставить(Элемент1Ур.ДокументПриема, Элемент1Ур.Показывать);
		Для Каждого Элемент2Ур Из Элемент1Ур.ПолучитьЭлементы() Цикл
			Результат.Вставить(Элемент2Ур.ДокументПриема, Элемент2Ур.Показывать);
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// ----------- Вывод протоколов в поле HTML ------------------------------.
&НаКлиенте
Процедура ЗагрузитьПриемы()
	
	Перем СтрокиДокументов;
	Перем РазделительПриёмов;
	Перем ТекстHTML;
	Перем ТекстHTMLПриемов;
	
	Элементы.КомандаВывестиАнамнез.Пометка = Ложь;
	
	СформироватьИсходныеДанныеДляПросмотра(СтрокиДокументов, ТекстHTML, ТекстHTMLПриемов);
	
	Для Каждого Док Из СтрокиДокументов Цикл
		Если Док.Показывать Тогда
			РазделительПриёмов = ?(Док = СтрокиДокументов[0] Или ПечататьКаждыйПриемНаНовомЛисте, СтрокаПеренос, СтрокаПереходСтроки);
			ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстHTMLПриемов, Док.ТекстОсмотра, РазделительПриёмов);
		КонецЕсли;
	КонецЦикла;
	
	Если ИспользуютсяФакторыРиска Тогда
		МедицинскаяДеятельностьКлиентПереопределяемый.СформироватьОбщийТекстПриемовПриЗагрузкеПЭМК(ЭтотОбъект, СтрокиДокументов, ТекстHTML, ТекстHTMLПриемов, СтрокаПеренос, СтрокаПереходСтроки);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстHTMLПриемов) Тогда
		Попытка
			// Исключение из печатной версии областей, отмеченных как "не для медкарты".
			Если ИспользуетсяРазделениеПечатныхВерсийПриема Тогда
				ТекстHTMLПриемов = РаботаСШаблонамиHTMLКлиентСервер.ТекстШаблонаОсмотраПоРежиму(ТекстHTMLПриемов, Ложь);
			КонецЕсли;
			
			HTMLДокумент = РаботаСDOMКлиентСервер.СоздатьДокументDOM(ТекстHTMLПриемов);
			ТекстHTMLПриемов = РаботаСDOMКлиентСервер.ПолучитьТекстHTMLДокументаDOM(РаботаСШаблонамиHTMLКлиентСервер.УдалитьСтильВысотыИзУзловКорняДокумента(HTMLДокумент));
		Исключение КонецПопытки;
	КонецЕсли;
	
	СформироватьПолныйТекстПриемовКлиент(ТекстHTML, ТекстHTMLПриемов);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПриемыПоРазделам()
	
	Перем СтрокиДокументов;
	Перем РазделительПриёмов;
	Перем ТекстHTML;
	Перем ТекстHTMLПриемов;
	
	Элементы.КомандаВывестиАнамнез.Пометка = Ложь;
	
	СформироватьИсходныеДанныеДляПросмотра(СтрокиДокументов, ТекстHTML, ТекстHTMLПриемов);
	
	ДокументыДляВывода = Новый Массив;
	Для Каждого ЭлементДокумент Из СтрокиДокументов Цикл
		Если ЭлементДокумент.Показывать Тогда
			ДокументыДляВывода.Добавить(ЭлементДокумент.ДокументПриема);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеПоРазделам = ПолучитьДанныеШаблоновПоРазделам(МедицинскаяКарта, ДокументыДляВывода, УникальныйИдентификатор);
	
	СтрокиДокументов = ДанныеПоРазделам.ТекстыПриемаПоРазделам;
	Разделы			 = ДанныеПоРазделам.Разделы;
	
	// Стандратные конструкции HTML.
	СтрокаЗаголовокНачало = "<h5 align=""right"">";
	СтрокаЗаголовокКонец  = "</h5>";
	СтрокаПереходСтрокиВнутр = "<br/>";
	СтрокаРазрывСтраницы  = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLРазрывСтраницы(Ложь);
	
	ЭтоПервыйРаздел = Истина;
	
	// Формируется общий текст приемов.
	Для Каждого ОписаниеРаздела Из Разделы Цикл
		
		ТекстРаздела = "";
		
		Если ОписаниеРаздела.ВыводитьЗаголовокРаздела Тогда
			СтрокаЗаголовок = СтрокаЗаголовокНачало + ОписаниеРаздела.Наименование + СтрокаЗаголовокКонец;
		Иначе
			СтрокаЗаголовок = "";
		КонецЕсли;
		
		Если ОписаниеРаздела.ТипРаздела = ПредопределенноеЗначение("Перечисление.ТипыРазделовМедицинскихКарт.ВыводШаблонов") Тогда
			ПервыйШалонРаздела = Истина;
			Для Каждого СтрокаДокумента Из СтрокиДокументов Цикл
				Если СтрокаДокумента.Раздел = ОписаниеРаздела.Раздел
					И Не ПустаяСтрока(СтрокаДокумента.ТекстОсмотра)
				Тогда
					Если ПервыйШалонРаздела Тогда
						ПервыйШалонРаздела = Ложь;
					ИначеЕсли СтрокаДокумента.ПечатаетсяБезПереходаНаНовуюСтраницу = Истина Тогда
						ТекстРаздела = ТекстРаздела + СтрокаПереходСтрокиВнутр;
					Иначе
						ТекстРаздела = ТекстРаздела + СтрокаРазрывСтраницы;
					КонецЕсли;
					
					ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLШапкаШаблонаПриема(СтрокаДокумента.ДатаПриема, СтрокаДокумента.Сотрудник, СтрокаДокумента.ШаблонПриема)
						+ СтрокаДокумента.ТекстОсмотра;
					
					ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстРаздела, ТекстОсмотра, "");
				КонецЕсли;
			КонецЦикла;
		Иначе
			МедицинскаяДеятельностьКлиентПереопределяемый.ДополнитьДаннымиПриЗагрузкаРазделаПоТипуПЭМК(ЭтотОбъект, ОписаниеРаздела, ТекстРаздела);
		КонецЕсли;
		
		Если ЭтоПервыйРаздел Тогда
			ЭтоПервыйРаздел = Ложь;
		Иначе
			// Отступ раздела от предыдущего
			Если ПустаяСтрока(ТекстРаздела) Тогда
				Если Не ПустаяСтрока(СтрокаЗаголовок) Тогда
					СтрокаЗаголовок = СтрокаПереходСтрокиВнутр + СтрокаЗаголовок;
				КонецЕсли;
			Иначе
				// Если раздел не пустой, то печатается с новой страницы.
				СтрокаЗаголовок = СтрокаРазрывСтраницы + СтрокаЗаголовок;
			КонецЕсли;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстHTMLПриемов, СтрокаЗаголовок + ТекстРаздела, "");
	КонецЦикла;
	
	ТекстHTMLПриемов = СтрЗаменить(ТекстHTMLПриемов, "<BR>""", "<BR>");
	СформироватьПолныйТекстПриемовКлиент(ТекстHTML, ТекстHTMLПриемов);
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьИсходныеДанныеДляПросмотра(СтрокиДокументов, ТекстHTML, ТекстHTMLПриемов)

	Доки = Приемы.ПолучитьЭлементы();
	
	СтрокиДокументов = Новый Массив;
	Для Каждого Док Из Доки Цикл
		СтрокиДокументов.Добавить(Док);
		Для Каждого Док2Ур Из Док.ПолучитьЭлементы() Цикл
			СтрокиДокументов.Добавить(Док2Ур);
		КонецЦикла;
	КонецЦикла;
	
	// Шапка берется за основу документа
	ТекстHTML = "";
	Если ПустаяСтрока(ТекстHTML) Тогда 
		ТекстHTML = РаботаСHTMLКлиентСервер.ПолучитьТекстHTMLПустогоДокумента();	
	КонецЕсли;
	
	ТекстHTMLПриемов = "";
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПолныйТекстПриемовКлиент(ТекстHTML, ТекстHTMLПриемов)

	#Если ВебКлиент Или МобильныйКлиент Тогда 
		ПолеОсмотр = СформироватьПолныйТекстПриемовСервер(ТекстHTML, ТекстHTMLПриемов, соотвКешИзображенийШаблонов, ЭтаФорма.УникальныйИдентификатор);
	#Иначе
		ПолеОсмотр = СформироватьПолныйТекстПриемов(ТекстHTML, ТекстHTMLПриемов, соотвКешИзображенийШаблонов, ЭтаФорма.УникальныйИдентификатор);
	#КонецЕсли
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьДанныеШаблоновПоРазделам(МедицинскаяКарта, ДокументыПриемов, УникальныйИдентификатор)
	
	ДанныеПоРазделам = ДанныеШаблоновПоРазделам(МедицинскаяКарта, ДокументыПриемов, УникальныйИдентификатор);
	
	// Если есть приёмы, где строки шаблонов без текста HTML, делаем 1 попытку на документ по его формированию.
	ДокументыНаАктуализацию = Новый Массив;
	Для Каждого СтрокаДокумента Из ДанныеПоРазделам.ТекстыПриемаПоРазделам Цикл
		Если ПустаяСтрока(СтрокаДокумента.ТекстОсмотра)
			И СтрокаДокумента.ВидШаблона = ПредопределенноеЗначение("Перечисление.ВидыШаблонов.HTMLШаблон")
		Тогда
			ДокументыНаАктуализацию.Добавить(СтрокаДокумента.Прием);
			Продолжить;
		КонецЕсли;
		
		// Проверка корректности текста, сохраненного у строки шаблона приема. Актуально для старых случайных значений текста в табличной части шаблонов приема.
		Попытка
			ДокументHTML = РаботаСDOMКлиентСервер.СоздатьДокументDOM();
			РаботаСDOMКлиентСервер.ДобавитьПроизвольныйHTMLВЭлемент(ДокументHTML.Тело, СтрокаДокумента.ТекстОсмотра);
		Исключение
			ДокументыНаАктуализацию.Добавить(СтрокаДокумента.Прием);
		КонецПопытки;
	КонецЦикла;
	
	// Обработка случая наличия документов, требующих актуализации текста осмотра в табличной части шаблонов.
	Если ДокументыНаАктуализацию.Количество() <> 0 Тогда
		
		// Актуализируем у приёмов тексты осмотра, потом получаем данные заново.
		Для Каждого ДокументПриема Из ДокументыНаАктуализацию Цикл
			ДокументыПриемаСервер.АктуализироватьТекстОсмотраШаблоновПриема(ДокументПриема);
		КонецЦикла;
		ДанныеПоРазделам = ДанныеШаблоновПоРазделам(МедицинскаяКарта, ДокументыПриемов, УникальныйИдентификатор);
	КонецЕсли;
	
	Возврат ДанныеПоРазделам;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеШаблоновПоРазделам(МедицинскаяКарта, ДокументыПриемов, УникальныйИдентификатор)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ДанныеЭЦП = ПолучитьДанныеЭЦП(ДокументыПриемов);
	ТаблицыРисунковПриемов = ПолучитьТаблицыРисунковПриемов(ДокументыПриемов, УникальныйИдентификатор);
	ТаблицыДобавленныхИзображенийПриемов = ПолучитьТаблицыДобавленныхИзображенийПриемов(ДокументыПриемов, УникальныйИдентификатор);
	
	тзШаблоны = Новый ТаблицаЗначений;
	тзШаблоны.Колонки.Добавить("Прием", 		Новый ОписаниеТипов("ДокументСсылка.Прием"));
	тзШаблоны.Колонки.Добавить("ШаблонПриема", 	Новый ОписаниеТипов("СправочникСсылка.ШаблоныHTML"));
	тзШаблоны.Колонки.Добавить("ТекстОсмотра", 	Новый ОписаниеТипов("Строка"));
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема,
		|	ПриемШаблоныПриема.УИД КАК УИД,
		|	ПриемШаблоныПриема.Ссылка.Дата КАК Дата
		|ПОМЕСТИТЬ ШаблоныПриемов
		|ИЗ
		|	Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|ГДЕ
		|	ПриемШаблоныПриема.Ссылка В(&Приемы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШаблоныПриемов.ШаблонПриема КАК ШаблонПриема,
		|	ШаблоныПриемов.Дата КАК Дата,
		|	ШаблоныПриемов.УИД КАК УИД,
		|	ВерсииШаблоновHTML.Ссылка КАК Версия,
		|	ВерсииШаблоновHTML.Дата КАК ДатаВерсии
		|ПОМЕСТИТЬ ВерсииДоДаты
		|ИЗ
		|	ШаблоныПриемов КАК ШаблоныПриемов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
		|		ПО (ВерсииШаблоновHTML.Владелец = ШаблоныПриемов.ШаблонПриема)
		|			И (ВерсииШаблоновHTML.Дата >= ШаблоныПриемов.Дата)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВерсииДокумента.ШаблонПриема КАК ШаблонПриема,
		|	ВерсииДокумента.Дата КАК ДатаДокумента,
		|	ВерсииДокумента.УИД КАК УИД,
		|	ВЫБОР
		|		КОГДА ВерсииДоДаты.Версия ЕСТЬ NULL
		|			ТОГДА ВерсииДокумента.ШаблонПриема.НеИспользоватьШапкуШаблона
		|		ИНАЧЕ ВерсииДоДаты.Версия.НеИспользоватьШапкуШаблона
		|	КОНЕЦ КАК НеИспользоватьШапкуШаблона
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВерсииДоДаты.ШаблонПриема КАК ШаблонПриема,
		|		ВерсииДоДаты.Дата КАК Дата,
		|		ВерсииДоДаты.УИД КАК УИД,
		|		МИНИМУМ(ВерсииДоДаты.ДатаВерсии) КАК ДатаАктуальнойВерсии
		|	ИЗ
		|		ВерсииДоДаты КАК ВерсииДоДаты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВерсииДоДаты.ШаблонПриема,
		|		ВерсииДоДаты.Дата,
		|		ВерсииДоДаты.УИД) КАК ВерсииДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВерсииДоДаты КАК ВерсииДоДаты
		|		ПО (ВерсииДоДаты.ШаблонПриема = ВерсииДокумента.ШаблонПриема)
		|			И (ВерсииДоДаты.УИД = ВерсииДокумента.УИД)
		|			И (ВерсииДоДаты.Дата = ВерсииДокумента.Дата)
		|			И (ВерсииДоДаты.ДатаВерсии = ВерсииДокумента.ДатаАктуальнойВерсии)";
	
	Запрос.УстановитьПараметр("Приемы", ДокументыПриемов);
	
	ИспользованиеШапкиШаблоновПриемов = Запрос.Выполнить().Выгрузить();
	
	Для Каждого ДокументПриема Из ДокументыПриемов Цикл
		
		РисункиПриема = ТаблицыРисунковПриемов.Получить(ДокументПриема);
		ДобавленныеИзображенияПриема = ТаблицыДобавленныхИзображенийПриемов.Получить(ДокументПриема);
		
		Если ТипЗнч(ДокументПриема) = Тип("ДокументСсылка.Прием") Тогда
			
			ШаблоныПриема = ДокументПриема.ШаблоныПриема;
			
			Если ШаблоныПриема.Количество() > 0 Тогда
				ОднократноДобавитьШапкуПриема = Истина;
				Для Каждого Шаблон Из ШаблоныПриема Цикл
					СтрШаблоны = тзШаблоны.Добавить();
					СтрШаблоны.Прием		= ДокументПриема;
					СтрШаблоны.ШаблонПриема = Шаблон.ШаблонПриема;
					ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.ТекстШаблонаОсмотраПоРежиму(Шаблон.ТекстДляПечати, Ложь);
					
					ДанныеЭЦПШаблона = ДанныеЭЦП.Получить(Шаблон.УИД);
					Если ДанныеЭЦПШаблона <> Неопределено Тогда
						Колонтитулы = СформироватьКолонтитулы(ДокументПриема, ДанныеЭЦПШаблона);
						ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.ДобавитьКолонтитулЭЦПВТекстТела(ТекстОсмотра, Колонтитулы);
					Иначе
						ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.УдалитьТекстHTMLЭЦП(ТекстОсмотра);
					КонецЕсли;
					
					Если Не ПустаяСтрока(Шаблон.ТекстДляПечати) Тогда
						Если Не ИспользованиеШапкиШаблоновПриемов.НайтиСтроки(Новый Структура("ШаблонПриема, ДатаДокумента", Шаблон.ШаблонПриема, ДокументПриема.Дата))[0].НеИспользоватьШапкуШаблона Тогда
							ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.УстановитьШапкуШаблона(ТекстОсмотра, Ложь, ДокументПриема);
						КонецЕсли;
						ОднократноДобавитьШапкуПриема = Ложь;
					КонецЕсли;
					
					Если ДобавленныеИзображенияПриема <> Неопределено Тогда
						ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.ВставитьДобавленныеИзображенияВТекстHTML(ТекстОсмотра, Шаблон.НомерСтроки-1, ДобавленныеИзображенияПриема, Ложь);
					КонецЕсли;
					
					Если РисункиПриема <> Неопределено Тогда
						ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.ДобавитьРисункиКартинокВТекстHTML(ТекстОсмотра, Шаблон.НомерСтроки-1, РисункиПриема, Ложь);
					КонецЕсли;
					
					СтрШаблоны.ТекстОсмотра = ТекстОсмотра;
				КонецЦикла;
				Если ОднократноДобавитьШапкуПриема Тогда
					СтрШаблоны = тзШаблоны[0];
					СтрШаблоны.ТекстОсмотра = РаботаСШаблонамиHTMLКлиентСервер.УстановитьШапкуШаблона(, Ложь, ДокументПриема);
				КонецЕсли;
			Иначе
				// Приём с пустой табличной частью шаблонов.
				Если ЗначениеЗаполнено(ДокументПриема.Основание) Тогда
					ИмяМетаданныхОснование = ДокументПриема.Основание.Метаданные().Имя;
					Если ИмяМетаданныхОснование = "ЗаказВоВнешнююЛабораторию"
						Или ИмяМетаданныхОснование = "invЗаявкаНаИсследование"
						Или ИмяМетаданныхОснование = "ЗаказНаИсследованиеВнутренний"
					Тогда 
						СтрШаблоны = тзШаблоны.Добавить();
						СтрШаблоны.Прием		= ДокументПриема;
						СтрШаблоны.ТекстОсмотра = ДокументПриема.Осмотр;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			// При добавлении в конфигурацию других отображаемых по разделам документов, здесь отрабатывается каждй из них.
		КонецЕсли;
	КонецЦикла;
	
	ВидыРазделовДляВыводаШаблонов = Новый Массив;
	ВидыРазделовДляВыводаШаблонов.Добавить(Перечисления.ТипыРазделовМедицинскихКарт.ВыводШаблонов); // Простой вывод шаблонов.
	
	НачалоТекстаЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаШаблонов.Прием КАК Прием,
		|	ТаблицаШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ТаблицаШаблонов.ТекстОсмотра КАК ТекстОсмотра
		|ПОМЕСТИТЬ ТаблицаШаблонов
		|ИЗ
		|	&ТаблицаШаблонов КАК ТаблицаШаблонов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазделыМедицинскихКарт.Порядок КАК Порядок,
		|	РазделыМедицинскихКарт.Наименование КАК Наименование,
		|	РазделыМедицинскихКарт.Ссылка КАК Ссылка,
		|	РазделыМедицинскихКарт.ВыводитьШаблоныБезРазделов КАК ВыводитьШаблоныБезРазделов,
		|	РазделыМедицинскихКарт.ВыводитьРезультатыАнализовБезШаблона КАК ВыводитьРезультатыАнализовБезШаблона,
		|	&ВыводитьПротоколыВрачебныхКомиссий КАК ВыводитьПротоколыВрачебныхКомиссий,
		|	РазделыМедицинскихКарт.ВыводитьЗаголовокРаздела КАК ВыводитьЗаголовокРаздела,
		|	РазделыМедицинскихКарт.ТипРаздела КАК ТипРаздела
		|ПОМЕСТИТЬ РазделыМедицинскихКарт
		|ИЗ
		|	Справочник.РазделыМедицинскихКарт КАК РазделыМедицинскихКарт
		|ГДЕ
		|	НЕ РазделыМедицинскихКарт.ПометкаУдаления
		|	И &УсловиеПоТипуРаздела
		|	И РазделыМедицинскихКарт.ТипМедкарты = &ТипМедкарты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаШаблонов.ТекстОсмотра КАК ТекстОсмотра,
		|	ШаблоныРазделовМедицинскихКарт.Раздел КАК Раздел,
		|	ТаблицаШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ТаблицаШаблонов.Прием КАК Прием
		|ПОМЕСТИТЬ ШаблоныПоРазделам
		|ИЗ
		|	ТаблицаШаблонов КАК ТаблицаШаблонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШаблоныРазделовМедицинскихКарт КАК ШаблоныРазделовМедицинскихКарт
		|		ПО (ШаблоныРазделовМедицинскихКарт.ШаблонПриема = ТаблицаШаблонов.ШаблонПриема)
		|			И (ШаблоныРазделовМедицинскихКарт.Раздел.ТипМедкарты = &ТипМедкарты)
		|			И (ШаблоныРазделовМедицинскихКарт.Раздел.ТипРаздела = ЗНАЧЕНИЕ(Перечисление.ТипыРазделовМедицинскихКарт.ВыводШаблонов))
		|			И (НЕ ШаблоныРазделовМедицинскихКарт.Раздел.ПометкаУдаления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШаблоныПоРазделам.Раздел.Порядок КАК Порядок,
		|	ШаблоныПоРазделам.Раздел.Наименование КАК НаименованиеРаздела,
		|	ШаблоныПоРазделам.ТекстОсмотра КАК ТекстОсмотра,
		|	ШаблоныПоРазделам.ШаблонПриема КАК ШаблонПриема,
		|	ШаблоныПоРазделам.Раздел КАК Раздел,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ПечатаетсяБезПереходаНаНовуюСтраницу КАК ПечатаетсяБезПереходаНаНовуюСтраницу,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ВидШаблона КАК ВидШаблона,
		|	ШаблоныПоРазделам.Прием КАК Прием
		|ИЗ
		|	ШаблоныПоРазделам КАК ШаблоныПоРазделам
		|ГДЕ
		|	НЕ ШаблоныПоРазделам.Раздел ЕСТЬ NULL
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазделыМедицинскихКарт.Порядок,
		|	РазделыМедицинскихКарт.Наименование,
		|	ШаблоныПоРазделам.ТекстОсмотра,
		|	ШаблоныПоРазделам.ШаблонПриема,
		|	РазделыМедицинскихКарт.Ссылка,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ПечатаетсяБезПереходаНаНовуюСтраницу,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ВидШаблона,
		|	ШаблоныПоРазделам.Прием
		|ИЗ
		|	РазделыМедицинскихКарт КАК РазделыМедицинскихКарт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШаблоныПоРазделам КАК ШаблоныПоРазделам
		|		ПО (ШаблоныПоРазделам.Раздел ЕСТЬ NULL)
		|			И (ШаблоныПоРазделам.ШаблонПриема <> ЗНАЧЕНИЕ(Справочник.ШаблоныHTML.ПустаяСсылка))
		|			И (РазделыМедицинскихКарт.ВыводитьШаблоныБезРазделов)
		|			И (РазделыМедицинскихКарт.ТипРаздела В (&ВидыРазделовДляВыводаШаблонов))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РазделыМедицинскихКарт.Порядок,
		|	РазделыМедицинскихКарт.Наименование,
		|	ШаблоныПоРазделам.ТекстОсмотра,
		|	ШаблоныПоРазделам.ШаблонПриема,
		|	РазделыМедицинскихКарт.Ссылка,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ПечатаетсяБезПереходаНаНовуюСтраницу,
		|	ВЫРАЗИТЬ(ШаблоныПоРазделам.ШаблонПриема КАК Справочник.ШаблоныHTML).ВидШаблона,
		|	ШаблоныПоРазделам.Прием
		|ИЗ
		|	РазделыМедицинскихКарт КАК РазделыМедицинскихКарт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШаблоныПоРазделам КАК ШаблоныПоРазделам
		|		ПО (ШаблоныПоРазделам.Раздел ЕСТЬ NULL)
		|			И (ШаблоныПоРазделам.ШаблонПриема = ЗНАЧЕНИЕ(Справочник.ШаблоныHTML.ПустаяСсылка))
		|			И (РазделыМедицинскихКарт.ВыводитьРезультатыАнализовБезШаблона)
		|			И (РазделыМедицинскихКарт.ТипРаздела В (&ВидыРазделовДляВыводаШаблонов))";
	
	ТекстУпорядочивания = 
		"
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Раздел
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|";
	
	КонецТекстаЗапроса =
		"ВЫБРАТЬ
		|	РазделыМедицинскихКарт.Ссылка КАК Раздел,
		|	РазделыМедицинскихКарт.Наименование КАК Наименование,
		|	РазделыМедицинскихКарт.Порядок КАК Порядок,
		|	РазделыМедицинскихКарт.ВыводитьЗаголовокРаздела КАК ВыводитьЗаголовокРаздела,
		|	РазделыМедицинскихКарт.ТипРаздела КАК ТипРаздела
		|ИЗ
		|	РазделыМедицинскихКарт КАК РазделыМедицинскихКарт
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок,
		|	Раздел";
	
	Если Метаданные.Документы.Найти("ВрачебнаяКомиссия") <> Неопределено Тогда
		МодульМенеджераВК = ОбщегоНазначения.ОбщийМодуль("Документы.ВрачебнаяКомиссия");
		МодульМенеджераВК.ДополнитьТекстЗапросаДляРазделовЭМКПоВрачебнойКомиссии(НачалоТекстаЗапроса);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = НачалоТекстаЗапроса + ТекстУпорядочивания + КонецТекстаЗапроса;
	
	Запрос.УстановитьПараметр("ТипМедкарты", МедицинскаяКарта.ВидКарты.ТипКарты);
	Запрос.УстановитьПараметр("ТаблицаШаблонов", тзШаблоны);
	Запрос.УстановитьПараметр("ВидыРазделовДляВыводаШаблонов", ВидыРазделовДляВыводаШаблонов);
	
	Если Метаданные.Документы.Найти("ВрачебнаяКомиссия") <> Неопределено Тогда
		Запрос.УстановитьПараметр("МедицинскаяКарта", МедицинскаяКарта);
		Запрос.УстановитьПараметр("ВыбранныеДокументы", ДокументыПриемов);
		Запрос.УстановитьПараметр("УсловиеПоТипуРаздела", Истина);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыводитьПротоколыВрачебныхКомиссий", "РазделыМедицинскихКарт.ВыводитьПротоколыВрачебныхКомиссий");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоТипуРаздела", "РазделыМедицинскихКарт.ТипРаздела = ЗНАЧЕНИЕ(Перечисление.ТипыРазделовМедицинскихКарт.ВыводШаблонов)");
		Запрос.УстановитьПараметр("ВыводитьПротоколыВрачебныхКомиссий", Истина);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	тзПросмотрПоРазделам = РезультатЗапроса[3].Выгрузить();
	тзРазделы = РезультатЗапроса[4].Выгрузить();
	
	Для Каждого СтрШаблон Из тзШаблоны Цикл
		Если ЗначениеЗаполнено(СтрШаблон.ШаблонПриема) Тогда 	
			Если тзПросмотрПоРазделам.Найти(СтрШаблон.ШаблонПриема) = Неопределено Тогда  
				ОбщегоНазначения.СообщитьОбОшибке(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru='Для шаблона ""%1"" не указан ни один раздел.'"),
						Строка(СтрШаблон.ШаблонПриема))
					);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТекстыПриемовПоРазделам = Новый Массив;
		
	Для Каждого стрДанныеОсмотра Из тзПросмотрПоРазделам Цикл
		Структура = Новый Структура("Раздел, НаименованиеРаздела, ТекстОсмотра, ПечатаетсяБезПереходаНаНовуюСтраницу, ВидШаблона, ШаблонПриема, Прием, Сотрудник, ДатаПриема");
		ЗаполнитьЗначенияСвойств(Структура, стрДанныеОсмотра);
		Если ДопСерверныеФункции.ИмяСсылочногоТипа(стрДанныеОсмотра.Прием) = "Документ.ВрачебнаяКомиссия" Тогда
			Структура.Сотрудник = стрДанныеОсмотра.Прием.ПредседательКомиссии;
		Иначе
			Структура.Сотрудник = стрДанныеОсмотра.Прием.Врач;
		КонецЕсли;
		Структура.ДатаПриема = стрДанныеОсмотра.Прием.Дата;
		ТекстыПриемовПоРазделам.Добавить(Структура);
	КонецЦикла;
	
	Возврат Новый Структура("ТекстыПриемаПоРазделам, Разделы", ТекстыПриемовПоРазделам, ОбщегоНазначения.ТаблицаЗначенийВМассив(тзРазделы));
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьДанныеОсмотра()
	
	ТекДанные = Элементы.Приемы.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		ТекстHTML = РаботаСHTMLКлиентСервер.ПолучитьТекстHTMLПустогоДокумента();
	Иначе
		ТекстHTML = ТекДанные.ТекстОсмотра;	
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстHTML) Тогда 
		ТекстHTML = РаботаСHTMLКлиентСервер.ПолучитьТекстHTMLПустогоДокумента();
	КонецЕсли;
	
	#Если ВебКлиент Или МобильныйКлиент Тогда 
		ПолеОсмотр = СформироватьПолныйТекстПриемовСервер(ТекстHTML, "", соотвКешИзображенийШаблонов, ЭтаФорма.УникальныйИдентификатор);
	#Иначе
		ПолеОсмотр = СформироватьПолныйТекстПриемов(ТекстHTML, "", соотвКешИзображенийШаблонов, ЭтаФорма.УникальныйИдентификатор);
	#КонецЕсли
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьПолныйТекстПриемовСервер(ТекстHTML, ТекстHTMLПриемов, ДанныеИзображений, ИдентификаторФормы)
	
	Возврат СформироватьПолныйТекстПриемов(ТекстHTML, ТекстHTMLПриемов, ДанныеИзображений, ИдентификаторФормы);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СформироватьПолныйТекстПриемов(ТекстHTML, ТекстHTMLПриемов, ДанныеИзображений, ИдентификаторФормы)
	
	ДокументHTML = РаботаСDOMКлиентСервер.СоздатьДокументDOM(ТекстHTML);
	
	Если Не ПустаяСтрока(ТекстHTMLПриемов) Тогда
		Попытка
			РаботаСDOMКлиентСервер.ДобавитьПроизвольныйHTMLВЭлемент(ДокументHTML.Тело, ТекстHTMLПриемов);
		Исключение КонецПопытки;
	КонецЕсли;
	
	РаботаСШаблонамиHTMLКлиентСервер.ЗагрузитьИзображенияПриема(ДокументHTML, ДанныеИзображений, ИдентификаторФормы);
	
	ТекстHTMLДокумента = РаботаСDOMКлиентСервер.ПолучитьТекстHTMLДокументаDOM(ДокументHTML);
	Возврат РаботаСШаблонамиHTMLКлиентСервер.ТекстШаблонаОсмотраПоРежиму(ТекстHTMLДокумента, Ложь);
	
КонецФункции

// ----------- Вывод шапки карты в поле HTML -----------------------------.
&НаСервереБезКонтекста
Функция ЕстьПечатнаяФорма(Карта)
	
	Вернуть = Ложь;
	
	Если ЗначениеЗаполнено(Карта.ВидКарты.Макет) Тогда
		
		Вернуть = Истина;
		
	КонецЕсли; 
	
	Возврат Вернуть;
	
КонецФункции

// ----------- Настройка состояния реквизитов формы -----------------------.
&НаКлиенте
Процедура НастроитьСостояниеФормы()
	
	Если НЕ ЗначениеЗаполнено(Клиент) Тогда
		
		Элементы.МедицинскаяКарта.Доступность = Ложь;
		Элементы.Страницы.Доступность = Ложь;
		Элементы.КомандаВывестиАнамнез.Доступность = Ложь;
		
		Элементы.ФормаПрикрепленныеФайлы.Доступность = Ложь;
		
	Иначе
		Элементы.МедицинскаяКарта.Доступность = Истина;
		Элементы.КомандаВывестиАнамнез.Доступность = ?(ЗначениеЗаполнено(ПолучитьТекстАнамнеза(Клиент)), Истина, Ложь);
		Элементы.Страницы.Доступность = Истина;
		
		Если ИспользуютсяФакторыРиска Тогда
			Элементы.МногостраничныйПросмотр.Доступность = (КоличествоПриемов() + ФакторыРиска.Количество()) > 1;
		Иначе
			Элементы.МногостраничныйПросмотр.Доступность = КоличествоПриемов() > 1;
		КонецЕсли;
		
		Элементы.ФормаПрикрепленныеФайлы.Доступность = Истина;
		УстановитьПодсказкуКомандеПрикрепленныеФайлы();
		
	КонецЕсли;
	
	Элементы.КнопкаВывестиШапку.Доступность = ЗначениеЗаполнено(МедицинскаяКарта) И ЕстьПечатнаяФорма(МедицинскаяКарта);
	
КонецПроцедуры

&НаКлиенте
Функция КоличествоПриемов()
	
	Сч = 0;
	Для Каждого Элемент1Ур Из Приемы.ПолучитьЭлементы() Цикл
		Сч = Сч + ?(ТипЗнч(Элемент1Ур.ДокументПриема) = Тип("ДокументСсылка.Прием"), 1, 0) + Элемент1Ур.ПолучитьЭлементы().Количество();
	КонецЦикла;
	
	Возврат Сч;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстАнамнеза(Клиент)
	
	Если ПустаяСтрока(Клиент.ПредставлениеАнамнеза) Тогда
		Возврат РаботаСHTMLКлиентСервер.ПолучитьТекстHTMLПустогоДокумента();
	Иначе
		Возврат	РаботаСDOMКлиентСервер.СформироватьПолныйТекстДокументаHTML(Клиент.ПредставлениеАнамнеза);
	КонецЕсли; 
	
КонецФункции

&НаСервере
Процедура ЗаполнитьМедкартуПоОсновной()
	
	МедицинскаяКарта = ?(ЗначениеЗаполнено(Клиент), Клиент.ОсновнаяМедицинскаяКарта, Справочники.МедицинскиеКарты.ПустаяСсылка());
	
КонецПроцедуры

// Рекурсивно оббегает дерево источник и на основе него заполняет владельцев.
&НаСервере
Процедура ЗаполнитьВладельцевПоДереву(ВетвьИсточник, ВетвьПолучатель, СтруктураПриемы, СтарыеОтметкиПриемов = Неопределено)
	
	Если Не СтруктураПриемы.Свойство("ПриемыСФайлами")
		Или СтруктураПриемы.ПриемыСФайлами = Неопределено
	Тогда
		СтруктураПриемы.Вставить("ПриемыСФайлами", Новый Соответствие);
	КонецЕсли;
	
	Для Каждого Строка Из ВетвьИсточник.Строки Цикл
		// Строка неверхнего уровня не выводится, если в ней тот же приём, что и у родительской строки дерева.
		Если Строка.Родитель <> Неопределено И Строка.Родитель.Ссылка = Строка.Ссылка Тогда
			Строка.Родитель.Врач = Строка.Врач;
			Строка.Родитель.Дата = Строка.Дата;
			Строка.Родитель.ОписаниеШаблоновПриема = Строка.ОписаниеШаблоновПриема;
		Иначе
			Ветвь = ВетвьПолучатель.Добавить();
			Ветвь.ДокументПриема = Строка.Ссылка;
			Ветвь.Закрыт = Строка.Закрыт;
			
			ИмяТипаДокумента = ДопСерверныеФункции.ИмяСсылочногоТипа(Строка.Ссылка);
			
			Если ИмяТипаДокумента = "Документ.Прием" Тогда
				HTMLПредставление = СтруктураПриемы.HTMLПредставленияДокументов.Получить(Ветвь.ДокументПриема);
				Если ЗначениеЗаполнено(HTMLПредставление) Тогда
					Ветвь.ТекстОсмотра = РаботаСDOMКлиентСервер.ПолучитьКодТелаHTMLИзКодаДокумента(HTMLПредставление);
				КонецЕсли;
				Ветвь.ТипДокументаПриема = "Прием";
			ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" Тогда // Версия КОРП
				Ветвь.ТекстОсмотра = Строка.Ссылка.HTMLПредставление;
				Ветвь.ТипДокументаПриема = "ВК";
			Иначе
				Ветвь.ТипДокументаПриема = "Медосмотр";
			КонецЕсли;
			Ветвь.КоличествоФайлов = СтруктураПриемы.ПриемыСФайлами.Получить(Строка.Ссылка);
			
			ЗаполнитьВладельцевПоДереву(Строка, Ветвь.ПолучитьЭлементы(), СтруктураПриемы, СтарыеОтметкиПриемов);
			
			Ветвь.ДатаДокументаПриема = ?(Строка.Дата <> Null,Строка.Дата,ОбщегоНазначенияКлиентСервер.СвойствоОбъекта(Строка.Ссылка, "Дата", Дата(1,1,1)));
			Ветвь.Врач = Строка.Врач;
			Ветвь.ОписаниеШаблоновПриема = Строка.ОписаниеШаблоновПриема;
			
			Если СтарыеОтметкиПриемов <> Неопределено Тогда
				СтараяОтметка = СтарыеОтметкиПриемов.Получить(Ветвь.ДокументПриема);
				Если СтараяОтметка <> Неопределено Тогда
					Ветвь.Показывать = СтараяОтметка;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПолеПриёма()
	
	ПолеОсмотр = РаботаСHTMLКлиентСервер.ПолучитьТекстHTMLПустогоДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДеревоПриёмов()
	Если ПросмотрДеревом Тогда
		Для Каждого СтрокаКорня Из Приемы.ПолучитьЭлементы() Цикл
			Элементы.Приемы.Развернуть(СтрокаКорня.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФормаПрикрепленныеФайлы(Команда)
		
	ФормаФайловДокумента = ПолучитьФорму("ОбщаяФорма.ФормаФайлов", Новый Структура("Владелец, ВключатьПредпросмотр, ВыборФотоКлиента, ВыводитьИерархию", Клиент, Истина, Истина, Истина));
	ФормаФайловДокумента.ОткрытьМодально();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПодсказкуКомандеПрикрепленныеФайлы(КоличествоФайлов = Неопределено)
	
	Если КоличествоФайлов = Неопределено Тогда 
		КоличествоФайлов = РаботаСФайлами.ПолучитьКоличествоФайловОбъекта(Клиент);
	КонецЕсли;
	
	КомандаФайлы = ЭтаФорма.Команды.Найти("ФормаПрикрепленныеФайлы");
	Если КоличествоФайлов = 0 Тогда 
		КомандаФайлы.Подсказка = НСтр("ru='Нет прикрепленных файлов'");
	Иначе
		КомандаФайлы.Подсказка = НСтр("ru='Файлов:'") + " " + Формат(КоличествоФайлов);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция HTMLПредставлениеМедДокументов(ТаблицаДокументов, УникальныйИдентификатор)
	
	Результат = Новый Соответствие;
	
	ДанныеПриемов = ДанныеПриемовДляПредставленияНаФорме(ТаблицаДокументов);
	ДанныеЭЦП = ПолучитьДанныеЭЦП(ТаблицаДокументов.ВыгрузитьКолонку("Ссылка"));
	ТаблицыРисунковПриемов = ПолучитьТаблицыРисунковПриемов(ТаблицаДокументов.ВыгрузитьКолонку("Ссылка"), УникальныйИдентификатор);
	ТаблицыДобавленныхИзображенийПриемов = ПолучитьТаблицыДобавленныхИзображенийПриемов(ТаблицаДокументов.ВыгрузитьКолонку("Ссылка"), УникальныйИдентификатор);
	
	ТекстРазрывСтраницы = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLРазрывСтраницы(Ложь);
	
	Для Каждого СтрокаШапкаПриема Из ТаблицаДокументов Цикл
		
		СтрокаПриема = ДанныеПриемов.ДеревоПриемов.Строки.Найти(СтрокаШапкаПриема.Ссылка, "Ссылка");
		
		РисункиПриема = ТаблицыРисунковПриемов.Получить(СтрокаШапкаПриема.Ссылка);
		ДобавленныеИзображенияПриема = ТаблицыДобавленныхИзображенийПриемов.Получить(СтрокаШапкаПриема.Ссылка);
		
		Если СтрокаПриема = Неопределено Тогда
			
			// Если в приеме нет шаблонов, берётся реквизит шапки документа.
			ТекстОсмотра = Строка(ДанныеПриемов.ПредставлениеИзШапкиДокументов.Получить(СтрокаШапкаПриема.Ссылка));
			
			ТекстОсмотра	 = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLШапкаШаблонаПриема(СтрокаШапкаПриема.Дата, СтрокаШапкаПриема.Врач, "")
							 + ТекстОсмотра;
		Иначе
			// Формирование по табличной части ШаблоныПриема
			ТекстОсмотра = "";
			
			ТекстыОсмотров = Новый Массив;
			
			Для Каждого СтрокаШаблона Из СтрокаПриема.Строки Цикл
				
				Если ПустаяСтрока(СтрокаШаблона.ТекстДляПечати) Тогда
					Если СтрокаПриема.Строки.Количество() = 1 Тогда
						// Если в приеме один шаблон, для которого нет текста печати, берётся реквизит шапки документа.
						ТекстШаблона = СтрокаШапкаПриема.Ссылка.Осмотр;
					Иначе
						ТекстШаблона = "";
					КонецЕсли;
				Иначе
					
					ДанныеЭЦПШаблона = ДанныеЭЦП.Получить(СтрокаШаблона.УИД);
					Если ДанныеЭЦПШаблона <> Неопределено Тогда
						Колонтитулы = СформироватьКолонтитулы(СтрокаШапкаПриема.Ссылка, ДанныеЭЦПШаблона);
						СтрокаШаблона.ТекстДляПечати = РаботаСШаблонамиHTMLКлиентСервер.ДобавитьКолонтитулЭЦПВТекстТела(СтрокаШаблона.ТекстДляПечати, Колонтитулы, Истина);
					Иначе
						СтрокаШаблона.ТекстДляПечати = РаботаСШаблонамиHTMLКлиентСервер.УдалитьТекстHTMLЭЦП(СтрокаШаблона.ТекстДляПечати, Истина);
					КонецЕсли;
					
					// Текст шаблона из табличной части Приема (штатная ситуация).
					ТекстШаблона = РаботаСШаблонамиHTMLКлиентСервер.УстановитьШапкуШаблона(СтрокаШаблона.ТекстДляПечати, Ложь, СтрокаПриема.Ссылка);
					ОднократноДобавитьШапкуПриема = Ложь;
					
					Если ДобавленныеИзображенияПриема <> Неопределено Тогда
						ТекстШаблона = РаботаСШаблонамиHTMLКлиентСервер.ВставитьДобавленныеИзображенияВТекстHTML(ТекстШаблона, СтрокаШаблона.НомерСтроки-1, ДобавленныеИзображенияПриема, Ложь);
					КонецЕсли;
					
					Если РисункиПриема <> Неопределено Тогда
						ТекстШаблона = РаботаСШаблонамиHTMLКлиентСервер.ДобавитьРисункиКартинокВТекстHTML(ТекстШаблона, СтрокаШаблона.НомерСтроки-1, РисункиПриема, Ложь);
					КонецЕсли;
				КонецЕсли;
				
				ТекстОсмотра = ТекстОсмотра
						+ ?(ПустаяСтрока(ТекстОсмотра), "", ?(СтрокаШаблона.ПечатаетсяБезПереходаНаНовуюСтраницу, "<BR/>", ТекстРазрывСтраницы))
						+ РаботаСШаблонамиHTMLКлиентСервер.ПолучитьТекстHTMLШапкаШаблонаПриема(СтрокаШаблона.Дата, СтрокаШаблона.Врач, СтрокаШаблона.ШаблонПриема)
						+ ТекстШаблона;
			КонецЦикла;
		КонецЕсли;
			
		Результат.Вставить(СтрокаШапкаПриема.Ссылка, ТекстОсмотра);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция СформироватьКолонтитулы(Документ, ДанныеЭЦП)
	
	Колонтитулы = Новый Структура("ВерхнийКолонтитул, НижнийКолонтитул", "", "");
	ТекстКолонтитула = РаботаСШаблонамиHTML.ПолучитьТекстКолонтитулаПоДаннымПодписи(Документ, ДанныеЭЦП.Сертификат, ДанныеЭЦП.ДатаПодписи, ДанныеЭЦП.РасположениеПодписи);
	
	Если ДанныеЭЦП.РасположениеПодписи = Перечисления.РасположениеПодписи.ПравыйВерхнийУгол
		Или ДанныеЭЦП.РасположениеПодписи = Перечисления.РасположениеПодписи.ЛевыйВерхнийУгол
	Тогда
		Колонтитулы.ВерхнийКолонтитул = ТекстКолонтитула;
	Иначе
		Колонтитулы.НижнийКолонтитул = ТекстКолонтитула;
	КонецЕсли;
	
	Возврат Колонтитулы;
	
КонецФункции

&НаСервереБезКонтекста
Функция ДанныеПриемовДляПредставленияНаФорме(ТаблицаДокументов)
	
	Результат = Новый Структура("ДеревоПриемов, ПредставлениеИзШапкиДокументов");
	//
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылки", ТаблицаДокументов.ВыгрузитьКолонку("Ссылка"));
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемШаблоныПриема.Ссылка КАК Ссылка,
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема,
		|	ПриемШаблоныПриема.УИД КАК УИД,
		|	ПриемШаблоныПриема.ТекстДляПечати КАК ТекстДляПечати,
		|	ПриемШаблоныПриема.Ссылка.Дата КАК Дата,
		|	ПриемШаблоныПриема.Ссылка.Врач КАК Врач,
		|	ПриемШаблоныПриема.ШаблонПриема.ПечатаетсяБезПереходаНаНовуюСтраницу КАК ПечатаетсяБезПереходаНаНовуюСтраницу,
		|	ПриемШаблоныПриема.НомерСтроки КАК НомерСтроки
		|ИЗ
		|	Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|ГДЕ
		|	ПриемШаблоныПриема.Ссылка В(&Ссылки)
		|ИТОГИ ПО
		|	Ссылка";
	
	Результат.ДеревоПриемов = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	// Определим, какие документы не попали в дерево (нет шаблонов).
	ПриемыБезШаблонов = Новый Массив;
	Для Каждого СтрокаШапкаПриема Из ТаблицаДокументов Цикл
		
		// Если приема нет в дереве
		Если Результат.ДеревоПриемов.Строки.Найти(СтрокаШапкаПриема.Ссылка, "Ссылка") = Неопределено Тогда
			// Будем получать по нему представление из шапки документа
			ПриемыБезШаблонов.Добавить(СтрокаШапкаПриема.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	Результат.ПредставлениеИзШапкиДокументов = Новый Соответствие;
	Если ПриемыБезШаблонов.Количество() <> 0 Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылки", ПриемыБезШаблонов);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Прием.Ссылка КАК Ссылка,
		|	Прием.Осмотр КАК HTMLПредставление
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	Прием.Ссылка В(&Ссылки)"
		;
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Результат.ПредставлениеИзШапкиДокументов.Вставить(Выборка.Ссылка, Выборка.HTMLПредставление);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеЭЦП(Приемы)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПриемШаблоныПриема.Ссылка КАК Ссылка,
		|	ПриемШаблоныПриема.УИД КАК УИД,
		|	Прием.Врач КАК Врач,
		|	Прием.Дата КАК Дата,
		|	ШаблоныHTML.Ссылка КАК ШаблонПриема,
		|	ШаблоныHTML.РасположениеПодписи КАК РасположениеПодписи,
		|	ШаблоныHTML.ВидДокумента <> ЗНАЧЕНИЕ(Справочник.РегистрируемыеЭлектронныеМедДокументы.ПустаяСсылка)
		|		И ЕСТЬNULL(НастройкиЕГИСЗ.ИспользоватьРЭМД, ЛОЖЬ)
		|		И Прием.Дата >= НастройкиЕГИСЗ.ДатаНачалаОбменаИнформациейСРЭМД КАК ШаблонРэмд,
		|	ПриемРолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП
		|ПОМЕСТИТЬ ДанныеШаблонов
		|ИЗ
		|	Документ.Прием КАК Прием
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШаблоныHTML КАК ШаблоныHTML
		|			ПО (ШаблоныHTML.Ссылка = ПриемШаблоныПриема.ШаблонПриема)
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.Прием.ЭМД КАК ПриемЭМД
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием.РолиИПодписиЭМД КАК ПриемРолиИПодписиЭМД
		|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|					ПО (ЭП.УникальныйИдентификатор = ПриемРолиИПодписиЭМД.УИД_ЭЦП)
		|						И (ЭП.ПодписанФайлЭМД)
		|				ПО (ПриемРолиИПодписиЭМД.Ссылка = ПриемЭМД.Ссылка)
		|					И ПриемЭМД.УИД = ПриемРолиИПодписиЭМД.УИД_ЭМД
		|			ПО (ПриемЭМД.Ссылка = ПриемШаблоныПриема.Ссылка)
		|				И (ПриемЭМД.УИД_Шаблона = ПриемШаблоныПриема.УИД)
		|		ПО Прием.Ссылка = ПриемШаблоныПриема.Ссылка
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Филиалы КАК Филиалы
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЕГИСЗНастройкиИнтеграции КАК НастройкиЕГИСЗ
		|			ПО (НастройкиЕГИСЗ.МедицинскаяОрганизация = Филиалы.МедицинскаяОрганизация)
		|		ПО Прием.Филиал = Филиалы.Ссылка
		|ГДЕ
		|	ПриемШаблоныПриема.Ссылка В(&Ссылки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеШаблонов.Ссылка КАК Ссылка,
		|	ДанныеШаблонов.Врач КАК Врач,
		|	ДанныеШаблонов.РасположениеПодписи КАК РасположениеПодписи,
		|	ДанныеШаблонов.УИД КАК УИД,
		|	ДанныеШаблонов.ШаблонРэмд КАК ШаблонРэмд,
		|	ДанныеШаблонов.УИД_ЭЦП КАК УИД_ЭЦП
		|ПОМЕСТИТЬ ШаблоныНеРЭМД
		|ИЗ
		|	ДанныеШаблонов КАК ДанныеШаблонов
		|ГДЕ
		|	НЕ ДанныеШаблонов.ШаблонРэмд
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеШаблонов.Ссылка КАК Ссылка,
		|	ЭП.УникальныйИдентификатор КАК УИД
		|ПОМЕСТИТЬ ЭПВрачейДокументов
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеШаблонов.Ссылка КАК Ссылка,
		|		МАКСИМУМ(ЭП.ПорядковыйНомер) КАК МаксимальныйПорядковыйНомер
		|	ИЗ
		|		ШаблоныНеРЭМД КАК ДанныеШаблонов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|			ПО (ЭП.Объект = ДанныеШаблонов.Ссылка)
		|				И (НЕ ЭП.ПодписанФайлЭМД)
		|				И (ЭП.УстановившийПодпись.Сотрудник = ДанныеШаблонов.Врач)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеШаблонов.Ссылка) КАК ДанныеШаблонов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|		ПО (ЭП.Объект = ДанныеШаблонов.Ссылка)
		|			И (ЭП.ПорядковыйНомер = ДанныеШаблонов.МаксимальныйПорядковыйНомер)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеШаблонов.Ссылка КАК Ссылка,
		|	ЭП.УникальныйИдентификатор КАК УИД
		|ПОМЕСТИТЬ ПоследняяЭП
		|ИЗ
		|	(ВЫБРАТЬ
		|		ДанныеШаблонов.Ссылка КАК Ссылка,
		|		МАКСИМУМ(ЭП.ПорядковыйНомер) КАК МаксимальныйПорядковыйНомер
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ШаблоныНеРЭМД.Ссылка КАК Ссылка
		|		ИЗ
		|			ШаблоныНеРЭМД КАК ШаблоныНеРЭМД
		|		ГДЕ
		|			НЕ ШаблоныНеРЭМД.Ссылка В
		|						(ВЫБРАТЬ
		|							ЭПВрачейДокументов.Ссылка
		|						ИЗ
		|							ЭПВрачейДокументов)) КАК ДанныеШаблонов
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|			ПО (ЭП.Объект = ДанныеШаблонов.Ссылка)
		|				И (НЕ ЭП.ПодписанФайлЭМД)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ДанныеШаблонов.Ссылка) КАК ДанныеШаблонов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|		ПО (ЭП.Объект = ДанныеШаблонов.Ссылка)
		|			И (ЭП.ПорядковыйНомер = ДанныеШаблонов.МаксимальныйПорядковыйНомер)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ШаблоныПриемов.ШаблонПриема КАК ШаблонПриема,
		|	ШаблоныПриемов.Дата КАК Дата,
		|	ШаблоныПриемов.УИД КАК УИД,
		|	ВерсииШаблоновHTML.Ссылка КАК Версия,
		|	ВерсииШаблоновHTML.Дата КАК ДатаВерсии
		|ПОМЕСТИТЬ ВерсииДоДаты
		|ИЗ
		|	ДанныеШаблонов КАК ШаблоныПриемов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
		|		ПО (ВерсииШаблоновHTML.Владелец = ШаблоныПриемов.ШаблонПриема)
		|			И (ВерсииШаблоновHTML.Дата >= ШаблоныПриемов.Дата)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВерсииДокумента.УИД КАК УИД,
		|	ВЫБОР
		|		КОГДА ВерсииДоДаты.Версия ЕСТЬ NULL
		|			ТОГДА ВерсииДокумента.ШаблонПриема.РасположениеПодписи
		|		ИНАЧЕ ВерсииДоДаты.Версия.РасположениеПодписи
		|	КОНЕЦ КАК РасположениеПодписи
		|ПОМЕСТИТЬ РасположенияПодписиПоВерсиямШаблонов
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВерсииДоДаты.ШаблонПриема КАК ШаблонПриема,
		|		ВерсииДоДаты.Дата КАК Дата,
		|		ВерсииДоДаты.УИД КАК УИД,
		|		МИНИМУМ(ВерсииДоДаты.ДатаВерсии) КАК ДатаАктуальнойВерсии
		|	ИЗ
		|		ВерсииДоДаты КАК ВерсииДоДаты
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ВерсииДоДаты.ШаблонПриема,
		|		ВерсииДоДаты.Дата,
		|		ВерсииДоДаты.УИД) КАК ВерсииДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВерсииДоДаты КАК ВерсииДоДаты
		|		ПО (ВерсииДоДаты.УИД = ВерсииДокумента.УИД)
		|			И (ВерсииДоДаты.Дата = ВерсииДокумента.Дата)
		|			И (ВерсииДоДаты.ДатаВерсии = ВерсииДокумента.ДатаАктуальнойВерсии)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеШаблонов.Ссылка КАК Ссылка,
		|	ЕСТЬNULL(РасположенияПодписиПоВерсиямШаблонов.РасположениеПодписи, ДанныеШаблонов.РасположениеПодписи) КАК РасположениеПодписи,
		|	ДанныеШаблонов.УИД КАК УИД,
		|	ЭП.ДатаПодписи КАК ДатаПодписи,
		|	ЭП.Сертификат КАК Сертификат
		|ИЗ
		|	ДанныеШаблонов КАК ДанныеШаблонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ШаблоныНеРЭМД.Ссылка КАК Ссылка,
		|			ШаблоныНеРЭМД.УИД КАК УИД,
		|			ЕСТЬNULL(ЭПВрачейДокументов.УИД, ПоследняяЭП.УИД) КАК УИД_ЭЦП
		|		ИЗ
		|			ШаблоныНеРЭМД КАК ШаблоныНеРЭМД
		|				ЛЕВОЕ СОЕДИНЕНИЕ ПоследняяЭП КАК ПоследняяЭП
		|				ПО (ПоследняяЭП.Ссылка = ШаблоныНеРЭМД.Ссылка)
		|				ЛЕВОЕ СОЕДИНЕНИЕ ЭПВрачейДокументов КАК ЭПВрачейДокументов
		|				ПО (ЭПВрачейДокументов.Ссылка = ШаблоныНеРЭМД.Ссылка)) КАК ШаблоныНеРЭМД
		|		ПО (ШаблоныНеРЭМД.Ссылка = ДанныеШаблонов.Ссылка)
		|			И (ШаблоныНеРЭМД.УИД = ДанныеШаблонов.УИД)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|		ПО (ЭП.УникальныйИдентификатор = ЕСТЬNULL(ДанныеШаблонов.УИД_ЭЦП, ШаблоныНеРЭМД.УИД_ЭЦП))
		|		ЛЕВОЕ СОЕДИНЕНИЕ РасположенияПодписиПоВерсиямШаблонов КАК РасположенияПодписиПоВерсиямШаблонов
		|		ПО (РасположенияПодписиПоВерсиямШаблонов.УИД = ДанныеШаблонов.УИД)";
	
	Запрос.УстановитьПараметр("Ссылки", Приемы);
	
	ДанныеЭЦП = Новый Соответствие;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СтруктураПодписи = Новый Структура("РасположениеПодписи, ДатаПодписи, Сертификат");
		ЗаполнитьЗначенияСвойств(СтруктураПодписи, Выборка);
		ДанныеЭЦП.Вставить(Выборка.УИД, СтруктураПодписи);
	КонецЦикла;
	
	Возврат ДанныеЭЦП;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицыРисунковПриемов(Приемы, УникальныйИдентификатор)
	
	ТаблицыРисунковПриемов = Новый Соответствие;
	
	ТаблицаРисунков = Новый ТаблицаЗначений;
	ТаблицаРисунков.Колонки.Добавить("ИдентификаторСтрокиШаблона");
	ТаблицаРисунков.Колонки.Добавить("ИдентификаторРисунка");
	ТаблицаРисунков.Колонки.Добавить("АдресРисунка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Документ КАК Документ,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ИндексШаблона КАК ИндексШаблона,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ИдентификаторЭлемента КАК ИдентификаторРисунка,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Файл КАК Рисунок,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Расширение КАК Расширение,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ПутьКФайлу КАК ПутьКФайлу
		|ИЗ
		|	РегистрСведений.ФайлыРедактируемыхЭлементовШаблонаПриема КАК ФайлыРедактируемыхЭлементовШаблонаПриема
		|ГДЕ
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Документ В(&Приемы)
		|	И ФайлыРедактируемыхЭлементовШаблонаПриема.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыФайловРедактируемыхЭлементовШаблона.Рисунок)
		|ИТОГИ ПО
		|	Документ";
	
	Запрос.УстановитьПараметр("Приемы", Приемы);
	
	ВыборкаПриемов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаПриемов.Следующий() Цикл
		
		РисункиПриемов = ТаблицаРисунков.Скопировать();
		
		Рисунки = ВыборкаПриемов.Выбрать();
		Пока Рисунки.Следующий() Цикл
			ДвоичныеДанныеФайла = бит_РаботаСФайлами.ПолучитьДвоичныеДанныеФайлаРедактируемогоЭлемента(Рисунки.ПутьКФайлу, Рисунки.Рисунок);
			Если ДвоичныеДанныеФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Рисунок = РисункиПриемов.Добавить();
			Рисунок.ИдентификаторСтрокиШаблона = Рисунки.ИндексШаблона;
			Рисунок.ИдентификаторРисунка = Рисунки.ИдентификаторРисунка;
			Рисунок.АдресРисунка = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, УникальныйИдентификатор);
		КонецЦикла;
		
		ТаблицыРисунковПриемов.Вставить(ВыборкаПриемов.Документ, РисункиПриемов);
	КонецЦикла;
	
	Возврат ТаблицыРисунковПриемов;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТаблицыДобавленныхИзображенийПриемов(Приемы, УникальныйИдентификатор)
	
	ТаблицыДобавленныхИзображений = Новый Соответствие;
	
	ТаблицаДобавленныхИзображений = Новый ТаблицаЗначений;
	ТаблицаДобавленныхИзображений.Колонки.Добавить("ИдентификаторСтрокиШаблона");
	ТаблицаДобавленныхИзображений.Колонки.Добавить("ИдентификаторИзображения");
	ТаблицаДобавленныхИзображений.Колонки.Добавить("АдресИзображения");
	ТаблицаДобавленныхИзображений.Колонки.Добавить("Расширение");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Документ КАК Документ,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ИндексШаблона КАК ИндексШаблона,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ИдентификаторЭлемента КАК ИдентификаторИзображения,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Файл КАК Изображение,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Расширение КАК Расширение,
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.ПутьКФайлу КАК ПутьКФайлу
		|ИЗ
		|	РегистрСведений.ФайлыРедактируемыхЭлементовШаблонаПриема КАК ФайлыРедактируемыхЭлементовШаблонаПриема
		|ГДЕ
		|	ФайлыРедактируемыхЭлементовШаблонаПриема.Документ В(&Приемы)
		|	И ФайлыРедактируемыхЭлементовШаблонаПриема.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыФайловРедактируемыхЭлементовШаблона.ДобавленноеИзображение)
		|ИТОГИ ПО
		|	Документ";
	
	Запрос.УстановитьПараметр("Приемы", Приемы);
	
	ВыборкаПриемов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаПриемов.Следующий() Цикл
		
		ИзображенияПриемов = ТаблицаДобавленныхИзображений.Скопировать();
		
		ДобавленныеИзображения = ВыборкаПриемов.Выбрать();
		Пока ДобавленныеИзображения.Следующий() Цикл
			ДвоичныеДанныеФайла = бит_РаботаСФайлами.ПолучитьДвоичныеДанныеФайлаРедактируемогоЭлемента(ДобавленныеИзображения.ПутьКФайлу, ДобавленныеИзображения.Изображение);
			Если ДвоичныеДанныеФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			ДобавленноеИзображение = ИзображенияПриемов.Добавить();
			ДобавленноеИзображение.ИдентификаторСтрокиШаблона = ДобавленныеИзображения.ИндексШаблона;
			ДобавленноеИзображение.ИдентификаторИзображения = ДобавленныеИзображения.ИдентификаторИзображения;
			ДобавленноеИзображение.АдресИзображения = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла, УникальныйИдентификатор);
			ДобавленноеИзображение.Расширение = ДобавленныеИзображения.Расширение;
		КонецЦикла;
		
		ТаблицыДобавленныхИзображений.Вставить(ВыборкаПриемов.Документ, ИзображенияПриемов);
	КонецЦикла;
	
	Возврат ТаблицыДобавленныхИзображений;
	
КонецФункции

&НаКлиенте
Процедура ИзменитьВыводДокументовСНовойСтраницыВСформированномHTML()
	
	Если ПечататьКаждыйПриемНаНовомЛисте Тогда
		НовыйРазделитель = СтрокаПеренос;
	Иначе
		НовыйРазделитель = СтрокаПереходСтроки;
	КонецЕсли;
	
	ДокументHTML = РаботаСDOMКлиентСервер.СоздатьДокументDOM(ПолеОсмотр);
	СписокРазделителей = РаботаСHTMLКлиентСервер.ПолучитьЭлементыПоЗначениюАтрибута(ДокументHTML, NameТеговРазделителейДокументов(),,"name");
	Для Каждого ЭлементHTML Из СписокРазделителей Цикл
		РаботаСDOMКлиентСервер.ЗаменитьЭлементНаПроизвольныйHTML(ЭлементHTML, НовыйРазделитель);
	КонецЦикла;
	
	ПолеОсмотр = РаботаСDOMКлиентСервер.ПолучитьТекстHTMLДокументаDOM(ДокументHTML);
	
КонецПроцедуры

&НаКлиенте
Функция NameТеговРазделителейДокументов()
	Возврат "docs_separator";
КонецФункции

&НаСервереБезКонтекста
Функция ТипДокумента(ИмяТипа)
	
	Возврат Тип(ИмяТипа);
	
КонецФункции

#Область ФакторыРискаБеременности

&НаКлиенте
Процедура ОбновитьФакторыРискаНаКлиента(КлиентИзменен = Истина)
	
	МедицинскаяДеятельностьКлиентПереопределяемый.ОбновитьФакторыРискаНаКлиентаВПЭМК(ЭтотОбъект, КлиентИзменен);
	
КонецПроцедуры

&НаКлиенте
Процедура ФакторыРискаПриАктивизацииСтроки(Элемент)
	
	МедицинскаяДеятельностьКлиентПереопределяемый.УстановитьПолеОсмотраПЭМКПоФакторамРиска(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ФакторыРискаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ФакторыРиска.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(ТекущиеДанные.Документ);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрольБеременности(Команда)
	
	МедицинскаяДеятельностьКлиентПереопределяемый.ОткрытьОтчетКонтролиБеременности(Клиент);
	
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если Не МногостраничныйПросмотр Тогда
		Если ТекущаяСтраница = Элементы.СтраницаФакторыРиска Тогда
			ФакторыРискаПриАктивизацииСтроки(Неопределено);
		ИначеЕсли ТекущаяСтраница = Элементы.СтраницаПриемы Тогда
				ПриемыПриАктивизацииСтроки(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти