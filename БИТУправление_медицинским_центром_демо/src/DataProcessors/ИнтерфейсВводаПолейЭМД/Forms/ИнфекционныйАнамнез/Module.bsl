
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВредныеФакторы = ?(Параметры.Свойство("ВредныеФакторы"), Параметры.ВредныеФакторы, Неопределено);
	
	ЗаполнитьПредопределенныеДиагнозы(ВредныеФакторы);
	ЗаполнитьСписокВыбораГод(Элементы.ТаблицаДиагнозовГод);
	ЗаполнитьСписокВыбораГод(Элементы.ТаблицаПредопределенныхДиагнозовГод, Истина);
	
КонецПроцедуры 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьРезультат();	
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Применить(Команда)
	
	// Проверка заполненности диагноза в таблице предопределенных диагнозов
	Для Каждого СтрокаДиагноз Из ТаблицаПредопределенныхДиагнозов Цикл
		Если СтрокаДиагноз.Выбран
			И СтрокаДиагноз.ДиагнозДоступность
			И Не ЗначениеЗаполнено(СтрокаДиагноз.Диагноз) 
			И СтрокаДиагноз.Год <> "Не зафиксировано"
		Тогда
			Шаблон = "Для заблоеваний ""%1"" нужно указать конкретный диагноз";
			ПоказатьПредупреждение(,СтрШаблон(Шаблон, СтрокаДиагноз.Заголовок)); 
			Возврат;
		КонецЕсли;		
	КонецЦикла;
	
	ЭтотОбъект.Закрыть(Результат);
	
КонецПроцедуры 

&НаКлиенте
Процедура Отмена(Команда)
	
	ЭтотОбъект.Закрыть("");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

  &НаКлиенте
Процедура ТаблицаДиагнозовПриИзменении(Элемент)
	
	СформироватьРезультат();
	
КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаДиагнозовДиагнозПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаДиагнозов.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.Диагноз) Тогда
		ТекДанные.КодДиагноза = ОбщегоНазначенияСервер.ПолучитьРеквизитСсылки(ТекДанные.Диагноз, "КодДиагноза");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовПриАктивизацииСтроки(Элемент)
	
	ТекДанные = Элементы.ТаблицаПредопределенныхДиагнозов.ТекущиеДанные;
	
	// Хронический - последнее значение
	Если ТекДанные.Хронический И Элементы.ТаблицаПредопределенныхДиагнозовГод.СписокВыбора[1].Значение <> "Хронический" Тогда
		Элементы.ТаблицаПредопределенныхДиагнозовГод.СписокВыбора.Вставить(1,"Хронический");		
	ИначеЕсли Не ТекДанные.Хронический И Элементы.ТаблицаПредопределенныхДиагнозовГод.СписокВыбора[1].Значение = "Хронический" Тогда	
		Элементы.ТаблицаПредопределенныхДиагнозовГод.СписокВыбора.Удалить(1);	
	КонецЕсли;
	
	Элементы.ТаблицаПредопределенныхДиагнозовДиагноз.ТолькоПросмотр = Не ТекДанные.ДиагнозДоступность;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовДиагнозНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
		
	ОткрытьФорму("Справочник.Диагнозы.ФормаВыбора", Новый Структура("ГруппыДиагнозов", ПолучитьМассивГруппДиагнозов(Элементы.ТаблицаПредопределенныхДиагнозов.ТекущиеДанные.ДиапазонДиагнозов)),
				 Элементы.ТаблицаПредопределенныхДиагнозовДиагноз,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовДиагнозАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовВыбранПриИзменении(Элемент)

	ТекДанные = Элементы.ТаблицаПредопределенныхДиагнозов.ТекущиеДанные;
	
	ТекДанные.Выбран = ?(ТекДанные.ВыбранДоступность, ТекДанные.Выбран, Истина);

КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовПриИзменении(Элемент)
	
	СформироватьРезультат();

КонецПроцедуры 

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовДиагнозПриИзменении(Элемент)
	
	ТекДанные = Элементы.ТаблицаПредопределенныхДиагнозов.ТекущиеДанные;
	Если ТекДанные <> Неопределено И ЗначениеЗаполнено(ТекДанные.Диагноз) Тогда
		ТекДанные.КодДиагноза = ОбщегоНазначенияСервер.ПолучитьРеквизитСсылки(ТекДанные.Диагноз, "КодДиагноза");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПредопределенныхДиагнозовГодПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ТаблицаПредопределенныхДиагнозов.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено
		И Не ТекущиеДанные.Выбран
	Тогда
		ТекущиеДанные.Выбран = Истина;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныйПрограммныйИнтерфейс

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПредопределенныеЗаболевания()
	
	Массив = Новый Массив;

	// Туберкулез
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Туберкулез А15-А19 (в течение жизни или хронический процесс)");
	Структура.Вставить("ЗаголовокВРезультате", "Туберкулез");
	Структура.Вставить("Хронический", Истина);
	Структура.Вставить("ДиапазонДиагнозов", "A15-A19");
	Структура.Вставить("ВредныеФакторы", "23, 24, 25, 26");
	Массив.Добавить(Структура);
	
	// Корь
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Корь В05 (в течение жизни)");
	Структура.Вставить("ЗаголовокВРезультате", "Корь");
	Структура.Вставить("Хронический", Ложь);
	Структура.Вставить("ВредныеФакторы", "23, 24, 25, 26");
	Структура.Вставить("КодДиагноза", "B05");
	Массив.Добавить(Структура);
	
	// Гепатит А
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Гепатит А В15 (в течение жизни)");
	Структура.Вставить("ЗаголовокВРезультате", "Гепатит А");
	Структура.Вставить("Хронический", Ложь);
	Структура.Вставить("ВредныеФакторы", "23, 24, 25, 26");
	Структура.Вставить("КодДиагноза", "B15");
	Массив.Добавить(Структура);
	
	// Брюшной тиф
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Брюшной тиф А01 (в течение жизни)");
	Структура.Вставить("ЗаголовокВРезультате", "Брюшной тиф");
	Структура.Вставить("Хронический", Ложь);
	Структура.Вставить("ВредныеФакторы", "23, 24");
	Структура.Вставить("КодДиагноза", "A01");	
	Массив.Добавить(Структура);
	
	// Бруцеллез
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Бруцеллез А21 (в течение жизни или хроническое заболевание)");
	Структура.Вставить("ЗаголовокВРезультате", "Бруцеллез");
	Структура.Вставить("Хронический", Истина);
	Структура.Вставить("ВредныеФакторы", "23");
	Структура.Вставить("Необязательный", Истина);
	Структура.Вставить("КодДиагноза", "A21");
	Массив.Добавить(Структура);
	
	// Эпидемический паротит
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Эпидемический паротит В26 (в течение жизни)");
	Структура.Вставить("ЗаголовокВРезультате", "Эпидемический паротит");
	Структура.Вставить("Хронический", Ложь);
	Структура.Вставить("ВредныеФакторы", "25");
	Структура.Вставить("КодДиагноза", "B26");
	Массив.Добавить(Структура);
	
	// Ветряная оспа
	Структура = Новый Структура;
	Структура.Вставить("Заголовок", "Ветряная оспа В01 (в течение жизни)");
	Структура.Вставить("ЗаголовокВРезультате", "Ветряная оспа");
	Структура.Вставить("Хронический", Ложь);
	Структура.Вставить("ВредныеФакторы", "25");
	Структура.Вставить("КодДиагноза", "B01");
	Массив.Добавить(Структура);
	
	Возврат Массив;
	 
КонецФункции

&НаСервере
Процедура ЗаполнитьПредопределенныеДиагнозы(ВредныеФакторы)
	
	МассивНомеровВходныхФакторов = Новый Массив;
	Для Каждого Фактор Из ВредныеФакторы Цикл
		МассивНомеровВходныхФакторов.Добавить(Фактор.НомерПП);	
	КонецЦикла;
	
	ПредопределенныеЗаболевания = ПолучитьПредопределенныеЗаболевания();
	
	Для Каждого Заболевание Из ПредопределенныеЗаболевания Цикл
		
		Строка = ТаблицаПредопределенныхДиагнозов.Добавить(); 
		
		МассивФакторов = СтрРазделить(Заболевание.ВредныеФакторы, ",");
		Строка.ВыбранДоступность = Истина;
		Для Каждого Фактор Из МассивФакторов Цикл
			ВходныйФактор = МассивНомеровВходныхФакторов.Найти(СокрЛП(Фактор));	
			Если ВходныйФактор <> Неопределено Тогда
				Строка.Выбран = Истина;
				Если Не Заболевание.Свойство("Необязательный") Тогда
					Строка.ВыбранДоступность = Ложь;
				КонецЕсли;
				Прервать;
			КонецЕсли;	
		КонецЦикла; 
		
		Строка.Заголовок = Заболевание.Заголовок;
		Строка.ЗаголовокВРезультате = Заболевание.ЗаголовокВРезультате;
		Строка.Хронический = Заболевание.Хронический;
		Строка.ДиагнозДоступность = Заболевание.Свойство("ДиапазонДиагнозов");
		Строка.Год = "Не зафиксировано";
		Строка.КодДиагноза = ?(Заболевание.Свойство("КодДиагноза"), Заболевание.КодДиагноза, "");
		Если Строка.ДиагнозДоступность Тогда
			Строка.ДиапазонДиагнозов = Заболевание.ДиапазонДиагнозов;	
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСписокВыбораГод(Элемент, Предопределенный = Ложь)
	
	Если Предопределенный Тогда
		Элемент.СписокВыбора.Добавить("Не зафиксировано"); 
	КонецЕсли;
	
	ТекущийГод = Год(ТекущаяДата());
	
	Для Сч = 0 По КоличествоЛетВСписках() - 1 Цикл
		Элемент.СписокВыбора.Добавить(Формат(ТекущийГод - Сч, "ЧГ="));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция КоличествоЛетВСписках()

	Возврат 20;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьМассивГруппДиагнозов(СтрокаГрупп) 

	МассивГрупп = СтрРазделить(СтрокаГрупп, ",");
	Для Сч = 0 По МассивГрупп.Количество() - 1 Цикл
		МассивГрупп[Сч] = СокрЛП(МассивГрупп[Сч]);	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	Диагнозы.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.Диагнозы КАК Диагнозы
	               |ГДЕ
	               |	Диагнозы.ЭтоГруппа
	               |	И Диагнозы.КодДиагноза В(&КодыДиагнозов)";
	
	Запрос.УстановитьПараметр("КодыДиагнозов", МассивГрупп);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	МассивВозврата = Новый Массив;
	Пока Выборка.Следующий() Цикл
		МассивВозврата.Добавить(Выборка.Ссылка);	
	КонецЦикла;
	
	Возврат МассивВозврата;
	
КонецФункции 

&НаКлиенте
Процедура СформироватьРезультат()
	
	Результат = "";
	ТаблицаРезультат.Очистить();

	Для Каждого СтрокаДиагноза Из ТаблицаПредопределенныхДиагнозов Цикл
		Если СтрокаДиагноза.Выбран Тогда
        	НоваяСтрока = ТаблицаРезультат.Добавить();
			НоваяСтрока.Год = СокрЛП(СтрокаДиагноза.Год);
			НоваяСтрока.КодДиагноза = СтрокаДиагноза.КодДиагноза;
			НоваяСтрока.Диагноз = ?(ЗначениеЗаполнено(СтрокаДиагноза.Диагноз), СтрокаДиагноза.Диагноз, СтрокаДиагноза.ЗаголовокВРезультате);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДиагноза Из ТаблицаДиагнозов Цикл  
		Если ЗначениеЗаполнено(СтрокаДиагноза.Диагноз) Тогда
			НоваяСтрока = ТаблицаРезультат.Добавить();
			НоваяСтрока.Год = СокрЛП(СтрокаДиагноза.Год);
			НоваяСтрока.КодДиагноза = СтрокаДиагноза.КодДиагноза;
			НоваяСтрока.Диагноз = СтрокаДиагноза.Диагноз;		
		КонецЕсли;
	КонецЦикла;	
	
	ТаблицаРезультат.Сортировать("Год, Диагноз");
	
	ШаблонГод	  = "%1: %2 [%3]";
	ШаблонТекст	  = "%2 [%3]: %1";
	ШаблонБезКода = "%2%3: %1";
	
	ЭтоГод = Ложь;
	Для Каждого СтрокаРезультат Из ТаблицаРезультат Цикл 
		
		ЭтоГод = СтрДлина(СтрокаРезультат.Год) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрокаРезультат.Год);
		
		Если ЭтоГод Тогда
			Шаблон = ШаблонГод;
		ИначеЕсли ЗначениеЗаполнено(СтрокаРезультат.КодДиагноза) Тогда
			Шаблон = ШаблонТекст;
		Иначе
			Шаблон = ШаблонБезКода;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(Результат, СтрШаблон(Шаблон, СтрокаРезультат.Год, СтрокаРезультат.Диагноз, СтрокаРезультат.КодДиагноза), Символы.ПС);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

