
// ЛОКАЛЬНЫЕ ПЕРЕМЕННЫЕ  ///////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте 
Перем пОбработчикПодключен;

// СЕРВЕРНЫЕ МЕТОДЫ  ///////////////////////////////////////////////////////////////////////////////////////////////

&НаСервере
// Получает все необходимые данные для формы
//
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	бит_сл_сервер.ОбновитьЗначенияРеквизитов(Объект);
	Элементы.ОбщиеНастройки.Доступность = РольДоступна("бит_сл_Администратор") ИЛИ
	                                      РольДоступна("ПолныеПрава") ИЛИ
										  РольДоступна("бит_ПолныеПрава") ИЛИ
										  ПользователиИнформационнойБазы.ТекущийПользователь().Имя = "";
	ЛокализироватьИнтерфейс();
	
КонецПроцедуры

&НаСервере
// Загружает во все элементы формы локализированные данные
//
Процедура ЛокализироватьИнтерфейс();

	ЛокализацияСоответствие = бит_сл_общий.ПолучитьДанныеЛокализации();
	
	Для Каждого ЭлементЗн Из ЛокализацияСоответствие Цикл
		
		Если Лев(ЭлементЗн.Ключ, 36) = "сл_КлиентЛицензирования_Интерфейс_01" ИЛИ
			 Лев(ЭлементЗн.Ключ, 36) = "сл_КлиентЛицензирования_Интерфейс_02" Тогда
			
			Попытка
				
				СтрокаКомандыЛокализации = Прав(ЭлементЗн.Ключ, СтрДлина(ЭлементЗн.Ключ) - 37);
				СтрокаКомандыЛокализации = СтрЗаменить(СтрокаКомандыЛокализации, "_", ".") + " = """ + ЭлементЗн.Значение + """";
				
				Выполнить(СтрокаКомандыЛокализации);
				
			Исключение
				
				ПараметрыСообщения = Новый Соответствие;
				ПараметрыСообщения.Вставить("##1##", ЭлементЗн.Ключ);
				Сообщить( бит_сл_общий.ПолучитьСтрокуСообщения("сл_КлиентЛицензирования_ЛокализацияСодержитОшибки", ПараметрыСообщения) );							
				
			КонецПопытки;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
// Обновляет все реквизиты на форме
//
Процедура ОбновитьДанныеФормы()

	бит_сл_сервер.ОбновитьЗначенияРеквизитов(Объект);
	
	ЧислоИсключений = ?(Объект.общ_СписокИсключения="", 0, СтрЧислоСтрок(Объект.общ_СписокИсключения));
	
КонецПроцедуры // ОбновитьДанныеФормы()

&НаСервере 
// Передает структуру параметров на сервер для сохранения
//
Процедура ПередатьНастройкиНаСервер()

	бит_сл_сервер.СохранитьНастройкиВОбъект(Объект);

КонецПроцедуры // ПередатьНастройкиНаСервер() 

// ОБРАБОТЧИКИ ОЖИДАНИЯ ////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте
// Запускается каждые 4 секунды для обновления данных формы
//
Процедура ОбработчикОбновленияДанныхФормы()

	ОбновитьДанныеФормы();
	
	Элементы.КнопкаОбновитьСоединение.Доступность = Истина;
	
	Если Элементы.ГруппаПредупреждениеАктивностиОбщихНастроек.Видимость <> Объект.общ_ПубликацияНастроек Тогда
		Элементы.ГруппаПредупреждениеАктивностиОбщихНастроек.Видимость = Объект.общ_ПубликацияНастроек;
	КонецЕсли;

	Элементы.ДекорацияФлагПубликации.ЦветТекста = ?(Объект.общ_ПубликацияНастроек, Новый Цвет(53,115,5), Новый Цвет(153,51, 0));
	Элементы.ДекорацияПредупреждениеКартинкаНеПравильныйПорт.Видимость = Найти(Объект.АдресСервераИПорт, ":10600") <> 0; 
	Элементы.ДекорацияПредупреждениеКартинкаОбщНеПравильныйПорт.Видимость = Найти(Объект.общ_АдресСервераИПорт, ":10600") <> 0;
	
КонецПроцедуры // ОбработчикОбновленияДанныхФормы() 

// КЛИЕНТСКИЕ МЕТОДЫ ///////////////////////////////////////////////////////////////////////////////////////////////

&НаКлиенте 
// Отключает обработчик ожидания при редактировании значений
//
Процедура ОтключитьОбработчикОжиданияПриРедактировании()

	Если пОбработчикПодключен Тогда
		
		ОтключитьОбработчикОжидания( "ОбработчикОбновленияДанныхФормы" );
	    пОбработчикПодключен = Ложь;
		
	КонецЕсли; 	

КонецПроцедуры // ОтключитьОбработчикОжиданияПриРедактировании() 

&НаКлиенте 
// Подключает обработчик ожидания после окончания редактирования значения
//
Процедура ПодключитьОбработчикОжиданияПослеРедактирования()

	Если Не пОбработчикПодключен Тогда
		
		пОбработчикПодключен = Истина;
		ПодключитьОбработчикОжидания( "ОбработчикОбновленияДанныхФормы", 4, Ложь );
	
	КонецЕсли;

КонецПроцедуры // ПодключитьОбработчикОжиданияПослеРедактирования()

&НаКлиенте
// Выводит предупреждение о не правильном значении порта
//
Процедура ВывестиСообщениеВероятноНеПравильныйПорт(ПолеИсточник);

	ЛокализированноеСообщение = бит_сл_общий.ПолучитьСтрокуСообщения("сл_КлиентЛицензирования_НеПравильныПорт");
	бит_сл_общий.ВывестиСообщение(ЛокализированноеСообщение, ПолеИсточник);	
	
КонецПроцедуры

// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ УПРАВЛЕНИЯ ////////////////////////////////////////////////////////////////////////

&НаКлиенте
// Выполняет первоначальную настройку формы при открытии 
//
Процедура ПриОткрытии(Отказ)
	
	ОбновитьДанныеФормы();	
	пОбработчикПодключен = Истина;
	ПодключитьОбработчикОжидания( "ОбработчикОбновленияДанныхФормы", 4, Ложь );
	Элементы.КнопкаОбновитьСоединение.Доступность = Истина;
	
КонецПроцедуры

&НаКлиенте
// Подготавливает обарботку к выгрузке
//
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	ОтключитьОбработчикОжидания( "ОбработчикОбновленияДанныхФормы" );

КонецПроцедуры

&НаКлиенте
// Открывает панель настроек
//
Процедура ОткрытьЗакладкуНастроек(Команда)
	
	Элементы.ПанельЗакладок.ТекущаяСтраница = Элементы.Настройки; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСостояние(Команда)
	
	ОбновитьСостояниеДействие();
	
	Элементы.ПанельЗакладок.ТекущаяСтраница = Элементы.ГруппаСообщенияСистемы;	
	Элементы.КнопкаОбновитьСоединение.Доступность = Ложь;
	Объект.ОсновнаяНадпись = Объект.ОсновнаяНадпись = бит_сл_общий.ПолучитьСтрокуСообщения("сл_сервер_ПожалуйстаПодождите");
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	ПередатьНастройкиНаСервер();	
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСписка(Команда)
	
	// Откроем форму списка пользователей
	СовместимостьФорм_8_2_13 = бит_сл_сервер.ИспользоватьРежимСовместимостиФормСПлатформой_8_2_13();
	СовместимостьФорм_8_3_6 = бит_сл_сервер.ИспользоватьРежимСовместимостиФормСПлатформой_8_3_6();
	
	Если СовместимостьФорм_8_2_13 Тогда
		
		ИмяФормыОбработки = "Обработка.бит_сл_КлиентЛицензирования.Форма.СписокПользователей_упр_8_2_13";
		
	ИначеЕсли СовместимостьФорм_8_3_6 Тогда
		
		ИмяФормыОбработки = "Обработка.бит_сл_КлиентЛицензирования.Форма.СписокПользователей_упр_8_3_6";
		
	Иначе
		
		ИмяФормыОбработки = "Обработка.бит_сл_КлиентЛицензирования.Форма.СписокПользователей_упр";
		
	КонецЕсли; 
		
	ОткрытьФорму(ИмяФормыОбработки,
				 ,
				 ЭтаФорма,
				 ,
				 ,
				 ,
				 Новый ОписаниеОповещения("ОткрытьФормуСпискаЗакрытие", ЭтаФорма),
				 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);	
		
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСпискаЗакрытие(Результат, ДополнительныеПараметры) Экспорт

	Если (ТипЗнч(Результат) = Тип("Булево")) И (Результат = Истина) Тогда
		
		// Сохраним настройки
		ПередатьНастройкиНаСервер();
		ЧислоИсключений = ?(Объект.общ_СписокИсключения="", 0, СтрЧислоСтрок(Объект.общ_СписокИсключения));
		
	КонецЕсли;

КонецПроцедуры 

&НаКлиенте
Процедура ОбновитьСостояниеДействие()
	
	бит_сл_клиент.ПередОбновлениемСостояния();
	бит_сл_сервер.ОтключитьсяОтСервера();
	бит_сл_сервер.ПолучитьЛицензиюДляТекущегоПродукта();	
	бит_сл_клиент.ПриОбновленииСостояния();	
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераИПортПриИзменении(Элемент)
	
	ПередатьНастройкиНаСервер();
	
	Элементы.ДекорацияПредупреждениеКартинкаНеПравильныйПорт.Видимость = Найти(Объект.АдресСервераИПорт, ":10600") <> 0;
	
	Если Элементы.ДекорацияПредупреждениеКартинкаНеПравильныйПорт.Видимость Тогда
		
		ВывестиСообщениеВероятноНеПравильныйПорт("Объект.АдресСервераИПорт");
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ВремяОжиданияДоАктивацииПриИзменении(Элемент)
	
	ПередатьНастройкиНаСервер();	
	
КонецПроцедуры

&НаКлиенте
Процедура общ_АдресСервераИПортПриИзменении(Элемент)
	
	ПередатьНастройкиНаСервер();
	
	Элементы.ДекорацияПредупреждениеКартинкаОбщНеПравильныйПорт.Видимость = Найти(Объект.общ_АдресСервераИПорт, ":10600") <> 0;
	
	Если Элементы.ДекорацияПредупреждениеКартинкаОбщНеПравильныйПорт.Видимость Тогда
		
		ВывестиСообщениеВероятноНеПравильныйПорт("Объект.общ_АдресСервераИПорт");
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура общ_ВремяОжиданияДоАктивацииПриИзменении(Элемент)
	
	ПередатьНастройкиНаСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура общ_ПубликацияНастроекПриИзменении(Элемент)
	
	ПередатьНастройкиНаСервер();
	
	Элементы.ДекорацияФлагПубликации.ЦветТекста = ?(Объект.общ_ПубликацияНастроек, Новый Цвет(53,115,5), Новый Цвет(153, 51, 0));
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераИПортАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ОтключитьОбработчикОжиданияПриРедактировании();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресСервераИПортОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	ПодключитьОбработчикОжиданияПослеРедактирования();
	
КонецПроцедуры

&НаКлиенте
Процедура ПанельЗакладокПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	Если (ТекущаяСтраница = Элементы.ОбщиеНастройки) Тогда
	
		ЧислоИсключений = ?(Объект.общ_СписокИсключения="", 0, СтрЧислоСтрок(Объект.общ_СписокИсключения));
	
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеКартинкаНеПравильныйПортНажатие(Элемент)
	
	ВывестиСообщениеВероятноНеПравильныйПорт("Объект.АдресСервераИПорт");
		
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПредупреждениеКартинкаОбщНеПравильныйПортНажатие(Элемент)
	
	ВывестиСообщениеВероятноНеПравильныйПорт("Объект.общ_АдресСервераИПорт");	
	
КонецПроцедуры

// ИНИЦИАЛИЗАЦИЯ ЛОКАЛЬНЫХ ПЕРЕМЕННЫХ //////////////////////////////////////////////////////////////////////////////