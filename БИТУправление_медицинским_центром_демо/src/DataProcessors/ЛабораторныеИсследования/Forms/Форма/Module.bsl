#Область ОписаниеПеременных
&НаКлиенте
Перем ДинамическиеСпискиСтраницФормы;
#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Страницы = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы;
	Для Каждого Страница Из Страницы Цикл
		Страница.Видимость = Ложь;
	КонецЦикла;
	
	Страницы.СтраницаДокументы.Видимость = Истина;
	Страницы.Утеряны.Видимость = Истина;
	
	Клиника = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	
	Если ТипЗнч(Параметры.ОтборыПодбора) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры.ОтборыПодбора);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	МаршрутыАнализов.Шаг,
	|	МаршрутыАнализов.Активирован
	|ИЗ
	|	РегистрСведений.МаршрутыАнализов КАК МаршрутыАнализов
	|ГДЕ
	|	МаршрутыАнализов.Филиал = &Филиал";
	
	Запрос.УстановитьПараметр("Филиал",Клиника);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();

	Пока Выборка.Следующий() Цикл
		Если Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.АнализСвоихМатериалов 
			ИЛИ Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.АнализЧужихМатериалов тогда
			// Кнопка анализ своих, закладка Забраны\Приняты.
			элементы.РезультатЗабраныПринятыАнализСвоихМатериалов.Видимость = Выборка.Активирован;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.Забор тогда
			// Кнопка забор, закладка Назначены и закладка утеряны.
			Элементы.РезультатНазначеныЗабор.Видимость = Выборка.Активирован;
			Элементы.РезультатУтеряныЗабор.Видимость = Выборка.Активирован;
			Если Выборка.Активирован Тогда
				Страницы.ЗабраныПриняты.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.Назначение тогда
			Если Выборка.Активирован Тогда
				Страницы.Назначены.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.Обработка тогда
			// Кнопка Обработать, Закладка Проанализированы к обработке.
			Если Выборка.Активирован Тогда
				Страницы.ПроанализированыКОбработке.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.ПередачаВСвоюЛибоСтороннююЛабораторию тогда
			// Кнопка передать, закладка Забраны\Приняты.
			элементы.РезультатЗабраныПринятыПередатьМатериал.Видимость = Выборка.Активирован;
			Если Выборка.Активирован Тогда
				Страницы.ПереданыВДругуюЛабораторию.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.ПередачаРезультатовИсследованияИсточнику тогда
			// Кнопка передача результатов, закладка Проанализированы к возврату.
			элементы.ПередачаРезультатов.Видимость = Выборка.Активирован;
			Если Выборка.Активирован Тогда
				Страницы.ПроанализированыКВозврату.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.ПолучениеИзДругойКлиники тогда
			// Кнопка получение, закладка переданы в другую лабораторию и закладка утеряны.
			элементы.РезультатЗабраныПринятыПолучениеМатериалов.Видимость = Выборка.Активирован;
			Элементы.РезультатУтеряныПолучениеМатериалов.Видимость = Выборка.Активирован;
			Если Выборка.Активирован Тогда
				Страницы.ПереданыВДругуюЛабораторию.Видимость = Истина;
			КонецЕсли;
		ИначеЕсли Выборка.Шаг = Перечисления.ШагиМаршрутаАнализов.ПолучениеРезультатовИзЛаборатории тогда
            // Кнопка получение результатов.
			Элементы.ПолучениеРезультатов.Видимость = Выборка.Активирован;
			Если Выборка.Активирован Тогда
				Страницы.ПроанализированыКОбработке.Видимость = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Результат.Параметры.УстановитьЗначениеПараметра("Статус", Перечисления.СостоянияИсследований.ПустаяСсылка());
	
	Если Подбор Тогда
		// Скрываем все кнопки создания новых документов.
		Элементы.РезультатНазначеныЗабор.Видимость = Ложь;
		Элементы.РезультатЗабраныПринятыАнализСвоихМатериалов.Видимость = Ложь;
		Элементы.РезультатЗабраныПринятыПередатьМатериал.Видимость = Ложь;
		Элементы.РезультатЗабраныПринятыПолучениеМатериалов.Видимость = Ложь;
		Элементы.РезультатЗабраныПринятыУтеря.Видимость = Ложь;
		Элементы.ПолучениеРезультатов.Видимость = Ложь;
		Элементы.РезультатПереданыУтеря.Видимость = Ложь;
		Элементы.РезультатКОбработкеОбработать.Видимость = Ложь;
		Элементы.РезультатКОбработкеОбработать1.Видимость = Ложь;
		Элементы.РезультатКОбработкеУтеря.Видимость = Ложь;
		Элементы.ПередачаРезультатов.Видимость = Ложь;
		Элементы.РезультатКВозвратуУтеря.Видимость = Ложь;
		Элементы.РезультатУтеряныЗабор.Видимость = Ложь;
		Элементы.РезультатУтеряныПолучениеМатериалов.Видимость = Ложь;
		
		// Регулируем видимость страниц по виду операции документа.
		массивИсключений = Новый Массив;
		
		Если ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.Забор") Тогда
			массивИсключений.Добавить(Элементы.Назначены);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ВозвратПробИзСтороннейЛаборатории") Тогда
			массивИсключений.Добавить(Элементы.ПереданыВДругуюЛабораторию);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ОтметкаВыполненияИсследования") Тогда
			массивИсключений.Добавить(Элементы.ЗабраныПриняты);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПередачаВСтороннююЛабораторию") Тогда
			массивИсключений.Добавить(Элементы.ЗабраныПриняты);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПередачаРезультатов") Тогда
			массивИсключений.Добавить(Элементы.ПроанализированыКВозврату);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПолучениеРезультатовОтСтороннейЛаборатории") Тогда
			массивИсключений.Добавить(Элементы.ПереданыВДругуюЛабораторию);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.Утеря") Тогда
			массивИсключений.Добавить(Элементы.ЗабраныПриняты);
			массивИсключений.Добавить(Элементы.ПереданыВДругуюЛабораторию);
			массивИсключений.Добавить(Элементы.ПроанализированыКОбработке);
			массивИсключений.Добавить(Элементы.ПроанализированыКВозврату);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПолучениеАнализа") Тогда
			массивИсключений.Добавить(Элементы.Назначены);
			массивИсключений.Добавить(Элементы.Утеряны);
		ИначеЕсли ВидОперацииДокументаВладельца = ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПустаяСсылка") Тогда
			массивИсключений.Добавить(Элементы.ПроанализированыКОбработке);
			массивИсключений.Добавить(Элементы.ПроанализированыКВозврату);
			Элементы.Клиент.Доступность = Ложь;
		КонецЕсли;
		
		Для Каждого Страница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
			Если массивИсключений.Найти(Страница) = Неопределено Тогда
				Страница.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
		Элементы.ГруппаСтраницы.ТекущаяСтраница = массивИсключений[0];
		
		УстановитьУсловноеОформление();
		
		РаботаСФормамиКлиентСервер.УстановитьВидимостьЭлементаФормы(Элементы, "ФормаДокументДействияНадАнализамиСоздатьЗаборПоПродажам", Ложь);
		РаботаСФормамиКлиентСервер.УстановитьВидимостьЭлементаФормы(Элементы, "ФормаДокументДействияНадАнализамиСоздатьЗаборПоНазначениям", Ложь);
	КонецЕсли;
	
	Элементы.ФормаВыбрать.Видимость = Подбор;
	Элементы.ФормаЗакрыть.Видимость = Подбор;
	
	Документы.Параметры.УстановитьЗначениеПараметра("Клиент", Неопределено);
	Документы.Параметры.УстановитьЗначениеПараметра("Номенклатура", Неопределено);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьОтборы(Истина);
	
	ДинамическиеСпискиСтраницФормы = Новый Соответствие;
	ДинамическиеСпискиСтраницФормы.Вставить("Назначены",					"РезультатНазначены");
	ДинамическиеСпискиСтраницФормы.Вставить("ЗабраныПриняты",				"РезультатЗабраныПриняты");
	ДинамическиеСпискиСтраницФормы.Вставить("ПереданыВДругуюЛабораторию",	"РезультатПереданы");
	ДинамическиеСпискиСтраницФормы.Вставить("ПроанализированыКВозврату",	"РезультатКВозврату");
	ДинамическиеСпискиСтраницФормы.Вставить("ПроанализированыКОбработке",	"РезультатКОбработке");
	ДинамическиеСпискиСтраницФормы.Вставить("Утеряны",						"РезультатУтеряны");
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборы(СменаСтраницы = Ложь)
	
	Если ЗначениеЗаполнено(Дата) Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("ПериодДата", НачалоДня(Дата), Результат);
		РаботаСФормамиКлиент.УстановитьОтборСписка("День",		 НачалоДня(Дата), Документы);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("ПериодДата",Результат);
		РаботаСФормамиКлиент.СнятьОтборСписка("День",Документы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Клиника) Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("КлиникаИсходная", Клиника, Результат);
		РаботаСФормамиКлиент.УстановитьОтборСписка("Филиал", Клиника, Документы);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("КлиникаИсходная",Результат);
		РаботаСФормамиКлиент.СнятьОтборСписка("Филиал",Документы);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Клиент) Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("Клиент", Клиент, Результат);
		Документы.Параметры.УстановитьЗначениеПараметра("Клиент", Клиент);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("Клиент",Результат);
		Документы.Параметры.УстановитьЗначениеПараметра("Клиент", Неопределено);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Обследование) Тогда
		РаботаСФормамиКлиент.УстановитьОтборСписка("Номенклатура", Обследование, Результат);
		Документы.Параметры.УстановитьЗначениеПараметра("Номенклатура", Обследование);
	Иначе
		РаботаСФормамиКлиент.СнятьОтборСписка("Номенклатура",Результат);
		Документы.Параметры.УстановитьЗначениеПараметра("Номенклатура", Неопределено);
	КонецЕсли;
	
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Элементы.СтраницаДокументы Тогда
		
		Результат.Параметры.УстановитьЗначениеПараметра("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.ПустаяСсылка"));
		
	ИначеЕсли ТекущаяСтраница = Элементы.ЗабраныПриняты Тогда
		
		Если ЗначениеЗаполнено(Местонахождение) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("Местонахождение", Местонахождение, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("Местонахождение",Результат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КодПробы) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("КодПробы", КодПробы, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("КодПробы",Результат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаНачала", ДатаНачала, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("ДатаНачала",Результат);
		КонецЕсли;
		
		Если СменаСтраницы Тогда
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач.Специализации.Специализация",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("Статус",Результат);
			РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Забран"), Результат);
			
			Если ЗначениеЗаполнено(Клиника) Тогда
				СЗКлиники = Новый СписокЗначений;
				СЗКлиники.Добавить(Клиника);
				СЗКлиники.Добавить(ПредопределенноеЗначение("Справочник.Филиалы.ПустаяСсылка"));
				РаботаСФормамиКлиент.УстановитьОтборСписка("Местонахождение", СЗКлиники, Результат);
			Иначе
				РаботаСФормамиКлиент.СнятьОтборСписка("Местонахождение",Результат);
			КонецЕсли;
				
		КонецЕсли;
		
		Результат.Параметры.УстановитьЗначениеПараметра("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Забран"));
		
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Назначены Тогда
		Если ЗначениеЗаполнено(Врач) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("Регистратор.Врач", Врач, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач",Результат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Специализация) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("Регистратор.Врач.Специализации.Специализация", Специализация, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач.Специализации.Специализация",Результат);
		КонецЕсли;
		
		Если СменаСтраницы Тогда
			РаботаСФормамиКлиент.СнятьОтборСписка("Местонахождение",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("КодПробы",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("ДатаНачала",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("Статус",Результат);
			РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Назначен"), Результат);
		КонецЕсли;
		
		Результат.Параметры.УстановитьЗначениеПараметра("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Назначен"));
		
	ИначеЕсли ТекущаяСтраница = Элементы.ПереданыВДругуюЛабораторию 
		ИЛИ ТекущаяСтраница = Элементы.ПроанализированыКВозврату
		ИЛИ ТекущаяСтраница = Элементы.ПроанализированыКОбработке 
		ИЛИ ТекущаяСтраница = Элементы.Утеряны Тогда
		
		Если ЗначениеЗаполнено(Местонахождение) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("Местонахождение", Местонахождение, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("Местонахождение",Результат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(КодПробы) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("КодПробы", КодПробы, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("КодПробы",Результат);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДатаНачала) Тогда
			РаботаСФормамиКлиент.УстановитьОтборСписка("ДатаНачала", ДатаНачала, Результат);
		Иначе
			РаботаСФормамиКлиент.СнятьОтборСписка("ДатаНачала",Результат);
		КонецЕсли;
		
		Если СменаСтраницы Тогда
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("Регистратор.Врач.Специализации.Специализация",Результат);
			РаботаСФормамиКлиент.СнятьОтборСписка("Статус",Результат);
			Если ТекущаяСтраница = Элементы.ПереданыВДругуюЛабораторию Тогда 
				
				Результат.Параметры.УстановитьЗначениеПараметра("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Забран"));
				РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Забран"), Результат);
				
				Если НЕ ЗначениеЗаполнено(Местонахождение) Тогда
					РаботаСФормамиКлиент.УстановитьОтборСписка("Местонахождение", Клиника, Результат, ВидСравненияКомпоновкиДанных.НеРавно);	
				КонецЕсли;
				
			ИначеЕсли ТекущаяСтраница = Элементы.ПроанализированыКВозврату Тогда
				
				Результат.Параметры.УстановитьЗначениеПараметра("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Проанализирован"));
				РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Проанализирован"), Результат);
				
				Если ЗначениеЗаполнено(Клиника) Тогда
					РаботаСФормамиКлиент.УстановитьОтборСписка("КлиникаИсходная", Клиника, Результат,ВидСравненияКомпоновкиДанных.НеРавно);	
				КонецЕсли;
				
			ИначеЕсли ТекущаяСтраница = Элементы.ПроанализированыКОбработке Тогда
				
				Результат.Параметры.УстановитьЗначениеПараметра("Статус",ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Проанализирован"));
				
				РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Проанализирован"), Результат);
				СЗ = новый СписокЗначений;
				Если ЗначениеЗаполнено(Клиника) Тогда
					СЗ.Добавить(Клиника);
				КонецЕсли;
				СЗ.Добавить(ПредопределенноеЗначение("Справочник.Филиалы.ПустаяСсылка"));
				
				РаботаСФормамиКлиент.УстановитьОтборСписка("КлиникаИсходная", СЗ, Результат);	
				
			ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Утеряны Тогда
				
				Результат.Параметры.УстановитьЗначениеПараметра("Статус",ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Утерян"));
				РаботаСФормамиКлиент.УстановитьОтборСписка("Статус", ПредопределенноеЗначение("Перечисление.СостоянияИсследований.Утерян"), Результат);
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Страница Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		Если Страница <> Элементы.СтраницаДокументы Тогда
			Для Каждого ЭлементСтраницы Из Страница.ПодчиненныеЭлементы Цикл
				Если ТипЗнч(ЭлементСтраницы) = Тип("ТаблицаФормы") Тогда
					ЭлементСтраницы.Видимость = Страница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КлиникаПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ОбследованиеПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ВрачПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура СпециализацияПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ДатаНачала1ПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура КодПробыПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	УстановитьОтборы(Истина);	
КонецПроцедуры

&НаКлиенте
Процедура Местонахождение3ПриИзменении(Элемент)
	УстановитьОтборы();
КонецПроцедуры

&НаКлиенте
Процедура Забор(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗабраныПриняты Тогда
		СоздатьДокументАнализа(Неопределено, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.Забор"), Истина);
	Иначе
		ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
		СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.Забор"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Функция ТекущийДинамическиСписок()
	
	Возврат Элементы.Найти(ДинамическиеСпискиСтраницФормы.Получить(Элементы.ГруппаСтраницы.ТекущаяСтраница.Имя));

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеВыбранныхСтрокИсследований(Знач КлючиЗаписей)
	
	ДанныеВыбранныхСтрок = Новый Массив;
	
	СписокИдИсследований = Новый Массив;
	Для Каждого КлючЗаписи Из КлючиЗаписей Цикл
		СписокИдИсследований.Добавить(КлючЗаписи.Ид);
	КонецЦикла;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИД", СписокИдИсследований);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Исследования.ИД,
	|	Исследования.Регистратор,
	|	Исследования.КодПробы,
	|	Исследования.Номенклатура,
	|	Исследования.Клиент,
	|	Исследования.Местонахождение
	|ИЗ
	|	РегистрСведений.ЛабораторныеИсследования КАК Исследования
	|ГДЕ
	|	Исследования.ИД В(&ИД)"
	;
	Выб = Запрос.Выполнить().Выбрать();
	Отбор = Новый Структура("ИД, Регистратор"); 
	
	Для Каждого КлючЗаписи Из КлючиЗаписей Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, КлючЗаписи);
		
		Выб.Сбросить();
		Если Выб.НайтиСледующий(Отбор) Тогда
			
			ДанныеСтроки = Новый Структура("ИД, КодПробы, Клиент, Номенклатура, Местонахождение");
			ЗаполнитьЗначенияСвойств(ДанныеСтроки, Выб);
			
			ДанныеВыбранныхСтрок.Добавить(ДанныеСтроки);
			
		КонецЕсли;
	КонецЦикла;

	Возврат ДанныеВыбранныхСтрок;

КонецФункции

&НаКлиенте
Процедура СоздатьДокументАнализа(ДанныеИсследований, ВидОперации, ТолькоОткрытие = Ложь)
	
	ЗначенияЗаполнения = Новый Структура;
	ЗначенияЗаполнения.Вставить("Филиал", Клиника);
	ЗначенияЗаполнения.Вставить("ВидОперации", ВидОперации);
	ЗначенияЗаполнения.Вставить("Анализы", ДанныеИсследований);
	
	ФормаДокумента = ОткрытьФорму("Документ.ДействияНадАнализами.ФормаОбъекта", Новый Структура("ЗначенияЗаполнения", ЗначенияЗаполнения));
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИДИзКЛючаЗаписи(КлючЗаписи)
	Возврат КлючЗаписи.ИД;	
КонецФункции

&НаКлиенте
Процедура АнализСвоихМатериалов(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ОтметкаВыполненияИсследования"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПередатьМатериал(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПередачаВСтороннююЛабораторию"));
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеМатериалов(Команда)
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ЗабраныПриняты Тогда
		СоздатьДокументАнализа(Неопределено, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПолучениеАнализа"), Истина);
	Иначе
		ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
		СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПолучениеАнализа"));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура Утеря(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.Утеря"));

КонецПроцедуры
                                              
&НаКлиенте
Процедура ПолучениеРезультатов(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПолучениеРезультатовОтСтороннейЛаборатории"));

КонецПроцедуры

&НаКлиенте
Процедура Обработать(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	Если ДанныеВыбранныхСтрок.Количество() = 0 Тогда
		Возврат;
	Иначе
		// Если выделено несколько строк, будет создан только один документ с исследованиями первого клиента.
		КлиентИсследования = ДанныеВыбранныхСтрок[0].Клиент;
	КонецЕсли;
	
	ШаблоныПриема = Новый Массив;
	ИдентификаторыИсследований = Новый Массив;
	Для Каждого ДанныеИсследования Из ДанныеВыбранныхСтрок Цикл
		Если ДанныеИсследования.Клиент = КлиентИсследования Тогда
			ШаблонИсследования = 
				ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДанныеИсследования.Номенклатура, "ИндивидуальныйШаблонОсмотра");
				
			Если ЗначениеЗаполнено(ШаблонИсследования) Тогда
				ШаблоныПриема.Добавить(ШаблонИсследования);
			КонецЕсли;
			ИдентификаторыИсследований.Добавить(ДанныеИсследования.ИД);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура("Клиент, ШаблоныПриема", КлиентИсследования, ШаблоныПриема);
	ЗначенияЗаполнения = НайтиПервичныйПриемМедкартуПоИсследованиям(ИдентификаторыИсследований);
	Если ЗначенияЗаполнения.Количество() > 0 Тогда 
		ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	КонецЕсли;
	
	ФормаПриема = ПолучитьФорму("Документ.Прием.ФормаОбъекта", ПараметрыФормы,,Новый УникальныйИдентификатор);
	
	Для Каждого ДанныеИсследования Из ДанныеВыбранныхСтрок Цикл
		
		Если ДанныеИсследования.Клиент = КлиентИсследования Тогда
			
			СтрокаРабот = ФормаПриема.Объект.Работы.Добавить();         
			СтрокаРабот.Номенклатура = ДанныеИсследования.Номенклатура;            
			СтрокаРабот.Количество = 1;
			СтрокаРабот.ИД = ДанныеИсследования.ИД;
			СтрокаРабот.НомерПробы = ДанныеИсследования.КодПробы;
			
		КонецЕсли;
	КонецЦикла;
	
	ФормаПриема.ОткрытьМодально();
	 
КонецПроцедуры

&НаКлиенте                                            
Процедура ПередачаРезультатов(Команда)
	
	ДанныеВыбранныхСтрок = ПолучитьДанныеВыбранныхСтрокИсследований(ТекущийДинамическиСписок().ВыделенныеСтроки);
	СоздатьДокументАнализа(ДанныеВыбранныхСтрок, ПредопределенноеЗначение("Перечисление.ВидыОперацийАнализов.ПередачаРезультатов"));

КонецПроцедуры

&НаКлиенте
Процедура РезультатЗабраныПринятыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Если Подбор Тогда
		
		ВыбранныеКлючи = ПолучитьВыбранныеКлючи();
		ОповеститьОВыборе(ВыбранныеКлючи);
		
		ИД = ПолучитьИДИзКЛючаЗаписи(Элемент.ТекущаяСтрока);
		Если ТекущиеИД.НайтиПоЗначению(ИД) = Неопределено Тогда
			ТекущиеИД.Добавить(ИД);	
			УстановитьУсловноеОформление();
		КонецЕсли;
	Иначе
		ИндексКоманды = ?(Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ЗабраныПриняты,1,0);
		мсВидимыеКнопки = Новый Массив;
		Для Каждого Кнопка Из Элемент.КоманднаяПанель.ПодчиненныеЭлементы Цикл
			Если Кнопка.Видимость 
				И ТипЗнч(Кнопка) = Тип("КнопкаФормы")
				И ЗначениеЗаполнено(Кнопка.ИмяКоманды)
			Тогда
				мсВидимыеКнопки.Добавить(Кнопка);
			КонецЕсли;
		КонецЦикла;
		Попытка
			ИндексКоманды = Мин(ИндексКоманды, мсВидимыеКнопки.Количество()-1);
			Выполнить(мсВидимыеКнопки[ИндексКоманды].ИмяКоманды + "(Неопределено)");
		Исключение КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	ВыбранныеКлючи = ПолучитьВыбранныеКлючи();
	ОповеститьОВыборе(ВыбранныеКлючи);
	Если Открыта() Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВыбранныеКлючи()
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	ТекущийДС = Неопределено;
	Если ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаДокументы Тогда
		// Маловероятно
		ТекущийДС = Элементы.Документы;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ЗабраныПриняты Тогда
		ТекущийДС = Элементы.РезультатЗабраныПриняты;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Назначены Тогда
		ТекущийДС = Элементы.РезультатНазначены;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПереданыВДругуюЛабораторию Тогда
		ТекущийДС = Элементы.РезультатПереданы;	
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПроанализированыКВозврату Тогда
		ТекущийДС = Элементы.РезультатКВозврату;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПроанализированыКОбработке Тогда
		ТекущийДС = Элементы.РезультатКОбработке;	
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Утеряны Тогда
		ТекущийДС = Элементы.РезультатУтеряны;
	КонецЕсли;
	массивВозврата = новый Массив;	
	Для каждого ВыбраннаяСтрока из ТекущийДС.ВыделенныеСтроки Цикл
		массивВозврата.Добавить(ВыбраннаяСтрока);			
	КонецЦикла;
	Возврат массивВозврата;
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	Если ТекущиеИД.Количество() <> 0 Тогда
		УО = Результат.УсловноеОформление.Элементы;
		
		ЭлементУО = УО.Добавить();
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона",WebЦвета.Серый);
		
		// Условие форматирования
		ЭлементУсловия  = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ЭлементУсловия.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ИД");                     	
		ЭлементУсловия.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементУсловия.ПравоеЗначение = ТекущиеИД;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРегистратораСтроки(Команда)
	ОткрытьЗначение(ПолучитьРегистратораСтрокиСервер());
КонецПроцедуры

&НаСервере
Функция ПолучитьРегистратораСтрокиСервер()
	ТекущаяСтраница = Элементы.ГруппаСтраницы.ТекущаяСтраница;
	ТекущийДС = Неопределено;
	Если ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.СтраницаДокументы Тогда
		// Маловероятно
		ТекущийДС = Неопределено;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ЗабраныПриняты Тогда
		ТекущийДС = Элементы.РезультатЗабраныПриняты;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Назначены Тогда
		ТекущийДС = Элементы.РезультатНазначены;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПереданыВДругуюЛабораторию Тогда
		ТекущийДС = Элементы.РезультатПереданы;	
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПроанализированыКВозврату Тогда
		ТекущийДС = Элементы.РезультатКВозврату;
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.ПроанализированыКОбработке Тогда
		ТекущийДС = Элементы.РезультатКОбработке;	
	ИначеЕсли ТекущаяСтраница = Элементы.ГруппаСтраницы.ПодчиненныеЭлементы.Утеряны Тогда
		ТекущийДС = Элементы.РезультатУтеряны;
	КонецЕсли;
	
	Возврат ?(ТекущийДС = Неопределено, ТекущийДС, ТекущийДС.ТекущаяСтрока.Регистратор);
КонецФункции

&НаСервереБезКонтекста
Функция НайтиПервичныйПриемМедкартуПоИсследованиям(ИдентификаторыИсследований)
	
	СтруктураВозврат = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Прием.ПервичныйПрием КАК ПервичныйПрием,
		|	Прием.МедицинскаяКарта КАК МедицинскаяКарта,
		|	ЛабораторныеИсследования.ИД КАК ИД
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЛабораторныеИсследования.ИД КАК ИД,
		|		ЛабораторныеИсследования.Регистратор КАК Регистратор
		|	ИЗ
		|		РегистрСведений.ЛабораторныеИсследования КАК ЛабораторныеИсследования
		|	ГДЕ
		|		ЛабораторныеИсследования.ИД В(&ИдентификаторыИсследований)
		|		И ЛабораторныеИсследования.Статус = ЗНАЧЕНИЕ(Перечисление.СостоянияИсследований.Назначен)) КАК ЛабораторныеИсследования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием КАК Прием
		|		ПО (Прием.Ссылка = ЛабораторныеИсследования.Регистратор)
		|ИТОГИ ПО
		|	МедицинскаяКарта,
		|	ПервичныйПрием";
	
	Запрос.УстановитьПараметр("ИдентификаторыИсследований", ИдентификаторыИсследований);
	Результат = Запрос.Выполнить();
	
	ВыборкаМедкарта = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Если ВыборкаМедкарта.Количество() = 1 Тогда
		
		ВыборкаМедкарта.Следующий();
		СтруктураВозврат.Вставить("МедицинскаяКарта", ВыборкаМедкарта.МедицинскаяКарта);
		
		ВыборкаПрием = ВыборкаМедкарта.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаПрием.Количество() = 1 Тогда
			ВыборкаПрием.Следующий();
			СтруктураВозврат.Вставить("ПервичныйПрием", ВыборкаПрием.ПервичныйПрием);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураВозврат;
	
КонецФункции

#КонецОбласти
