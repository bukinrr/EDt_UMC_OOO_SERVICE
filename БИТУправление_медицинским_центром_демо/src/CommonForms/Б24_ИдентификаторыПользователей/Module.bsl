#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	соотПредставленияПользователейБ24 = Новый Соответствие;
	
	ПродолжатьПолучениеПользователей = Истина;
	НачальнаяПозиция = 0;
	
	Пока ПродолжатьПолучениеПользователей Цикл
		ПользователиБ24 = Битрикс.ВыполнитьМетод("user", "get", , , , , Новый Структура("start", НачальнаяПозиция));
		
		Если ПользователиБ24 <> Неопределено И ТипЗнч(ПользователиБ24) = Тип("Массив") Тогда
			Если ПользователиБ24.Количество() = 0 Тогда
				ПродолжатьПолучениеПользователей = Ложь;
				Продолжить;
			КонецЕсли;
			
			Для Каждого Пользователь Из ПользователиБ24 Цикл
				ИдентификаторПользователя = СтроковыеФункцииКлиентСервер.ПолучитьЦифрыСтроки(Пользователь.Получить("ID"));
				
				мИмяПользователя = Новый Массив;
				мИмяПользователя.Добавить(Строка(Пользователь.Получить("NAME")));
				мИмяПользователя.Добавить(Строка(Пользователь.Получить("LAST_NAME")));
				
				мEmail = Новый Массив;
				мEmail.Добавить("email");
				мEmail.Добавить(Строка(Пользователь.Получить("EMAIL")));
				
				мID = Новый Массив;
				мID.Добавить("id");
				мID.Добавить(ИдентификаторПользователя);
				
				мДанныеПользователя = Новый Массив;
				мДанныеПользователя.Добавить(СтрСоединить(мИмяПользователя, " "));
				мДанныеПользователя.Добавить(СтрСоединить(мEmail, ": "));
				мДанныеПользователя.Добавить(СтрСоединить(мID, ": "));
				
				ПредставлениеПользователяБ24 = СтрСоединить(мДанныеПользователя, "; ");
				
				соотПредставленияПользователейБ24.Вставить(ИдентификаторПользователя, ПредставлениеПользователяБ24);
				Элементы.ИдентификаторыПользователейИдентификатор.СписокВыбора.Добавить(ИдентификаторПользователя, ПредставлениеПользователяБ24);
			КонецЦикла;
			НачальнаяПозиция = НачальнаяПозиция + 50;
		Иначе
			Сообщить(НСтр("ru='Не удалось получить список сотрудников Битрикс24'"));
			ПродолжатьПолучениеПользователей = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ПредставленияПользователейБ24 = Новый ФиксированноеСоответствие(соотПредставленияПользователейБ24);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Объект,
		|	ЕСТЬNULL(ИдентификаторыПользователей.ИдентификаторБ24, """") КАК ИдентификаторБ24
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Б24_Идентификаторы КАК ИдентификаторыПользователей
		|		ПО (ИдентификаторыПользователей.СущностьБ24 = ЗНАЧЕНИЕ(Перечисление.Б24_Сущности.Пользователь))
		|			И (ИдентификаторыПользователей.Объект = Пользователи.Ссылка)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ИдентификаторыПользователей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		ПредставлениеПользователя = ПредставленияПользователейБ24.Получить(НоваяСтрока.ИдентификаторБ24);
		Если ПредставлениеПользователя = Неопределено Тогда
			ПредставлениеПользователя = НоваяСтрока.ИдентификаторБ24;
		КонецЕсли;
		НоваяСтрока.ПредставлениеПользователяБ24 = ПредставлениеПользователя;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)
	
	СохранитьНаСервере();
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИдентификаторыПользователейИдентификаторПриИзменении(Элемент)
	
	ТекДанные = Элементы.ИдентификаторыПользователей.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		ПредставлениеПользователя = ПредставленияПользователейБ24.Получить(ТекДанные.ИдентификаторБ24);
		Если ПредставлениеПользователя = Неопределено Тогда
			ПредставлениеПользователя = ТекДанные.ИдентификаторБ24;
		КонецЕсли;
		ТекДанные.ПредставлениеПользователяБ24 = ПредставлениеПользователя;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СохранитьНаСервере()
	
	тзИдентификаторыПользователей = ИдентификаторыПользователей.Выгрузить().СкопироватьКолонки();
	тзИдентификаторыПользователей.Колонки.Удалить("ПредставлениеПользователяБ24");
	тзИдентификаторыПользователей.Колонки.Добавить("СущностьБ24");
	
	Для Каждого СтрокаТаблицы Из ИдентификаторыПользователей Цикл
		Если ЗначениеЗаполнено(СтрокаТаблицы.ИдентификаторБ24) Тогда
			ЗаполнитьЗначенияСвойств(тзИдентификаторыПользователей.Добавить(), СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	тзИдентификаторыПользователей.ЗаполнитьЗначения(Перечисления.Б24_Сущности.Пользователь, "СущностьБ24");
	
	НЗ = РегистрыСведений.Б24_Идентификаторы.СоздатьНаборЗаписей();
	НЗ.Отбор.СущностьБ24.Установить(Перечисления.Б24_Сущности.Пользователь);
	НЗ.Загрузить(тзИдентификаторыПользователей);
	НЗ.Записать();
	
	Инициализация();
	
КонецПроцедуры

&НаСервере
Процедура Инициализация() Экспорт
	
	Если Не Обсуждения.СистемаВзаимодействийПодключена() Тогда
		Возврат;
	КонецЕсли;
	УстановитьПривилегированныйРежим(Истина);
	
	мПользователи = Новый Массив;
	Для Каждого СтрокаПользователя Из ИдентификаторыПользователей Цикл
		Если ЗначениеЗаполнено(СтрокаПользователя.ИдентификаторБ24) Тогда
			мПользователи.Добавить(СтрокаПользователя.Объект);
		КонецЕсли;
	КонецЦикла;
	
	Обсуждения.ДобавитьПользователейВОбсуждение(мПользователи, БитриксКлиентСервер.КлючСлужебногоОбсуждения());
	
	//// Создаем пользователей системы взаимодействия
	//Для Каждого ПользовательИБ ИЗ ПользователиИнформационнойБазы.ПолучитьПользователей() Цикл
	//	Попытка
	//		ИдентификаторПользователяСВ = СистемаВзаимодействия.ПолучитьИдентификаторПользователя(ПользовательИБ.УникальныйИдентификатор);
	//		ПользовательСВ = СистемаВзаимодействия.ПолучитьПользователя(ИдентификаторПользователяСВ);
	//	Исключение
	//		ПользовательСВ = СистемаВзаимодействия.СоздатьПользователя(ПользовательИБ);
	//		ПользовательСВ.Записать();
	//	КонецПопытки;
	//	
	//	Если ПользовательИБ.Роли.Содержит(Метаданные.Роли.Курьер) Тогда
	//		// создаем обсуждение служебное обсуждение для курьеров
	//		СлужебноеОбсуждение = СистемаВзаимодействия.ПолучитьОбсуждение(КлючСлужебногоОбсуждения);
	//		Если СлужебноеОбсуждение = Неопределено Тогда
	//			СлужебноеОбсуждение = СистемаВзаимодействия.СоздатьОбсуждение();
	//			СлужебноеОбсуждение.Отображаемое = Ложь;
	//			СлужебноеОбсуждение.Ключ = КлючСлужебногоОбсуждения;
	//		КонецЕсли;
	//		Если Не СлужебноеОбсуждение.Участники.Содержит(ПользовательСВ.Идентификатор) Тогда
	//			СлужебноеОбсуждение.Участники.Добавить(ПользовательСВ.Идентификатор);
	//		КонецЕсли;
	//		СлужебноеОбсуждение.Записать();
	//	КонецЕсли;
	//КонецЦикла;
	
КонецПроцедуры

#КонецОбласти