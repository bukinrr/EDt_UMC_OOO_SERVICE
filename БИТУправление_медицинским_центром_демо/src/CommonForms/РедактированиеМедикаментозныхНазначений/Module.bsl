#Область ОписаниеПеременныхФормы

&НаКлиенте
Перем кешЕдиницаИзмерения;

#КонецОбласти

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Источник = Параметры.Источник;
	
	Если Источник = "Прием"
		И Параметры.ДанныеЗаполнения.Свойство("Дозировка")
		И Не Параметры.ДанныеЗаполнения.Свойство("РазоваяДоза")
	Тогда
		Параметры.ДанныеЗаполнения.Вставить("РазоваяДоза", Параметры.ДанныеЗаполнения.Дозировка);
	КонецЕсли;
	
	Для Каждого Элемент Из ЭтаФорма.Элементы Цикл
		ИмяРеквизита = Элемент.Имя;
		
		Если Параметры.ДанныеЗаполнения.Свойство(ИмяРеквизита) Тогда
			ЭтаФорма[ИмяРеквизита]  = Параметры.ДанныеЗаполнения[ИмяРеквизита];
		КонецЕсли;
	КонецЦикла;
	
	ЭтоДобавлениеНового = Параметры.Свойство("НоваяСтрока") И Параметры.НоваяСтрока;
	
	Если ЭтоДобавлениеНового Тогда
		// Заполнение новой позиции плана лечения по-умолчанию
		КоличествоДней = 1;
		ПриемовВДень = 1;
		СуточнаяДоза = 1;
		КурсоваяДоза = 1;
		РазоваяДоза  = 1;
		
		Если Источник = "Прием" Тогда
			ДатаОкончания = Дата;
		Иначе
			СмещениеОтДатыПриема = 1;	
			Количество = 1;
		КонецЕсли;
		
	Иначе
		Если Источник = "Прием" Тогда
			Если ЗначениеЗаполнено(Дата)
				И ЗначениеЗаполнено(ДатаОкончания)
			Тогда
				КоличествоДней = (НачалоДня(ДатаОкончания) - НачалоДня(Дата))/86400 + 1;
			КонецЕсли;
		Иначе
			КоличествоДней = Количество / ?(ПриемовВДень = 0, 1, ПриемовВДень);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СуточнаяДоза) Тогда 
			СуточнаяДоза = РазоваяДоза * ?(ПриемовВДень = 0, 1, ПриемовВДень);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(КурсоваяДоза) Тогда
			КурсоваяДоза = СуточнаяДоза * КоличествоДней;
		КонецЕсли;
	КонецЕсли;
	
	Если Источник = "Прием" Тогда 
		// Восстановление настроек формы
		ЗафиксироватьКурсовуюДозу = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаРедактированияМедикаментозныхНазначений", "РежимФиксацииДозы", 0);
		Если ЗафиксироватьКурсовуюДозу = 2 Тогда
			Элементы.КурсоваяДоза.ТолькоПросмотр = Истина;	
			Элементы.СуточнаяДоза.ТолькоПросмотр = Истина;	
		КонецЕсли;
	КонецЕсли;
	
	ТипНазначенияПриСозданииФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	ПриИзмененииНазначениеДоступностьЕдиницы();
	
	кешЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Источник = "Прием" Тогда
		Если ЗавершениеРаботы Тогда
			Возврат;
		КонецЕсли;
		
		НастройкиФормы = Новый Структура;
		НастройкиФормы.Вставить("РежимФиксацииДозы", ЗафиксироватьКурсовуюДозу);
		
		Если ЭтоДобавлениеНового Тогда
			// Это было заполнение новой позиции плана лечения
			НастройкиФормы.Вставить("ТипНазначения", ТипНазначения);
		КонецЕсли;
		
		РаботаСФормамиСервер.СохранитьНастройкиФормы(НастройкиФормы, "ФормаРедактированияМедикаментозныхНазначений");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	ДанныеЗаполнения = Новый Структура();
	Для Каждого Элемент Из ЭтаФорма.Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ПолеФормы") 
			И (Элемент.Вид = ВидПоляФормы.ПолеВвода Или Элемент.Вид = ВидПоляФормы.ПолеФлажка)
		Тогда
			ИмяРеквизита = Элемент.Имя;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, ИмяРеквизита) Тогда
				Данныезаполнения.Вставить(ИмяРеквизита, ЭтаФорма[ИмяРеквизита]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеЗаполнения.ПриемовВДень = 0 Тогда 
		ДанныеЗаполнения.ПриемовВДень = 1; 
	КонецЕсли;	
	
	Если Источник = "Прием" Тогда
		
		ДанныеЗаполнения.Вставить("Дозировка", ДанныеЗаполнения.РазоваяДоза);
		
	КонецЕсли;
	
	Закрыть(ДанныеЗаполнения);	

КонецПроцедуры

&НаКлиенте
Процедура Отменить(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура НазначениеПриИзменении(Элемент)

	ПриИзмененииНазначение(Назначение, ЕдиницаИзмерения);
	ПриИзмененииНазначениеДоступностьЕдиницы();
	
	Если ТипНазначения = "Строка" Тогда
		ЕдиницаИзмерения = кешЕдиницаИзмерения;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииНазначениеДоступностьЕдиницы()
	
	Элементы.ЕдиницаИзмерения.ТолькоПросмотр = ТипНазначения = "СМНН";
	
КонецПроцедуры

&НаКлиенте
Процедура КурсоваяДозаПриИзменении(Элемент)
	
	Если ЗафиксироватьКурсовуюДозу = 0
		Или КоличествоДней = 0
	Тогда
		Если СуточнаяДоза <> 0 Тогда
			КоличествоДней = Окр(КурсоваяДоза/СуточнаяДоза);
			Если КоличествоДней = 0 Тогда
				КоличествоДней = 1;
			КонецЕсли;
			
			Если ЗафиксироватьКурсовуюДозу = 0 Тогда
				КурсоваяДоза = СуточнаяДоза * КоличествоДней;
			Иначе
				СуточнаяДоза = КурсоваяДоза / КоличествоДней;
			КонецЕсли;
		КонецЕсли;
	Иначе
		СуточнаяДоза = КурсоваяДоза / КоличествоДней;
	КонецЕсли;
	
	ПриИзмененииКоличествоДней();
	
КонецПроцедуры

&НаКлиенте
Процедура СуточнаяДозаПриИзменении(Элемент)
	
	Если ЗафиксироватьКурсовуюДозу = 0 Тогда
		КурсоваяДоза = СуточнаяДоза * КоличествоДней;
	ИначеЕсли СуточнаяДоза <> 0 Тогда
		КоличествоДней = Окр(КурсоваяДоза/СуточнаяДоза);
		Если КоличествоДней = 0 Тогда
			КоличествоДней = 1;
		КонецЕсли;
		СуточнаяДоза = КурсоваяДоза / КоличествоДней;
	КонецЕсли;
	
	ПриИзмененииКоличествоДней();
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоДнейПриИзменении(Элемент)
	
	ПриИзмененииКоличествоДней();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриемовВДеньПриИзменении(Элемент)
	
	Если ЗафиксироватьКурсовуюДозу <> 2 Тогда
		Если ПриемовВДень <> 0 Тогда
			РазоваяДоза = СуточнаяДоза / ПриемовВДень;
		КонецЕсли;
	Иначе
		СуточнаяДоза = РазоваяДоза * ПриемовВДень;
		КурсоваяДоза = СуточнаяДоза * КоличествоДней;	
	КонецЕсли;
	
	РассчитатьОбщееКоличество();
	
КонецПроцедуры

&НаКлиенте
Процедура РазоваяДозаПриИзменении(Элемент)
	
	Если ЗафиксироватьКурсовуюДозу <> 2 Тогда
		Если РазоваяДоза <> 0 Тогда
			ПриемовВДень = СуточнаяДоза / РазоваяДоза;
			ПриИзмененииКоличествоДней();
		КонецЕсли; 
	Иначе
		СуточнаяДоза = РазоваяДоза * ПриемовВДень;
		КурсоваяДоза = СуточнаяДоза * КоличествоДней;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ПриИзмененииДатаПриема(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	ПриИзмененииДатаПриема();
КонецПроцедуры

&НаКлиенте
Процедура ДатаРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДата();
	Иначе
		Дата = Дата + Направление * 86400;
	КонецЕсли;
	
	ПриИзмененииДатаПриема(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ДатаОкончания = ТекущаяДата();
	Иначе
		ДатаОкончания = ДатаОкончания + Направление * 86400;
	КонецЕсли;
	
	ПриИзмененииДатаПриема();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодставитьВрачаИзПриемаПриИзменении(Элемент)
	Сотрудник = ПредопределенноеЗначение("Справочник.Сотрудники.ПустаяСсылка")
КонецПроцедуры

&НаКлиенте
Процедура ТипНазначенияПриИзменении(Элемент)
	
	ПриИзмененииТипНазначения(ТипНазначения, Назначение, ЕдиницаИзмерения);
	ПриИзмененииНазначениеДоступностьЕдиницы();
	
	кешЕдиницаИзмерения = ПредопределенноеЗначение("Справочник.КлассификаторЕдиницИзмерения.ПустаяСсылка");
	
	ТекущийЭлемент = Элементы.Назначение;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗафиксироватьКурсовуюДозуПриИзменении(Элемент)
	
	ФиксацияРазовойДозы = ЗафиксироватьКурсовуюДозу = 2;
	
	Элементы.КурсоваяДоза.ТолькоПросмотр = ФиксацияРазовойДозы;
	Элементы.СуточнаяДоза.ТолькоПросмотр = ФиксацияРазовойДозы;
	
КонецПроцедуры

&НаКлиенте
Процедура ЕдиницаИзмеренияПриИзменении(Элемент)
	
	Если ТипЗнч(Назначение) = Тип("Строка") Тогда
		кешЕдиницаИзмерения = ЕдиницаИзмерения;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриИзмененииКоличествоДней()
	
	Если ЗафиксироватьКурсовуюДозу <> 1 Тогда
		КурсоваяДоза = СуточнаяДоза * КоличествоДней;		
	ИначеЕсли КоличествоДней <> 0 Тогда
		СуточнаяДоза = КурсоваяДоза / КоличествоДней;
	КонецЕсли;
		
	РассчитатьРазовуюДозуПоКурсу();
	
	РассчитатьОбщееКоличество();
	
	Если Источник = "Прием" Тогда
		Если Дата <> Дата(1,1,1) Тогда
			ДатаОкончания  = Дата + (КоличествоДней - 1) * 86400;
		ИначеЕсли ДатаОкончания <> Дата(1,1,1) Тогда
			Дата = ДатаОкончания - (КоличествоДней - 1) * 86400;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииДатаПриема(ИзмененаДатаНачала = Ложь)
	
	Если ЗначениеЗаполнено(Дата)
		И ЗначениеЗаполнено(ДатаОкончания)
	Тогда
		Если ИзмененаДатаНачала
			И КоличествоДней > 0
		Тогда
			ДатаОкончания = Дата + (КоличествоДней-1) * 86400;
		Иначе
			КоличествоДней = (НачалоДня(ДатаОкончания) - НачалоДня(Дата))/86400 + 1;
			
			Если КоличествоДней < 0 Тогда 
				КоличествоДней = 0;
			КонецЕсли;
		КонецЕсли;
		
		ПриИзмененииКоличествоДней();
		
	ИначеЕсли ЗначениеЗаполнено(Дата)
		И ЗначениеЗаполнено(КоличествоДней)
	Тогда
		ДатаОкончания = Дата + (КоличествоДней-1) * 86400;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьРазовуюДозуПоКурсу()
	
	Если ПриемовВДень = 0 Тогда
		ПриемовВДень = 1;
	КонецЕсли;
	
	РазоваяДоза = СуточнаяДоза / ПриемовВДень;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьОбщееКоличество()
	
	Количество = КоличествоДней * ПриемовВДень;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ГруппаДат.Видимость = Источник = "Прием";
	Элементы.ГруппаСмещениеКурса.Видимость = Источник = "СтандартыЛечения";
	Элементы.ПодставитьВрачаИзПриема.Видимость = Источник = "СтандартыЛечения";
	
КонецПроцедуры

&НаСервере
Процедура ТипНазначенияПриСозданииФормы()
	
	Если ЭтоДобавлениеНового
		И Не ЗначениеЗаполнено(Назначение)
	Тогда
		НастройкаТипНазначения = РаботаСФормамиСервер.ПолучитьНастройкуФормы("ФормаРедактированияМедикаментозныхНазначений", "ТипНазначения", 0);
		Если ТипЗнч(НастройкаТипНазначения) = Тип("Строка")
			И Элементы.ТипНазначения.СписокВыбора.НайтиПоЗначению(НастройкаТипНазначения) <> Неопределено
		Тогда
			ТипНазначения = НастройкаТипНазначения;
			ПриИзмененииТипНазначения(ТипНазначения, Назначение, ЕдиницаИзмерения);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьПереключательТипНазначения(ТипНазначения, Назначение);
	Если ТипНазначения = "Строка" Тогда
		УстановитьОжидаемыйТипПоля(Тип("СправочникСсылка.КлассификаторЕдиницИзмерения"), ЕдиницаИзмерения);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПереключательТипНазначения(ТипНазначения, Назначение)
	
	Если ТипЗнч(Назначение) = Тип("СправочникСсылка.Номенклатура") Тогда
		ТипНазначения = "Номенклатура";
	ИначеЕсли ТипЗнч(Назначение) = Тип("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований") Тогда
		ТипНазначения = "СМНН";
	ИначеЕсли ТипЗнч(Назначение) = Тип("Строка") Тогда
		ТипНазначения = "Строка";
	Иначе
		ТипНазначения = "Номенклатура"; // По умолчанию.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииТипНазначения(ТипНазначения, Назначение, ЕдиницаИзмерения)
	
	Если ТипНазначения = "Номенклатура" Тогда
		ОжидаемыйТип = Тип("СправочникСсылка.Номенклатура");
		ОжидаемыйТипЕдиницыИзмерения = Тип("СправочникСсылка.ЕдиницыИзмерения");
	ИначеЕсли ТипНазначения = "СМНН" Тогда
		ОжидаемыйТип = Тип("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований");
		ОжидаемыйТипЕдиницыИзмерения = Тип("Неопределено");
	ИначеЕсли ТипНазначения = "Строка" Тогда
		Назначение = Неопределено;
		ЕдиницаИзмерения = Неопределено;
		ОжидаемыйТип = Тип("Строка");
		ОжидаемыйТипЕдиницыИзмерения = Тип("СправочникСсылка.КлассификаторЕдиницИзмерения");
	Иначе
		Возврат;
	КонецЕсли;
	
	УстановитьОжидаемыйТипПоля(ОжидаемыйТип, Назначение);
	УстановитьОжидаемыйТипПоля(ОжидаемыйТипЕдиницыИзмерения, ЕдиницаИзмерения);
	
	ПриИзмененииНазначение(Назначение, ЕдиницаИзмерения);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииНазначение(Назначение, ЕдиницаИзмерения)
	
	Если ЗначениеЗаполнено(Назначение) Тогда
		Если ТипЗнч(Назначение) = Тип("СправочникСсылка.Номенклатура") Тогда
			ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Назначение, "ЕдиницаХраненияОстатков");
			
		ИначеЕсли ТипЗнч(Назначение) = Тип("СправочникСсылка.СправочникМеждународныхНепатентованныхНаименований") Тогда
			ЕдиницаИзмерения = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Назначение, "ЕдиницаИзмерения");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Назначение) <> Тип("Строка") Тогда
		ОписаниеТипаЕдиницы = Новый ОписаниеТипов(ОбщегоНазначенияКлиентСервер.НовыйМассив(ТипЗнч(ЕдиницаИзмерения)));
		ЕдиницаИзмерения = ОписаниеТипаЕдиницы.ПривестиЗначение(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОжидаемыйТипПоля(ОжидаемыйТип, Поле)
	
	// Создаем описание типа.
	ТипыДляОписания = Новый Массив;
	ТипыДляОписания.Добавить(ОжидаемыйТип);
	ОписаниеТипа = Новый ОписаниеТипов(ТипыДляОписания);
	
	// Приведение значения
	Поле = ОписаниеТипа.ПривестиЗначение(Поле);
	
КонецПроцедуры

#КонецОбласти