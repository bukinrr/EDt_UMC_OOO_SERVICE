#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Филиал") Тогда 
		Филиал = Параметры.Филиал;
	Иначе
		Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	КонецЕсли;
	
	НевыполненныеХозяйственныеПроцедуры = Неопределено;
	Если Параметры.Свойство("НевыполненныеХозяйственныеПроцедуры") Тогда 
		НевыполненныеХозяйственныеПроцедуры = Параметры.НевыполненныеХозяйственныеПроцедуры;	
	КонецЕсли;
	
	ОбновитьПроцедурыСервер(НевыполненныеХозяйственныеПроцедуры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("ОбновитьПроцедуры", 60);				
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выполнено(Команда)

	ВыполнитьНаСервере();
	
	Если Процедуры.Количество() = 0 Тогда 
		Закрыть();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВсе(Команда)

	УстановитьФлажки(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьВсе(Команда)

	УстановитьФлажки(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПроцедурыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)

	СтрокаПроцедуры = Процедуры.НайтиПоИдентификатору(ВыбраннаяСтрока);
	СтрокаПроцедуры.Отметка = Не СтрокаПроцедуры.Отметка;
	//Выполнено(Неопределено);	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьПроцедурыСервер(МассивСтруктур = Неопределено)
	
	Процедуры.Очистить();
	
	Если МассивСтруктур = Неопределено Тогда  
		МассивСтруктур = ХозяйственныйБлок.ПолучитьНевыполненныеХозяйственныеПроцедуры(Филиал);
	КонецЕсли;	
		
	Для Каждого ЭлементМассивСтруктур Из МассивСтруктур Цикл
		СтрокаПроцедуры = Процедуры.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПроцедуры, ЭлементМассивСтруктур); 
	КонецЦикла;
	
	Процедуры.Сортировать("ПлановоеВремя");
	
	Попытка
		УчетПоНесколькимФилиалам = ПараметрыСеанса.УчетПоНесколькимФилиалам;
	Исключение
		УчетПоНесколькимФилиалам = Ложь;
	КонецПопытки;
	
	Если УчетПоНесколькимФилиалам Тогда 
		Элементы.ТекстФилиал.Заголовок = Нстр("ru = 'Выполнение процедур производится для филиала ""'") + Филиал + Нстр("ru = '""'");
	Иначе
		Элементы.ТекстФилиал.Видимость = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПроцедуры()
	
	ОбновитьПроцедурыСервер();
	Если Процедуры.Количество() = 0 Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьНаСервере()
	
	МассивНаУдаление = Новый Массив;
	МассивПроцедурыОтмечены = Процедуры.НайтиСтроки(Новый Структура("Отметка", Истина));
	Индекс = МассивПроцедурыОтмечены.Количество(); 
	ТЗВыполненныеПроцедуры = ХозяйственныйБлок.ПолучитьВыполненныеХозяйственныеПроцедуры(Филиал);
	Пока Индекс <> 0 Цикл	
		СтруктураПроцедураОтмечена = Новый Структура("Процедура, ПлановоеВремя");
		СтруктураПроцедураОтмечена.Вставить("Процедура", МассивПроцедурыОтмечены[Индекс - 1].Процедура); 
		СтруктураПроцедураОтмечена.Вставить("ПлановоеВремя", НачалоДня(ТекущаяДата()) + ОбщегоНазначения.ВремяВСекунды(МассивПроцедурыОтмечены[Индекс - 1].ПлановоеВремя)); 
		Если ТЗВыполненныеПроцедуры.НайтиСтроки(СтруктураПроцедураОтмечена).Количество() > 0 Тогда 
			МассивНаУдаление.Добавить(МассивПроцедурыОтмечены[Индекс - 1]);
			МассивПроцедурыОтмечены.Удалить(Индекс - 1);
		КонецЕсли;
		Индекс = Индекс - 1;
	КонецЦикла;
	
	ТекПользователь = ОбщегоНазначения.ТекущийПользователь();
	Для Каждого ЭлементМассивПроцедурыОтмечены Из МассивПроцедурыОтмечены Цикл
			МенеджерЗаписи = РегистрыСведений.ВыполненныеХозяйственныеПроцедуры.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Процедура = ЭлементМассивПроцедурыОтмечены.Процедура;
			МенеджерЗаписи.Исполнитель = ТекПользователь;
			МенеджерЗаписи.Филиал = Филиал;
			МенеджерЗаписи.ВремяПлан = НачалоДня(ТекущаяДата()) + ОбщегоНазначения.ВремяВСекунды(ЭлементМассивПроцедурыОтмечены.ПлановоеВремя);
			МенеджерЗаписи.ВремяФакт = ТекущаяДата();
			МенеджерЗаписи.Срок = МенеджерЗаписи.ВремяПлан + ЭлементМассивПроцедурыОтмечены.НормаСрокаВыполнения*60;
			Попытка
				МенеджерЗаписи.Записать();
			Исключение
			КонецПопытки;
			МассивНаУдаление.Добавить(ЭлементМассивПроцедурыОтмечены);
	КонецЦикла;
	
	Для Каждого СтрокаПроцедуры Из МассивНаУдаление Цикл 
		Процедуры.Удалить(СтрокаПроцедуры);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Режим)

	Для Каждого СтрокаПроцедуры Из Процедуры Цикл 
		СтрокаПроцедуры.Отметка = Режим;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти
