#Область СлужебныеПроцедурыИФункции

// Процедура выполняет первоначальное заполнение дерева при открытии формы
// по данным регистра сведений "Границы запрета изменения данных".
//
&НаСервере
Процедура ЗаполнитьДеревоДат()
	
	ДеревоДаты.Очистить();	
	Запрос = Новый Запрос;	
	Запрос.Текст = "ВЫБРАТЬ
	               |	Пользователи.Ссылка КАК пользователь,
	               |	ГраницыЗапретаИзмененияДанных.ГраницаЗапретаИзменений
	               |ИЗ
	               |	Справочник.Пользователи КАК Пользователи
	               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.ГраницыЗапретаИзмененияДанных КАК ГраницыЗапретаИзмененияДанных
	               |		ПО Пользователи.Ссылка = ГраницыЗапретаИзмененияДанных.Пользователь
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Пользователи.Наименование";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Пользователь = Справочники.Пользователи.ПустаяСсылка() ИЛИ Выборка.Пользователь = Null Тогда
			ОбщаяДатаЗапрета = Выборка.ГраницаЗапретаИзменений;
		Иначе
			СтрокаПользователя = ДеревоДаты.Добавить();                
			СтрокаПользователя.ОрганизацияПользователь	= Выборка.Пользователь;
			СтрокаПользователя.Граница              	= ?(Выборка.ГраницаЗапретаИзменений = Null,ОбщаяДатаЗапрета,Выборка.ГраницаЗапретаИзменений);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьДеревоДат

 // Процедура выполняет запись данных в регистр сведений
 // "Границы запрета изменения данных".
Процедура СохранитьДанные(Отказ = Неопределено)
	
	Набор = РегистрыСведений.ГраницыЗапретаИзмененияДанных.СоздатьНаборЗаписей();
	Для каждого стр из ДеревоДаты Цикл
		Запись = Набор.Добавить();
		Запись.Пользователь = Стр.ОрганизацияПользователь;
		Запись.ГраницаЗапретаИзменений = Стр.Граница;
	КонецЦикла;
	
	Запись = Набор.Добавить();
	Запись.Пользователь = Справочники.Пользователи.ПустаяСсылка();
	Запись.ГраницаЗапретаИзменений = ОбщаяДатаЗапрета;	
	
	Набор.Записать();
	
	ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
	Модифицированность = Ложь;
	
КонецПроцедуры // СохранитьДанные

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаОк(Команда)
	
	Отказ = Ложь;
	СохранитьДанные(Отказ);
	Если Не Отказ Тогда
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	
	Отказ = Ложь;
	СохранитьДанные(Отказ);
	
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоДатыГраницаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОбщаяДатаЗапретаПриИзменении(Элемент)
	Для каждого стр из ДеревоДаты Цикл
		Стр.Граница = ОбщаяДатаЗапрета;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;

	Если Модифицированность Тогда
		Ответ = Вопрос("Данные были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СохранитьДанные(Отказ);
		КонецЕсли;		
	КонецЕсли;	

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ГраницыЗапретаИзмененияДанных) Тогда
		Отказ = Истина;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Нет доступа для редактирования границы запрета изменения данных");
		Возврат;
	КонецЕсли;
	ЗаполнитьДеревоДат();
КонецПроцедуры

#КонецОбласти
