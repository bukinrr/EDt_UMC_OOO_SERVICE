#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтатистикаПоФилиалу = ОбщегоНазначенияСервер.НастройкиИзХранилища("ПультКонтролераЕГИСЗ", "СтатистикаПоФилиалу");
	ОбновитьИнформациюНаСервере(Истина);
	
	УстановитьУсловноеОформлениеЭЦП();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьИнформацию(Команда)
	
	ОбновитьИнформациюНаСервере(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВсемФилиалам(Команда)
	
	ОтображениеСтатистикиПоФилиалу(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоВыбранномуФилиалу(Команда)
	
	ОтображениеСтатистикиПоФилиалу(Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ПерейтиКАРМПодписанияМОНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.АРМПодписанияМедицинскойДокументации", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПоФилиаламПриАктивизацииСтроки(Элемент)
	
	Если СтатистикаПоФилиалу И ВыбранныйФилиал <> Элемент.ТекущиеДанные.Филиал Тогда
		ВыбранныйФилиал = Элемент.ТекущиеДанные.Филиал;
		ОбновитьИнформациюНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКЖурналуРегистрацииНажатие(Элемент)
	
	ПараметрыЖР = Новый Структура("СобытиеЖурналаРегистрации", "ИнтеграцияЕГИСЗ");
	ОткрытьФорму("Обработка.ЖурналРегистрации.Форма.ЖурналРегистрации", ПараметрыЖР, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаСотрудниковНаКорректностьДляСЭМДНажатие(Элемент)
	ОткрытьФорму("ОбщаяФорма.ПроверкаСотрудниковНаКорректностьДляСЭМД",, ЭтаФорма);
КонецПроцедуры

#Область ЭлементыСообщенияРЭМД

#Область ЗарегистрированоРЭМД

&НаКлиенте
Процедура ЗарегистрированоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "ЗарегистрированоРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.Зарегистрированные"));
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрированоСегодняНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Истина, "ЗарегистрированоРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.Зарегистрированные"));
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрированоВсегоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "ЗарегистрированоРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.Зарегистрированные"));
КонецПроцедуры

#КонецОбласти

#Область КОтправкеРЭМД

&НаКлиенте
Процедура КОтправкеНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "КОтправкеРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.КОтправке"));
КонецПроцедуры

&НаКлиенте
Процедура КОтправкеСегодняНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Истина, "КОтправкеРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.КОтправке"));
КонецПроцедуры

&НаКлиенте
Процедура КОтправкеВсегоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "КОтправкеРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.КОтправке"));
КонецПроцедуры

#КонецОбласти

#Область СОшибкамиРЭМД

&НаКлиенте
Процедура СОшибкамиНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "СОшибкамиРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.СОшибками"));
КонецПроцедуры

&НаКлиенте
Процедура СОшибкамиСегодняНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Истина, "СОшибкамиРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.СОшибками"));
КонецПроцедуры

&НаКлиенте
Процедура СОшибкамиВсегоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "СОшибкамиРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.СОшибками"));
КонецПроцедуры

#КонецОбласти

#Область НеПолученОтветРЭМД

&НаКлиенте
Процедура НеПолученОтветНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "НеПолученОтветРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПолученОтвет"));
КонецПроцедуры

&НаКлиенте
Процедура НеПолученОтветСегодняНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Истина, "НеПолученОтветРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПолученОтвет"));
КонецПроцедуры

&НаКлиенте
Процедура НеПолученОтветВсегоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "НеПолученОтветРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПолученОтвет"));
КонецПроцедуры

#КонецОбласти

#Область БезСформированныхФайловРЭМД

&НаКлиенте
Процедура ДокументыБезСформированныхФайловНажатие(Элемент)
	ОткрытьФормуБезСформированныхФайловРЭМД(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыБезСформированныхФайловСегодняНажатие(Элемент)
	ОткрытьФормуБезСформированныхФайловРЭМД(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыБезСформированныхФайловВсегоНажатие(Элемент)
	ОткрытьФормуБезСформированныхФайловРЭМД(Ложь);
КонецПроцедуры

#КонецОбласти

#Область БезПодписиМОРЭМД

&НаКлиенте
Процедура БезПодписиМОНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "БезПодписиМОРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПодписаныМО"));
КонецПроцедуры

&НаКлиенте
Процедура БезПодписиМОСегодняНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Истина, "БезПодписиМОРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПодписаныМО"));
КонецПроцедуры

&НаКлиенте
Процедура БезПодписиМОВсегоНажатие(Элемент)
	ОткрытьФормуСообщенийРЭМД(Ложь, "БезПодписиМОРЭМД", ПредопределенноеЗначение("Перечисление.СостоянияСообщенийРЭМД.НеПодписаныМО"));
КонецПроцедуры

#КонецОбласти

#Область НеВсеПодписиПоставленыРЭМД

&НаКлиенте
Процедура НеВсеПодписиПоставленыНажатие(Элемент)
	ОткрытьФормуНеВсеПодписиПоставленыРЭМД(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НеВсеПодписиПоставленыСегодняНажатие(Элемент)
	ОткрытьФормуНеВсеПодписиПоставленыРЭМД(Истина);
КонецПроцедуры

&НаКлиенте
Процедура НеВсеПодписиПоставленыВсегоНажатие(Элемент)
	ОткрытьФормуНеВсеПодписиПоставленыРЭМД(Ложь);
КонецПроцедуры

#КонецОбласти

#Область БезСообщений

&НаКлиенте
Процедура ДокументыБезСообщенийРЭМДНажатие(Элемент)
	ОткрытьФормуДокументыБезСообщенийРЭМД(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыБезСообщенийСегодняРЭМДНажатие(Элемент)
	ОткрытьФормуДокументыБезСообщенийРЭМД(Истина);
КонецПроцедуры

&НаКлиенте
Процедура ДокументыБезСообщенийВсегоРЭМДНажатие(Элемент)
	ОткрытьФормуДокументыБезСообщенийРЭМД(Ложь);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЭлементыСообщенияИЭМК

#Область ЗарегистрированоИЭМК

&НаКлиенте
Процедура ЗарегистрированоИЭМКНажатие(Элемент)
	ОткрытьФормуЗарегистрированоИЭМК(Дата(1,1,1));
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрированоВсегоИЭМКНажатие(Элемент)
	ОткрытьФормуЗарегистрированоИЭМК(Дата(1,1,1));
КонецПроцедуры

&НаКлиенте
Процедура ЗарегистрированоСегодняИЭМКНажатие(Элемент)
	ОткрытьФормуЗарегистрированоИЭМК(НачалоДня(ТекущаяДата()));
КонецПроцедуры

#КонецОбласти

#Область КОтправкеИЭМК

&НаКлиенте
Процедура КОтправкеИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Ложь, Дата(1,1,1));
КонецПроцедуры

&НаКлиенте
Процедура КОтправкеВсегоИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Ложь, Дата(1,1,1));
КонецПроцедуры

&НаКлиенте
Процедура КОтправкеСегодняИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Ложь, НачалоДня(ТекущаяДата()));
КонецПроцедуры

#КонецОбласти

#Область СОшибкамиИЭМК

&НаКлиенте
Процедура СОшибкамиСегодняИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Истина, НачалоДня(ТекущаяДата()));
КонецПроцедуры

&НаКлиенте
Процедура СОшибкамиВсегоИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Истина, Дата(1,1,1));
КонецПроцедуры

&НаКлиенте
Процедура СОшибкамиИЭМКНажатие(Элемент)
	ОткрытьФормуСообщенийГИПИЭМК(Истина, Дата(1,1,1));
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьИнформациюНаСервере(ОбновитьНастройкиПоФилиалам = Ложь)
	
	Если ОбновитьНастройкиПоФилиалам Тогда
		ЗаполнитьПроверитьНастройкиПоФилиаламСервер();
	КонецЕсли;
	
	ОтображатьРЭМД = Ложь;
	ОтображатьИЭМК = Ложь;
	Для Каждого НастройкаФилиала Из НастройкиПоФилиалам Цикл
		Если НастройкаФилиала.Филиал = ВыбранныйФилиал Или Не СтатистикаПоФилиалу Тогда
			Если НастройкаФилиала.НастройкиРЭМД Тогда
				ОтображатьРЭМД = Истина;
			КонецЕсли;
			Если НастройкаФилиала.НастройкиИЭМК Тогда
				ОтображатьРЭМД = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Элементы.СообщенияРЭМД.Видимость					= ОтображатьРЭМД;
	Элементы.СообщенияИЭМК.Видимость					= ОтображатьИЭМК;
	Элементы.НастройкиПоФилиаламНастройкиИЭМК.Видимость	= ОтображатьИЭМК;
	
	Если ОтображатьРЭМД Тогда
		ОбновитьСтатистикуРЭМД();
	КонецЕсли;
	Если ОтображатьИЭМК Тогда
		ОбновитьСтатистикуИЭМК();
	КонецЕсли;
	
	ЭЦП.Параметры.УстановитьЗначениеПараметра("ПоВыбранномуФилиалу", СтатистикаПоФилиалу);
	ЭЦП.Параметры.УстановитьЗначениеПараметра("ОрганизацияВыбранногоФилиала", ВыбранныйФилиал.Организация);
	
	Элементы.ЭЦП.Обновить();
	Элементы.ПоВсемФилиалам.Пометка = Не СтатистикаПоФилиалу;
	Элементы.ПоВыбранномуФилиалу.Пометка = СтатистикаПоФилиалу;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатистикуРЭМД()
	
	СтатистикаЗаСегодня = ПодготовитьСтатистикуСообщений(НачалоДня(ТекущаяДатаСеанса()), "РЭМД", СтатистикаПоФилиалу, ВыбранныйФилиал);
	Элементы.КОтправкеСегодняРЭМД.Заголовок			= СтатистикаЗаСегодня.КОтправке;
	Элементы.СОшибкамиСегодняРЭМД.Заголовок			= СтатистикаЗаСегодня.СОшибками;
	Элементы.ЗарегистрированоСегодняРЭМД.Заголовок	= СтатистикаЗаСегодня.Зарегистрировано;
	Элементы.БезПодписиМОСегодняРЭМД.Заголовок		= СтатистикаЗаСегодня.НеПодписаныМО;
	Элементы.НеПолученОтветСегодняРЭМД.Заголовок	= СтатистикаЗаСегодня.НеПолученОтвет;
	
	СтатистикаВсего = ПодготовитьСтатистикуСообщений(Дата(1,1,1), "РЭМД", СтатистикаПоФилиалу, ВыбранныйФилиал);
	Элементы.КОтправкеВсегоРЭМД.Заголовок			= СтатистикаВсего.КОтправке;
	Элементы.СОшибкамиВсегоРЭМД.Заголовок			= СтатистикаВсего.СОшибками;
	Элементы.ЗарегистрированоВсегоРЭМД.Заголовок	= СтатистикаВсего.Зарегистрировано;
	Элементы.БезПодписиМОВсегоРЭМД.Заголовок		= СтатистикаВсего.НеПодписаныМО;
	Элементы.НеПолученОтветВсегоРЭМД.Заголовок		= СтатистикаВсего.НеПолученОтвет;
	
	ОбновитьИнформациюПоДокументам();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатистикуИЭМК()
	
	СтатистикаЗаСегодня = ПодготовитьСтатистикуСообщений(НачалоДня(ТекущаяДатаСеанса()), "ИЭМК", СтатистикаПоФилиалу, ВыбранныйФилиал);
	Элементы.КОтправкеСегодняИЭМК.Заголовок			= СтатистикаЗаСегодня.КОтправке;
	Элементы.СОшибкамиСегодняИЭМК.Заголовок			= СтатистикаЗаСегодня.СОшибками;
	Элементы.ЗарегистрированоСегодняИЭМК.Заголовок	= СтатистикаЗаСегодня.Зарегистрировано;
	
	СтатистикаВсего = ПодготовитьСтатистикуСообщений(Дата(1,1,1), "ИЭМК", СтатистикаПоФилиалу, ВыбранныйФилиал);
	Элементы.КОтправкеВсегоИЭМК.Заголовок			= СтатистикаВсего.КОтправке;
	Элементы.СОшибкамиВсегоИЭМК.Заголовок			= СтатистикаВсего.СОшибками;
	Элементы.ЗарегистрированоВсегоИЭМК.Заголовок	= СтатистикаВсего.Зарегистрировано;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПроверитьНастройкиПоФилиаламСервер()
	
	НастройкиПоФилиалам.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиИнтеграции.НазваниеМИС КАК НазваниеМИС,
		|	НастройкиИнтеграции.ИдентификаторМИСвИПС КАК ИдентификаторМИСвИПС,
		|	НастройкиИнтеграции.СертификатЭЦППодписиSOAPСообщений КАК СертификатЭЦППодписиSOAPСообщений,
		|	НастройкиМедицинскогоУчета.ПутьККонвертеруPDFAGhostScript КАК ПутьККонвертеруPDFAGhostScript,
		|	НастройкиИнтеграции.ИдентификаторМИСвРЭМД КАК ИдентификаторМИСвРЭМД,
		|	НастройкиИнтеграции.ПутьКАрхивуРЭМД КАК ПутьКАрхивуРЭМД,
		|	НастройкиМедицинскогоУчета.АдресФедеральногоСервисаРЭМД КАК АдресФедеральногоСервисаРЭМД,
		|	НастройкиИнтеграции.АдресЛокальногоСервисаРЭМД КАК АдресЛокальногоСервисаРЭМД,
		|	НастройкиМедицинскогоУчета.АдресФедеральногоСервисаГИП КАК АдресФедеральногоСервисаГИП,
		|	НастройкиИнтеграции.ИдентификаторМИСвГИП КАК ИдентификаторМИСвГИП,
		|	НастройкиМедицинскогоУчета.Использоватьwkhtmltopdf КАК Использоватьwkhtmltopdf,
		|	НастройкиМедицинскогоУчета.Адресwkhtmltopdf КАК Адресwkhtmltopdf,
		|	Филиалы.Ссылка КАК Ссылка,
		|	Филиалы.Наименование КАК Наименование,
		|	Филиалы.Организация.Представление КАК НазваниеОрганизации
		|ИЗ
		|	Справочник.Филиалы КАК Филиалы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЕГИСЗНастройкиИнтеграции КАК НастройкиИнтеграции
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НастройкиМедицинскогоУчета КАК НастройкиМедицинскогоУчета
		|			ПО (ИСТИНА)
		|		ПО Филиалы.Организация.МедицинскаяОрганизация = НастройкиИнтеграции.МедицинскаяОрганизация
		|ГДЕ
		|	НЕ Филиалы.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Не ЗначениеЗаполнено(ВыбранныйФилиал) Тогда
			ВыбранныйФилиал = Выборка.Ссылка;
		КонецЕсли;
		Настройка = НастройкиПоФилиалам.Добавить();
		Настройка.Филиал			= Выборка.Ссылка;
		Настройка.МедицинскиеДанные	= СуществуютПриемыПоФилиалу(Настройка.Филиал);
		
		Настройка.НастройкиОбщие		= ЗначениеЗаполнено(Выборка.НазваниеМИС)
		И ЗначениеЗаполнено(Выборка.ИдентификаторМИСвИПС)
		И ЗначениеЗаполнено(Выборка.СертификатЭЦППодписиSOAPСообщений);
		
		Настройка.НастройкиРЭМД			= ЗначениеЗаполнено(Выборка.ИдентификаторМИСвРЭМД)
		И ЗначениеЗаполнено(Выборка.ПутьКАрхивуРЭМД)
		И ЗначениеЗаполнено(Выборка.АдресФедеральногоСервисаРЭМД)
		И ЗначениеЗаполнено(Выборка.АдресЛокальногоСервисаРЭМД);
		
		Настройка.НастройкиИЭМК			= ЗначениеЗаполнено(Выборка.АдресФедеральногоСервисаГИП)
		И ЗначениеЗаполнено(Выборка.ИдентификаторМИСвГИП);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СуществуютПриемыПоФилиалу(Филиал)
	
	//TODO: Учесть даты начала обмена документами по подсистемам ЕГИСЗ
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 3
		|	Прием.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	Прием.Филиал = &Филиал
		|	И Прием.Проведен
		|	И НЕ Прием.ПометкаУдаления
		|	И НЕ Прием.Тестовый";
	Запрос.УстановитьПараметр("Филиал", Филиал);
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат Не РезультатЗапроса.Пустой();
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформлениеЭЦП()
	
	// Светофорная индикация для сроков действия ЭЦП
	// Просроченные - Красный
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ЭЦП.ДействителенДо");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Меньше;
	ЭлементОтбора.ПравоеЗначение	= ТекущаяДатаСеанса();
	ЭлементОтбора.Использование		= Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Лосось);
	ЭлементУсловногоОформления.Использование = Истина;
	
	// Создаем поля оформления
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ЭЦП");
	ПолеОформления.Использование = Истина;
	
	// Меньше месяца годности - Желтый
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ЭЦП.ДействителенДо");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Больше;
	ЭлементОтбора.ПравоеЗначение	= ТекущаяДатаСеанса();
	ЭлементОтбора.Использование		= Истина;
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ЭЦП.ДействителенДо");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Меньше;
	ЭлементОтбора.ПравоеЗначение	= ТекущаяДатаСеанса() + 86400 * 30;
	ЭлементОтбора.Использование		= Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.Желтый);
	ЭлементУсловногоОформления.Использование = Истина;
	
	// Создаем поля оформления
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ЭЦП");
	ПолеОформления.Использование = Истина;
	
	// Больше месяца годности - Зеленый
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ЭЦП.ДействителенДо");
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.БольшеИлиРавно;
	ЭлементОтбора.ПравоеЗначение	= ТекущаяДатаСеанса() + 86400 * 30;
	ЭлементОтбора.Использование		= Истина;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветФона", WebЦвета.СветлоЗеленый);
	ЭлементУсловногоОформления.Использование = Истина;
	
	// Создаем поля оформления
	ПолеОформления = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("ЭЦП");
	ПолеОформления.Использование = Истина;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодготовитьСтатистикуСообщений(НачалоДня, Подсистема, СтатистикаПоФилиалу, ВыбранныйФилиал)
	
	Статистика = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоДня", НачалоДня);
	Запрос.УстановитьПараметр("ПоВыбранномуФилиалу", СтатистикаПоФилиалу);
	Запрос.УстановитьПараметр("ВыбранныйФилиал", ВыбранныйФилиал);
	Запрос.УстановитьПараметр("ВыбраннаяМедицинскаяОрганизация", ВыбранныйФилиал.Организация.МедицинскаяОрганизация);
	
	СтруктураИндексовЗапросов = Новый Структура("Зарегистрировано, КОтправке, СОшибками, НеПодписаныМО, НеПолученОтвет");
	
	Если Подсистема = "РЭМД" Тогда
		Запрос.Текст = ПолучитьТекстЗапросаСтатистикиРЭМД(СтруктураИндексовЗапросов);
	ИначеЕсли Подсистема = "ИЭМК" Тогда
		Запрос.Текст = ПолучитьТекстЗапросаСтатистикиИЭМК(СтруктураИндексовЗапросов);
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	Для Каждого СтруктураИндексаЗапроса Из СтруктураИндексовЗапросов Цикл
		ИндексЗапроса = СтруктураИндексаЗапроса.Значение;
		ТипСообщения = СтруктураИндексаЗапроса.Ключ;
		
		КоличествоСообщений = 0;
		
		Если ИндексЗапроса <> Неопределено Тогда
			Выборка = РезультатыЗапроса[ИндексЗапроса].Выбрать();
			Если Выборка.Следующий() Тогда
				КоличествоСообщений = Выборка.Количество;
			КонецЕсли;
		КонецЕсли;
		
		Статистика.Вставить(ТипСообщения, КоличествоСообщений);
	КонецЦикла;
	
	Возврат Статистика;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаСтатистикиРЭМД(СтруктураИндексовЗапросов)
	
	ЧастиЗапроса = Новый Массив;
	
	ЧастиЗапроса.Добавить(ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаВТСообщенияЗарегистрированные("Зарегистрированные"));
	ЧастиЗапроса.Добавить(ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаВТСообщенияКОтправке("КОтправке"));
	ЧастиЗапроса.Добавить(ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаВТСообщенияСОшибками("СОшибками"));
	ЧастиЗапроса.Добавить(ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаВТСообщенияНеПодписаныМО("НеПодписаныМО"));
	ЧастиЗапроса.Добавить(ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаВТСообщенияНеПолученОтвет("НеПолученОтвет"));
	
	ЧастиЗапроса.Добавить(ТекстЗапросаРЭМДКоличествоСтрокВТ("Зарегистрированные"));
	ЧастиЗапроса.Добавить(ТекстЗапросаРЭМДКоличествоСтрокВТ("КОтправке"));
	ЧастиЗапроса.Добавить(ТекстЗапросаРЭМДКоличествоСтрокВТ("СОшибками"));
	ЧастиЗапроса.Добавить(ТекстЗапросаРЭМДКоличествоСтрокВТ("НеПодписаныМО"));
	ЧастиЗапроса.Добавить(ТекстЗапросаРЭМДКоличествоСтрокВТ("НеПолученОтвет"));
	
	СтруктураИндексовЗапросов.Зарегистрировано	= 5;
	СтруктураИндексовЗапросов.КОтправке			= 6;
	СтруктураИндексовЗапросов.СОшибками			= 7;
	СтруктураИндексовЗапросов.НеПодписаныМО		= 8;
	СтруктураИндексовЗапросов.НеПолученОтвет	= 9;
	
	Возврат СтрСоединить(ЧастиЗапроса, ";" + Символы.ПС);
	
КонецФункции

&НаСервереБезКонтекста
Функция ТекстЗапросаРЭМДКоличествоСтрокВТ(ИмяВТ)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СообщенияРЭМД.Ссылка) КАК Количество
		|ИЗ
		|	&ИмяВТ КАК СообщенияРЭМД";
	
	Возврат СтрЗаменить(ТекстЗапроса, "&ИмяВТ", ИмяВТ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТекстЗапросаСтатистикиИЭМК(СтруктураИндексовЗапросов)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ГИПСтатусыКлиентов.Клиент) КАК Количество
		|ИЗ
		|	РегистрСведений.ГИПСтатусыКлиентов КАК ГИПСтатусыКлиентов
		|ГДЕ
		|	ГИПСтатусыКлиентов.ДатаОтправкиВГИП >= &НачалоДня
		|	И (ГИПСтатусыКлиентов.МедицинскаяОрганизация = &ВыбраннаяМедицинскаяОрганизация
		|			ИЛИ НЕ &ПоВыбранномуФилиалу)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнтеграцияЕГИСЗСообщенияГИП.УИДСообщения) КАК Количество
		|ИЗ
		|	РегистрСведений.ИнтеграцияЕГИСЗСообщенияГИП КАК ИнтеграцияЕГИСЗСообщенияГИП
		|ГДЕ
		|	ИнтеграцияЕГИСЗСообщенияГИП.ДатаДобавления >= &НачалоДня
		|	И (ВЫРАЗИТЬ(ИнтеграцияЕГИСЗСообщенияГИП.ТекстПоследнейОшибки КАК СТРОКА(50))) = """"
		|	И (ИнтеграцияЕГИСЗСообщенияГИП.МедицинскаяОрганизация = &ВыбраннаяМедицинскаяОрганизация
		|			ИЛИ НЕ &ПоВыбранномуФилиалу)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ИнтеграцияЕГИСЗСообщенияГИП.УИДСообщения) КАК Количество
		|ИЗ
		|	РегистрСведений.ИнтеграцияЕГИСЗСообщенияГИП КАК ИнтеграцияЕГИСЗСообщенияГИП
		|ГДЕ
		|	ИнтеграцияЕГИСЗСообщенияГИП.ДатаДобавления >= &НачалоДня
		|	И (ВЫРАЗИТЬ(ИнтеграцияЕГИСЗСообщенияГИП.ТекстПоследнейОшибки КАК СТРОКА(50))) <> """"
		|	И (ИнтеграцияЕГИСЗСообщенияГИП.МедицинскаяОрганизация = &ВыбраннаяМедицинскаяОрганизация
		|			ИЛИ НЕ &ПоВыбранномуФилиалу)";
	
	СтруктураИндексовЗапросов.Зарегистрировано	= 0;
	СтруктураИндексовЗапросов.КОтправке			= 1;
	СтруктураИндексовЗапросов.СОшибками			= 2;
	
	Возврат ТекстЗапроса;
	
КонецФункции

&НаСервере
Процедура ОбновитьИнформациюПоДокументам()
	
	ОбновитьКоличествоДокументов(Элементы.ДокументыБезСообщенийВсегоРЭМД,			 Элементы.ДокументыБезСообщенийСегодняРЭМД,				ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаДокументыБезСообщений());
	ОбновитьКоличествоДокументов(Элементы.НеВсеПодписиПоставленыВсегоРЭМД,			 Элементы.НеВсеПодписиПоставленыСегодняРЭМД,			ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаДокументыБезВсехПодписей());
	ОбновитьКоличествоДокументов(Элементы.ДокументыБезСформированныхФайловВсегоРЭМД, Элементы.ДокументыБезСформированныхФайловСегодняРЭМД,	ИнтеграцияЕГИСЗ_РЭМД.ТекстЗапросаДокументыСНесформированнымиФайламиРЭМД());
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьКоличествоДокументов(ЭлементВсего, ЭлементЗаСегодня, ТекстЗапросаДокументов)
	
	ЭлементВсего.Заголовок = 0;
	ЭлементЗаСегодня.Заголовок = 0;
	
	Запрос = Новый Запрос;
	
	ТекстЗапросаКоличествоДокументов = 
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыРЭМД.Ссылка) КАК Количество
		|ИЗ
		|	ДокументыРЭМД КАК ДокументыРЭМД
		|ГДЕ
		|	&УсловиеФилиал
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыРЭМД.Ссылка) КАК Количество
		|ИЗ
		|	ДокументыРЭМД КАК ДокументыРЭМД
		|ГДЕ
		|	&УсловиеФилиал
		|	И ДокументыРЭМД.ЗаСегодня";
	
	ТекстЗапроса = Новый Массив;
	ТекстЗапроса.Добавить(ТекстЗапросаДокументов);
	ТекстЗапроса.Добавить(ТекстЗапросаКоличествоДокументов);
	
	Запрос.Текст = СтрСоединить(ТекстЗапроса, ";");
	
	Если СтатистикаПоФилиалу Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеФилиал", "ДокументыРЭМД.Филиал = &Филиал");
		Запрос.УстановитьПараметр("Филиал", ВыбранныйФилиал);
	Иначе
		Запрос.УстановитьПараметр("УсловиеФилиал", Истина);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидДокументаВК",				ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.ВидРЭМДВрачебнойКомиссии());
	Запрос.УстановитьПараметр("НачалоСегодняшнегоДня",		НачалоДня(ТекущаяДатаСеанса()));
	Запрос.УстановитьПараметр("ДатаНачалаОбменаСРЭМД",		ИнтеграцияЕГИСЗСерверПовтИсп.ПолучитьДатуНачалаОбменаИнформациейСРЭМД());
	
	Если Метаданные.Документы.Найти("ПрохождениеМедосмотра") <> Неопределено Тогда
		МодульМедосмотрыСервер = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
		Запрос.УстановитьПараметр("ПунктыВредныхФакторовДляМедкнижки",	МодульМедосмотрыСервер.ПунктыВредныхФакторовДляМедкнижки());
		Запрос.УстановитьПараметр("ВидЗаключенияДляМедкнижки",			ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.РегистрируемыеЭлектронныеМедДокументы(194));
		Запрос.УстановитьПараметр("ВидЗаключенияНеДляМедкнижки",		ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.РегистрируемыеЭлектронныеМедДокументы(103));
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	Выборка1 = РезультатыЗапроса[РезультатыЗапроса.ВГраница()-1].Выбрать();
	Если Выборка1.Следующий() Тогда
		ЭлементВсего.Заголовок = Выборка1.Количество;
	КонецЕсли;
	
	Выборка2 = РезультатыЗапроса[РезультатыЗапроса.ВГраница()].Выбрать();
	Если Выборка2.Следующий() Тогда
		ЭлементЗаСегодня.Заголовок = Выборка2.Количество;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтображениеСтатистикиПоФилиалу(ПоВыбранномуФилиалу)
	
	Если ПоВыбранномуФилиалу <> СтатистикаПоФилиалу Тогда
		СтатистикаПоФилиалу = Не СтатистикаПоФилиалу;
		ОбщегоНазначенияСервер.НастройкиВХранилище("ПультКонтролераЕГИСЗ", "СтатистикаПоФилиалу", СтатистикаПоФилиалу);
		ВыбранныйФилиал = Элементы.НастройкиПоФилиалам.ТекущиеДанные.Филиал;
		ОбновитьИнформациюНаСервере();
	КонецЕсли;
	
КонецПроцедуры

#Область СообщенияРЭМД

&НаКлиенте
Процедура ОткрытьФормуСообщенийРЭМД(ЗаСегодня, ИмяКлюча, СостояниеСообщения)
	
	КлючУникальности = ИмяКлюча + ЗаСегодня;
	ПараметрыВыбора = Новый Структура("ЗаСегодня, Состояние, Филиал", ЗаСегодня, СостояниеСообщения);
	
	Если СтатистикаПоФилиалу Тогда
		ПараметрыВыбора.Филиал = ВыбранныйФилиал;
		КлючУникальности = КлючУникальности + Строка(ВыбранныйФилиал);
	КонецЕсли;
	
	ОткрытьФорму("Справочник.СообщенияРЭМД.ФормаСписка", ПараметрыВыбора, , КлючУникальности);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуБезСформированныхФайловРЭМД(ЗаСегодня = Ложь)
	
	КлючУникальности = "БезСформированныхФайловРЭМД" + ЗаСегодня;
	
	СостояниеДокумента = ПредопределенноеЗначение("Перечисление.СостоянияНеотправленныхДокументов.ДокументыСНесформированнымиФайламиРЭМД");
	ПараметрыВыбора = Новый Структура("ЗаСегодня, Состояние", ЗаСегодня, СостояниеДокумента);
	
	Если СтатистикаПоФилиалу Тогда
		ЗначениеОтбора = Новый Структура("Филиал", ВыбранныйФилиал);
		ПараметрыВыбора.Вставить("Отбор", ЗначениеОтбора);
		КлючУникальности = КлючУникальности + Строка(ВыбранныйФилиал);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.КонтрольЗаСообщениямиРЭМД", ПараметрыВыбора, , КлючУникальности);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуНеВсеПодписиПоставленыРЭМД(ЗаСегодня = Ложь)
	
	КлючУникальности = "НеВсеПодписиПоставленыРЭМД" + ЗаСегодня;
	
	СостояниеДокумента = ПредопределенноеЗначение("Перечисление.СостоянияНеотправленныхДокументов.ДокументыБезВсехПодписей");
	ПараметрыВыбора = Новый Структура("ЗаСегодня, Состояние", ЗаСегодня, СостояниеДокумента);
	
	Если СтатистикаПоФилиалу Тогда
		ЗначениеОтбора = Новый Структура("Филиал", ВыбранныйФилиал);
		ПараметрыВыбора.Вставить("Отбор", ЗначениеОтбора);
		КлючУникальности = КлючУникальности + Строка(ВыбранныйФилиал);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.КонтрольЗаСообщениямиРЭМД", ПараметрыВыбора, , КлючУникальности);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДокументыБезСообщенийРЭМД(ЗаСегодня = Ложь)
	
	КлючУникальности = "ДокументыБезСообщенийРЭМД" + ЗаСегодня;
	
	СостояниеДокумента = ПредопределенноеЗначение("Перечисление.СостоянияНеотправленныхДокументов.ДокументыБезСообщений");
	ПараметрыВыбора = Новый Структура("ЗаСегодня, Состояние", ЗаСегодня, СостояниеДокумента);
	
	Если СтатистикаПоФилиалу Тогда
		ЗначениеОтбора = Новый Структура("Филиал", ВыбранныйФилиал);
		ПараметрыВыбора.Вставить("Отбор", ЗначениеОтбора);
		КлючУникальности = КлючУникальности + Строка(ВыбранныйФилиал);
	КонецЕсли;
	
	ОткрытьФорму("ОбщаяФорма.КонтрольЗаСообщениямиРЭМД", ПараметрыВыбора, , КлючУникальности);
	
КонецПроцедуры

#КонецОбласти

#Область СообщенияИЭМК

&НаКлиенте
Процедура ОткрытьФормуЗарегистрированоИЭМК(ДатаНачала)
	ПараметрыОткрытияФормы = Новый Структура("ДатаНачала", ДатаНачала);
	ОткрытьФорму("РегистрСведений.ГИПСтатусыКлиентов.ФормаСписка", ПараметрыОткрытияФормы);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуСообщенийГИПИЭМК(Ошибочные, ДатаНачала)
	ПараметрыОткрытияФормы = Новый Структура("ДатаНачала, Ошибочные", ДатаНачала, Ошибочные);
	ОткрытьФорму("РегистрСведений.ИнтеграцияЕГИСЗСообщенияГИП.ФормаСписка", ПараметрыОткрытияФормы);
КонецПроцедуры

#КонецОбласти

#КонецОбласти