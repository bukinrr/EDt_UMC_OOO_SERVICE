#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// УСЛОВНОЕ ОФОРМЛЕНИЕ ДЕРЕВА ДЛЯ ВЫДЕЛЕНИЯ ЖИРНЫМ
	ЭлементОУ = УсловноеОформление.Элементы.Добавить();
	ЭлементОУ.Использование    = Истина;
	ЭлементОУ.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));
	
	ЭлементУсловия                = ЭлементОУ.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ДеревоМакетовПечати.Пометка");
	ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементУсловия.ПравоеЗначение = Истина;
	ЭлементУсловия.Использование  = Истина;
	
	ОформляемоеПоле      = ЭлементОУ.Поля.Элементы.Добавить();
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ДеревоМакетовПечатиТекст");
	Если Параметры.Свойство("ДокументСсылка") Тогда
		ДокументСсылка = Параметры.ДокументСсылка;
	КонецЕсли;
	Если Параметры.Свойство("ТолькоПечать") Тогда
		ТолькоПечать = Параметры.ТолькоПечать;
	КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// Получить объект метаданных (переданный форме)
	Объект = КлючУникальности;
	
	// Установить заголовок
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		ЭтаФорма.Заголовок = "Печать: " + ДокументСсылка;
	КонецЕсли;
	
	Если Не ТолькоПечать Тогда 
		НаПринтер = Ложь;
		НаПринтер = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Пользователи.ТекущийПользователь(),
		"ПечатьДокументовБезПредварительногоПросмотра") = Истина;
	Иначе 
		НаПринтер = Истина;
		Элементы.НаПринтер.ТолькоПросмотр = Истина;
	КонецЕсли;
		
	РедактированиеПакета = Ложь;
	
	// Получить внутренние печатные формы (имена макетов объектов).
	НастроитьДеревоМакетовПечатиСервер(ДокументСсылка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

// Процедура - обработчик события "ПечатиПриАктивизацииСтроки" элемента формы ДеревоМакетовПечати.
// Устанавливает текст подсказки.
//
&НаКлиенте
Процедура ДеревоМакетовПечатиПриАктивизацииСтроки(Элемент)
	
	Подсказка = ?(Элемент.ТекущиеДанные = Неопределено, "", Элемент.ТекущиеДанные.Подсказка);
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		НаПринтер = Элемент.ТекущиеДанные.НаПринтер;
		Элементы.НаПринтер.ТолькоПросмотр = ТипЗнч(Элемент.ТекущиеДанные.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати");
	КонецЕсли; 
	
КонецПроцедуры // ДеревоМакетовПечатиПриАктивизацииСтроки()

// Процедура - обработчик события "Выбор" элемента формы ДеревоМакетовПечати.
// Закрывает форму. Возвращает значение Истина. Признак выбора макета для печати.
//
&НаКлиенте
Процедура ДеревоМакетовПечатиВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Результат = Новый Структура;

	Результат.Вставить("РедактированиеПакета", РедактированиеПакета);
	Результат.Вставить("ДеревоМакетовПечати", Элементы.ДеревоМакетовПечати);
	Результат.Вставить("НаПринтер", НаПринтер);
	
	Закрыть(Результат);

	
КонецПроцедуры // ДеревоМакетовПечатиВыбор()

// Процедура - обработчик события "Нажатие" элемента формы Печать.
// Закрывает форму. Возвращает значение Истина. Признак выбора макета для печати.
//
&НаКлиенте
Процедура ПечатьНажатие(Элемент)
	
	Результат = Новый Структура;

	Результат.Вставить("РедактированиеПакета", РедактированиеПакета);
	Результат.Вставить("ДеревоМакетовПечати", Элементы.ДеревоМакетовПечати);
	Результат.Вставить("НаПринтер", НаПринтер);
	
	Закрыть(Результат);
	
КонецПроцедуры // ПечатьНажатие()

// Процедура - обработчик события "Нажатие" элемента формы ПоУмолчанию.
// Устанавливает макет печати по умолчанию.
//
&НаКлиенте
Процедура ПоУмолчаниюНажатие(Элемент)
	
	// Устанавливает пометку текущей строке дерева макетов печати.
	// Снимает пометку у остальных строк.
	ТекущиеДанные = Элементы.ДеревоМакетовПечати.ТекущиеДанные;
	ТекущиеДанныеСтр= новый Структура;
	ТекущиеДанныеСтр.Вставить("Действие", ТекущиеДанные.Действие);
	ТекущиеДанныеСтр.Вставить("ИзменяетДанные", ТекущиеДанные.ИзменяетДанные);
	ТекущиеДанныеСтр.Вставить("Имя", ТекущиеДанные.Имя);
	ТекущиеДанныеСтр.Вставить("Подсказка", ТекущиеДанные.Подсказка);
	ТекущиеДанныеСтр.Вставить("Пометка", ТекущиеДанные.Пометка);
	ТекущиеДанныеСтр.Вставить("Расшифровка", ТекущиеДанные.Расшифровка);
	ТекущиеДанныеСтр.Вставить("Текст", ТекущиеДанные.Текст);
	
	ПоУмолчаниюНажатиеСервер(ТекущиеДанныеСтр, ДокументСсылка);
	
	Если ТекущиеДанные <> Неопределено
		И ТипЗнч(ВладелецФормы) = Тип("ФормаКлиентскогоПриложения")
	Тогда
		КнопкаПечатьПоУмолчанию = ВладелецФормы.Элементы.Найти("ФормаОбщаяКомандаПечатьПоУмолчанию");
		Если ТипЗнч(КнопкаПечатьПоУмолчанию) = Тип("КнопкаФормы") Тогда
			ПечатьДокументовКлиент.ПрисвоитьЗаголовокПечатнойФормыКнопкеФормы(КнопкаПечатьПоУмолчанию, ТекущиеДанные.Текст)
		КонецЕсли;
	КонецЕсли;
	
	глКэшПечатныхФорм = ПечатьДокументовСервер.ЗаполнитьКэшПечатныхФорм();

КонецПроцедуры // ПоУмолчаниюНажатие()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПоУмолчаниюНажатиеСервер(ТекущиеДанныеСтр, СсылкаДок)
	
	Дерево = ДанныеФормыВЗначение(ДеревоМакетовПечати, Тип("ДеревоЗначений"));
	
	Для каждого Строка Из Дерево.Строки Цикл
		Если СтрокиРавны(Строка, ТекущиеДанныеСтр) Тогда
			Строка.Пометка = Истина;
		ИначеЕсли Строка.Пометка Тогда
			Строка.Пометка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	// Запоминает макет печать по умолчанию для текущего объекта метаданных.
 	ИмяМетаданных = СсылкаДок.Метаданные().Имя;
	Если ТекущиеДанныеСтр = Неопределено Тогда
		ХранилищеПользовательскихНастроекОтчетов.Сохранить(ИмяМетаданных,"ПечатнаяФорма", Ложь, , Пользователи.ТекущийПользователь());
	Иначе
		ХранилищеПользовательскихНастроекОтчетов.Сохранить(ИмяМетаданных,"ПечатнаяФорма",ТекущиеДанныеСтр.Текст);
	КонецЕсли;
	
	ЗначениеВДанныеФормы(Дерево, ДеревоМакетовПечати);
	
КонецПроцедуры	

&НаСервере
Функция СтрокиРавны(Строка, Структура)
	Возврат Строка.Действие = Структура.Действие
	И Строка.ИзменяетДанные = Структура.ИзменяетДанные
	И Строка.Имя = Структура.Имя
	И Строка.Подсказка = Структура.Подсказка
	И Строка.Пометка = Структура.Пометка
	И Строка.Расшифровка = Структура.Расшифровка
	И Строка.Текст = Структура.Текст;
КонецФункции	

&НаСервере
Процедура НастроитьДеревоМакетовПечатиСервер(Ссылка)
	Попытка
		ТипОбъекта = "Документ";
		Если Метаданные.Справочники.Содержит(Ссылка.Метаданные()) Тогда
			ТипОбъекта = "Справочник";
		КонецЕсли;
		СтруктураВнутреннихПечатныхФорм = ПечатьДокументовСервер.ПолучитьСтруктуруПечатныхФормСервер(Ссылка.Метаданные().Имя, ТипОбъекта);
	Исключение
		СтруктураВнутреннихПечатныхФорм = Новый Структура;
	КонецПопытки;
	
	Дерево = ДанныеФормыВЗначение(ДеревоМакетовПечати, Тип("ДеревоЗначений"));	
	
	Дерево1 = УниверсальныеМеханизмыСервер.ПолучитьДеревоМакетовПечати(Ссылка, СтруктураВнутреннихПечатныхФорм,,,Ложь);
	
	// Установить макеты печати по умолчанию
	ВыделенныеСтроки = Элементы.ДеревоМакетовПечати.ВыделенныеСтроки;
	ВыделенныеСтроки.Очистить();
	
	Подсказка = "";
	
	Для каждого ТекущаяСтрока Из Дерево1.Строки Цикл
		
		НовСтр = Дерево.Строки.Добавить();
		НовСтр.Текст = ТекущаяСтрока.Текст;
		НовСтр.Действие = ТекущаяСтрока.Действие;
		НовСтр.Имя = ТекущаяСтрока.Имя;
		НовСтр.ИзменяетДанные = ТекущаяСтрока.ИзменяетДанные;
		НовСтр.Пометка = Ложь;
		НовСтр.Расшифровка = ТекущаяСтрока.Расшифровка;
		НовСтр.Подсказка = ТекущаяСтрока.Подсказка;
		НовСтр.СсылкаНаВнешнююОбработку = ТекущаяСтрока.СсылкаНаВнешнююОбработку;
		НовСтр.НомерСтроки = ТекущаяСтрока.НомерСтроки;
		НовСтр.ВидПечатнойФормы = ТекущаяСтрока.ВидПечатнойФормы;
		НовСтр.ЗаменяемаяПечатнаяФорма = ТекущаяСтрока.ЗаменяемаяПечатнаяФорма;
		Если ТипЗнч(ТекущаяСтрока.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати") Тогда
			НовСтр.НаПринтер = ТекущаяСтрока.СсылкаНаВнешнююОбработку.НаПринтер		
		ИначеЕсли ТипЗнч(ТекущаяСтрока.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ШаблоныПечати") Тогда
			НовСтр.НаПринтер = ТекущаяСтрока.СсылкаНаВнешнююОбработку.ПечатьБезПредварительногоПросмотра	
		Иначе
			НовСтр.НаПринтер = Ложь;	
		КонецЕсли;	
	КонецЦикла;
	
	// -- определенение формы по умолчанию, выбранной ранее для документа.
	ИмяФормыПоУмолчанию = ХранилищеПользовательскихНастроекОтчетов.Загрузить(ДокументСсылка.Метаданные().Имя, "ПечатнаяФорма");
	СтрокаПоУмолчанию = Дерево.Строки.Найти(ИмяФормыПоУмолчанию, "Текст");
	
	Если СтрокаПоУмолчанию <> Неопределено Тогда
		СтрокаПоУмолчанию.Пометка = Истина;
	КонецЕсли;	
	// ----------------------------------------------------------------------.
	
	
	ЗначениеВДанныеФормы(Дерево, ДеревоМакетовПечати);
	
КонецПроцедуры
#КонецОбласти

