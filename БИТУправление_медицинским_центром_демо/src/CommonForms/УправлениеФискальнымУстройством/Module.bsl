//+бит 
// Помимо изменения модуля добавлены реквизиты формы бит_ФлагЗацикливания и ТекстСообщения.
//-бит

#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ТекущийКассир = МенеджерОборудованияКлиентСервер.ТекущийКассирДляФискальныхОпераций();  
	Кассир = ТекущийКассир.Кассир; 
	КассирИНН = ТекущийКассир.КассирИНН;   
	
	ИнкассацияДоступна = МенеджерОборудованияВызовСервера.ДоступноИнкассацияВУправлениеФискальнымУстройством();
	Элементы.ВнесениеДенег.Видимость = ИнкассацияДоступна;     
	Элементы.ВыемкаДенег.Видимость = ИнкассацияДоступна; 
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОперацияЗавершение(РезультатВыполнения, Параметры) Экспорт
	
	Доступность = Истина;
	
	ТекстСообщения = ?(РезультатВыполнения.Результат, НСтр("ru='Операция успешно завершена.'"), РезультатВыполнения.ОписаниеОшибки);
	
	//+бит
	ТекстСообщения = ТекстСообщения;
	Если Не РезультатВыполнения.Результат
		И ((Параметры.Команда = "ОткрытьСмену")
		Или (Параметры.Команда = "ЗакрытьСмену"))
	Тогда
		ПроверкаИКорректировкаКассовойСмены(Параметры.ФискальноеУстройство, Параметры.Команда);
	КонецЕсли;
	
	// Сбросим флаг зацикливания
	бит_ФлагЗацикливания = Ложь;
	ТекстСообщения = ТекстСообщения;
	//-бит
	
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСмену(Команда)
	
	ВыполнитьОперацию("ОткрытьСмену");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСмену(Команда)
	
	ВыполнитьОперацию("ЗакрытьСмену");
	
КонецПроцедуры

&НаКлиенте
Процедура ВнесениеДенег(Команда)
	
	ВыполнитьОперацию("Внесение"); 
	
КонецПроцедуры

&НаКлиенте
Процедура ВыемкаДенег(Команда)
	
	ВыполнитьОперацию("Выемка");     
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетОТекущемСостоянииРасчетов(Команда)
	
	ВыполнитьОперацию("ОтчетОТекущемСостоянииРасчетов");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетБезГашения(Команда)
	
	ВыполнитьОперацию("ОтчетБезГашения");
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперацию(Команда)
	
	ОчиститьСообщения();
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ФискальныйРегистратор");
	ПоддерживаемыеТипыВО.Добавить("ПринтерЧеков");
	ПоддерживаемыеТипыВО.Добавить("ККТ");
	
	ДополнительныеПараметры = Новый Структура("Команда", Команда);
	
	Если Команда = "Внесение" Или Команда = "Выемка" Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьОперациюВыбораУстройстваИнкассация", ЭтотОбъект, ДополнительныеПараметры); 
	Иначе
		ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьОперациюВыбораУстройства", ЭтотОбъект, ДополнительныеПараметры); 
	КонецЕсли;
	МенеджерОборудованияКлиент.ВыбратьУстройство(ОписаниеОповещения, ПоддерживаемыеТипыВО,
		НСтр("ru='Выберите фискальное устройство'"), 
		НСтр("ru='Фискальное устройство не подключено.'"), 
		НСтр("ru='Фискальное устройство не выбрано.'"));

КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперациюВыбораУстройстваИнкассация(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВыбора.Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыбора.ОписаниеОшибки);      
		Возврат;
	КонецЕсли;  
	
	СуммаОперации = 0;
	
	Если ДополнительныеПараметры.Команда = "Внесение" Тогда    
		ЗаголовокОкна = НСтр("ru='Сумма внесения'");       
	Иначе     
		ЗаголовокОкна = НСтр("ru='Сумма выемки'");  
	КонецЕсли;
	
	ПараметрыПослеВводаЧисла = Новый Структура;
	ПараметрыПослеВводаЧисла.Вставить("СуммаОперации", СуммаОперации);
	ПараметрыПослеВводаЧисла.Вставить("ИдентификаторУстройства", РезультатВыбора.ИдентификаторУстройства);  
	ПараметрыПослеВводаЧисла.Вставить("Команда", ДополнительныеПараметры.Команда);
	
	ОповещениеПослеВводеЧисла = Новый ОписаниеОповещения("ИнкассацияЗавершение", ЭтотОбъект, ПараметрыПослеВводаЧисла);
	
	ПоказатьВводЧисла(ОповещениеПослеВводеЧисла, СуммаОперации, ЗаголовокОкна, 15, 2);
	
КонецПроцедуры        

&НаКлиенте
Процедура ИнкассацияЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	СуммаОперации = ?(Результат = Неопределено, ДополнительныеПараметры.СуммаОперации, Результат);
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Доступность = Ложь;   
	
	ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыИнкассации();
	ПараметрыОперации.ТипИнкассации = ?(ДополнительныеПараметры.Команда = "Внесение" , 1, 0);    
	ПараметрыОперации.Сумма     = СуммаОперации;   
	ПараметрыОперации.Кассир    = Кассир;   
	ПараметрыОперации.КассирИНН = КассирИНН;
	
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьИнкассациюНаФискальномУстройстве(ОповещениеПриЗавершении, УникальныйИдентификатор, 
		ДополнительныеПараметры.ИдентификаторУстройства, ПараметрыОперации);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОперациюВыбораУстройства(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВыбора.Результат Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВыбора.ОписаниеОшибки);      
		Возврат;
	КонецЕсли;
	
	ОчиститьСообщения();
	Доступность = Ложь;
	
	ПараметрыОперации = ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОткрытияЗакрытияСмены();
	ПараметрыОперации.Кассир    = Кассир;   
	ПараметрыОперации.КассирИНН = КассирИНН;

	//+бит
	// Было:
	//ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект);
	// Стало:
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ФискальноеУстройство", РезультатВыбора.ИдентификаторУстройства);
	ДопПараметры.Вставить("Команда", ДополнительныеПараметры.Команда);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ОперацияЗавершение", ЭтотОбъект, ДопПараметры);	
	//-бит
	
	Если ДополнительныеПараметры.Команда = "ОткрытьСмену" Тогда 
		Если МенеджерОборудованияКлиентПовтИсп.ИспользуетсяКассоваяСмена() Тогда 
			ДополнительныеПараметры = Новый Структура();
			МодульКассовыеСменыКлиентПереопределяемый = ОбщегоНазначенияКлиент.ОбщийМодуль("КассовыеСменыКлиентПереопределяемый");
			МодульКассовыеСменыКлиентПереопределяемый.УправлениеФУЗаполнитьДополнительныеПараметрыПередОткрытиемСмены(РезультатВыбора.ИдентификаторУстройства, ДополнительныеПараметры);
		Иначе     
			ДополнительныеПараметры = Неопределено;
		КонецЕсли;
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьОткрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, 
			УникальныйИдентификатор, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации, ДополнительныеПараметры);    
	ИначеЕсли ДополнительныеПараметры.Команда = "ЗакрытьСмену" Тогда
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьЗакрытиеСменыНаФискальномУстройстве(ОповещениеПриЗавершении, 
			УникальныйИдентификатор, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	ИначеЕсли ДополнительныеПараметры.Команда = "ОтчетОТекущемСостоянииРасчетов" Тогда
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаОТекущемСостоянииРасчетов(ОповещениеПриЗавершении, 
			УникальныйИдентификатор, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	ИначеЕсли ДополнительныеПараметры.Команда = "ОтчетБезГашения" Тогда
		ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьФормированиеОтчетаБезГашения(ОповещениеПриЗавершении, 
			УникальныйИдентификатор, РезультатВыбора.ИдентификаторУстройства, ПараметрыОперации);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

//+бит
#Область БИТ

&НаКлиенте
Процедура ПроверкаИКорректировкаКассовойСмены(ФискальноеУстройство, Команда)
	
	ДопПараметры = Новый Структура("Команда, ФискальноеУстройство", Команда, ФискальноеУстройство);
	ОповещениеПриЗавершении = Новый ОписаниеОповещения("ПолучениеТекущегоСостоянияФискальногоУстройства_Завершение", ЭтотОбъект, ДопПараметры);
	ОборудованиеЧекопечатающиеУстройстваКлиент.НачатьПолучениеТекущегоСостоянияФискальногоУстройства(ОповещениеПриЗавершении, УникальныйИдентификатор, ФискальноеУстройство);
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучениеТекущегоСостоянияФискальногоУстройства_Завершение(РезультатВыполнения, ДопПараметры) Экспорт
	
	Доступность = Истина;
	
	Если РезультатВыполнения.Результат Тогда 
		
		Если ДопПараметры.Команда = "ОткрытьСмену" Тогда
			// Обработка ситуации когда смена на ккт открыта, а в УМЦ закрыта при вызове операции ОткрытьСмену
			Если РезультатВыполнения.СтатусСмены = 2 Тогда
				ТекстОтвета = ОткрытиеКассовойСменыПоФискальномуУстройству(ДопПараметры.ФискальноеУстройство, РезультатВыполнения);		
				Если ЗначениеЗаполнено(ТекстОтвета) Тогда
					ТекстСообщения = ТекстОтвета;
				КонецЕсли;
			// Обработка ситуации когда смена на ККТ закрыта, а в УМЦ открыта при вызове операции ОткрытьСмену
			ИначеЕсли РезультатВыполнения.СтатусСмены = 1 Тогда
			
				Если бит_ФлагЗацикливания Тогда
					бит_ФлагЗацикливания = Ложь;
					ТекстСообщения = "Произошла рассинхронизация учета смен в ККТ и УМЦ, " 
										+ "выполните открытие смены через драйвер ККТ!";
				Иначе
					Выполнено = Ложь;
					ЗакрытьКассовойСменыПоФискальномуУстройству(ДопПараметры.ФискальноеУстройство, Выполнено);			
					Если Выполнено Тогда
						бит_ФлагЗацикливания = Истина;
						ОткрытьСмену(Неопределено);	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		ИначеЕсли ДопПараметры.Команда = "ЗакрытьСмену" Тогда
			// Обработка ситуации когда смена на ккт открыта, а в УМЦ закрыта при вызове операции ЗакрытьСмену
			Если РезультатВыполнения.СтатусСмены = 2 Тогда
			    Если бит_ФлагЗацикливания Тогда
					бит_ФлагЗацикливания = Ложь;
					ТекстСообщения = "Произошла рассинхронизация учета смен в ККТ и УМЦ, " 
										+ "выполните закрытие смены через драйвер ККТ!";
				Иначе
					ТекстОтвета = ОткрытиеКассовойСменыПоФискальномуУстройству(ДопПараметры.ФискальноеУстройство, РезультатВыполнения);		
					Если ЗначениеЗаполнено(ТекстОтвета) Тогда
						// ТекстСообщения = ТекстОтвета;
						бит_ФлагЗацикливания = Истина;
						ЗакрытьСмену(Неопределено);
					КонецЕсли;
				КонецЕсли;
			// Обработка ситуации когда смена на ккт закрыта, а в УМЦ открыта при вызове операции ЗакрытьСмену	
			ИначеЕсли РезультатВыполнения.СтатусСмены = 1 Тогда
				Выполнено = Ложь;
				ЗакрытьКассовойСменыПоФискальномуУстройству(ДопПараметры.ФискальноеУстройство, Выполнено);			
				Если Выполнено Тогда
					ТекстСообщения = "Смена уже была закрыта, действий не требуется!";	
				КонецЕсли;
			КонецЕсли;
		КонецЕсли; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗакрытьКассовойСменыПоФискальномуУстройству(ФискальноеУстройство, Выполнено)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	КассоваяСмена.Ссылка КАК Ссылка,
	|	КассоваяСмена.Статус КАК Статус
	|ИЗ
	|	Документ.КассоваяСмена КАК КассоваяСмена
	|ГДЕ
	|	КассоваяСмена.ФискальноеУстройство = &ФискальноеУстройство
	|	И КассоваяСмена.ПометкаУдаления = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка УБЫВ";
	
	Запрос.УстановитьПараметр("ФискальноеУстройство", ФискальноеУстройство);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если Выборка.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда		
			ПараметрыКоманды = Новый Структура("КассоваяСмена", Выборка.Ссылка);
			КассовыеСменыВызовСервера.ЗакрытьКассовуюСмену(ПараметрыКоманды);
			Выполнено = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОткрытиеКассовойСменыПоФискальномуУстройству(ФискальноеУстройство, Контекст)
	
	Если ТипЗнч(Контекст.ФискальныеДанные) = Тип("Структура") Тогда
		ФискДанные = Контекст.ФискальныеДанные;
		СоздатьНовыйДокумент = Истина;
		ПоследняяКассоваяСмена = КассовыеСменыВызовСервера.ОписаниеПоследнейКассовойСмены(ФискальноеУстройство);
		Если ПоследняяКассоваяСмена <> Неопределено Тогда
			КассоваяСмена = ПоследняяКассоваяСмена.КассоваяСмена;
			Если Строка(КассоваяСмена.НомерСменыККТ) = Строка(ФискДанные.НомерСменыККТ) Тогда 
				Если КассоваяСмена.Статус = Перечисления.СтатусыКассовойСмены.Открыта Тогда
					СоздатьНовыйДокумент = Ложь;
				Иначе
					КассоваяСменаОбъект = КассоваяСмена.ПолучитьОбъект();
					КассоваяСменаОбъект.УстановитьПометкуУдаления(Истина);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если СоздатьНовыйДокумент Тогда
			ПараметрыКоманды = Новый Структура("ФискальныеДанныеСтруктура", ФискДанные);
			КассовыеСменыВызовСервера.НоваяКассоваяСмена(ФискальноеУстройство, ПараметрыКоманды);
			ТекстСообщения = "Смена уже была открыта, действий не требуется!";
			Возврат ТекстСообщения;
		КонецЕсли;
	Иначе
		ТекстСообщения = "Смена уже открыта, не удалось получить данные кассовой смены, " 
		+ "для дальнейшей работы необходимо закрыть смену через драйвер";
		Возврат ТекстСообщения;
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

#КонецОбласти
//-бит

