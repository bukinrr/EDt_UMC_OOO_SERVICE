#Область ПрограммныйИнтерфейс

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьСписок();
	
	Если ЗначениеЗаполнено(Параметры.КемВыдан) Тогда
		КемВыдан = Параметры.КемВыдан;
		СтрокиКоллекции = СписокКемВыдан.НайтиСтроки(Новый Структура("Наименование", КемВыдан));
		Если СтрокиКоллекции.Количество() <> 0 Тогда
			Элементы.СписокКемВыдан.ТекущаяСтрока = СтрокиКоллекции[0].ПолучитьИдентификатор();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Элементы.КемВыдан.ОбновитьТекстРедактирования();
	ПоискЗначений(КемВыдан);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Добавить(Команда)
	
	ТекстПоля = Элементы.КемВыдан.ТекстРедактирования;
	Если СписокКемВыдан.Количество() = 0 Тогда
		ДобавитьНовыйКемВыданВСправочник(ТекстПоля);
	КонецЕсли;
	
	Закрыть(ТекстПоля);
				
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)

	ТекДанные = Элементы.СписокКемВыдан.ТекущиеДанные;
	Если ТекДанные <> Неопределено Тогда
		УдалитьУчреждение(ТекДанные.Ссылка);
		ОбновитьСписок();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если СписокКемВыдан.Количество() <> 0 Тогда
		Текст = Элементы.СписокКемВыдан.ТекущиеДанные.Наименование;
		Закрыть(Текст);
	Иначе 
	    Текст = Элементы.КемВыдан.ТекстРедактирования;
		Закрыть(Текст);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьТекстСтрокиПоиска(Команда)
	
	Закрыть(КемВыдан);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КемВыданАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	ПоискЗначенийПодбора(Текст);
	
КонецПроцедуры

&НаКлиенте
Процедура КемВыданОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ПоискЗначенийПодбора(Текст);
КонецПроцедуры

&НаКлиенте
Процедура СписокКемВыданВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Текст = Элементы.СписокКемВыдан.ТекущиеДанные.Наименование;
	Закрыть(Текст);
		
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьСписок()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Учреждения.Наименование КАК Наименование,
	               |	Учреждения.Ссылка
	               |ИЗ
	               |	Справочник.УчрежденияВыдачиУдостоверенийЛичности КАК Учреждения
	               |ГДЕ
	               |	НЕ Учреждения.ПометкаУдаления";
	Выгрузка = Запрос.Выполнить().Выгрузить();
	СписокКемВыдан.Загрузить(Выгрузка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьНовыйКемВыданВСправочник(Наименование)
	
	СуществующийЭлемент = Справочники.УчрежденияВыдачиУдостоверенийЛичности.НайтиПоНаименованию(Наименование, Истина);
	
	Если Не ЗначениеЗаполнено(СуществующийЭлемент) Тогда
		НовыйЭлемент = Справочники.УчрежденияВыдачиУдостоверенийЛичности.СоздатьЭлемент();
		НовыйЭлемент.Наименование = Наименование;
		НовыйЭлемент.Записать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПоискЗначений(Текст)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Учреждения.Наименование,
	               |	Учреждения.Ссылка
	               |ИЗ
	               |	Справочник.УчрежденияВыдачиУдостоверенийЛичности КАК Учреждения
	               |ГДЕ
	               |	Учреждения.ПометкаУдаления = ЛОЖЬ
	               |	И Учреждения.Наименование ПОДОБНО &ВводимыйТекст";
	ТекстПоиска = "%" + Текст + "%";
	Запрос.УстановитьПараметр("ВводимыйТекст", ТекстПоиска); 
	Выгрузка = Запрос.Выполнить().Выгрузить();
	СписокКемВыдан.Загрузить(Выгрузка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоискЗначенийПодбора(Текст)
	
	ПоискЗначений(Текст);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьУчреждение(УчреждениеСсылка)

	УчреждениеСсылка.ПолучитьОбъект().Удалить();

КонецПроцедуры

#КонецОбласти
