
&НаКлиенте
Процедура Сохранить(Команда)
	Закрыть(ПолучитьСтруктуруДляВозврата());
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("НазваниеРеквизитаККТ") Тогда
		НазваниеРеквизитаККТ = Параметры.НазваниеРеквизитаККТ;
		НастроитьФорму(НазваниеРеквизитаККТ);
	КонецЕсли;
		
	Если Параметры.Свойство("АдресХранилищаДанныхРеквизита") Тогда
		ДанныеХЗ = ПолучитьИзВременногоХранилища(Параметры.АдресХранилищаДанныхРеквизита);
		Если ЗначениеЗаполнено(ДанныеХЗ) И ТипЗнч(ДанныеХЗ) = Тип("Структура") Тогда
			Для Каждого КлючИЗначение Из ДанныеХЗ Цикл
				ЭтаФорма[КлючИЗначение.Ключ] = КлючИЗначение.Значение;
			КонецЦикла;
		Иначе
			Элементы.ФормаУдалить.Доступность = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("Дата") Тогда
		ДатаВремяОперации = Параметры.Дата;
	КонецЕсли;
	
	Если Параметры.Свойство("ПерсональныеДанные") Тогда
		Адрес =	Параметры.ПерсональныеДанные.Адрес;
		ИНН = Параметры.ПерсональныеДанные.ИНН;
		Если ЗначениеЗаполнено(ДатаРождения)
			Или ЗначениеЗаполнено(ВидДокумента) 
			Или ЗначениеЗаполнено(ДанныеДокумента)
			Или Не (ЗначениеЗаполнено(ИНН) Или ЗначениеЗаполнено(Адрес))
		Тогда
			ЭтоФизЛицо = Истина;
			КлиентФИО = Параметры.ПерсональныеДанные.КлиентПредставление;
		Иначе
			ПредставлениеКонтрагента = Параметры.ПерсональныеДанные.КлиентПредставление;
			ЭтоФизЛицо = Ложь;
		КонецЕсли;
		
		Если ТипЗнч(Параметры.ПерсональныеДанные.Клиент) = Тип("СправочникСсылка.Клиенты") Тогда
			Клиент = Параметры.ПерсональныеДанные.Клиент;
			ЗаполнитьСведенияПоФизЛицу();
		ИначеЕсли ТипЗнч(Параметры.ПерсональныеДанные.Клиент) = Тип("СправочникСсылка.Контрагенты") Тогда
			Контрагент = Параметры.ПерсональныеДанные.Клиент;
			ИнформацияОКонтрагенте = ПолучитьИнформациюОКонтрагенте(Контрагент);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ИнформацияОКонтрагенте, "ПредставлениеКонтрагента, ИНН, Адрес");
		КонецЕсли;
		
		Элементы.ПоляЮрЛица.Доступность =  Не ЭтоФизЛицо;
		Элементы.ПоляФизЛица.Доступность = ЭтоФизЛицо;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	РаботаСФормамиКлиент.УстановитьОтборСписка("ФизЛицо",  Клиент, ПаспортныеДанные);
	НастроитьГражданство(ВидДокумента); 
	
КонецПроцедуры

&НаСервере
Процедура НастроитьФорму(НазваниеРеквизитаККТ)
	
	Для Каждого СтраницаРеквизита Из Элементы.СтраницыРеквизитов.ПодчиненныеЭлементы Цикл
		Если СтраницаРеквизита.Имя = "Страница" + НазваниеРеквизитаККТ Тогда
			СтраницаРеквизита.Видимость = Истина;
		Иначе
			СтраницаРеквизита.Видимость = Ложь;			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтруктуруДляВозврата()
	
	СтруктураДанных = Новый Структура;
	Если НазваниеРеквизитаККТ = "ПерсональныеДанныеПокупателя" Тогда
		СтруктураДанных.Вставить("ДетальнаяИнформация", ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыПерсональныеДанныеПокупателя());
		Если Не ЭтоФизЛицо Тогда
			Клиент = Неопределено;
			КлиентФИО = Неопределено;
			ДатаРождения = Неопределено;
			ВидДокумента = Неопределено;
			Гражданство = Неопределено;
			ДанныеДокумента = Неопределено;
			СтруктураДанных.Вставить("Клиент", ПредставлениеКонтрагента);
			СтруктураДанных.Вставить("Адрес", Адрес);
		Иначе
			Контрагент = Неопределено;
			ПредставлениеКонтрагента = Неопределено;
			ИНН	= Неопределено;
			Адрес = Неопределено;
			СтруктураДанных.Вставить("Клиент", КлиентФИО);
			СтруктураДанных.Вставить("Адрес", "");
		КонецЕсли;
	ИначеЕсли НазваниеРеквизитаККТ = "ОперационныйРеквизит" Тогда
		СтруктураДанных.Вставить("ДетальнаяИнформация", ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОперационныйРеквизит());
	ИначеЕсли НазваниеРеквизитаККТ = "ОтраслевойРеквизит" Тогда
		СтруктураДанных.Вставить("ДетальнаяИнформация", ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ПараметрыОтраслевойРеквизит());
	Иначе
		СтруктураДанных.Вставить("ДетальнаяИнформация", Новый Структура());
	КонецЕсли;
	
	Для Каждого КлючИЗначение Из СтруктураДанных.ДетальнаяИнформация Цикл
		Если КлючИЗначение.Ключ = "ДанныеДокумента" Тогда
			// Паспортные данные. На форме остается текст с переносами, но здесь для реквизита документа и отправки в кассу 
			// заменяются переносы строк на пробелы (факты проблем с АТОЛ).
			ЭтаФорма[КлючИЗначение.Ключ] = СтрЗаменить(ЭтаФорма[КлючИЗначение.Ключ], Символы.ПС, " ");
		КонецЕсли;
		СтруктураДанных.ДетальнаяИнформация.Вставить(КлючИЗначение.Ключ, ЭтаФорма[КлючИЗначение.Ключ]);
	КонецЦикла;
	
	Возврат СтруктураДанных;
	
КонецФункции

#Область СведенияОПокупателе

&НаКлиенте
Процедура КлиентПриИзменении(Элемент)
	
	РаботаСФормамиКлиент.УстановитьОтборСписка("ФизЛицо",  Клиент, ПаспортныеДанные);
	ЗаполнитьСведенияПоФизЛицу();
		
КонецПроцедуры	

&НаКлиенте
Процедура ВидДокументаПриИзменении(Элемент)
	Гражданство = "";
	НастроитьГражданство(ВидДокумента);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияПоФизЛицу()
	
	КлиентФИО = Клиент;
	ДатаРождения = Клиент.ДатаРождения;
	АктуальныеПаспортныеДанные = РегистрыСведений.ПаспортныеДанные.ПолучитьПоследнее(ДатаВремяОперации, Новый Структура("ФизЛицо",Клиент));
	
	Если Не ЗначениеЗаполнено(ДанныеДокумента) Тогда
		ДанныеДокумента = ПолучитьДанныеДокумента(АктуальныеПаспортныеДанные);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ВидДокумента) Тогда
		ВидДокумента = ОпределитьВидДокумента(АктуальныеПаспортныеДанные.ДокументВид);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСведенияПоПаспортнымДанным(Команда, ПаспортныеДанные = Неопределено)
	ТДПД = Элементы.ПаспортныеДанные.ТекущиеДанные;
	Если ТДПД <> Неопределено Тогда
		ВидДокумента = ОпределитьВидДокумента(ТДПД.ДокументВид);
		Гражданство = "";
		НастроитьГражданство(ВидДокумента);
		ДанныеДокумента = ПолучитьДанныеДокумента(ТДПД);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОпределитьВидДокумента(ДокументВид)

	СоответствиеДУЛИВИдовДУЛККТ = Новый Соответствие();
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС03"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.СвидетельствоОРожденииГражданинаРФ"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС10"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПаспортИностранногоГражданина"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС14"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ВременноеУдостоверениеЛичностиГражданинаРФ"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС15"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.РазрешениеНаВременноеПроживаниеДляЛицБезГражданства"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС21"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПаспортГражданинаРФ"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС22"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПаспортГражданинаРФЗаПределамиРФ"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ИМНС91"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ИныеДокументыУдостоверяющиеЛичностьГражданинаРФ"));
	СоответствиеДУЛИВИдовДУЛККТ.Вставить(ПредопределенноеЗначение("Справочник.ДокументыУдостоверяющиеЛичность.ПустаяСсылка"), ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПустаяСсылка"));
	
	Возврат СоответствиеДУЛИВИдовДУЛККТ.Получить(ДокументВид);
	
КонецФункции

&НаКлиенте
Процедура НастроитьГражданство(ВидДокумента)
	
	// Реквизит "гражданство" (тег 1244) включается в состав ФД только в случае, если лицо (покупатель, клиент), не является гражданином РФ.
	Если ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПаспортГражданинаРФ")
		Или ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ПаспортГражданинаРФЗаПределамиРФ") 
		Или ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ВременноеУдостоверениеЛичностиГражданинаРФ")
		Или ВидДокумента = ПредопределенноеЗначение("Перечисление.ВидДокументаУдостоверяющегоЛичностьККТ.ИныеДокументыУдостоверяющиеЛичностьГражданинаРФ")
		Тогда
		Элементы.Гражданство.ТолькоПросмотр = Истина;
	Иначе
		Элементы.Гражданство.ТолькоПросмотр = Ложь;				
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьДанныеДокумента(ТДПД)
	
	Результат = "";
	Если ЗначениеЗаполнено(ТДПД.ДокументСерия)
		Или ЗначениеЗаполнено(ТДПД.ДокументНомер) 
	Тогда
		Результат = Результат + ТДПД.ДокументСерия + " " + ТДПД.ДокументНомер + Символы.ПС;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТДПД.ДокументДатаВыдачи) Тогда
		Результат = Результат + "Выдан: " + Формат(ТДПД.ДокументДатаВыдачи, "ДЛФ=D") + Символы.ПС;
	КонецЕсли;
	Если ЗначениеЗаполнено(ТДПД.ДокументКодПодразделения) Тогда
		Результат = Результат + "Код подр.: " + ТДПД.ДокументКодПодразделения;
	КонецЕсли;
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЭтоФизЛицоПриИзменении(Элемент = Неопределено)
	
	Элементы.ПоляЮрЛица.Доступность = Не ЭтоФизЛицо;
	Элементы.ПоляФизЛица.Доступность =  ЭтоФизЛицо;
	
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	
	Закрыть(Новый Структура("Удалить"));	
	
КонецПроцедуры

&НаКлиенте
Процедура ИННПриИзменении(Элемент)

	ТекстСообщения = "";
	Если Не ОборудованиеЧекопечатающиеУстройстваКлиентСервер.ИННСоответствуетТребованиям(ИНН, СтрДлина(ИНН) <> 12, ТекстСообщения) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,"ИНН");
		Элементы.Сохранить.Доступность = Ложь;
	Иначе
		Элементы.Сохранить.Доступность = Истина;	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	ЗаполнитьИнформациюОКонтрагенте();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИнформациюОКонтрагенте(Контрагент)
	
	Информация = Новый Структура("ПредставлениеКонтрагента, ИНН, Адрес");
	
	Если ЗначениеЗаполнено(Контрагент.НаименованиеПолное) Тогда
		Информация.ПредставлениеКонтрагента = Контрагент.НаименованиеПолное;
	Иначе
		Информация.ПредставлениеКонтрагента = Строка(Контрагент);
	КонецЕсли;
	
    Информация.ИНН = Контрагент.ИНН;
	Информация.Адрес = КонтактнаяИнформацияСерверПереопределяемый.НайтиКонтактнуюИнформацию(Контрагент, Перечисления.ТипыКонтактнойИнформации.Адрес);
	
	Возврат Информация;
	
КонецФункции

&НаКлиенте
Процедура ЗаполнитьИнформациюОКонтрагенте()
	
	Информация = ПолучитьИнформациюОКонтрагенте(Контрагент);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Информация, "ПредставлениеКонтрагента, ИНН, Адрес");
	
КонецПроцедуры

#КонецОбласти
