#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОтобразитьФормуРаботыСЭМД = Параметры.ОтобразитьФормуРаботыСЭМД;
	
	ТекущийПользователь = ПараметрыСеанса.ТекущийПользователь;
	
	мРеквизиты = Новый Массив;
	
	ТипыМедицинскогоДокумента = Новый Массив;
	ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.Прием"));
	ТипыМедицинскогоДокумента.Добавить(ТипДокумента("СправочникСсылка.МедицинскиеКарты"));
	ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.Рецепт"));
	
	Если Метаданные.Документы.Найти("ПрохождениеМедосмотра") <> Неопределено Тогда
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.ПрохождениеМедосмотра"));
	КонецЕсли;
	Если Метаданные.Документы.Найти("СписокНаПрохождениеМедосмотра") <> Неопределено Тогда
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.СписокНаПрохождениеМедосмотра"));
	КонецЕсли;
	Если Метаданные.Документы.Найти("МедицинскийОтчет") <> Неопределено Тогда
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.МедицинскийОтчет"));
	КонецЕсли;
	
	// Версия КОРП
	Если Метаданные.Документы.Найти("ВрачебнаяКомиссия") <> Неопределено Тогда
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.ВрачебнаяКомиссия"));
	КонецЕсли;
	Если Метаданные.Документы.Найти("Форма066") <> Неопределено Тогда
		ТипыМедицинскогоДокумента.Добавить(ТипДокумента("ДокументСсылка.Форма066"));
	КонецЕсли;
	
	мРеквизиты.Добавить(Новый РеквизитФормы("МедицинскийДокумент", Новый ОписаниеТипов(ТипыМедицинскогоДокумента),, "Медицинский документ"));
	ИзменитьРеквизиты(мРеквизиты);
	
	ЭлементМедицинскогоДокумента = Элементы.Добавить("МедицинскийДокумент", Тип("ПолеФормы"), Элементы.ШапкаВерх);
	ЭлементМедицинскогоДокумента.Вид = ВидПоляФормы.ПолеВвода;
	ЭлементМедицинскогоДокумента.ПутьКДанным = "МедицинскийДокумент";
	ЭлементМедицинскогоДокумента.ТолькоПросмотр = Истина;
	ЭлементМедицинскогоДокумента.КнопкаВыбора = Ложь;
	ЭлементМедицинскогоДокумента.КнопкаОткрытия = Истина;
	
	Элементы.Переместить(Элементы.МедицинскийДокумент, Элементы.ШапкаВерх, Элементы.СообщенияРЭМД);
	
	ЭтотОбъект["МедицинскийДокумент"] = Параметры.МедицинскийДокумент;
	
	ТекущийСотрудник = ОтраслевыеДополнения.СотрудникПользователяПоФилиалу(ТекущийПользователь, РаботаСДокументамиСервер.ФилиалДокумента(ЭтотОбъект["МедицинскийДокумент"]));
	
	ИмяТипаДокумента = ДопСерверныеФункции.ИмяСсылочногоТипа(ЭтотОбъект["МедицинскийДокумент"]);
	ДокументЯвляетсяЗаключениемМедосмотра = ИнтеграцияЕГИСЗВызовСервера.ДокументЯвляетсяЗаключениемМедосмотра(ЭтотОбъект["МедицинскийДокумент"]);
	
	Если Параметры.Свойство("ИдентификаторФормы") Тогда
		ИдентификаторФормы = Параметры.ИдентификаторФормы;
	КонецЕсли;
	
	УстановитьОтборСпециальностей();
	
	УстановитьЗаголовокКнопкиСохраненияЭМД();
	
	ЗаполнитьТаблицыДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодписаниеИзФормыВладельца = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтотОбъект.ВладелецФормы, "Объект") И ЭтотОбъект.ВладелецФормы.Объект.Ссылка = ЭтотОбъект["МедицинскийДокумент"];
	
	ЗаполнитьДанныеНаФорме();
	
	Если Не ОтобразитьФормуРаботыСЭМД Тогда
		ПодписатьСтрокиДанных();
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСпискиПослеПодписаний" Тогда
		ОбновитьСпискиПослеПодписаний(Параметр);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если ДокументЯвляетсяЗаключениемМедосмотра Тогда
		СохранитьЭМД();
		Возврат;
	КонецЕсли;
	
	КоличествоПодписей = Данные.НайтиСтроки(Новый Структура("ПодписьУстановлена", Истина)).Количество();
	
	Если КоличествоПодписей = 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранениеЭМДПродолжение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Не установлено ни одной подписи. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	ИначеЕсли КоличествоПодписей < Данные.Количество() Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("СохранениеЭМДПродолжение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, НСтр("ru = 'Не все подписи установлены. Продолжить?'"), РежимДиалогаВопрос.ДаНет);
	Иначе
		СохранитьЭМД();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьПодписи(Команда)
	
	Если Элементы.ЭлектронныеПодписи.ВыделенныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ВыделенныеСтроки = Новый Массив;
	Для Каждого ВыделеннаяСтрока Из Элементы.ЭлектронныеПодписи.ВыделенныеСтроки Цикл
		ВыделенныеСтроки.Добавить(ЭлектронныеПодписи.НайтиПоИдентификатору(ВыделеннаяСтрока));
	КонецЦикла;
	
	ПроверитьСтрокиПодписей(ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВсеПодписи(Команда)
	
	ПроверитьСтрокиПодписей(ЭлектронныеПодписи.НайтиСтроки(Новый Структура));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодпись(Команда)
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		Возврат;
	КонецЕсли;
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	МодульЭлектроннаяПодписьКлиент.ОткрытьПодпись(Элементы.ЭлектронныеПодписи.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодпись(Команда)
	
	УдалитьПодписи();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьПодпись(Команда)
	
	ТекущиеДанные = Элементы.ЭлектронныеПодписи.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	МодульЭлектроннаяПодписьКлиент.СохранитьПодпись(ТекущиеДанные.АдресПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСписокПодписей(Команда)
	
	ЗаполнитьСписокПодписей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьВсе(Команда)
	
	ПодписатьСтрокиДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРолиСотрудниковПриПодписанииПоВидамДокументов(Команда)
	
	ВидыДокументов = Новый Массив;
	Для Каждого СтрокаРЭМД Из ДанныеРЭМД Цикл
		Если ЗначениеЗаполнено(СтрокаРЭМД.ВидДокументаЭМД)
			И ВидыДокументов.Найти(СтрокаРЭМД.ВидДокументаЭМД) = Неопределено
		Тогда
			ВидыДокументов.Добавить(СтрокаРЭМД.ВидДокументаЭМД);
		КонецЕсли;
	КонецЦикла;
	
	ОткрытьФорму("Отчет.РолиСотрудниковПриПодписанииПоВидамДокументов.Форма", Новый Структура("ВидыДокументов", ВидыДокументов),, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ТаблицаПодписейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ЭлектроннаяПодпись") Тогда
		Возврат;
	КонецЕсли;
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	МодульЭлектроннаяПодписьКлиент.ОткрытьПодпись(Элементы.ЭлектронныеПодписи.ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаПодписейПриАктивизацииСтроки(Элемент)
	
	УстановитьДоступностьКомандСпискаПодписей();
	
КонецПроцедуры

&НаКлиенте
Процедура СообщенияРЭМДНажатие(Элемент)
	
	ЗначениеОтбора = Новый Структура("Документ", ЭтотОбъект["МедицинскийДокумент"]);
	ПараметрыЭМД = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("Справочник.СообщенияРЭМД.ФормаСписка", ПараметрыЭМД, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СформированныеФайлыЭМДНажатие(Элемент)
	
	ОткрытьФорму("ОбщаяФорма.СформированныеФайлыЭМД", Новый Структура("МедицинскийДокумент", ЭтотОбъект["МедицинскийДокумент"]), ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеПриАктивизацииСтроки(Элемент)
	
	ОбновитьУОПоСтрокеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеВыбранПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДанныеНаФорме.ТекущиеДанные;
	Если ТекДанные.ТипПодписания = 3 Тогда
		ОбновитьДоступностьУстановкиПодписиДляСтрокРЭМД(ТекДанные.ПолучитьРодителя());
	ИначеЕсли ТекДанные.ТипПодписания = 2 Тогда
		ОбновитьДоступностьУстановкиПодписиПоРолямЭМД(ДанныеНаФорме.ПолучитьЭлементы());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеДолжностьМинздраваАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	ОбновитьДоступныеДолжностиМЗ();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеДолжностьМинздраваНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбновитьДоступныеДолжностиМЗ();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеДолжностьМинздраваПриИзменении(Элемент)
	
	Элементы.ДанныеНаФорме.ТекущиеДанные.Выбран = ЗначениеЗаполнено(Элементы.ДанныеНаФорме.ТекущиеДанные.ДолжностьМинздрава);
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеПредставлениеСубРолиПриИзменении(Элемент)
	
	ТекДанные = Элементы.ДанныеНаФорме.ТекущиеДанные;
	Если ТекДанные <> Неопределено
		И Не ЗначениеЗаполнено(ТекДанные.ПредставлениеСубРоли)
	Тогда
		СтрокиСубРоли = СубРолиЭМД.НайтиСтроки(Новый Структура("РольСотрудника, УИД_ЭМД, ИдентификаторРоли", ТекДанные.РольСотрудника, ТекДанные.УИД_ЭМД, ТекДанные.ИдентификаторРолиТекущегоПодписания));
		Если СтрокиСубРоли.Количество() > 0 Тогда
			ТекДанные.ПредставлениеСубРоли = СтрокиСубРоли[0].ПредставлениеСубРоли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеПредставлениеСубРолиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Элемент.СписокВыбора.Очистить();
	ТекДанные = Элементы.ДанныеНаФорме.ТекущиеДанные;
	Элемент.ПодсказкаВвода = ТекДанные.ПредставлениеСубРоли;
	Для Каждого РольШаблона Из СубРолиЭМД.НайтиСтроки(Новый Структура("РольСотрудника, УИД_ЭМД", ТекДанные.РольСотрудника, ТекДанные.УИД_ЭМД)) Цикл
		Элемент.СписокВыбора.Добавить(РольШаблона.ИдентификаторРоли, РольШаблона.ПредставлениеСубРоли);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеПредставлениеСубРолиОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	ТекДанные = Элементы.ДанныеНаФорме.ТекущиеДанные;
	ТекДанные.ИдентификаторРолиТекущегоПодписания = ВыбранноеЗначение;
	ЭлементСписка = Элемент.СписокВыбора.НайтиПоЗначению(ВыбранноеЗначение);
	ТекДанные.ПредставлениеСубРоли = ЭлементСписка.Представление;
	ЭлементСписка.Значение = ТекДанные.ПредставлениеСубРоли;
	ВыбранноеЗначение = ТекДанные.ПредставлениеСубРоли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеНаФормеСпециальностьМинздраваПриИзменении(Элемент)
	
	Элементы.ДанныеНаФорме.ТекущиеДанные.Выбран = ЗначениеЗаполнено(Элементы.ДанныеНаФорме.ТекущиеДанные.СпециальностьМинздрава);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцедурыОповещений

&НаКлиенте
Процедура ПоказатьПредупреждениеЗавершение(Параметры) Экспорт
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборФайлаЗавершение(ВыбранныйФайл, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйФайл = Неопределено Или ВыбранныйФайл.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДД = СформироватьФайлыДляСохранения(ЭтотОбъект["МедицинскийДокумент"], ЭлектроннаяПодписьКлиент.ПерсональныеНастройки().РасширениеДляФайловПодписи);
	Если ДД <> Неопределено Тогда
		ДД.Записать(ВыбранныйФайл[0]);
		Сообщить(СтрШаблон("%1. %2", НСтр("ru='Файл сохранён'"), ВыбранныйФайл[0]));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗавершенияПроверкиПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Оповестить("ОбновитьСписокПодписей", ЭтотОбъект["МедицинскийДокумент"]);
	ЗаполнитьСписокПодписей();
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодписиПродолжение(Результат, Параметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодписаниеИзФормыВладельца
		И ТипЗнч(ЭтаФорма.ВладелецФормы) = Тип("ФормаКлиентскогоПриложения")
	Тогда
		ИдентификаторФормыДляБлокировки = ЭтаФорма.ВладелецФормы.УникальныйИдентификатор;
	Иначе
		ИдентификаторФормыДляБлокировки = УникальныйИдентификатор;
	КонецЕсли;
	
	УдалитьПодписиИОбновитьСписок(Ложь, ИдентификаторФормыДляБлокировки);
	
	ЗаполнитьДанныеНаФорме();
	ОбновитьУОПоСтрокеДанных();
	УстановитьДоступностьКомандСпискаПодписей();
	
	Оповестить("ИзменилисьПодписи", ЭтотОбъект["МедицинскийДокумент"]);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранениеЭМДПродолжение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		СохранитьЭМД();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновлениеСтрокРЭМД(РезультатСохранения)
	
	Для Каждого СтрокаДанных Из ДанныеРЭМД Цикл
		// Для Приема
		Если ИмяТипаДокумента = "Документ.Прием"
			Или ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
			Или ИмяТипаДокумента = "Документ.Рецепт"
		Тогда
			СтрокаЭМД = ЭтотОбъект["МедицинскийДокумент"].ЭМД.Найти(СтрокаДанных.УИД_Шаблона, "УИД_Шаблона");
			Если СтрокаЭМД <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаДанных, СтрокаЭМД);
			КонецЕсли;
			//ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" // Версия КОРП
		//Тогда
		//	ЗаполнитьЗначенияСвойств(СтрокаДанных, ЭтотОбъект["МедицинскийДокумент"], "ПутьКФайлуВАрхиве, СообщениеРЭМД");
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого РезультатПоУИД Из РезультатСохранения.УИДы Цикл
		
		СтрокаНайдена = Ложь;
		СтрокиДанныхРЭМД = ДанныеРЭМД.НайтиСтроки(Новый Структура("УИД, РольСотрудника", РезультатПоУИД.УИД_ЭМД, РезультатПоУИД.РольСотрудника));
		
		Для Каждого СтрокаДанных Из СтрокиДанныхРЭМД Цикл
			Если Не ЗначениеЗаполнено(СтрокаДанных.УИД_ЭЦП)
				Или СтрокаДанных.УИД_ЭЦП = РезультатПоУИД.УИД_ЭЦП
			Тогда
				СтрокаДанных.ПодписьУстановлена = Истина;
				СтрокаДанных.УИД_ЭЦП			= РезультатПоУИД.УИД_ЭЦП;
				СтрокаДанных.ДолжностьМинздрава	= РезультатПоУИД.ДолжностьМинздрава;
				СтрокаНайдена = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не СтрокаНайдена
			И СтрокиДанныхРЭМД.Количество() > 0
		Тогда
			НоваяСтрокаДанных = ДанныеРЭМД.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаДанных, СтрокиДанныхРЭМД[0]);
			НоваяСтрокаДанных.ПодписьУстановлена = Истина;
			НоваяСтрокаДанных.УИД_ЭЦП			 = РезультатПоУИД.УИД_ЭЦП;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновлениеСтрокНеРЭМД(РезультатСохранения)
	
	Для Каждого РезультатПоУИД Из РезультатСохранения.УИДы Цикл
		
		ИспользованныеРоли = Новый Массив;
		
		Для Каждого СтрокаДанных Из Данные.НайтиСтроки(Новый Структура("РольСотрудника, УИД_ЭМД", РезультатПоУИД.Роль, РезультатПоУИД.УИД_ЭМД)) Цикл
			Если СтрокаДанных.ДоступноРолей > 0
				И ИспользованныеРоли.Найти(РезультатПоУИД.Роль) = Неопределено
			Тогда
				СтрокаДанных.ПодписьУстановлена	= Истина;
				//СтрокаДанных.УИД_ЭЦП			= РезультатПоУИД.УИД_ЭЦП;
				ИспользованныеРоли.Добавить(РезультатПоУИД.Роль);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаполнитьДанныеНаФорме()
	
	ДанныеНаФорме.ПолучитьЭлементы().Очистить();
	
	ЗаполнитьДаннымиРЭМД();
	ЗаполнитьДаннымиНеРЭМД();
	ЗаполнитьДаннымиДокумента();
	
	РазвернутьСтрокиДерева(ДанныеНаФорме.ПолучитьЭлементы());
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиДерева(СтрокиДерева)
	
	Для Каждого СтрокаДанных Из СтрокиДерева Цикл
		Элементы.ДанныеНаФорме.Развернуть(СтрокаДанных.ПолучитьИдентификатор());
		РазвернутьСтрокиДерева(СтрокаДанных.ПолучитьЭлементы());
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиРЭМД()
	
	Если Не ПодписаниеДляРЭМД Или ДанныеРЭМД.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодписаниеДляРЭМД + ПодписаниеДокумента + ПодписаниеНеДляРЭМД = 1 Тогда
		СтрокаТипаДанных = ДанныеНаФорме;
	Иначе
		СтрокаТипаДанных = ДанныеНаФорме.ПолучитьЭлементы().Добавить();
		СтрокаТипаДанных.ПредставлениеТипаПодписания = НСтр("ru='РЭМД'");
	КонецЕсли;
	
	УИДыШаблонов = Новый Массив;
	Для Каждого СтрокаДанных Из ДанныеРЭМД Цикл
		Если УИДыШаблонов.Найти(СтрокаДанных.УИД_Шаблона) = Неопределено Тогда
			УИДыШаблонов.Добавить(СтрокаДанных.УИД_Шаблона);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УИДШаблона Из УИДыШаблонов Цикл
		
		// Перебором, т.к. важен порядок
		СтрокиДанныхРЭМД = Новый Массив;
		Для Каждого СтрокаДанныхРЭМД Из ДанныеРЭМД Цикл
			Если СтрокаДанныхРЭМД.УИД_Шаблона = УИДШаблона Тогда
				СтрокиДанныхРЭМД.Добавить(СтрокаДанныхРЭМД);
			КонецЕсли;
		КонецЦикла;
		
		СтрокаВидаШаблона = СтрокаТипаДанных.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаВидаШаблона, СтрокиДанныхРЭМД[0], "ВидДокументаЭМД, СообщениеРЭМД, УИД");
		
		ДобавленныеРоли = Новый Соответствие;
		ЕстьВыбраннаяСтрока = Ложь;
		Для Каждого СтрокаДанных Из СтрокиДанныхРЭМД Цикл
			ДобавленнаяСтрока = ДобавленныеРоли.Получить(СтрокаДанных.РольСотрудника);
			Если ДобавленнаяСтрока <> Неопределено Тогда
				Если ЗначениеЗаполнено(СтрокаДанных.УИД_ЭЦП) Тогда
					ДобавленнаяСтрока.КолПодписей = ДобавленнаяСтрока.КолПодписей+1;
				КонецЕсли;
				Продолжить;
			КонецЕсли;
			НоваяСтрока = СтрокаВидаШаблона.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных, , "УИД_ЭЦП");
			
			СтруктураЭП = Новый Структура;
			СтруктураЭП.Вставить("СообщениеРЭМД", СтрокаДанных.СообщениеРЭМД);
			СтруктураЭП.Вставить("РольСотрудника", СтрокаДанных.РольСотрудника);
			СтруктураЭП.Вставить("УстановившийПодпись", ТекущийПользователь);
			
			НоваяСтрока.ПодписьУстановленаТекущимПользователем = ЭлектронныеПодписи.НайтиСтроки(СтруктураЭП).Количество() > 0;
			НоваяСтрока.ТипПодписания = 3;
			
			Если ЗначениеЗаполнено(СтрокаДанных.УИД_ЭЦП) Тогда
				НоваяСтрока.КолПодписей = НоваяСтрока.КолПодписей + 1;
			КонецЕсли;
			
			Если Не (ЕстьВыбраннаяСтрока
					Или НоваяСтрока.ПодписьУстановлена
					Или НоваяСтрока.ДоступноРолей = 0
					Или (ЭМДСформированы
						И Не ЗначениеЗаполнено(НоваяСтрока.ПутьКФайлуВАрхиве))
					Или НоваяСтрока.КолПодписей >= НоваяСтрока.МаксКолПодписей)
			Тогда
				НоваяСтрока.Выбран = Истина;
				ЕстьВыбраннаяСтрока = Истина;
			КонецЕсли;
			
			ДобавленныеРоли.Вставить(СтрокаДанных.РольСотрудника, НоваяСтрока);
		КонецЦикла;
		
		ОбновитьДоступностьУстановкиПодписиДляСтрокРЭМД(СтрокаВидаШаблона);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиНеРЭМД()
	
	ЕстьДелениеНаСубРоли = Ложь;
	
	Если Не ПодписаниеНеДляРЭМД Или Данные.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодписаниеДляРЭМД + ПодписаниеДокумента + ПодписаниеНеДляРЭМД = 1 Тогда
		СтрокаТипаДанных = ДанныеНаФорме;
	Иначе
		СтрокаТипаДанных = ДанныеНаФорме.ПолучитьЭлементы().Добавить();
		СтрокаТипаДанных.ПредставлениеТипаПодписания = ПолучитьПредставлениеТипаПодписанияНеРЭМД();
	КонецЕсли;
	
	ЭМДРолей = Новый СписокЗначений;
	Для Каждого СтрокаДанных Из Данные Цикл
		Если ЭМДРолей.НайтиПоЗначению(СтрокаДанных.УИД_ЭМД) = Неопределено Тогда
			ЭМДРолей.Добавить(СтрокаДанных.УИД_ЭМД, СтрокаДанных.ПредставлениеЭМД);
		КонецЕсли;
	КонецЦикла;
	ЭМДРолей.СортироватьПоЗначению();
	
	Для Каждого РольЭМД Из ЭМДРолей Цикл
		
		// Перебором, т.к. важен порядок
		СтрокиРолей = Новый Массив;
		Для Каждого СтрокаДанных Из Данные Цикл
			Если СтрокаДанных.УИД_ЭМД = РольЭМД.Значение Тогда
				СтрокиРолей.Добавить(СтрокаДанных);
			КонецЕсли;
		КонецЦикла;
		
		ИспользованныеРоли = Новый Массив;
		
		Если ЗначениеЗаполнено(РольЭМД.Значение) Тогда
			СтрокаЭМД = СтрокаТипаДанных.ПолучитьЭлементы().Добавить();
			СтрокаЭМД.ПредставлениеТипаПодписания = РольЭМД.Представление;
		Иначе
			СтрокаЭМД = СтрокаТипаДанных;
		КонецЕсли;
		
		Для Каждого СтрокаРоли Из СтрокиРолей Цикл
			НоваяСтрока = СтрокаЭМД.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРоли);
			НоваяСтрока.ТипПодписания = 2;
			
			Если НоваяСтрока.ПодписьУстановлена Тогда
				ИспользованныеРоли.Добавить(НоваяСтрока.РольСотрудника);
			ИначеЕсли НоваяСтрока.ДоступноРолей > 0
				И ИспользованныеРоли.Найти(НоваяСтрока.РольСотрудника) = Неопределено
			Тогда
				НоваяСтрока.ДоступнаУстановкаПодписи = Истина;
				НоваяСтрока.Выбран = Истина;
				ИспользованныеРоли.Добавить(НоваяСтрока.РольСотрудника);
			КонецЕсли;
			
			СтруктураПодписи = Новый Структура;
			СтруктураПодписи.Вставить("РольСотрудника", НоваяСтрока.РольСотрудника);
			СтруктураПодписи.Вставить("УИД_ЭМД", НоваяСтрока.УИД_ЭМД);
			СтруктураПодписи.Вставить("ПодписанФайлЭМД", Ложь);
			СтруктураПодписи.Вставить("ПодписьВерна", Истина);
			СтруктураПодписи.Вставить("СертификатДействителен", Истина);
			
			НоваяСтрока.КолПодписей = ЭлектронныеПодписи.НайтиСтроки(СтруктураПодписи).Количество();
			
			Если Не НоваяСтрока.ПодписьУстановлена Тогда
				СубРоли = СубРолиЭМД.НайтиСтроки(Новый Структура("РольСотрудника, УИД_ЭМД", НоваяСтрока.РольСотрудника, НоваяСтрока.УИД_ЭМД));
				Если СубРоли.Количество() > 0 Тогда
					ПриоритетнаяСубРоль = СубРоли[0];
					
					Для Каждого СубРоль Из СубРоли Цикл
						Если СубРоль.Обязательная Тогда
							ПриоритетнаяСубРоль = СубРоль;
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					НоваяСтрока.ПредставлениеСубРоли = ПриоритетнаяСубРоль.ПредставлениеСубРоли;
					НоваяСтрока.ИдентификаторРолиТекущегоПодписания = ПриоритетнаяСубРоль.ИдентификаторРоли;
					ЕстьДелениеНаСубРоли = ЕстьДелениеНаСубРоли Или СубРоли.Количество() > 1;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДаннымиДокумента()
	
	Если Не ПодписаниеДокумента Тогда
		Возврат;
	КонецЕсли;
	
	Если ПодписаниеДляРЭМД + ПодписаниеДокумента + ПодписаниеНеДляРЭМД = 1 Тогда
		СтрокаТипаДанных = ДанныеНаФорме;
	Иначе
		СтрокаТипаДанных = ДанныеНаФорме.ПолучитьЭлементы().Добавить();
		СтрокаТипаДанных.ПредставлениеТипаПодписания = НСтр("ru='Подписи документа'");
	КонецЕсли;
	
	НоваяСтрока = СтрокаТипаДанных.ПолучитьЭлементы().Добавить();
	НоваяСтрока.ТипПодписания = 1;
	
	ЭПТекущегоПользователя = ЭлектронныеПодписи.НайтиСтроки(Новый Структура("УстановившийПодпись, ПодписьДокумента", ТекущийПользователь, Истина));
	
	НоваяСтрока.ПодписьУстановлена = ЭПТекущегоПользователя.Количество() > 0;
	НоваяСтрока.Выбран = ЭПТекущегоПользователя.Количество() = 0;
	
	Если ЭПТекущегоПользователя.Количество() > 0 Тогда
		НоваяСтрока.УИД_ЭЦП = ЭПТекущегоПользователя[0].УникальныйИдентификатор;
	КонецЕсли;
	
	НоваяСтрока.Выбран = Не НоваяСтрока.ПодписьУстановлена;
	
	НоваяСтрока.ПодписываемыеДанные = СтрШаблон("%1 ""%2""", НСтр("ru='Подпись документа'"), Строка(ЭтотОбъект["МедицинскийДокумент"]));
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПредставлениеТипаПодписанияНеРЭМД()
	
	Если ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
		И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтотОбъект["МедицинскийДокумент"], "ВидПрохожденияМО") <> ПредопределенноеЗначение("Перечисление.ВидыМедосмотров.СправкаПрочий")
	Тогда
		Возврат НСтр("ru='Файлы представления заключения медосмотра'");
	КонецЕсли;
	
	Возврат НСтр("ru='Файлы ЭМД'");
	
КонецФункции

&НаСервере
Процедура УстановитьУОДляВыбраннойСтроки()
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ЭлектронныеПодписи.Имя);
	
	ГруппаОтбораИли = Элемент.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИли.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ГруппаОтбораИ_УИД_ЭЦП = ГруппаОтбораИли.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ_УИД_ЭЦП.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента_УИД_ЭЦП = ГруппаОтбораИ_УИД_ЭЦП.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_УИД_ЭЦП.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("УИД_ЭЦПВыбраннойСтроки");
	ОтборЭлемента_УИД_ЭЦП.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента_УИД_ЭЦП = ГруппаОтбораИ_УИД_ЭЦП.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_УИД_ЭЦП.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.УникальныйИдентификатор");
	ОтборЭлемента_УИД_ЭЦП.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_УИД_ЭЦП.ПравоеЗначение = Новый ПолеКомпоновкиДанных("УИД_ЭЦПВыбраннойСтроки");
	
	ГруппаОтбораИ_СообщениеРЭМД = ГруппаОтбораИли.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ_СообщениеРЭМД.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента_СообщениеРЭМД = ГруппаОтбораИ_СообщениеРЭМД.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеРЭМД.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РольСотрудникаВыбраннойСтроки");
	ОтборЭлемента_СообщениеРЭМД.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	
	ОтборЭлемента_СообщениеРЭМД = ГруппаОтбораИ_СообщениеРЭМД.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеРЭМД.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СообщениеРЭМДВыбраннойСтроки");
	ОтборЭлемента_СообщениеРЭМД.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента_СообщениеРЭМД = ГруппаОтбораИ_СообщениеРЭМД.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеРЭМД.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.СообщениеРЭМД");
	ОтборЭлемента_СообщениеРЭМД.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_СообщениеРЭМД.ПравоеЗначение = Новый ПолеКомпоновкиДанных("СообщениеРЭМДВыбраннойСтроки");
	
	ГруппаОтбораИ_СообщениеИРоль = ГруппаОтбораИли.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ_СообщениеИРоль.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента_СообщениеИРоль = ГруппаОтбораИ_СообщениеИРоль.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеИРоль.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РольСотрудникаВыбраннойСтроки");
	ОтборЭлемента_СообщениеИРоль.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента_СообщениеИРоль = ГруппаОтбораИ_СообщениеИРоль.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеИРоль.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СообщениеРЭМДВыбраннойСтроки");
	ОтборЭлемента_СообщениеИРоль.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента_СообщениеИРоль = ГруппаОтбораИ_СообщениеИРоль.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеИРоль.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.СообщениеРЭМД");
	ОтборЭлемента_СообщениеИРоль.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_СообщениеИРоль.ПравоеЗначение = Новый ПолеКомпоновкиДанных("СообщениеРЭМДВыбраннойСтроки");
	
	ОтборЭлемента_СообщениеИРоль = ГруппаОтбораИ_СообщениеИРоль.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_СообщениеИРоль.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.РольСотрудника");
	ОтборЭлемента_СообщениеИРоль.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_СообщениеИРоль.ПравоеЗначение = Новый ПолеКомпоновкиДанных("РольСотрудникаВыбраннойСтроки");
	
	ГруппаОтбораИ_ПодписьДокумента = ГруппаОтбораИли.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ_ПодписьДокумента.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента_ПодписьДокумента = ГруппаОтбораИ_ПодписьДокумента.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьДокумента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВыбранТипПодписанияДокумента");
	ОтборЭлемента_ПодписьДокумента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_ПодписьДокумента.ПравоеЗначение = Истина;
	
	ОтборЭлемента_ПодписьДокумента = ГруппаОтбораИ_ПодписьДокумента.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьДокумента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.ПодписьДокумента");
	ОтборЭлемента_ПодписьДокумента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_ПодписьДокумента.ПравоеЗначение = Истина;
	
	ГруппаОтбораИ_ПодписьФайла = ГруппаОтбораИли.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбораИ_ПодписьФайла.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ;
	
	ОтборЭлемента_ПодписьФайла = ГруппаОтбораИ_ПодписьФайла.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьФайла.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВыбранТипПодписанияФайла");
	ОтборЭлемента_ПодписьФайла.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_ПодписьФайла.ПравоеЗначение = Истина;
	
	ОтборЭлемента_ПодписьФайла = ГруппаОтбораИ_ПодписьФайла.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьФайла.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РольСотрудникаВыбраннойСтроки");
	ОтборЭлемента_ПодписьФайла.ВидСравнения = ВидСравненияКомпоновкиДанных.Заполнено;
	
	ОтборЭлемента_ПодписьФайла = ГруппаОтбораИ_ПодписьФайла.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьФайла.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.РольСотрудника");
	ОтборЭлемента_ПодписьФайла.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_ПодписьФайла.ПравоеЗначение = Новый ПолеКомпоновкиДанных("РольСотрудникаВыбраннойСтроки");
	
	ОтборЭлемента_ПодписьФайла = ГруппаОтбораИ_ПодписьФайла.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента_ПодписьФайла.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ЭлектронныеПодписи.УИД_ЭМД");
	ОтборЭлемента_ПодписьФайла.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента_ПодписьФайла.ПравоеЗначение = Новый ПолеКомпоновкиДанных("УИД_ЭМДВыбраннойСтроки");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(,,Истина));
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьСтрокиДанных()
	
	ОтсутствующиеФайлы = Новый Массив;
	МассивОбъектов = Новый Массив;
	СтруктурыДанных = Новый Массив;
	СтруктураОповещенияПередВыполнением = Неопределено;
	
	СпециальностиМЗ = Новый Соответствие;
	
	// ТипПодписания:
	//	1 - Подписание документа
	//	2 - Подписание всего остального, не РЭМД (заключение МО)
	//	3 - Подписание ЭМД для РЭМД
	
	ДополнитьДаннымиДокумента(МассивОбъектов);
	ДополнитьДаннымиФайлов(МассивОбъектов, СтруктураОповещенияПередВыполнением);
	ДополнитьДаннымиРЭМД(МассивОбъектов, СтруктурыДанных, СтруктураОповещенияПередВыполнением, ОтсутствующиеФайлы);
	
	Если МассивОбъектов.Количество() > 0 Тогда
		ПодписатьМассивОбъектов(МассивОбъектов, СтруктурыДанных, СтруктураОповещенияПередВыполнением);
	КонецЕсли;
	
	Если ОтсутствующиеФайлы.Количество() > 0 Тогда
		ШаблонПредупреждения = НСтр("ru='Некоторые файлы не найдены и не будут подписаны:%1%2'");
		ПоказатьПредупреждение(, СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредупреждения, Символы.ПС, СтрСоединить(ОтсутствующиеФайлы, Символы.ПС)));
	ИначеЕсли Не ЕстьНеустановленнаяПодпись(ДанныеНаФорме) Тогда
		ПоказатьПредупреждение(, НСтр("ru='Все возможные подписи текущего пользователя по текущему документу установлены.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьДаннымиДокумента(МассивОбъектов)
	
	СтрокиПоТипу = Новый Массив;
	ДополнитьСтрокамиПоТипу(1, ДанныеНаФорме, СтрокиПоТипу);
	
	Для Каждого СтрокаПоТипу Из СтрокиПоТипу Цикл
		
		Если Не СтрокаПоТипу.Выбран Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураОбъекта = Новый Структура;
		ТекущиеПараметрыВыполнения = Новый Структура;
		ТекущиеПараметрыВыполнения.Вставить("ИдентификаторФормы", ИдентификаторФормы);
		ТекущиеПараметрыВыполнения.Вставить("ПодписываемыеДанные", ЭтотОбъект["МедицинскийДокумент"]);
		
		СтруктураОбъекта.Вставить("ПодписываемыеДанные", Новый ОписаниеОповещения("ПриЗапросеДвоичныхДанныхОбъекта", ОбщегоНазначенияКлиент.ОбщийМодуль("бит_СертификатыЭЦПКлиент"), ТекущиеПараметрыВыполнения));
		СтруктураОбъекта.Вставить("УИД_Шаблона",		 Неопределено);
		СтруктураОбъекта.Вставить("РольПодписи",		 Неопределено);
		СтруктураОбъекта.Вставить("ТипПодписания",		 1);
		СтруктураОбъекта.Вставить("ПодписанФайлЭМД",	 Ложь);
		СтруктураОбъекта.Вставить("УИД_ЭМД",			 ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
		СтруктураОбъекта.Вставить("ИдентификаторРоли",	 Неопределено);
		
		МассивОбъектов.Добавить(СтруктураОбъекта);
		
		Прервать;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьДаннымиРЭМД(МассивОбъектов, СтруктурыДанных, СтруктураОповещенияПередВыполнением, ОтсутствующиеФайлы)
	
	СтрокиПоТипу = Новый Массив;
	ДополнитьСтрокамиПоТипу(3, ДанныеНаФорме, СтрокиПоТипу);
	
	СтрокиКПодписанию = Новый Массив;
	Для Каждого СтрокаПоТипу Из СтрокиПоТипу Цикл
		Если (Не ЭМДСформированы Или ЗначениеЗаполнено(СтрокаПоТипу.ПутьКФайлуВАрхиве))
			И ЗначениеЗаполнено(СтрокаПоТипу.РольСотрудника)
			И СтрокаПоТипу.ДоступноРолей > 0
			И Не СтрокаПоТипу.ПодписьУстановленаТекущимПользователем
		Тогда
			ПолныйПуть = ИнтеграцияЕГИСЗ_РЭМД.ПолучитьПолныйПутьПоОтносительномуПутиВХранилищеЭМД(СтрокаПоТипу.ПутьКФайлуВАрхиве);
			Если СтрокаПоТипу.Выбран И Не ИнтеграцияЕГИСЗВызовСервера.ФайлСуществует(ПолныйПуть) И ЭМДСформированы Тогда
				ОтсутствующиеФайлы.Добавить(СтрШаблон("%1 (%2)", ПолныйПуть, Строка(СтрокаПоТипу.ВидДокументаЭМД)));
				Продолжить;
			КонецЕсли;
			
			Если СтрокаПоТипу.Выбран Тогда
				// Подписать
				СтрокиКПодписанию.Добавить(СтрокаПоТипу);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если СтрокиКПодписанию.Количество() > 0 Тогда
		
		ДолжностиМЗ = Новый Соответствие;
		
		УИДы_Шаблонов = Новый Массив;
		Для Каждого СтрокаКПодписанию Из СтрокиКПодписанию Цикл
			
			ПолныйПуть = ИнтеграцияЕГИСЗ_РЭМД.ПолучитьПолныйПутьПоОтносительномуПутиВХранилищеЭМД(СтрокаКПодписанию.ПутьКФайлуВАрхиве);
			Если ЭМДСформированы Тогда
				ДД = ИнтеграцияЕГИСЗВызовСервера.ПолучитьДДФайла(ПолныйПуть);
			Иначе
				ДД = Неопределено;
			КонецЕсли;
			
			СтруктураДанных = Новый Структура;
			СтруктураДанных.Вставить("ПутьКФайлу",				ПолныйПуть);
			СтруктураДанных.Вставить("Роль",					СтрокаКПодписанию.РольСотрудника);
			СтруктураДанных.Вставить("УИД",						СтрокаКПодписанию.УИД);
			СтруктураДанных.Вставить("УИД_Шаблона",				СтрокаКПодписанию.УИД_Шаблона);
			СтруктураДанных.Вставить("ДолжностьМЗ",				СтрокаКПодписанию.ДолжностьМинздрава);
			СтруктураДанных.Вставить("СпециальностьМинздрава",	СтрокаКПодписанию.СпециальностьМинздрава);
			
			СтруктурыДанных.Добавить(СтруктураДанных);
			УИДы_Шаблонов.Добавить(СтрокаКПодписанию.УИД_Шаблона);
			
			СтруктураОбъекта = Новый Структура;
			СтруктураОбъекта.Вставить("ПодписываемыеДанные", ДД);
			СтруктураОбъекта.Вставить("УИД_Шаблона",		 СтрокаКПодписанию.УИД_Шаблона);
			СтруктураОбъекта.Вставить("РольПодписи",		 Неопределено);
			СтруктураОбъекта.Вставить("ТипПодписания",		 3);
			СтруктураОбъекта.Вставить("ПодписанФайлЭМД",	 Истина);
			СтруктураОбъекта.Вставить("УИД_ЭМД",			 ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор());
			СтруктураОбъекта.Вставить("ИдентификаторРоли",	 Неопределено);
			
			МассивОбъектов.Добавить(СтруктураОбъекта);
			
			ДолжностиМЗ.Вставить(СтрокаКПодписанию.УИД_Шаблона, СтрокаКПодписанию.ДолжностьМинздрава);
		КонецЦикла;
		
		Если Не ЭМДСформированы Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("УИДы_Шаблонов",		УИДы_Шаблонов);
			ДополнительныеПараметры.Вставить("МедицинскийДокумент",	ЭтотОбъект["МедицинскийДокумент"]);
			ДополнительныеПараметры.Вставить("ДолжностиМЗ",			ДолжностиМЗ);
			
			ЗаполнитьСтруктуруОповещенияПередВыполнением(СтруктураОповещенияПередВыполнением, ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтруктуруОповещенияПередВыполнением(СтруктураОповещенияПередВыполнением, ДополнительныеПараметры)
	
	Если ЗначениеЗаполнено(СтруктураОповещенияПередВыполнением) Тогда
		Для Каждого КлючЗначение Из ДополнительныеПараметры Цикл
			СтруктураОповещенияПередВыполнением.ДополнительныеПараметры.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
	Иначе
		СтруктураОповещенияПередВыполнением = Новый Структура;
		СтруктураОповещенияПередВыполнением.Вставить("ИмяПроцедуры",			"СформироватьФайлыЭМДПередПодписанием");
		СтруктураОповещенияПередВыполнением.Вставить("Модуль",					ОбщегоНазначенияКлиент.ОбщийМодуль("бит_РаботаСФайламиКлиент"));
		СтруктураОповещенияПередВыполнением.Вставить("ДополнительныеПараметры",	ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьДаннымиФайлов(МассивОбъектов, СтруктураОповещенияПередВыполнением)
	
	СтрокиПоТипу = Новый Массив;
	ДополнитьСтрокамиПоТипу(2, ДанныеНаФорме, СтрокиПоТипу);
	
	ВыбранныеСтроки = Новый Массив;
	УИДыЭМД = Новый Массив;
	
	Для Каждого СтрокаПоТипу Из СтрокиПоТипу Цикл
		Если ЗначениеЗаполнено(СтрокаПоТипу.РольСотрудника)
			И Не СтрокаПоТипу.ПодписьУстановлена
			И СтрокаПоТипу.Выбран
		Тогда
			ВыбранныеСтроки.Добавить(СтрокаПоТипу);
			
			Если УИДыЭМД.Найти(СтрокаПоТипу.УИД_ЭМД) = Неопределено Тогда
				УИДыЭМД.Добавить(СтрокаПоТипу.УИД_ЭМД);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ВыбранныеСтроки.Количество() > 0 Тогда
		ДДФайловЭМД = ПолучитьДДФайлов(ЭтотОбъект["МедицинскийДокумент"], УИДыЭМД);
		
		Если ДДФайловЭМД.Количество() = 0 Тогда
			ДополнительныеПараметры = Новый Структура("МедицинскийДокумент", ЭтотОбъект["МедицинскийДокумент"]);
			ЗаполнитьСтруктуруОповещенияПередВыполнением(СтруктураОповещенияПередВыполнением, ДополнительныеПараметры)
		КонецЕсли;
		
		Для Каждого ВыбраннаяСтрока Из ВыбранныеСтроки Цикл
			СтруктураОбъекта = Новый Структура;
			
			ДанныеФайлаЭМД = ДДФайловЭМД.Получить(ВыбраннаяСтрока.УИД_ЭМД);
			Если ДанныеФайлаЭМД = Неопределено Тогда
				СтруктураОбъекта.Вставить("ПодписываемыеДанные", Неопределено);
			Иначе
				СтруктураОбъекта.Вставить("ПодписываемыеДанные", ДанныеФайлаЭМД.ДвоичныеДанные);
			КонецЕсли;
			
			СтруктураОбъекта.Вставить("УИД_ЭМД",			ВыбраннаяСтрока.УИД_ЭМД);
			СтруктураОбъекта.Вставить("УИД_Шаблона",		Неопределено);
			СтруктураОбъекта.Вставить("РольПодписи",		ВыбраннаяСтрока.РольСотрудника);
			СтруктураОбъекта.Вставить("ТипПодписания",		2);
			СтруктураОбъекта.Вставить("ПодписанФайлЭМД",	Ложь);
			СтруктураОбъекта.Вставить("ИдентификаторРоли",	ВыбраннаяСтрока.ИдентификаторРолиТекущегоПодписания);
			
			МассивОбъектов.Добавить(СтруктураОбъекта);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнитьСтрокамиПоТипу(ТипПодписания, ЭлементДанных, СтрокиПоТипу)
	
	Для Каждого ДочернийЭлемент Из ЭлементДанных.ПолучитьЭлементы() Цикл
		Если ДочернийЭлемент.ТипПодписания = ТипПодписания Тогда
			СтрокиПоТипу.Добавить(ДочернийЭлемент);
		КонецЕсли;
		ДополнитьСтрокамиПоТипу(ТипПодписания, ДочернийЭлемент, СтрокиПоТипу);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ЕстьНеустановленнаяПодпись(ЭлементыДанных)
	
	Для Каждого ЭлементДанных Из ЭлементыДанных.ПолучитьЭлементы() Цикл
		Если (ЭлементДанных.ТипПодписания > 0 И ЭлементДанных.Выбран)
			Или ЕстьНеустановленнаяПодпись(ЭлементДанных)
		Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура НастроитьДоступностьВидимостьЭлементов()
	
	Элементы.ЭлектронныеПодписиДанныеСообщений.Видимость = ПодписаниеДляРЭМД;
	Элементы.СформированныеФайлыЭМД.Видимость			 = ЭМДСформированы;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьМассивОбъектов(МассивОбъектов, СтруктурыДанных, СтруктураОповещенияПередВыполнением)
	
	ПодписаниеПодписьюМО = Ложь;
	
	ПараметрыОбработчика = Новый Структура;
	ПараметрыОбработчика.Вставить("Объект",				ЭтотОбъект["МедицинскийДокумент"]);
	ПараметрыОбработчика.Вставить("СтруктурыДанных",	СтруктурыДанных);
	ПараметрыОбработчика.Вставить("УИДФормыРаботыСЭМД",	УникальныйИдентификатор);
	
	ОбработчикЗавершения = Новый ОписаниеОповещения("ПодписатьФайлыЗавершение", ОбщегоНазначенияКлиент.ОбщийМодуль("ЭЦП_УМЦ_Клиент"), ПараметрыОбработчика);
	
	НаборДанных = Новый Массив;
	МассивДанныхОбъектов = Новый Массив;
	
	ПараметрыВыполнения = Новый Структура;
	ПараметрыВыполнения.Вставить("ОбработчикЗавершения", ОбработчикЗавершения);
	ПараметрыВыполнения.Вставить("ИдентификаторФормы",	 ИдентификаторФормы);
	ПараметрыВыполнения.Вставить("МассивДанныхОбъектов", МассивДанныхОбъектов);
	
	Для Каждого ОбъектМ Из МассивОбъектов Цикл
		
		МассивДанныхОбъектов.Добавить(ОбъектМ);
		
		ТекущиеПараметрыВыполнения = Новый Структура;
		ТекущиеПараметрыВыполнения.Вставить("ИдентификаторФормы",	ИдентификаторФормы);
		ТекущиеПараметрыВыполнения.Вставить("ПодписываемыеДанные",	ОбъектМ.ПодписываемыеДанные);
		
		ЭлементДанных = Новый Структура;
		ЭлементДанных.Вставить("Представление",		ЭтотОбъект["МедицинскийДокумент"]);
		ЭлементДанных.Вставить("Данные",			ОбъектМ.ПодписываемыеДанные);
		ЭлементДанных.Вставить("УИД_Шаблона",		ОбъектМ.УИД_Шаблона);
		ЭлементДанных.Вставить("РольПодписи",		ОбъектМ.РольПодписи);
		ЭлементДанных.Вставить("ТипПодписания",		ОбъектМ.ТипПодписания);
		ЭлементДанных.Вставить("ПодписанФайлЭМД",	ОбъектМ.ПодписанФайлЭМД);
		ЭлементДанных.Вставить("Объект",			Новый ОписаниеОповещения("ПриПолученииПодписи", ОбщегоНазначенияКлиент.ОбщийМодуль("бит_СертификатыЭЦПКлиент"), ТекущиеПараметрыВыполнения));
		ЭлементДанных.Вставить("УИД_ЭМД",			ОбъектМ.УИД_ЭМД);
		ЭлементДанных.Вставить("ИдентификаторРоли",	ОбъектМ.ИдентификаторРоли);
		
		НаборДанных.Добавить(ЭлементДанных);
		
		Если ЭлементДанных.РольПодписи = ПредопределенноеЗначение("Перечисление.РолиПодписей.МедицинскаяОрганизация") Тогда
			ПодписаниеПодписьюМО = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Операция = НСтр("ru = 'Подписание'");
	ЗаголовкиСтруктура = Новый Структура;
	ЗаголовкиСтруктура.Вставить("ЗаголовокДанных");
	ЗаголовокДанных = ЗаголовкиСтруктура.ЗаголовокДанных;
	ЗаголовокДанных = НСтр("ru = 'Объект'");
	ПредставлениеНабора = ЗаголовокДанных;
	
	ОписаниеДанных = Новый Структура;
	ОписаниеДанных.Вставить("ПоказатьКомментарий",	Истина);
	ОписаниеДанных.Вставить("ИдентификаторФормы",	ИдентификаторФормы);
	ОписаниеДанных.Вставить("Операция",				Операция);
	ОписаниеДанных.Вставить("ЗаголовокДанных",		ЗаголовокДанных);
	ОписаниеДанных.Вставить("НаборДанных",			НаборДанных);
	ОписаниеДанных.Вставить("ПредставлениеНабора",	ПредставлениеНабора);
	
	ОбработчикПродолжения = Новый ОписаниеОповещения("ПослеПодписанияОбъектов", ОбщегоНазначенияКлиент.ОбщийМодуль("бит_СертификатыЭЦПКлиент"), ПараметрыВыполнения);
	
	Если ПодписаниеПодписьюМО Тогда
		ОписаниеДанных.Вставить("ОтборСертификатов", СертификатыМОПользователя.ВыгрузитьЗначения());
		ОписаниеДанных.Операция = НСтр("ru = 'Подпись медицинской организации'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураОповещенияПередВыполнением) Тогда
		СтруктураОповещенияПередВыполнением.ДополнительныеПараметры.Вставить("ОбработчикПродолжения", ОбработчикПродолжения);
		ОповещениеПередВыполнением = Новый ОписаниеОповещения(
												СтруктураОповещенияПередВыполнением.ИмяПроцедуры,
												СтруктураОповещенияПередВыполнением.Модуль,
												СтруктураОповещенияПередВыполнением.ДополнительныеПараметры);
			
		ОписаниеДанных.Вставить("ПередВыполнением", ОповещениеПередВыполнением);
	КонецЕсли;
	
	МодульЭлектроннаяПодписьКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ЭлектроннаяПодписьКлиент");
	МодульЭлектроннаяПодписьКлиент.Подписать(ОписаниеДанных,, ОбработчикПродолжения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТипДокумента(ИмяТипа)
	
	Возврат Тип(ИмяТипа);
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицыДанных()
	
	ИспользуетсяРЭМД = ИнтеграцияЕГИСЗСерверПовтИсп.ИспользуетсяИнтеграцияРЭМД();
	
	ПодписаниеДокумента	= Ложь; // Устаревший режим. Используется на форме только для отображения уже подписанных данных по данному режиму. Новые подписи не устанавливать.
	ПодписаниеДляРЭМД	= Ложь;
	ПодписаниеНеДляРЭМД	= Ложь;
	
	Если ИмяТипаДокумента = "Документ.Прием" Тогда
		Если ИспользуетсяРЭМД Тогда
			ЕстьПодписиНеРЭМД = бит_СертификатыЭЦП.ПолучитьЭлектронныеПодписи(ЭтотОбъект["МедицинскийДокумент"],,,, Ложь).Количество() > 0;
			Для Каждого Шаблон Из ЭтотОбъект["МедицинскийДокумент"].ШаблоныПриема Цикл
				Если ЗначениеЗаполнено(Шаблон.ШаблонПриема.ВидДокумента) Тогда
					ПодписаниеДляРЭМД = Истина;
				Иначе
					Если ЕстьПодписиНеРЭМД
						И Не бит_РаботаСФайлами.ФайлЭМДСохранен(ЭтотОбъект["МедицинскийДокумент"])
					Тогда
						ПодписаниеДокумента = Истина;
					Иначе
						ПодписаниеНеДляРЭМД = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Иначе
			Если ЭтотОбъект["МедицинскийДокумент"].ПодписанЭП
				И Не бит_РаботаСФайлами.ФайлЭМДСохранен(ЭтотОбъект["МедицинскийДокумент"])
			Тогда
				ПодписаниеДокумента = Истина;
			Иначе
				ПодписаниеНеДляРЭМД = Истина;
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
		ИспользуетсяРЭМД = ИнтеграцияЕГИСЗСерверПовтИсп.ИспользуетсяИнтеграцияРЭМД();
		Если ЗначениеЗаполнено(ЭтотОбъект["МедицинскийДокумент"].Номенклатура.ВредныйФакторСправки.ШаблонОсмотраСправки) Тогда
			Если ИспользуетсяРЭМД Тогда
				Если ЗначениеЗаполнено(ЭтотОбъект["МедицинскийДокумент"].Номенклатура.ВредныйФакторСправки.ШаблонОсмотраСправки.ВидДокумента) Тогда
					ПодписаниеДляРЭМД = Истина;
				Иначе
					ПодписаниеНеДляРЭМД = Истина;
				КонецЕсли;
			Иначе
				ПодписаниеНеДляРЭМД = Истина;
			КонецЕсли;
		Иначе
			ОбработанныеПриказы = Новый Массив;
			Для Каждого СтрокаФактора Из ЭтотОбъект["МедицинскийДокумент"].ФакторыИУсловияРаботы Цикл
				Если ЭтоПриказСправки(СтрокаФактора.Фактор.Приказ) Тогда
					Если ОбработанныеПриказы.Найти(СтрокаФактора.Фактор) <> Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					Если ИспользуетсяРЭМД Тогда
						Если ЗначениеЗаполнено(СтрокаФактора.Фактор.ШаблонОсмотраСправки.ВидДокумента) Тогда
							ПодписаниеДляРЭМД = Истина;
						ИначеЕсли Не ПустойТабДокШаблонаСправки(СтрокаФактора.Фактор.ШаблонОсмотраСправки) Тогда
							ПодписаниеНеДляРЭМД = Истина;
						КонецЕсли;
					ИначеЕсли Не ПустойТабДокШаблонаСправки(СтрокаФактора.Фактор.ШаблонОсмотраСправки) Тогда
						ПодписаниеНеДляРЭМД = Истина;
					КонецЕсли;
					
					ОбработанныеПриказы.Добавить(СтрокаФактора.Фактор);
				Иначе
					Если ОбработанныеПриказы.Найти(СтрокаФактора.Фактор.Приказ) <> Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					Если ИспользуетсяРЭМД Тогда
						Если ЗначениеЗаполнено(СтрокаФактора.Фактор.Приказ.ВидДокумента)
							Или СтрокаФактора.Фактор.Приказ = Справочники.ПриказыМедосмотров.Приказ29н
						Тогда
							ПодписаниеДляРЭМД = Истина;
						ИначеЕсли ЗначениеЗаполнено(СтрокаФактора.Фактор.Приказ.МакетДляПодписанияЭЦП) Тогда
							ПодписаниеНеДляРЭМД = Истина;
						КонецЕсли;
					ИначеЕсли ЗначениеЗаполнено(СтрокаФактора.Фактор.Приказ.МакетДляПодписанияЭЦП) Тогда
						ПодписаниеНеДляРЭМД = Истина;
					КонецЕсли;
					
					ОбработанныеПриказы.Добавить(СтрокаФактора.Фактор.Приказ);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	ИначеЕсли ИмяТипаДокумента = "Документ.СписокНаПрохождениеМедосмотра" Тогда
		ПодписаниеНеДляРЭМД = Истина;
	ИначеЕсли ИмяТипаДокумента = "Документ.МедицинскийОтчет" Тогда
		Если ЭтотОбъект["МедицинскийДокумент"].ПодписанЭП
			И Не бит_РаботаСФайлами.ФайлЭМДСохранен(ЭтотОбъект["МедицинскийДокумент"])
		Тогда
			ПодписаниеДокумента = Истина;
		Иначе
			ПодписаниеНеДляРЭМД = Истина;
		КонецЕсли;
	ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" Тогда // Версия КОРП
		//ПодписаниеДляРЭМД	= ИспользуетсяРЭМД;
		//ПодписаниеДокумента	= Не ИспользуетсяРЭМД;
		Если ЭтотОбъект["МедицинскийДокумент"].ПодписанЭП
			И Не бит_РаботаСФайлами.ФайлЭМДСохранен(ЭтотОбъект["МедицинскийДокумент"])
		Тогда
			ПодписаниеДокумента = Истина;
		Иначе
			ПодписаниеНеДляРЭМД = Истина;
		КонецЕсли;
	ИначеЕсли ИмяТипаДокумента = "Документ.Форма066" Тогда // Версия КОРП
		ПодписаниеНеДляРЭМД = Истина;
	ИначеЕсли ИмяТипаДокумента = "Справочник.МедицинскиеКарты" Тогда
		ПодписаниеНеДляРЭМД = Истина;
	ИначеЕсли ИмяТипаДокумента = "Документ.Рецепт" Тогда
		ПодписаниеДляРЭМД = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЭтотОбъект["МедицинскийДокумент"]) Тогда
		Если ПодписаниеДляРЭМД Тогда
			ЭМДСформированы = ЕстьУспешноУстановленныеПодписиРЭМД(ЭтотОбъект["МедицинскийДокумент"]);
			ОбновитьДанныеРЭМДПоМедицинскомуДокументу();
		КонецЕсли;
		
		Если ПодписаниеНеДляРЭМД Тогда
			ОбновитьДанныеПоМедицинскомуДокументу();
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСписокПодписей();
	Элементы.ФормаСохранитьЭМД.Видимость = ПодписаниеНеДляРЭМД Или ДокументЯвляетсяЗаключениемМедосмотра И ЕстьЗаполненныеМакетыПриказов(ЭтотОбъект["МедицинскийДокумент"].ФакторыИУсловияРаботы);
	Элементы.СообщенияРЭМД.Видимость = ИспользуетсяРЭМД;
	Элементы.ФормаОткрытьРолиСотрудниковПриПодписанииПоВидамДокументов.Видимость = ИспользуетсяРЭМД И ПодписаниеДляРЭМД;
	УстановитьУОДляВыбраннойСтроки();
	
	ОбновитьДанныеРЭМДПоДолжностиМЗ();
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоПриказСправки(Приказ)
	
	МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
	Возврат МодульМедосмотров.ЭтоПриказСправки(Приказ);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьГруппуПриказовСправок()
	
	МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
	Если МодульМедосмотров = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат МодульМедосмотров.ПолучитьГруппуПриказовСправок()
	КонецЕсли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПустойТабДокШаблонаСправки(ШаблонОсмотраСправки)
	
	МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
	Возврат МодульМедосмотров.ПустойТабДокШаблонаСправки(ШаблонОсмотраСправки)
	
КонецФункции

&НаСервереБезКонтекста
Функция ЕстьЗаполненныеМакетыПриказов(ФакторыИУсловияРаботы)
	
	МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
	Возврат МодульМедосмотров.ЕстьЗаполненныеМакетыПриказов(ФакторыИУсловияРаботы)
	
КонецФункции

&НаСервереБезКонтекста
Процедура ОбновитьИдентификаторыПриказов(ОбъектМД)
	
	МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыКлиентСервер");
	МодульМедосмотров.ОбновитьИдентификаторыПриказов(ОбъектМД)
	
КонецПроцедуры

#Область РЭМД

&НаСервере
Процедура ОбновитьДанныеРЭМДПоМедицинскомуДокументу()
	
	ДанныеРЭМД.Очистить();
	ДолжностиМЗСотрудника.Очистить();
	КэшДолжностейПоВидамДокумента.Очистить();
	
	Если ИмяТипаДокумента = "Документ.Прием" Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеРолейПоШаблонам.ВидДокумента КАК ВидДокументаЭМД,
			|	ДанныеРолейПоШаблонам.ШаблонЭМД КАК ШаблонЭМД,
			|	ЭМД.УИД КАК УИД,
			|	ДанныеРолейПоШаблонам.УИД_Шаблона КАК УИД_Шаблона,
			|	ДанныеРолейПоШаблонам.Роль КАК РольСотрудника,
			|	ДанныеРолейПоШаблонам.МинКолПодписей КАК МинКолПодписей,
			|	ДанныеРолейПоШаблонам.МаксКолПодписей КАК МаксКолПодписей,
			|	РолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
			|	РолиИПодписиЭМД.ДолжностьМинздрава КАК ДолжностьМинздрава,
			|	ЭМД.СообщениеРЭМД КАК СообщениеРЭМД,
			|	ЭМД.ПутьКФайлуВАрхиве КАК ПутьКФайлуВАрхиве,
			|	СообщенияРЭМДЭлектронныеПодписиЭМД.СпециальностьМинздрава КАК СпециальностьМинздрава
			|ИЗ
			|	(ВЫБРАТЬ
			|		ПриемШаблоныПриема.УИД КАК УИД_Шаблона,
			|		ШаблоныHTML.Ссылка КАК ШаблонЭМД,
			|		ШаблоныHTML.ВидДокумента КАК ВидДокумента,
			|		РЭМДПравилаПодписи.Роль КАК Роль,
			|		РЭМДПравилаПодписи.МинКолПодписей КАК МинКолПодписей,
			|		РЭМДПравилаПодписи.МаксКолПодписей КАК МаксКолПодписей,
			|		РЭМДПравилаПодписи.УИДЕГИСЗ КАК УИДЕГИСЗПравила
			|	ИЗ
			|		Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
			|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШаблоныHTML КАК ШаблоныHTML
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РЭМДПравилаПодписи КАК РЭМДПравилаПодписи
			|				ПО (РЭМДПравилаПодписи.ВидДокумента = ШаблоныHTML.ВидДокумента)
			|					И (НЕ РЭМДПравилаПодписи.Архив)
			|			ПО ПриемШаблоныПриема.ШаблонПриема = ШаблоныHTML.Ссылка
			|	ГДЕ
			|		ПриемШаблоныПриема.Ссылка = &Ссылка
			|		И ШаблоныHTML.ВидДокумента <> ЗНАЧЕНИЕ(Справочник.РегистрируемыеЭлектронныеМедДокументы.ПустаяСсылка)
			|	
			|	СГРУППИРОВАТЬ ПО
			|		ПриемШаблоныПриема.УИД,
			|		ШаблоныHTML.ВидДокумента,
			|		ШаблоныHTML.Ссылка,
			|		РЭМДПравилаПодписи.Роль,
			|		РЭМДПравилаПодписи.МинКолПодписей,
			|		РЭМДПравилаПодписи.МаксКолПодписей,
			|		РЭМДПравилаПодписи.УИДЕГИСЗ) КАК ДанныеРолейПоШаблонам
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Прием.ЭМД КАК ЭМД
			|		ПО (ЭМД.Ссылка = &Ссылка)
			|			И (ЭМД.УИД_Шаблона = ДанныеРолейПоШаблонам.УИД_Шаблона)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Прием.РолиИПодписиЭМД КАК РолиИПодписиЭМД
			|		ПО (РолиИПодписиЭМД.Ссылка = &Ссылка)
			|			И (РолиИПодписиЭМД.УИД_ЭМД = ЭМД.УИД)
			|			И ДанныеРолейПоШаблонам.Роль = РолиИПодписиЭМД.РольСотрудника
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СообщенияРЭМД.ЭлектронныеПодписиЭМД КАК СообщенияРЭМДЭлектронныеПодписиЭМД
			|		ПО (СообщенияРЭМДЭлектронныеПодписиЭМД.Ссылка = ЭМД.СообщениеРЭМД)
			|			И (СообщенияРЭМДЭлектронныеПодписиЭМД.УИД_ЭЦП = РолиИПодписиЭМД.УИД_ЭЦП)
			|			И (НЕ СообщенияРЭМДЭлектронныеПодписиЭМД.ЭтоПодписьМО)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДанныеРолейПоШаблонам.УИДЕГИСЗПравила";
		
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект["МедицинскийДокумент"]);
		
	ИначеЕсли ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
		
		МодульМедосмотров = ДопСерверныеФункции.ОбщийМодуль("МедосмотрыСервер");
		ПриказыВредныеФакторы = МодульМедосмотров.ПриказыМедосмотраСВидамиДокументов(ЭтотОбъект["МедицинскийДокумент"]);
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПриказыВредныеФакторы.Ссылка КАК Ссылка,
			|	ПриказыВредныеФакторы.ВидДокумента КАК ВидДокумента,
			|	ПриказыВредныеФакторы.ПриказВредныйФактор КАК ПриказВредныйФактор
			|ПОМЕСТИТЬ ПриказыВредныеФакторы
			|ИЗ
			|	&ПриказыВредныеФакторы КАК ПриказыВредныеФакторы
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РЭМДПравилаПодписи.Роль КАК Роль,
			|	РЭМДПравилаПодписи.УИДЕГИСЗ КАК УИДЕГИСЗПравила,
			|	РЭМДПравилаПодписи.МинКолПодписей КАК МинКолПодписей,
			|	РЭМДПравилаПодписи.МаксКолПодписей КАК МаксКолПодписей,
			|	РЭМДПравилаПодписи.ВидДокумента КАК ВидДокумента,
			|	ПриказыВредныеФакторы.ПриказВредныйФактор КАК ПриказВредныйФактор,
			|	ПриказыВредныеФакторы.Ссылка КАК Ссылка
			|ПОМЕСТИТЬ Вт_ДанныеПМО
			|ИЗ
			|	ПриказыВредныеФакторы КАК ПриказыВредныеФакторы
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.РЭМДПравилаПодписи КАК РЭМДПравилаПодписи
			|		ПО ПриказыВредныеФакторы.ВидДокумента = РЭМДПравилаПодписи.ВидДокумента
			|ГДЕ
			|	НЕ РЭМДПравилаПодписи.Архив
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДанныеПМО.Роль КАК РольСотрудника,
			|	ДанныеПМО.МинКолПодписей КАК МинКолПодписей,
			|	ДанныеПМО.МаксКолПодписей КАК МаксКолПодписей,
			|	РолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
			|	РолиИПодписиЭМД.ДолжностьМинздрава КАК ДолжностьМинздрава,
			|	ДанныеПМО.ВидДокумента КАК ВидДокументаЭМД,
			|	ПрохождениеМедосмотраЭМД.УИД КАК УИД,
			|	ПрохождениеМедосмотраЭМД.СообщениеРЭМД КАК СообщениеРЭМД,
			|	ПрохождениеМедосмотраЭМД.ПутьКФайлуВАрхиве КАК ПутьКФайлуВАрхиве,
			|	ДанныеПМО.ПриказВредныйФактор КАК ПриказВредныйФактор,
			|	СообщенияРЭМДЭлектронныеПодписиЭМД.СпециальностьМинздрава КАК СпециальностьМинздрава
			|ИЗ
			|	Вт_ДанныеПМО КАК ДанныеПМО
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрохождениеМедосмотра.ЭМД КАК ПрохождениеМедосмотраЭМД
			|		ПО ДанныеПМО.Ссылка = ПрохождениеМедосмотраЭМД.Ссылка
			|			И ДанныеПМО.ПриказВредныйФактор = ПрохождениеМедосмотраЭМД.ПриказВредныйФактор
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПрохождениеМедосмотра.РолиИПодписиЭМД КАК РолиИПодписиЭМД
			|		ПО (РолиИПодписиЭМД.Ссылка = &Ссылка)
			|			И (РолиИПодписиЭМД.УИД_ЭМД = ПрохождениеМедосмотраЭМД.УИД)
			|			И ДанныеПМО.Роль = РолиИПодписиЭМД.РольСотрудника
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СообщенияРЭМД.ЭлектронныеПодписиЭМД КАК СообщенияРЭМДЭлектронныеПодписиЭМД
			|		ПО (СообщенияРЭМДЭлектронныеПодписиЭМД.Ссылка = ПрохождениеМедосмотраЭМД.СообщениеРЭМД)
			|			И (СообщенияРЭМДЭлектронныеПодписиЭМД.УИД_ЭЦП = РолиИПодписиЭМД.УИД_ЭЦП)
			|			И (НЕ СообщенияРЭМДЭлектронныеПодписиЭМД.ЭтоПодписьМО)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДанныеПМО.УИДЕГИСЗПравила";
		
		Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект["МедицинскийДокумент"]);
		Запрос.УстановитьПараметр("ПриказыВредныеФакторы", ПриказыВредныеФакторы);
		
	// Версия КОРП
	//ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" Тогда
	//	
	//	ВидДокументаВК = ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.ВидРЭМДВрачебнойКомиссии();
	//	
	//	Запрос = Новый Запрос;
	//	Запрос.Текст = 
	//		"ВЫБРАТЬ
	//		|	&ВидДокумента КАК ВидДокументаЭМД,
	//		|	ДанныеВК.УИД КАК УИД,
	//		|	ДанныеВК.Роль КАК РольСотрудника,
	//		|	ДанныеВК.МинКолПодписей КАК МинКолПодписей,
	//		|	ДанныеВК.МаксКолПодписей КАК МаксКолПодписей,
	//		|	ДанныеВК.СообщениеРЭМД КАК СообщениеРЭМД,
	//		|	ДанныеВК.ПутьКФайлуВАрхиве КАК ПутьКФайлуВАрхиве,
	//		|	РолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
	//		|	РолиИПодписиЭМД.ДолжностьМинздрава КАК ДолжностьМинздрава
	//		|ИЗ
	//		|	(ВЫБРАТЬ
	//		|		&УИД КАК УИД,
	//		|		РЭМДПравилаПодписи.Роль КАК Роль,
	//		|		РЭМДПравилаПодписи.МинКолПодписей КАК МинКолПодписей,
	//		|		РЭМДПравилаПодписи.МаксКолПодписей КАК МаксКолПодписей,
	//		|		ВК.СообщениеРЭМД КАК СообщениеРЭМД,
	//		|		ВК.ПутьКФайлуВАрхиве КАК ПутьКФайлуВАрхиве
	//		|	ИЗ
	//		|		Справочник.РЭМДПравилаПодписи КАК РЭМДПравилаПодписи,
	//		|		Документ.ВрачебнаяКомиссия КАК ВК
	//		|	ГДЕ
	//		|		РЭМДПравилаПодписи.ВидДокумента = &ВидДокумента
	//		|		И НЕ РЭМДПравилаПодписи.Архив
	//		|		И ВК.Ссылка = &Ссылка) КАК ДанныеВК
	//		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВрачебнаяКомиссия.РолиИПодписиЭМД КАК РолиИПодписиЭМД
	//		|		ПО (РолиИПодписиЭМД.Ссылка = &Ссылка)
	//		|			И (РолиИПодписиЭМД.УИД_ЭМД = &УИД)
	//		|			И ДанныеВК.Роль = РолиИПодписиЭМД.РольСотрудника";
	//	
	//	Запрос.УстановитьПараметр("УИД", ЭтотОбъект["МедицинскийДокумент"].УникальныйИдентификатор());
	//	Запрос.УстановитьПараметр("ВидДокумента", ВидДокументаВК);
	//	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект["МедицинскийДокумент"]);
		
	ИначеЕсли ИмяТипаДокумента = "Документ.Рецепт" Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	&ВидДокумента КАК ВидДокументаЭМД,
			|	ДанныеРолей.Роль КАК РольСотрудника,
			|	ДанныеРолей.МинКолПодписей КАК МинКолПодписей,
			|	ДанныеРолей.МаксКолПодписей КАК МаксКолПодписей,
			|	СообщенияРЭМДЭлектронныеПодписиЭМД.СпециальностьМинздрава КАК СпециальностьМинздрава,
			|	РецептРолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
			|	РецептРолиИПодписиЭМД.ДолжностьМинздрава КАК ДолжностьМинздрава,
			|	РецептЭМД.УИД КАК УИД,
			|	РецептЭМД.СообщениеРЭМД КАК СообщениеРЭМД,
			|	РецептЭМД.ПутьКФайлуВАрхиве КАК ПутьКФайлуВАрхиве
			|ИЗ
			|	(ВЫБРАТЬ
			|		РЭМДПравилаПодписи.Роль КАК Роль,
			|		РЭМДПравилаПодписи.МинКолПодписей КАК МинКолПодписей,
			|		РЭМДПравилаПодписи.МаксКолПодписей КАК МаксКолПодписей,
			|		РЭМДПравилаПодписи.УИДЕГИСЗ КАК УИДЕГИСЗПравила
			|	ИЗ
			|		Справочник.РЭМДПравилаПодписи КАК РЭМДПравилаПодписи
			|	ГДЕ
			|		РЭМДПравилаПодписи.ВидДокумента = &ВидДокумента
			|	
			|	СГРУППИРОВАТЬ ПО
			|		РЭМДПравилаПодписи.Роль,
			|		РЭМДПравилаПодписи.МинКолПодписей,
			|		РЭМДПравилаПодписи.МаксКолПодписей,
			|		РЭМДПравилаПодписи.УИДЕГИСЗ) КАК ДанныеРолей
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рецепт.ЭМД КАК РецептЭМД
			|		ПО (РецептЭМД.Ссылка = &Ссылка)
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Рецепт.РолиИПодписиЭМД КАК РецептРолиИПодписиЭМД
			|		ПО (РецептРолиИПодписиЭМД.Ссылка = &Ссылка)
			|			И (РецептРолиИПодписиЭМД.УИД_ЭМД = РецептЭМД.УИД)
			|			И ДанныеРолей.Роль = РецептРолиИПодписиЭМД.РольСотрудника
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СообщенияРЭМД.ЭлектронныеПодписиЭМД КАК СообщенияРЭМДЭлектронныеПодписиЭМД
			|		ПО (СообщенияРЭМДЭлектронныеПодписиЭМД.Ссылка = РецептЭМД.СообщениеРЭМД)
			|			И (СообщенияРЭМДЭлектронныеПодписиЭМД.УИД_ЭЦП = РецептРолиИПодписиЭМД.УИД_ЭЦП)
			|			И (НЕ СообщенияРЭМДЭлектронныеПодписиЭМД.ЭтоПодписьМО)
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДанныеРолей.УИДЕГИСЗПравила";
		
		РецептСсылка =  ЭтотОбъект["МедицинскийДокумент"];
		Запрос.УстановитьПараметр("Ссылка", РецептСсылка);
		ВидДокумента = ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.ВидРЭМДРецепта(РецептСсылка.ФормаРецепта);
		Если ЗначениеЗаполнено(ВидДокумента) Тогда
			Запрос.УстановитьПараметр("ВидДокумента", ВидДокумента);
		Иначе
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДанных = ДанныеРЭМД.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
		СтрокаДанных.ПодписьУстановлена = ЗначениеЗаполнено(СтрокаДанных.УИД_ЭЦП);
		// Добавим УИД шаблона для ПМО чтобы в дальнешем на форме было разделение по приказам
		Если ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
			СтрокаДанных.УИД_Шаблона = ИнтеграцияЕГИСЗВызовСервера.ПолучитьУИДПоПриказуВредномуФактору(ЭтотОбъект["МедицинскийДокумент"], Выборка.ПриказВредныйФактор);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаДанных.СпециальностьМинздрава) Тогда
			СтрокаДанных.СпециальностьМинздрава = ИнтеграцияЕГИСЗ_СЭМД.ПолучитьСпециализациюФРМР(ТекущийСотрудник);
		КонецЕсли;
	КонецЦикла;
	
	// Определим текущую должность
	ДолжностиМЗСотрудника.ЗагрузитьЗначения(ИнтеграцияЕГИСЗВызовСервера.ДолжностиМЗ(ТекущийСотрудник));
	
	Если ДолжностиМЗСотрудника.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='У текущего сотрудника не заполнена должность в соответствии с классификатором МинЗдрава, подписание отменено.'"));
	КонецЕсли;
	
	ВидыДокументов = ДанныеРЭМД.Выгрузить(, "ВидДокументаЭМД");
	ВидыДокументов.Свернуть("ВидДокументаЭМД");
	мВидыДокументов = ВидыДокументов.ВыгрузитьКолонку("ВидДокументаЭМД");
	
	ДолжностиПоВидамЭМД = ИнтеграцияЕГИСЗ_РЭМД.ПолучитьДолжностиПоВидамЭМД(мВидыДокументов);
	Для Каждого СтрокаДолжности Из ДолжностиПоВидамЭМД Цикл
		НоваяСтрокаКэша = КэшДолжностейПоВидамДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаКэша, СтрокаДолжности);
		НоваяСтрокаКэша.Должности.ЗагрузитьЗначения(СтрокаДолжности.Должности);
	КонецЦикла;
	
	// Сначала обязательные
	ДанныеРЭМД.Сортировать("МинКолПодписей Убыв");
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьУспешноУстановленныеПодписиРЭМД(МедицинскийДокумент)
	
	Возврат МедицинскийДокумент.РолиИПодписиЭМД.Количество() > 0;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДоступностьУстановкиПодписиДляСтрокРЭМД(СтрокаВидаДокумента)
	
	Если ЭлектронныеПодписи.НайтиСтроки(Новый Структура("СообщениеРЭМД, УстановившийПодпись", СтрокаВидаДокумента.СообщениеРЭМД, ТекущийПользователь)).Количество() > 0 Тогда
		Для Каждого СтрокаРоли Из СтрокаВидаДокумента.ПолучитьЭлементы() Цикл
			СтрокаРоли.ДоступнаУстановкаПодписи = Ложь;
			СтрокаРоли.Выбран = Ложь;
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ИмеетсяВыбраннаяСтрока = Ложь;
	Для Каждого СтрокаРоли Из СтрокаВидаДокумента.ПолучитьЭлементы() Цикл
		Если СтрокаРоли.Выбран Тогда
			ИмеетсяВыбраннаяСтрока = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаРоли Из СтрокаВидаДокумента.ПолучитьЭлементы() Цикл
		Если СтрокаРоли.Выбран Тогда
			СтрокаРоли.ДоступнаУстановкаПодписи = Истина;
		Иначе
			СтрокаРоли.ДоступнаУстановкаПодписи = Не ИмеетсяВыбраннаяСтрока;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеРЭМДПоДолжностиМЗ()
	
	Для Каждого СтрокаДанных Из ДанныеРЭМД Цикл
		Если СтрокаДанных.ПодписьУстановлена
			И ЗначениеЗаполнено(СтрокаДанных.ДолжностьМинздрава)
		Тогда
			СтрокаДанных.ДоступноРолей = 1;
			Продолжить;
		КонецЕсли;
		
		СтрокиДолжности = КэшДолжностейПоВидамДокумента.НайтиСтроки(Новый Структура("ВидДокумента, Роль", СтрокаДанных.ВидДокументаЭМД, СтрокаДанных.РольСотрудника));
		
		Если СтрокиДолжности.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого ДолжностьСотрудника Из ДолжностиМЗСотрудника Цикл
			Если СтрокиДолжности[0].Должности.НайтиПоЗначению(ДолжностьСотрудника.Значение) <> Неопределено Тогда
				СтрокаДанных.ДоступноРолей = 1;
				СтрокаДанных.ДолжностьМинздрава = ДолжностьСотрудника.Значение;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборСпециальностей()
	
	СпециальностиСотрудника = Новый Массив;
	Для Каждого СтрокаСпециализации Из ТекущийСотрудник.СпециализацииФРМР Цикл
		СпециальностиСотрудника.Добавить(СтрокаСпециализации.Специализация);
	КонецЦикла;
	
	ПараметрыВыбораПоля = Новый Массив;
	ПараметрыВыбораПоля.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", СпециальностиСотрудника));
	Элементы.ДанныеНаФормеСпециальностьМинздрава.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПоля);
	Элементы.ДанныеНаФормеСпециальностьМинздрава.СписокВыбора.ЗагрузитьЗначения(СпециальностиСотрудника);
	
КонецПроцедуры

#КонецОбласти

#Область НеРЭМД

&НаСервере
Процедура ОбновитьДанныеПоМедицинскомуДокументу()
	
	Данные.Очистить();
	СертификатыМОПользователя.Очистить();
	
	СтрокиПодписейЭМДПоРолям = Новый ТаблицаЗначений;
	СтрокиПодписейЭМДПоРолям.Колонки.Добавить("Роль");
	СтрокиПодписейЭМДПоРолям.Колонки.Добавить("УИД_ЭМД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	СтрокиПодписейЭМДПоРолям.Колонки.Добавить("СтрокаДанных");
	
	ДоступныеРолиПодписания = МедицинскаяДеятельность.ДоступныеРолиПодписанияМедицинскогоДокументаДляТекущегоПользователя(ЭтотОбъект["МедицинскийДокумент"]);
	
	Для Каждого ДоступнаяРоль Из ДоступныеРолиПодписания Цикл
		СтрокаДанных = Данные.Добавить();
		СтрокаДанных.РольСотрудника = ДоступнаяРоль.Роль;
		Если ДоступнаяРоль.Доступна Тогда
			СтрокаДанных.ДоступноРолей = 1;
		КонецЕсли;
		
		УИД_ЭМД = Неопределено;
		Если ТипЗнч(ДоступнаяРоль.ПараметрыРоли) = Тип("Структура") Тогда
			//ДоступнаяРоль.ПараметрыРоли <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(СтрокаДанных, ДоступнаяРоль.ПараметрыРоли);
			
			Если ДоступнаяРоль.ПараметрыРоли.Свойство("РолиШаблона") Тогда
				Для Каждого ПараметрыРолиШаблона Из ДоступнаяРоль.ПараметрыРоли.РолиШаблона Цикл
					СтрокаДанных.ИдентификаторыРолей.Добавить(ПараметрыРолиШаблона.ИдентификаторРоли);
					Если ПараметрыРолиШаблона.Свойство("Доступна")
						И ПараметрыРолиШаблона.Доступна
					Тогда
						ПредставлениеСубРоли = ПолучитьПредставлениеСубРоли(ПараметрыРолиШаблона);
						СтруктураРолиШаблона = Новый Структура;
						СтруктураРолиШаблона.Вставить("РольСотрудника",			ДоступнаяРоль.Роль);
						СтруктураРолиШаблона.Вставить("УИД_ЭМД",				ДоступнаяРоль.ПараметрыРоли.УИД_ЭМД);
						СтруктураРолиШаблона.Вставить("ПредставлениеСубРоли",	ПредставлениеСубРоли);
						СтруктураРолиШаблона.Вставить("Обязательная",			ПараметрыРолиШаблона.Обязательная);
						Если СубРолиЭМД.НайтиСтроки(СтруктураРолиШаблона).Количество() = 0 Тогда
							СтрокаРолиШаблона = СубРолиЭМД.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаРолиШаблона, СтруктураРолиШаблона);
							СтрокаРолиШаблона.ИдентификаторРоли = ПараметрыРолиШаблона.ИдентификаторРоли;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ДоступнаяРоль.ПараметрыРоли.Свойство("УИД_ЭМД") Тогда
				УИД_ЭМД = ДоступнаяРоль.ПараметрыРоли.УИД_ЭМД;
			КонецЕсли;
		Иначе
			// По умолчанию одна обязательная подпись
			СтрокаДанных.МинКолПодписей = 1;
			СтрокаДанных.МаксКолПодписей = 1;
		КонецЕсли;
		
		НоваяСтрока = СтрокиПодписейЭМДПоРолям.Добавить();
		НоваяСтрока.Роль = ДоступнаяРоль.Роль;
		НоваяСтрока.УИД_ЭМД = УИД_ЭМД;
		НоваяСтрока.СтрокаДанных = СтрокаДанных;
	КонецЦикла;
	
	СертификатыМОПользователя.ЗагрузитьЗначения(ПолучитьСертификатыМОПользователя(РаботаСДокументамиСервер.ФилиалДокумента(ЭтотОбъект["МедицинскийДокумент"])));
	Если СертификатыМОПользователя.Количество() = 0 Тогда
		СертификатыМОПользователя.Добавить(Справочники.СертификатыКлючейЭлектроннойПодписиИШифрования.ПустаяСсылка());
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
		|	РолиИПодписиЭМД.РольПодписи КАК РольСотрудника,
		|	РолиИПодписиЭМД.УИД_ЭМД КАК УИД_ЭМД
		|ПОМЕСТИТЬ РолиПодписи
		|ИЗ
		|	РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|ГДЕ
		|	РолиИПодписиЭМД.Документ = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭлектронныеПодписи.УникальныйИдентификатор КАК УникальныйИдентификатор,
		|	ЭлектронныеПодписи.УстановившийПодпись КАК УстановившийПодпись
		|ПОМЕСТИТЬ ЭЦП
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
		|ГДЕ
		|	ЭлектронныеПодписи.Объект = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РолиПодписи.УИД_ЭЦП КАК УИД_ЭЦП,
		|	РолиПодписи.РольСотрудника КАК РольСотрудника,
		|	РолиПодписи.УИД_ЭМД КАК УИД_ЭМД,
		|	ЕСТЬNULL(ЭЦП.УстановившийПодпись, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)) КАК УстановившийПодпись
		|ИЗ
		|	ЭЦП КАК ЭЦП
		|		ЛЕВОЕ СОЕДИНЕНИЕ РолиПодписи КАК РолиПодписи
		|		ПО ЭЦП.УникальныйИдентификатор = РолиПодписи.УИД_ЭЦП";
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект["МедицинскийДокумент"]);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ТекущийУИД_ЭМД = Выборка.УИД_ЭМД;
		Если Выборка.УИД_ЭМД = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()
			И ДокументЯвляетсяЗаключениемМедосмотра
		Тогда
			// Заключение МО до обновления на 2.0.49.1
			ТекущийУИД_ЭМД = Справочники.ПриказыМедосмотров.Приказ29н.УникальныйИдентификатор();
		КонецЕсли;
		
		СтрокиПодписи = СтрокиПодписейЭМДПоРолям.НайтиСтроки(Новый Структура("Роль, УИД_ЭМД", Выборка.РольСотрудника, ТекущийУИД_ЭМД));
		
		Если СтрокиПодписи.Количество() > 0 Тогда
			Если СтрокиПодписи[0].СтрокаДанных.ДоступноРолей = 0
				Или Выборка.УстановившийПодпись = ТекущийПользователь
			Тогда
				СтрокиПодписи[0].СтрокаДанных.ПодписьУстановлена = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// Сначала обязательные
	Данные.Сортировать("МинКолПодписей Убыв");
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеСубРоли(ПараметрыРолиШаблона)
	
	ПредставлениеСубРоли = "";
	
	Если ИмяТипаДокумента = "Документ.Прием" Тогда
		Обязательность = ?(ПараметрыРолиШаблона.Обязательная, НСтр("ru='Обязательная'"), НСтр("ru='Необязательная'"));
		Если ПараметрыРолиШаблона.РежимНастройкиДоступности = ПредопределенноеЗначение("Перечисление.РежимыНастройкиДоступностиРоли.ЗначениеПараметра") Тогда
			НастройкаДоступности = СтрШаблон("%1: %2", ПараметрыРолиШаблона.РежимНастройкиДоступности, ПараметрыРолиШаблона.ПризнакДоступностиРоли);
		Иначе
			НастройкаДоступности = ПараметрыРолиШаблона.РежимНастройкиДоступности;
		КонецЕсли;
		ПредставлениеСубРоли = СтрШаблон("%1, %2", Обязательность, НастройкаДоступности);
	КонецЕсли;
	
	Возврат ПредставлениеСубРоли;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьСертификатыМОПользователя(Филиал)
	
	Возврат ЭЦП_УМЦ_Сервер.ПолучитьСертификатыМОПользователя(Филиал);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДДФайлов(МедицинскийДокумент, УИДыЭМД)
	
	ДанныеФайловЭМД = бит_РаботаСФайлами.ПолучитьДанныеФайловЭМД(МедицинскийДокумент);
	
	Для Каждого УИД_ЭМД Из УИДыЭМД Цикл
		Если ДанныеФайловЭМД.Получить(УИД_ЭМД) = Неопределено Тогда
			Возврат Новый Соответствие;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДанныеФайловЭМД;
	
КонецФункции

&НаКлиенте
Процедура СохранитьЭМД()
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Заголовок = НСтр("ru='Выберите файл для сохранения'");
	Диалог.Фильтр = "(*.zip)|*.zip";
	ОповещениеЗавершения = Новый ОписаниеОповещения("ВыборФайлаЗавершение", ЭтотОбъект);
	Диалог.Показать(ОповещениеЗавершения);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция СформироватьФайлыДляСохранения(МедицинскийДокумент, РасширениеДляФайловПодписи)
	
	КаталогВременныхФайлов = СтандартныеПодсистемыСервер.СоздатьКаталогВременныхФайлов("EMR_ES");
	ДанныеСохраненныхФайловЭМД = бит_РаботаСФайлами.ПолучитьДанныеФайловЭМД(МедицинскийДокумент, Истина);
	
	Если ДанныеСохраненныхФайловЭМД.Количество() = 0 Тогда
		ДанныеЭМД = МедицинскаяДеятельность.СформироватьЭМДМедицинскогоДокумента(МедицинскийДокумент, "", Ложь);
		
		Если ДанныеЭМД = Неопределено Тогда
			Возврат Неопределено;
		Иначе
			ДанныеФайловЭМД = Новый Соответствие;
			
			ИндексЭМД = 1;
			Для Каждого КлючЗначение Из ДанныеЭМД Цикл
				
				ДанныеЭМДПоИдентификатору = КлючЗначение.Значение;
				УИДЭМД = КлючЗначение.Ключ;
				
				Если ДанныеЭМД.Количество() > 1 Тогда
					ИмяЭМД = СтрШаблон("%1 %2", НСтр("ru='ЭМД'"), ИндексЭМД);
					ИндексЭМД = ИндексЭМД + 1;
				Иначе
					ИмяЭМД = НСтр("ru='ЭМД'");
				КонецЕсли;
				
				ПутьДоЭМД = СтрШаблон("%1%2.%3", КаталогВременныхФайлов, ИмяЭМД, ДанныеЭМДПоИдентификатору.Расширение);
				ДанныеЭМДПоИдентификатору.ДД.Записать(ПутьДоЭМД);
				ДанныеФайловЭМД.Вставить(УИДЭМД, ПутьДоЭМД);
			КонецЦикла;
		КонецЕсли;
	Иначе
		ДанныеФайловЭМД = Новый Соответствие;
		ИндексЭМД = 1;
		Для Каждого КлючЗначение Из ДанныеСохраненныхФайловЭМД Цикл
			
			ДанныеЭМДПоИдентификатору = КлючЗначение.Значение;
			УИДЭМД = КлючЗначение.Ключ;
			
			Если ДанныеСохраненныхФайловЭМД.Количество() > 1 Тогда
				ИмяЭМД = СтрШаблон("%1 %2", НСтр("ru='ЭМД'"), ИндексЭМД);
				ИндексЭМД = ИндексЭМД + 1;
			Иначе
				ИмяЭМД = НСтр("ru='ЭМД'");
			КонецЕсли;
			
			ФайлЭМД = Новый Файл(КлючЗначение.Значение);
			ПутьДоЭМД = СтрШаблон("%1%2%3", КаталогВременныхФайлов, ИмяЭМД, ФайлЭМД.Расширение);
			КопироватьФайл(КлючЗначение.Значение, ПутьДоЭМД);
			УдалитьФайлы(КлючЗначение.Значение);
			ДанныеФайловЭМД.Вставить(УИДЭМД, ПутьДоЭМД);
		КонецЦикла;
	КонецЕсли;
	
	Если ДанныеФайловЭМД.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	УИДыЭМД = Новый Массив;
	Для Каждого КлючЗначение Из ДанныеФайловЭМД Цикл
		УИДыЭМД.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЭлектронныеПодписи.Подпись КАК Подпись,
		|	РолиИПодписиЭМД.РольПодписи КАК РольПодписи,
		|	РолиИПодписиЭМД.УИД_ЭМД КАК УИД_ЭМД,
		|	Пользователи.Наименование КАК ИмяПользователя
		|ИЗ
		|	РегистрСведений.ЭлектронныеПодписи КАК ЭлектронныеПодписи
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		|			ПО РолиИПодписиЭМД.Пользователь = Пользователи.Ссылка
		|		ПО (ЭлектронныеПодписи.Объект = &Объект)
		|			И ЭлектронныеПодписи.УникальныйИдентификатор = РолиИПодписиЭМД.УИД_ЭЦП
		|			И (РолиИПодписиЭМД.УИД_ЭМД В (&УИДыЭМД))
		|ИТОГИ ПО
		|	УИД_ЭМД";
	
	Запрос.УстановитьПараметр("Объект", МедицинскийДокумент);
	Запрос.УстановитьПараметр("УИДыЭМД", УИДыЭМД);
	
	ПодписиПоЭМД = Новый Соответствие;
	ВыборкаЭМД = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	Пока ВыборкаЭМД.Следующий() Цикл
		
		ПутьККаталогуПодписейЭМД = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(КаталогВременныхФайлов + Строка(ВыборкаЭМД.УИД_ЭМД));
		СоздатьКаталог(ПутьККаталогуПодписейЭМД);
		
		Подписи = Новый Массив;
		ПодписиПоЭМД.Вставить(ВыборкаЭМД.УИД_ЭМД, Подписи);
		
		ВыборкаПодписей = ВыборкаЭМД.Выбрать();
		Пока ВыборкаПодписей.Следующий() Цикл
			ПодписьДД = ВыборкаПодписей.Подпись.Получить();
			
			ИмяФайлаПодписи = СтрШаблон("%1, %2", Строка(ВыборкаПодписей.РольПодписи), ВыборкаПодписей.ИмяПользователя);
			
			ПутьДоПодписи = СтрШаблон("%1%2.%3", ПутьККаталогуПодписейЭМД, ИмяФайлаПодписи, РасширениеДляФайловПодписи);
			ПодписьДД.Записать(ПутьДоПодписи);
			Подписи.Добавить(ПутьДоПодписи);
		КонецЦикла;
	КонецЦикла;
	
	ЗаписьZipФайла = Новый ЗаписьZipФайла();
	
	Если ПодписиПоЭМД.Количество() = 0 Тогда
		Для Каждого КлючЗначение Из ДанныеФайловЭМД Цикл
			ЗаписьZipФайла.Добавить(КлючЗначение.Значение);
		КонецЦикла;
	Иначе
		Если ДанныеФайловЭМД.Количество() > 1 Тогда
			Для Каждого КлючЗначение Из ДанныеФайловЭМД Цикл
				ЗаписьZipФайла.Добавить(ПолучитьАрхивДанныхФайлаЭМД(КлючЗначение.Значение, ПодписиПоЭМД.Получить(КлючЗначение.Ключ), КаталогВременныхФайлов));
			КонецЦикла;
		Иначе
			ЗаписьZipФайла.Добавить(ДанныеФайловЭМД.Получить(УИДыЭМД[0]));
			Для Каждого Подпись Из ПодписиПоЭМД.Получить(УИДыЭМД[0]) Цикл
				ЗаписьZipФайла.Добавить(Подпись);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ДД = ЗаписьZipФайла.ПолучитьДвоичныеДанные();
	СтандартныеПодсистемыСервер.ОчиститьКаталогВременныхФайлов(КаталогВременныхФайлов);
	
	Возврат ДД;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьАрхивДанныхФайлаЭМД(ПутьДоЭМД, ПодписиЭМД, КаталогВременныхФайлов)
	
	ФайлЭМД = Новый Файл(ПутьДоЭМД);
	ПутьДоАрхива = СтрШаблон("%1%2.%3", КаталогВременныхФайлов, ФайлЭМД.ИмяБезРасширения, "zip");
	
	ЗаписьZipФайла = Новый ЗаписьZipФайла(ПутьДоАрхива);
	ЗаписьZipФайла.Добавить(ПутьДоЭМД);
	
	Если ПодписиЭМД <> Неопределено Тогда
		Для Каждого Подпись Из ПодписиЭМД Цикл
			ЗаписьZipФайла.Добавить(Подпись);
		КонецЦикла;
	КонецЕсли;
	
	ЗаписьZipФайла.Записать();
	
	Возврат ПутьДоАрхива;
	
КонецФункции

&НаКлиенте
Процедура ОбновитьДоступностьУстановкиПодписиПоРолямЭМД(СтрокиТаблицы, ИспользованныеДанные = Неопределено)
	
	Если ИспользованныеДанные = Неопределено Тогда
		ИспользованныеДанные = Новый Соответствие;
	КонецЕсли;
	
	ИспользованныеРоли = Новый Массив;
	
	Для Каждого СтрокаДанных Из СтрокиТаблицы Цикл
		Если СтрокаДанных.ТипПодписания = 2
			И (СтрокаДанных.ПодписьУстановлена
				Или СтрокаДанных.Выбран)
			И ИспользованныеРоли.Найти(СтрокаДанных.РольСотрудника) = Неопределено
		Тогда
			ИспользованныеРоли.Добавить(СтрокаДанных.РольСотрудника);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаДанных Из СтрокиТаблицы Цикл
		
		Если СтрокаДанных.ТипПодписания = 0 Тогда
			ОбновитьДоступностьУстановкиПодписиПоРолямЭМД(СтрокаДанных.ПолучитьЭлементы(), ИспользованныеДанные);
		ИначеЕсли СтрокаДанных.ТипПодписания = 2 Тогда
			
			СтрокаДанных.ДоступнаУстановкаПодписи = Истина;
			
			Если Не СтрокаДанных.Выбран
				И СтрокаДанных.ДоступноРолей > 0
				И ИспользованныеРоли.Найти(СтрокаДанных.РольСотрудника) <> Неопределено
			Тогда
				СтрокаДанных.ДоступнаУстановкаПодписи = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронныеПодписи

&НаСервере
Процедура ЗаполнитьСписокПодписей()
	
	бит_СертификатыЭЦП.ЗаполнитьСписокПодписей(ЭтотОбъект["МедицинскийДокумент"], УникальныйИдентификатор, Неопределено, ЭлектронныеПодписи, ПодписиФайловЭМД);
	
	Если ПодписаниеДокумента Тогда
		Для Каждого ЭП Из ЭлектронныеПодписи Цикл
			ЭП.ПодписьДокумента = Не ЭП.ПодписанФайлЭМД;
		КонецЦикла;
	КонецЕсли;
	
	Если ПодписаниеДляРЭМД Тогда
		Для Каждого ЭП Из ЭлектронныеПодписи Цикл
			СтрокиРЭМД = ДанныеРЭМД.НайтиСтроки(Новый Структура("УИД_ЭЦП", ЭП.УникальныйИдентификатор));
			Если СтрокиРЭМД.Количество() > 0 Тогда
				ЭП.РольСотрудника = СтрокиРЭМД[0].РольСотрудника;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПодписаниеНеДляРЭМД Тогда
		УИДыЭЦП = ЭлектронныеПодписи.Выгрузить().ВыгрузитьКолонку("УникальныйИдентификатор");
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РолиИПодписиЭМД.РольПодписи КАК РольПодписи,
			|	РолиИПодписиЭМД.УИД_ЭЦП КАК УИД_ЭЦП,
			|	РолиИПодписиЭМД.УИД_ЭМД КАК УИД_ЭМД
			|ИЗ
			|	РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
			|ГДЕ
			|	РолиИПодписиЭМД.УИД_ЭЦП В(&УИДыЭЦП)
			|	И РолиИПодписиЭМД.Документ = &Документ";
		
		Запрос.УстановитьПараметр("УИДыЭЦП", УИДыЭЦП);
		Запрос.УстановитьПараметр("Документ", ЭтотОбъект["МедицинскийДокумент"]);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокиЭЦП = ЭлектронныеПодписи.НайтиСтроки(Новый Структура("УникальныйИдентификатор", Выборка.УИД_ЭЦП));
			Для Каждого СтрокаЭЦП Из СтрокиЭЦП Цикл
				
				ТекущийУИД_ЭМД = Выборка.УИД_ЭМД;
				Если Выборка.УИД_ЭМД = ОбщегоНазначенияКлиентСервер.ПустойУникальныйИдентификатор()
					И ДокументЯвляетсяЗаключениемМедосмотра
				Тогда
					// Заключение МО до обновления на 2.0.49.1
					ТекущийУИД_ЭМД = Справочники.ПриказыМедосмотров.Приказ29н.УникальныйИдентификатор();
				КонецЕсли;
				
				СтрокаЭЦП.РольСотрудника = Выборка.РольПодписи;
				СтрокаЭЦП.УИД_ЭМД = ТекущийУИД_ЭМД;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	НастроитьДоступностьВидимостьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьКомандСпискаПодписей()
	
	ТекущиеДанные = Элементы.ЭлектронныеПодписи.ТекущиеДанные;
	
	ЭтоПодпись = Истина;
	ЕстьПодписи = ЭлектронныеПодписи.Количество() <> 0;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ЭтоПодпись = ТекущиеДанные.Объект <> Неопределено И (НЕ ТекущиеДанные.Объект.Пустая());
	КонецЕсли;
	
	Элементы.ТаблицаПодписейПроверить.Доступность		= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейПроверитьВсе.Доступность	= ЕстьПодписи;
	Элементы.ТаблицаПодписейОткрытьПодпись.Доступность	= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейУдалить.Доступность			= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейСохранить.Доступность		= ЕстьПодписи И ЭтоПодпись;
	
	Элементы.ТаблицаПодписейКонтекстноеМенюПроверить.Доступность		= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейКонтекстноеМенюПроверитьВсе.Доступность		= ЕстьПодписи;
	Элементы.ТаблицаПодписейКонтекстноеМенюОткрытьПодпись.Доступность	= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейКонтекстноеМенюУдалить.Доступность			= ЕстьПодписи И ЭтоПодпись;
	Элементы.ТаблицаПодписейКонтекстноеМенюСохранить.Доступность		= ЕстьПодписи И ЭтоПодпись;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПодписи()
	
	Если Элементы.ЭлектронныеПодписи.ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = НСтр("ru='Удалить выделенные подписи?'");
	Иначе
		ТекстВопроса = НСтр("ru='Удалить выделенную подпись?'");
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьПодписиПродолжение", ЭтотОбъект);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПодписиИОбновитьСписок(РеквизитПодписанИзменен, ИдентификаторФормыДляБлокировки)
	
	ОбъектМД = ЭтотОбъект["МедицинскийДокумент"].ПолучитьОбъект();
	
	ЕстьТЧРолиИПодписи	= ОбъектМД.Метаданные().ТабличныеЧасти.Найти("РолиИПодписиЭМД") <> Неопределено;
	ЕстьТЧЭМД			= ОбъектМД.Метаданные().ТабличныеЧасти.Найти("ЭМД") <> Неопределено;
	
	УИДыУдаленныхЭЦП = Новый Массив;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.ЭлектронныеПодписи.ВыделенныеСтроки Цикл
		УИД_ЭЦП = ЭлектронныеПодписи.НайтиПоИдентификатору(ВыделеннаяСтрока).УникальныйИдентификатор;
		
		Если ЗначениеЗаполнено(УИД_ЭЦП) Тогда
			УИДыУдаленныхЭЦП.Добавить(УИД_ЭЦП);
		КонецЕсли;
		
		Если ЕстьТЧРолиИПодписи Тогда
			СтрокиТЧ = ОбъектМД.РолиИПодписиЭМД.НайтиСтроки(Новый Структура("УИД_ЭЦП", УИД_ЭЦП));
			Для Каждого СтрокаТЧ Из СтрокиТЧ Цикл
				ОбъектМД.РолиИПодписиЭМД.Удалить(СтрокаТЧ);
			КонецЦикла;
		КонецЕсли;
		
		СтрокиДанныхРЭМД = ДанныеРЭМД.НайтиСтроки(Новый Структура("УИД_ЭЦП", УИД_ЭЦП));
		Для Каждого СтрокаДанныхРЭМД Из СтрокиДанныхРЭМД Цикл
			СтрокаДанныхРЭМД.ПодписьУстановлена = Ложь;
			СтрокаДанныхРЭМД.УИД_ЭЦП = Неопределено;
		КонецЦикла;
	КонецЦикла;
	ОбъектМД.Записать();
	
	бит_СертификатыЭЦП.УдалитьПодписиИОбновитьСписок(РеквизитПодписанИзменен, Элементы.ЭлектронныеПодписи.ВыделенныеСтроки,
		ЭтотОбъект["МедицинскийДокумент"], ЭлектронныеПодписи, ИдентификаторФормыДляБлокировки, Неопределено, ПодписиФайловЭМД);
		
	Если РеквизитПодписанИзменен Тогда
		ЗаполнитьСписокПодписей();
	КонецЕсли;
	
	Если ЭлектронныеПодписи.Количество() = 0 Тогда
		ОбъектМД = ЭтотОбъект["МедицинскийДокумент"].ПолучитьОбъект();
		Если ЕстьТЧРолиИПодписи Тогда
			ОбъектМД.РолиИПодписиЭМД.Очистить();
		КонецЕсли;
		
		Если ЕстьТЧЭМД Тогда
			ОбъектМД.ЭМД.Очистить();
		КонецЕсли;
		
		Если ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
			ОбновитьИдентификаторыПриказов(ОбъектМД);
		КонецЕсли;
		
		ОбъектМД.Записать();
		
		Если ИмяТипаДокумента = "Справочник.МедицинскиеКарты"
			Или ИмяТипаДокумента = "Документ.Форма066" // Версия КОРП
			Или ИмяТипаДокумента = "Документ.СписокНаПрохождениеМедосмотра"
			Или ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
			Или ИмяТипаДокумента = "Документ.МедицинскийОтчет"
			Или ИмяТипаДокумента = "Документ.Прием"
		Тогда
			бит_РаботаСФайлами.УдалитьФайлЭМД(ЭтотОбъект["МедицинскийДокумент"]);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяТипаДокумента = "Справочник.МедицинскиеКарты"
		Или ИмяТипаДокумента = "Документ.Форма066" // Версия КОРП
		Или ИмяТипаДокумента = "Документ.СписокНаПрохождениеМедосмотра"
		Или ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
		Или ИмяТипаДокумента = "Документ.МедицинскийОтчет"
		Или ИмяТипаДокумента = "Документ.Прием"
	Тогда
		УдалитьРолиИПодписи(УИДыУдаленныхЭЦП);
	КонецЕсли;
	
	Если ПодписаниеДляРЭМД Тогда
		ЭМДСформированы = ЕстьУспешноУстановленныеПодписиРЭМД(ЭтотОбъект["МедицинскийДокумент"]);
	КонецЕсли;
	
	Если Не ОбъектМД.ПодписанЭП
		И (ИмяТипаДокумента = "Документ.МедицинскийОтчет"
			Или ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
			Или ИмяТипаДокумента = "Документ.Прием")
	Тогда
		// Перезаполняются все таблицы, на случай, если нужно сменить режим с ПодписаниеДокумента на ПодписаниеНеДляРЭМД
		ЗаполнитьТаблицыДанных();
	Иначе
		ОбновитьСписки();
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьРолиИПодписи(УИДыУдаленныхЭЦП)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиИПодписиЭМД.Документ КАК Документ,
		|	РолиИПодписиЭМД.РольПодписи КАК РольПодписи,
		|	РолиИПодписиЭМД.УИД_ЭМД КАК УИД_ЭМД,
		|	РолиИПодписиЭМД.ИдентификаторРоли КАК ИдентификаторРоли
		|ИЗ
		|	РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|ГДЕ
		|	РолиИПодписиЭМД.УИД_ЭЦП В(&УИД_ЭЦП)";
	
	Запрос.УстановитьПараметр("УИД_ЭЦП", УИДыУдаленныхЭЦП);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		НЗ = РегистрыСведений.РолиИПодписиЭМД.СоздатьНаборЗаписей();
		НЗ.Отбор.Документ.Установить(Выборка.Документ);
		НЗ.Отбор.РольПодписи.Установить(Выборка.РольПодписи);
		НЗ.Отбор.УИД_ЭМД.Установить(Выборка.УИД_ЭМД);
		НЗ.Отбор.ИдентификаторРоли.Установить(Выборка.ИдентификаторРоли);
		НЗ.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСписки(ОбновитьДанные = Истина)
	
	ЗаполнитьСписокПодписей();
	
	Если ОбновитьДанные И ПодписаниеНеДляРЭМД Тогда
		ОбновитьДанныеПоМедицинскомуДокументу();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьУОПоСтрокеДанных()
	
	ВыбраннаяСтрока = Элементы.ДанныеНаФорме.ТекущиеДанные;
	УИД_ЭЦПВыбраннойСтроки			= Неопределено;
	СообщениеРЭМДВыбраннойСтроки	= Неопределено;
	РольСотрудникаВыбраннойСтроки	= Неопределено;
	ВыбранТипПодписанияДокумента	= Ложь;
	ВыбранТипПодписанияФайла		= Ложь;
	УИД_ЭМДВыбраннойСтроки			= Неопределено;
	
	Если ВыбраннаяСтрока <> Неопределено Тогда
		Если ВыбраннаяСтрока.ТипПодписания <> 2
			И ЗначениеЗаполнено(ВыбраннаяСтрока.УИД_ЭЦП)
		Тогда
			УИД_ЭЦПВыбраннойСтроки = ВыбраннаяСтрока.УИД_ЭЦП;
		КонецЕсли;
		Если ЗначениеЗаполнено(ВыбраннаяСтрока.СообщениеРЭМД) Тогда
			СообщениеРЭМДВыбраннойСтроки = ВыбраннаяСтрока.СообщениеРЭМД;
			РольСотрудникаВыбраннойСтроки = ВыбраннаяСтрока.РольСотрудника;
		КонецЕсли;
		Если ВыбраннаяСтрока.ТипПодписания = 1 Тогда
			ВыбранТипПодписанияДокумента = Истина;
		ИначеЕсли ВыбраннаяСтрока.ТипПодписания = 0 Тогда
			ДочерниеСтроки = ВыбраннаяСтрока.ПолучитьЭлементы();
			ВыбранТипПодписанияДокумента = ДочерниеСтроки.Количество() > 0 И ДочерниеСтроки[0].ТипПодписания = 1;
		ИначеЕсли ВыбраннаяСтрока.ТипПодписания = 2 Тогда
			ВыбранТипПодписанияФайла = Истина;
			РольСотрудникаВыбраннойСтроки = ВыбраннаяСтрока.РольСотрудника;
			УИД_ЭМДВыбраннойСтроки = ВыбраннаяСтрока.УИД_ЭМД;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСпискиПослеПодписаний(Параметр)
	
	Если Параметр.УИДФормы <> УникальныйИдентификатор Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметр.РезультатСохраненияРЭМД <> Неопределено Тогда
		ЭМДСформированы = ЕстьУспешноУстановленныеПодписиРЭМД(ЭтотОбъект["МедицинскийДокумент"]);
		ОбновлениеСтрокРЭМД(Параметр.РезультатСохраненияРЭМД);
	КонецЕсли;
	
	Если Параметр.РезультатСохраненияНеРЭМД <> Неопределено Тогда
		ОбновлениеСтрокНеРЭМД(Параметр.РезультатСохраненияНеРЭМД);
	КонецЕсли;
	
	ОбновитьСписки(Ложь);
	ЗаполнитьДанныеНаФорме();
	ОбновитьУОПоСтрокеДанных();
	УстановитьДоступностьКомандСпискаПодписей();
	
	ПроверитьСтрокиПодписей(ЭлектронныеПодписи.НайтиСтроки(Новый Структура));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокКнопкиСохраненияЭМД()
	
	Если ДокументЯвляетсяЗаключениемМедосмотра Тогда
		Элементы.ФормаСохранитьЭМД.Заголовок = НСтр("ru='Сохранить файлы представления заключения медосмотра'")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДоступныеДолжностиМЗ()
	
	ДоступныеДолжности = Новый Массив;
	
	ТекДанные = Элементы.ДанныеНаФорме.ТекущиеДанные;
	СтрокиДолжностиПоВидуИРоли = КэшДолжностейПоВидамДокумента.НайтиСтроки(Новый Структура("ВидДокумента, Роль", ТекДанные.ВидДокументаЭМД, ТекДанные.РольСотрудника));
	
	Если СтрокиДолжностиПоВидуИРоли.Количество() > 0 Тогда
		Для Каждого ДолжностьСотрудника Из ДолжностиМЗСотрудника Цикл
			Если СтрокиДолжностиПоВидуИРоли[0].Должности.НайтиПоЗначению(ДолжностьСотрудника.Значение) <> Неопределено Тогда
				ДоступныеДолжности.Добавить(ДолжностьСотрудника.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ПараметрыВыбораПоля = Новый Массив;
	ПараметрыВыбораПоля.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", ДоступныеДолжности));
	Элементы.ДанныеНаФормеДолжностьМинздрава.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораПоля);
	Элементы.ДанныеНаФормеДолжностьМинздрава.СписокВыбора.ЗагрузитьЗначения(ДоступныеДолжности);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСтрокиПодписей(СтрокиПодписей)
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("КоллекцияПодписей", СтрокиПодписей);
	ПараметрыОповещения.Вставить("ДокументПодписан", ДопСерверныеФункции.ПолучитьРеквизит(ЭтотОбъект["МедицинскийДокумент"], "ПодписанЭП"));
	ПараметрыОповещения.Вставить("ОписаниеОповещения", Новый ОписаниеОповещения("ПослеЗавершенияПроверкиПодписи", ЭтотОбъект));
	
	бит_СертификатыЭЦПКлиент.ПроверитьПодписиОбъектаВФормеРаботыСЭМД(?(ПодписаниеИзФормыВладельца, ЭтотОбъект.ВладелецФормы, Неопределено), ЭтотОбъект, СтрокиПодписей,
		Новый ОписаниеОповещения("ПроверитьПодписиЗавершение", бит_СертификатыЭЦПКлиент, ПараметрыОповещения));
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти