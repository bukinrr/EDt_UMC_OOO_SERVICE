
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ссылка = Параметры.СправочникСсылка;
	
	Если Ссылка = Неопределено Тогда
		Отказ = Истина;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Копирование = ЗначениеЗаполнено(Параметры.ЗначениеКопирования);
	МетаданныеСправочника = Ссылка.Метаданные();
	
	Если Не Ссылка.ЭтоГруппа Тогда
		Для Каждого Реквизит Из МетаданныеСправочника.Реквизиты Цикл
			Попытка
				ДобавитьПолеВводаРеквизита(Реквизит.Имя, Реквизит.Тип, Реквизит.Представление());
			Исключение
			КонецПопытки;
		КонецЦикла;
	КонецЕсли;
	
	ЗаполнитьОсновныеРеквизиты();
	
	УстановитьДоступностьФормы();
	
	// Заголовок формы из классификатора
	Если ЗначениеЗаполнено(ВидКлассификатора) Тогда
		Заголовок = Строка(ВидКлассификатора);
	Иначе
		Если ЗначениеЗаполнено(МетаданныеСправочника.ПредставлениеОбъекта) Тогда
			Заголовок = МетаданныеСправочника.ПредставлениеОбъекта;
		ИначеЕсли ЗначениеЗаполнено(МетаданныеСправочника.РасширенноеПредставлениеОбъекта) Тогда
			Заголовок = МетаданныеСправочника.РасширенноеПредставлениеОбъекта;
		Иначе
			Заголовок = МетаданныеСправочника.Синоним;
		КонецЕсли;
	КонецЕсли;
	
	ДопустимоРедактированиеЭлемента = ИнтеграцияЕГИСЗОбщегоНазначенияПовтИсп.ДопустимоРедактированиеЭлементовЕГИСЗ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		ТекстВопроса = "Данные были изменены. Сохранить изменения?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, 60, КодВозвратаДиалога.Да,,КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			Записать(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	УИДЕГИСЗРодителя = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Родитель, "УИДЕГИСЗ");
КонецПроцедуры

&НаКлиенте
Процедура ВидКлассификатораПриИзменении(Элемент)
	
	Если Не ДопустимоРедактированиеЭлемента Тогда
		ЗаполнитьОсновныеРеквизиты();
	КонецЕсли;
	
	УстановитьДоступностьФормы();
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	Записать(Команда);
	ЭтаФорма.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура Записать(Команда)
	ЗаписатьОбъект();
	ОповеститьОбИзменении(Ссылка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьОсновныеРеквизиты()
	
	Иерархический = Ссылка.Метаданные().Иерархический;
	Источник = ?(ЗначениеЗаполнено(Ссылка), Ссылка, Параметры.ЗначениеКопирования);
	
	Если ЗначениеЗаполнено(Источник) Тогда
		
		ПоляЗаполнения = Новый Массив;
		ПоляЗаполнения.Добавить("Наименование, OIDСправочникаИсточника, ВерсияКлассификатораМинздрава, УИДЕГИСЗ");
		
		Если Не Копирование И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Код") Тогда
			ПоляЗаполнения.Добавить("Код");
		КонецЕсли;
		
		Если Иерархический Тогда
			ПоляЗаполнения.Добавить("Родитель");
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Архив") Тогда
			ПоляЗаполнения.Добавить("Архив");
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "УИДЕГИСЗРодителя") Тогда
			ПоляЗаполнения.Добавить("УИДЕГИСЗРодителя");
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "OIDКлассификатораМинздрава") Тогда
			ПоляЗаполнения.Добавить("OIDКлассификатораМинздрава");
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "ВидКлассификатора") Тогда
			ПоляЗаполнения.Добавить("ВидКлассификатора");
			Элементы.ВидКлассификатора.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Источник, СтрСоединить(ПоляЗаполнения, ", "));
		
		Если Не Ссылка.ЭтоГруппа И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Источник, "Атрибуты") Тогда
			ПерезаполнитьТабЧастьАтрибуты(Атрибуты, Источник.Атрибуты);
		Иначе
			Элементы.Атрибуты.Видимость = Ложь;
		КонецЕсли;
	Иначе
		МенеджерСправочника = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.КлассификаторыМинЗдрава") Тогда
			OIDСправочникаИсточника = МенеджерСправочника.ПолучитьOIDСправочника(ВидКлассификатора);
			СписокКлючей = МенеджерСправочника.ПолучитьДополнительныеАтрибуты(ВидКлассификатора);
		Иначе
			OIDСправочникаИсточника = МенеджерСправочника.ПолучитьOIDСправочника();
			Попытка
				СписокКлючей = МенеджерСправочника.ПолучитьДополнительныеАтрибуты();
			Исключение
			КонецПопытки;
		КонецЕсли;
		
		Если СписокКлючей <> Неопределено Тогда
			ПерезаполнитьТабЧастьАтрибуты(Атрибуты, СписокКлючей);
		Иначе
			Элементы.Атрибуты.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	// Элементы.OIDКлассификатораМинздрава.Видимость = ЗначениеЗаполнено(OIDКлассификатораМинздрава);
	Элементы.ВидКлассификатора.Видимость = ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Ссылка, "ВидКлассификатора");
	
	Если Иерархический Тогда // И ТипЗнч(Ссылка) <> Тип("СправочникСсылка.КлассификаторыМинЗдрава") Тогда
		мПараметрыВыбора = Новый Массив;
		мПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.Тип", ТипЗнч(Ссылка)));
		мПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ЭтоГруппа", Истина));
		Элементы.Родитель.ПараметрыВыбора = Новый ФиксированныйМассив(мПараметрыВыбора);
	Иначе
		Элементы.Родитель.Видимость = Ложь;
		Элементы.УИДЕГИСЗРодителя.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.Код.Видимость = Ссылка.Метаданные().ДлинаКода > 0;
	
КонецПроцедуры

&НаСервере
Процедура ПерезаполнитьТабЧастьАтрибуты(Атрибуты, ПереченьАтрибутов)
	
	Атрибуты.Очистить();
	Для Каждого Атрибут Из ПереченьАтрибутов Цикл
		НоваяСтрока = Атрибуты.Добавить();
		Если ТипЗнч(ПереченьАтрибутов) = Тип("Соответствие") Тогда
			НоваяСтрока.Ключ = Атрибут.Значение;
		Иначе
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Атрибут);
		КонецЕсли;
	КонецЦикла;
	Элементы.Атрибуты.Видимость = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьФормы()
	
	ЗаписьНастройки = РегистрыСведений.НастройкиОбновленияСправочниковЕГИСЗ.СоздатьМенеджерЗаписи();
	ЗаписьНастройки.Классификатор = OIDСправочникаИсточника;
	ЗаписьНастройки.Прочитать();
	РежимОбновления = ЗаписьНастройки.РежимОбновления;
	
	ИмяСправочника = Ссылка.Метаданные().Имя;
	
	ДекорацияИнфо = Элементы.Найти("ДекорацияИнфо");
	
	Если ЗначениеЗаполнено(РежимОбновления)
		И РежимОбновления <> Перечисления.РежимыАвтоОбновленияСправочниковЕГИСЗ.Выключено
			Или КлассификаторыЗапрещенРучнойВвод().Найти(ИмяСправочника) <> Неопределено
	Тогда
		
		Если ДекорацияИнфо = Неопределено Тогда
			ПолеВвода = Элементы.Вставить(
			"ДекорацияИнфо",
			Тип("ДекорацияФормы"),
			ЭтаФорма,
			Элементы.ГруппаОсновное);
			
			ПолеВвода.Заголовок = "Элементы данного справочника не редактируются, т.к. включена авто синхронизация с ФР НСИ ЕГИСЗ";
			ПолеВвода.ЦветТекста = ЦветаСтиля.ПоясняющийТекст;
			ПолеВвода.АвтоМаксимальнаяШирина = Ложь;
		КонецЕсли;
		
		НередактируемыйСправочник = Истина;
	Иначе
		Если ДекорацияИнфо <> Неопределено Тогда
			Элементы.Удалить(ДекорацияИнфо);
		КонецЕсли;
		
		НередактируемыйСправочник = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьПолеВводаРеквизита(ИмяРеквизита, Тип, Представление)
	
	// Массив для новых реквизитов
	ДобавляемыеРеквизиты = Новый Массив;
	
	// Опишем ревизиты формы
	НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Тип,, Представление, Истина);
	
	// Для наглядности заполним массив после описания реквизитов формы
	ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
	
	// Добавим новые реквизиты в форму
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	ЭтаФорма[ИмяРеквизита] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка,ИмяРеквизита);
	
	ПолеВвода = Элементы.Добавить(
		ИмяРеквизита,					//Имя элемента формы
		Тип("ПолеФормы"),				//Тип, всегда ПолеФормы
		Элементы.ГруппаРеквизиты);		//Контейнер для поля ввода (Форма,Группа,Страница)
	
	ПолеВвода.Заголовок = Представление;
	ПолеВвода.Вид = ВидПоляФормы.ПолеВвода;
	
	ПолеВвода.МногострочныйРежим = (Тип = Новый ОписаниеТипов("Строка") И Тип.КвалификаторыСтроки.Длина = 0);
	ПолеВвода.АвтоМаксимальнаяШирина = Ложь;
	
	// Установка связи элемента с данными
	ПолеВвода.ПутьКДанным = ИмяРеквизита;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КлассификаторыЗапрещенРучнойВвод()
	
	ИменаСправочников = Новый Массив;
	
	ОсновнаяСтрана = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнаяСтрана");
	Если Не ЗначениеЗаполнено(ОсновнаяСтрана)
		Или ОсновнаяСтрана = Справочники.СтраныМира.Россия
	Тогда
		ИменаСправочников.Добавить("КлассификаторыМинЗдрава");
		ИменаСправочников.Добавить("РегистрируемыеЭлектронныеМедДокументы");
		ИменаСправочников.Добавить("РеестрМедицинскихОрганизаций");
		ИменаСправочников.Добавить("РеестрСтраховыхМедОрганизаций");
		ИменаСправочников.Добавить("ДействующиеВеществаЛекарственныхПрепаратов");
		ИменаСправочников.Добавить("СтруктураПодразделений");
		ИменаСправочников.Добавить("Диагнозы");
	КонецЕсли;
	
	Возврат ИменаСправочников;
	
КонецФункции

&НаСервере
Процедура ЗаписатьОбъект()
	
	МетаданныеСправочника = Ссылка.Метаданные();
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		ОбъектЭлемента = Ссылка.ПолучитьОбъект();
	ИначеЕсли Ссылка.ЭтоГруппа Тогда 
		МенеджерСправочника = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		ОбъектЭлемента = МенеджерСправочника.СоздатьГруппу();
	Иначе
		МенеджерСправочника = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Ссылка);
		ОбъектЭлемента = МенеджерСправочника.СоздатьЭлемент();
	КонецЕсли;
		
	Для Каждого РеквизитФормы Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		
		Если РеквизитФормы.Имя = "Атрибуты"
			Или РеквизитФормы.Имя = "Ссылка"
			Или РеквизитФормы.Имя = "Копирование"
		Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ОбъектЭлемента, РеквизитФормы.Имя) Тогда
			Если РеквизитФормы.Имя = "Родитель"
					И Не МетаданныеСправочника.Иерархический
				Или РеквизитФормы.Имя = "Код"
					И Ссылка.Метаданные().ДлинаКода = 0
			Тогда
				Продолжить;
			КонецЕсли;
			
			ОбъектЭлемента[РеквизитФормы.Имя] = ЭтаФорма[РеквизитФормы.Имя];
		КонецЕсли;
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Ссылка, "Атрибуты") Тогда
		ОбъектЭлемента.Атрибуты.Очистить();
		Для Каждого СтрокаАтрибута Из Атрибуты Цикл
			НоваяСтрока = ОбъектЭлемента.Атрибуты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаАтрибута);
		КонецЦикла;
	КонецЕсли;
	
	ОбъектЭлемента.Записать();
	Если Не ЗначениеЗаполнено(Ссылка) Тогда
		Ссылка = ОбъектЭлемента.Ссылка;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	
	Элементы.Атрибуты.ИзменятьПорядокСтрок			= ДопустимоРедактированиеЭлемента;
	Элементы.Атрибуты.ИзменятьСоставСтрок			= ДопустимоРедактированиеЭлемента;
	
	Элементы.ГруппаОбщиеРеквизиты.ТолькоПросмотр	= Не ДопустимоРедактированиеЭлемента;
	Элементы.АтрибутыКлюч.ТолькоПросмотр			= Не ДопустимоРедактированиеЭлемента;
	Элементы.ГруппаОсновное.ТолькоПросмотр			= Не ДопустимоРедактированиеЭлемента И НередактируемыйСправочник;
	
	Элементы.ФормаЗаписать.Доступность				= ДопустимоРедактированиеЭлемента Или Не НередактируемыйСправочник;
	Элементы.ФормаЗаписатьИЗакрыть.Доступность		= ДопустимоРедактированиеЭлемента Или Не НередактируемыйСправочник;
	
	Если ДопустимоРедактированиеЭлемента Тогда
		Элементы.ВидКлассификатора.ТолькоПросмотр = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти