
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если (ЭтаФорма.Объект.Ссылка.Пустая() И Не ЗначениеЗаполнено(ЭтаФорма.Объект.ФормулаРасчета)) Тогда
		Масс = Новый Массив;
		Масс = Заполнить_По_Умолчанию();
		ЭтаФорма.Объект.ФормулаРасчета = Масс[0];
		ЭтаФорма.Объект.Периодичность  = Масс[1];
	КонецЕсли;
	
	ОбновитьДоступностьПараметров();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриИзмененииВидаПараметра("Показатель1");
	ПриИзмененииВидаПараметра("Показатель2");
	ПриИзмененииВидаПараметра("Показатель3");
	ОбновитьОписаниеФормулы();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВидПараметра1ПриИзменении(Элемент)
	ПриИзмененииВидаПараметра("Показатель1");
КонецПроцедуры

&НаКлиенте
Процедура ВидПараметра2ПриИзменении(Элемент)
	ПриИзмененииВидаПараметра("Показатель2");
КонецПроцедуры

&НаКлиенте
Процедура ВидПараметра3ПриИзменении(Элемент)
	ПриИзмененииВидаПараметра("Показатель3");
КонецПроцедуры

&НаКлиенте
Процедура ФормулаРасчетаПриИзменении(Элемент)
	ОбновитьДоступностьПараметров();
	ОбновитьОписаниеФормулы();
КонецПроцедуры

&НаСервере
Процедура ОбработкаПолученияДанныхВыбора(ДанныеВыбора, Параметры, СтандартнаяОбработка) 
	СтандартнаяОбработка = Ложь;
    Параметр = Параметры.Параметр;
	ВидПараметра = Параметры.ВидПараметра;
	Масс = Новый Массив;
	Если Параметр = "Показатель1" Тогда
                  
		Если ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ДанныеТабеля Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоДнейПоТабелю);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоЧасовПоТабелю);	
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноСверхНормы);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноСверхНормы);

		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Шкала Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр2);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр3);

		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Ответственный 
			Или ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Филиал 
		Тогда
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаОплат);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажУслуг);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажТоваров);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажАбонементов);
			
		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки Или
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеТовары Или 
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги Тогда
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Себестоимость);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СтоимостьПоПрайсу);
			
		КонецЕсли;
		ЭтаФорма.Элементы.ПоказательРасчета1.СписокВыбора.ЗагрузитьЗначения(Масс);
		
	ИначеЕсли Параметр = "Показатель2" Тогда
		ЭтаФорма.Элементы.ПоказательРасчета2.СписокВыбора.Очистить();

		Если ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ДанныеТабеля Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоДнейПоТабелю);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоЧасовПоТабелю);			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноСверхНормы);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноСверхНормы);

		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Шкала Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр1);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр3);
			
		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Ответственный Или ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Филиал Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаОплат);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажУслуг);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажТоваров);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажАбонементов);
			
		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки Или
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеТовары Или 
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Себестоимость);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СтоимостьПоПрайсу);

		КонецЕсли;
		ЭтаФорма.Элементы.ПоказательРасчета2.СписокВыбора.ЗагрузитьЗначения(Масс);
		
	Иначе
		ЭтаФорма.Элементы.ПоказательРасчета3.СписокВыбора.Очистить();
		Если ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ДанныеТабеля Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоДнейПоТабелю);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.КоличествоЧасовПоТабелю);			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноСверхНормы);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноПоНорме);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноСверхНормы);

		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Шкала Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр1);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Параметр2);
			
		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Ответственный Или ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Филиал Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаОплат);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажУслуг);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажТоваров);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаПродажАбонементов);
			
		ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки Или
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеТовары Или 
					ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги Тогда
			
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Количество);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СуммаБезСкидок);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Себестоимость);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.Сумма);
			Масс.Добавить(Перечисления.ПоказателиРасчетаНачислений.СтоимостьПоПрайсу);

		КонецЕсли;
		ЭтаФорма.Элементы.ПоказательРасчета3.СписокВыбора.ЗагрузитьЗначения(Масс);
	КонецЕсли; 

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция Заполнить_По_Умолчанию()
	
	Масс = Новый Массив;
	Масс.Добавить(Перечисления.ФормулыРасчетаЗаработнойПлаты.ФиксированнаяСумма);
	Масс.Добавить(Перечисления.ПериодичностиВидовРасчета.Месяц);
	Возврат Масс;

КонецФункции // Заполнить_По_Умолчанию()()

&НаСервере
Процедура ОбновитьДоступностьПараметров()
	
	ЧислоПараметров = РасчетЗаработнойПлаты.ПолучитьЧислоПараметровВидаНачисления(Объект);
	Для сч = 1 По 3 Цикл
		ЭтаФорма.Элементы["Показатель"+сч].Доступность = сч <= ЧислоПараметров;
	КонецЦикла;
	
	Если ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.ФиксированнаяСумма Тогда
		ЭтаФорма.Элементы.Показатель1.Доступность = Ложь;
	КонецЕсли;
	
	// Автоподстановка видов параметров по-умолчанию.
	Если (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.ФиксированнаяСумма И (ЭтаФорма.Модифицированность Или ЭтаФорма.Объект.Ссылка.Пустая())) Тогда
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		
	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.МинимальныйОклад И (ЭтаФорма.Модифицированность Или ЭтаФорма.Объект.Ссылка.Пустая())) Тогда
		
		Если ЭтаФорма.Объект.ВидПараметра1 <> Перечисления.ВидыПараметровРасчетаНачислений.Число
			Или ЗначениеЗаполнено(ЭтаФорма.Объект.ВидПараметра2)
		Тогда
			ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
			ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
			ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
			ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
			ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
			ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		КонецЕсли;
		
	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.Процент И ЭтаФорма.Модифицированность) Тогда
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		
	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.Разность И ЭтаФорма.Модифицированность) Тогда
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Себестоимость;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();

	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.ПроцентОтРазности И ЭтаФорма.Модифицированность) Тогда
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.ВсеУслуги;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Себестоимость;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();

	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.Произведение И ЭтаФорма.Модифицированность) Тогда	
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();

	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.Деление И ЭтаФорма.Модифицированность) Тогда	
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		
	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.ТройноеПроизведение И ЭтаФорма.Модифицированность) Тогда	
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.Число;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;	
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		
	ИначеЕсли (ЭтаФорма.Объект.ФормулаРасчета = Перечисления.ФормулыРасчетаЗаработнойПлаты.ДелениеПроизведения И ЭтаФорма.Модифицированность) Тогда	
		
		ЭтаФорма.Объект.ВидПараметра1 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;
		ЭтаФорма.Объект.ВидПараметра2 = Перечисления.ВидыПараметровРасчетаНачислений.КатегорияВыработки;
		ЭтаФорма.Объект.ВидПараметра3 = Перечисления.ВидыПараметровРасчетаНачислений.Число;	
		ЭтаФорма.Объект.ПоказательРасчета1 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета2 = Перечисления.ПоказателиРасчетаНачислений.Сумма;
		ЭтаФорма.Объект.ПоказательРасчета3 = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();

	КонецЕсли;
	
	Если ЭтаФорма.Модифицированность Тогда
		ПриИзмененииВидаПараметра("Показатель1");
		ПриИзмененииВидаПараметра("Показатель2");
		ПриИзмененииВидаПараметра("Показатель3");
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииВидаПараметра(Параметр)
	
	ВидПараметра	 	= ЭтаФорма.Объект["ВидПараметра"+Прав(Параметр,1)];
	ИмяПоказателя	  	= "ПоказательРасчета"+Прав(Параметр,1);
	ЭлементПоказатель	= ЭтаФорма.Элементы[ИмяПоказателя];
	
	Если ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Число			Или
		 ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ВидНачисления  Или
		 ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ДополнительныйПараметр
	Тогда
		ЭлементПоказатель.Доступность = Ложь;
		Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.ПустаяСсылка();
		
	ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.Шкала Тогда
		ЭлементПоказатель.Доступность = Истина;
		Если (Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.Параметр1
				И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.Параметр2
				И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.Параметр3) 
		Тогда
			Если Параметр = "Показатель1" Тогда
				Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр2;
			ИначеЕсли Параметр = "Показатель2" Тогда
				Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр1;
			Иначе
				Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр1;
			КонецЕсли; 
		КонецЕсли;
		
	ИначеЕсли ВидПараметра = Перечисления.ВидыПараметровРасчетаНачислений.ДанныеТабеля Тогда
		
		ЭлементПоказатель.Доступность = Истина;
		
		Если  (Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.КоличествоДнейПоТабелю
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.КоличествоЧасовПоТабелю
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ДнейПоНорме
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноПоНорме
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ДнейОтработаноСверхНормы
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ЧасовПоНорме
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноПоНорме
			И Объект[ИмяПоказателя] <> Перечисления.ПоказателиРасчетаНачислений.ЧасовОтработаноСверхНормы) Тогда

			Объект[ИмяПоказателя] = Неопределено;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Объект[ИмяПоказателя]) Тогда
			Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.КоличествоДнейПоТабелю;
		КонецЕсли; 	
	
	Иначе
		ЭлементПоказатель.Доступность = Истина;
		Если (Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр1
				Или Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр2
				Или Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Параметр3) Тогда
			Объект[ИмяПоказателя] = Неопределено;	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидПараметра) 
			И Не ЗначениеЗаполнено(Объект[ИмяПоказателя]) Тогда
				Объект[ИмяПоказателя] = Перечисления.ПоказателиРасчетаНачислений.Сумма;		
		КонецЕсли;
	КонецЕсли;
	
	Парам = Новый Структура;
	Парам.Вставить("Параметр", Параметр);
	Парам.Вставить("ВидПараметра", ВидПараметра);
	ОбработкаПолученияДанныхВыбора(Неопределено, Парам, Ложь);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОписаниеФормулы()
	
	ЭтаФорма.Элементы.Описание.Заголовок = ПолучитьОписаниеФормулы(ЭтаФорма.Объект.ФормулаРасчета);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьОписаниеФормулы(Формула) 
	
    Попытка
		Рез = Формула.Метаданные().ЗначенияПеречисления[Перечисления.ФормулыРасчетаЗаработнойПлаты.Индекс(Формула)].Комментарий;	
	Исключение
	    Рез = "";
	КонецПопытки;
	
    Возврат Рез;
	
КонецФункции // ПолучитьОписаниеФормулы()

#КонецОбласти
