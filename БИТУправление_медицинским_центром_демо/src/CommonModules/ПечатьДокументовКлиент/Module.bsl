#Область ПрограммныйИнтерфейс

// Вывести на печать документ
//
// Параметры:
//  СтруктураНаПечать			 - Структура	 - данные для печати.
//  ДокСсылка					 - ЛюбаяСсылка	 - объект печати.
//  ИспользованиеДиалогаПечати	 - Булево		 - отобразить ли диалог печати.
//
Процедура ВывестиНапечататьДокумент(СтруктураНаПечать,ДокСсылка, Знач ИспользованиеДиалогаПечати = Неопределено) Экспорт
	
	Если ТипЗнч(СтруктураНаПечать) = Тип("Структура") Тогда
		
		Если СтруктураНаПечать.Свойство("ПечДокумент") И ТипЗнч(СтруктураНаПечать.ПечДокумент) = Тип("Массив") Тогда
			СтруктураНаПечать.Вставить("КоллекцияПечатныхФорм",СтруктураНаПечать.ПечДокумент);
		Иначе
			ОписаниеПечатнойФормы = Новый Структура;
			ОписаниеПечатнойФормы.Вставить("СинонимМакета", СтруктураНаПечать.СинонимМакета);
			ОписаниеПечатнойФормы.Вставить("Экземпляров",	СтруктураНаПечать.ПечДокумент.ЭкземпляровНаСтранице);
			ОписаниеПечатнойФормы.Вставить("ИмяМакета", СтруктураНаПечать.ИмяМакета);
			ОписаниеПечатнойФормы.Вставить("ПолныйПутьКМакету", СтруктураНаПечать.ПолныйПутьКМакету);
			ОписаниеПечатнойФормы.Вставить("ИмяФайлаПечатнойФормы", "");
			ОписаниеПечатнойФормы.Вставить("ТабличныйДокумент", СтруктураНаПечать.ПечДокумент);

			КоллекцияПечатныхФорм = Новый Массив; 
			КоллекцияПечатныхФорм.Добавить(ОписаниеПечатнойФормы);
			СтруктураНаПечать.Вставить("КоллекцияПечатныхФорм",КоллекцияПечатныхФорм);
		КонецЕсли;
		
		Если СтруктураНаПечать.Свойство("ФормаИмя") Тогда  
			ОткрытьФорму(СтруктураНаПечать.ФормаИмя,СтруктураНаПечать,,ДокСсылка);
		Иначе
			Для Каждого ПечатнаяФорма Из СтруктураНаПечать.КоллекцияПечатныхФорм Цикл
				Если ПечатнаяФорма.Свойство("ТабличныйДокумент") Тогда  
					ВывестиНапечататьДокумент(ПечатнаяФорма.ТабличныйДокумент, ДокСсылка, ИспользованиеДиалогаПечати);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(СтруктураНаПечать) = Тип("ТабличныйДокумент") Тогда
		
		Если ИспользованиеДиалогаПечати = Неопределено Тогда
			ИспользованиеДиалогаПечати = РежимИспользованияДиалогаПечати.Использовать;
		КонецЕсли;
		
		СтруктураНаПечать.Вывод = ИспользованиеВывода.Разрешить;
		СтруктураНаПечать.Напечатать(ИспользованиеДиалогаПечати);
		
	ИначеЕсли ТипЗнч(СтруктураНаПечать)	= Тип("Массив") Тогда
		
		Для Каждого СтрПФ Из СтруктураНаПечать Цикл
			Если ИспользованиеДиалогаПечати <> Неопределено Тогда 
				Если СтрПФ.Экземпляров > 0 Тогда
					Для нЭкз = 1 по СтрПФ.Экземпляров Цикл
						Если СтрПФ.Свойство("Вывод") Тогда
							СтрПФ.Вывод = ИспользованиеВывода.Разрешить;
						КонецЕсли;
						СтрПФ.ТабличныйДокумент.Напечатать(ИспользованиеДиалогаПечати)
					КонецЦикла;
				КонецЕсли;
			Иначе
				СтрПФ.Вставить("ПечДокумент", СтрПФ.ТабличныйДокумент);
				ВывестиНапечататьДокумент(СтрПФ, ДокСсылка, ИспользованиеДиалогаПечати);
			КонецЕсли;
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;	
	
КонецПроцедуры	

// Напечатать печатную форму по умолчанию объекта.
//
// Параметры:
//  Ссылка	 -  ЛюбаяСсылка	 - объект печати.
//
Процедура НапечататьДокументПоУмолчаниюКлиент(Ссылка) Экспорт
	
	Результат = ПечатьДокументовСервер.НапечататьДокументПоУмолчаниюСервер(Ссылка);
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		
		Если Результат.Свойство("ЭтоВнутренняя") И Результат.ЭтоВнутренняя Тогда
			
			ПечатьДокументовКлиент.ВывестиНапечататьДокумент(Результат,Ссылка);
			
		ИначеЕсли Результат.Свойство("ПечатныеФормы") Тогда
			
			СтруктураНаПечать = ПечатьДокументовКлиент.НапечататьПакетДокументов(Результат.ПечатныеФормы, Ссылка, Результат.Пакет, Результат.НаПринтер);
			ПечатьДокументовКлиент.ВывестиНапечататьДокумент(СтруктураНаПечать,Ссылка);
			
		Иначе	
			РезультатПечати = НапечататьВнешнююФормуСПроверкойРежимаКлиент(Ссылка, Результат);
			
			Если ТипЗнч(РезультатПечати) = Тип("ТабличныйДокумент") Тогда
				ТабДокумент = РезультатПечати;
				ЭтоДокумент = ДопСерверныеФункции.ЭтоДокумент(Ссылка);
				СтруктураНаПечать = УниверсальныеМеханизмыСервер.НапечататьДокумент(ТабДокумент, 0, , ?(ЭтоДокумент, 
				ОбщегоНазначенияСервер.СформироватьЗаголовокДокумента(Ссылка), Строка(Ссылка)), 
				Ссылка,,,,Строка(Результат.СсылкаНаВнешнююОбработку));
				
				ПечатьДокументовКлиент.ВывестиНапечататьДокумент(СтруктураНаПечать,Ссылка);
			Иначе
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Результат) = Тип("СправочникСсылка.ШаблоныПечати") Тогда
		ШаблонПечати = Результат;
		СодержаниеОшибки = "";
		Результат = РаботаСШаблонамиПечатиКлиент.ВыполнитьПечатьДокументаПоШаблонуПечати(Ссылка, ШаблонПечати, СодержаниеОшибки,,Новый Структура("НаПринтер,КоличествоЭкземпляров"));
		Если Не Результат Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СодержаниеОшибки);
		КонецЕсли;
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

// Напечатать внешнюю форму.
//
// Параметры:
//  Объект	- ЛюбаяСсылка	 - объект печати.
//  стрРасшифровка	 - Структура	 - данные о печатной форме.
// 
// Возвращаемое значение:
//  ТабличныйДокумент.
//
Функция НапечататьВнешнююФормуСПроверкойРежимаКлиент(Объект, стрРасшифровка) Экспорт
	
	Рез = УниверсальныеМеханизмыСервер.РежимЗапускаОбработкиСервер(Объект, стрРасшифровка);
	
	Если  ТипЗнч(Рез) = Тип("Строка") Тогда
		Попытка
			Форма = ПолучитьФорму("ВнешняяОбработка."+Рез+".Форма.Форма1");
			Форма.Открыть();
		Исключение
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось запустить печатную форму" + Символы.ПС + Строка(ОписаниеОшибки()));
		КонецПопытки;	
		Возврат Неопределено;
	Иначе
		ТабДокумент = УниверсальныеМеханизмыСервер.НапечататьВнешнююФормуСервер(Объект, стрРасшифровка);
		Возврат ТабДокумент;	
	КонецЕсли;	
	
КонецФункции

// Настройка кнопок общих команд печати формы.
//
// Параметры:
//  ЭтаФорма							 - ФормаКлиентскогоПриложения - управляемая форма.
//  ПоказыватьКнопкуПечатьПоУмолчанию	 - Булево - показывать ли кнопку печати по умолчанию. По умолчанию равно ИСТИНА.
//
Процедура УстановитьЗаголовокПечатнойФормы(ЭтаФорма, ПоказыватьКнопкуПечатьПоУмолчанию = Истина) Экспорт
	
	мсИмяФормы	= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ЭтаФорма.ИмяФормы,".");
	ЭтоДокумент = мсИмяФормы[0] = "Документ";
	ИмяОбъекта	= мсИмяФормы[1];
	
	Если ЭтаФорма.Элементы.Найти("ФормаОбщаяКомандаПечатьПоУмолчанию") <> Неопределено Тогда
		Заголовок = ПолучитьИмяПечатнойФормыДокументаПоУмолчаниюИзКэша(ИмяОбъекта);
		Если ЗначениеЗаполнено(Заголовок) Тогда
			Кнопка = ЭтаФорма.Элементы.ФормаОбщаяКомандаПечатьПоУмолчанию;
			Если ПоказыватьКнопкуПечатьПоУмолчанию Тогда
				ПрисвоитьЗаголовокПечатнойФормыКнопкеФормы(Кнопка, Заголовок);
			Иначе
				Кнопка.Видимость = Ложь;
			КонецЕсли;
		Иначе
			// Если нет заголовка основной печатной формы, значит однозначно нет ни одной печатной формы.
			ЭтаФорма.Элементы.ФормаОбщаяКомандаПечать.Видимость = Ложь;
			ЭтаФорма.Элементы.ФормаОбщаяКомандаПечатьПоУмолчанию.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура - Присвоить заголовок печатной формы кнопке формы
//
// Параметры:
//  Кнопка		 - КнопкаФормы	 - кнопка на командной панели.
//  Заголовок	 - Строка	 - название печатной формы.
//
Процедура ПрисвоитьЗаголовокПечатнойФормыКнопкеФормы(Кнопка, Заголовок) Экспорт
	
	МаксДлина = 50;
	Кнопка.Заголовок = ?(СтрДлина(Заголовок) > МаксДлина, Лев(Заголовок, МаксДлина) + "..", Заголовок);
	
КонецПроцедуры

// Формирует печатную форму объекта.
//
// Параметры:
//  СоставПакета - Массив - печатные формы пакета.
//  Источник	 - ЛюбаяСсылка	 - объект печати.
//  Пакет		 - Неопределено	 - не используется.
//  НаПринтер	 - Булево	 - отобразить ли диалог печати.
// 
// Возвращаемое значение:
//  Структура - данные печатной формы.
//
Функция НапечататьПакетДокументов(СоставПакета, Источник, Пакет = Неопределено, НаПринтер = Ложь) Экспорт 
	
	Если СоставПакета.Количество() > 0 И ЗначениеЗаполнено(Источник) Тогда 
		
		СодержаниеОшибки 	= "";
		СсылкаНаОбъект = Источник;
		
		КоллекцияПечатныхФорм = Новый Массив();	

		Для Каждого Строка Из СоставПакета Цикл
			
			Если ТипЗнч(строка) = Тип("Массив") И Строка.Количество() > 0 Тогда 
				Строка = Строка[0];
			КонецЕсли;
			
			Если Строка.ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ДоговорСКлиентом") Тогда 
				
				ДоговорСсылка = ПечатьДокументовСервер.СоздатьДоговорНаСервере(Строка.СсылкаНаВнешнююОбработку, Источник);
				Результат = РаботаСШаблонамиПечатиКлиент.ВыполнитьПечатьДокументаПоШаблонуПечати(ДоговорСсылка,ОбщегоНазначения.ПолучитьЗначениеРеквизита(Строка.СсылкаНаВнешнююОбработку,"ШаблонПечати"), СодержаниеОшибки, ,Новый Структура("НаПринтер,КоличествоЭкземпляров",НаПринтер,строка.КолЭкз));
				
				Если Не Результат Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СодержаниеОшибки);
				КонецЕсли;
				
			ИначеЕсли Строка.ВидОбъекта  = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ПечатнаяФорма") Тогда 
				Если ТипЗнч(строка.Расшифровка) = Тип("Строка") И Строка.Расшифровка <> "Структура" Тогда
					
					ПечатьДокументовСервер.ЗаполнитьТабДок(КоллекцияПечатныхФорм, Строка.КолЭкз, СсылкаНаОбъект, Строка.Имя, Строка.ПредставлениеОбъекта);
					
				ИначеЕсли ТипЗнч(строка.Расшифровка) = Тип("Строка") И Строка.Расшифровка = "Структура" Тогда
					стрРасшифровка = Новый Структура;
					стрРасшифровка.Вставить("ВидПечатнойФормы", Строка.ВидПечатнойФормы);
					стрРасшифровка.Вставить("СсылкаНаВнешнююОбработку", Строка.СсылкаНаВнешнююОбработку);
					стрРасшифровка.Вставить("ЗаменяемаяПечатнаяФорма", Строка.ЗаменяемаяПечатнаяФорма);
					стрРасшифровка.Вставить("ОбъектПечати", Пакет);
					
					РезультатПечати = ПечатьДокументовКлиент.НапечататьВнешнююФормуСПроверкойРежимаКлиент(ОбщегоНазначения.ПолучитьЗначениеРеквизита(Источник,"Ссылка"), стрРасшифровка);
					Если ТипЗнч(РезультатПечати) = Тип("ТабличныйДокумент") Тогда
						
						ПечатьДокументовСервер.ЗаполнитьТабДок(КоллекцияПечатныхФорм, строка.КолЭкз, СсылкаНаОбъект, Строка.Имя, Строка.ПредставлениеОбъекта, РезультатПечати);
						
					КонецЕсли;
					
				КонецЕсли;
			ИначеЕсли Строка.ВидОбъекта  = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ШаблонПечати") Тогда 
				
				ШаблонПечати = строка.СсылкаНаВнешнююОбработку;
				СодержаниеОшибки = "";
				Результат = РаботаСШаблонамиПечатиКлиент.ВыполнитьПечатьДокументаПоШаблонуПечати(Источник, ШаблонПечати, СодержаниеОшибки,,Новый Структура("НаПринтер,КоличествоЭкземпляров",НаПринтер,строка.КолЭкз));
				Если Не Результат Тогда
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СодержаниеОшибки);
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
	Возврат УниверсальныеМеханизмыСервер.НапечататьДокумент(КоллекцияПечатныхФорм, 1, НаПринтер, СсылкаНаОбъект, СсылкаНаОбъект);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьИмяПечатнойФормыДокументаПоУмолчаниюИзКэша(ИмяОбъекта)
	
	Если глКэшПечатныхФорм = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Для Каждого ЭлементМассива Из глКэшПечатныхФорм Цикл
			Если ИмяОбъекта = ЭлементМассива.ИмяОбъекта Тогда
				Возврат ЭлементМассива.ИмяПФ;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;

	Возврат Неопределено;
	
КонецФункции

#КонецОбласти
