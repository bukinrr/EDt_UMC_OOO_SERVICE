
#Область ОбработчикиСобытийДокументов

// См. ИнтеграцияМДЛППереопределяемый.ОбработкаЗаполнения
Процедура ОбработкаЗаполнения(ДокументОбъект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДокумента = ТипЗнч(ДокументОбъект);
	Если ТипДокумента = Тип("ДокументОбъект.УведомлениеОПриемкеМДЛП") Тогда
		ЗаполнитьУведомлениеОПриемкеМДЛП(ДокументОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.УведомлениеОбОприходованииМДЛП") Тогда
		ЗаполнитьУведомлениеОбОприходованииМДЛП(ДокументОбъект, ДанныеЗаполнения);
	ИначеЕсли ТипДокумента = Тип("ДокументОбъект.УведомлениеОбОтгрузкеМДЛП") Тогда
		ЗаполнитьУведомлениеОбОтгрузкеМДЛП(ДокументОбъект, ДанныеЗаполнения);
	ИначеЕсли ОбщегоНазначения.ЭтоСсылка(ТипЗнч(ДанныеЗаполнения)) Тогда
		ЗаполнитьУведомлениеНаОсновании(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
	ДокументОбъект.Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

// См. ИнтеграцияМДЛППереопределяемый.ОбработкаПроверкиЗаполнения
Процедура ОбработкаПроверкиЗаполнения(ДокументОбъект, Отказ, ПроверяемыеРеквизиты, НепроверяемыеРеквизиты) Экспорт
	
	
	
КонецПроцедуры

// См. ИнтеграцияМДЛППереопределяемый.ПередЗаписью
Процедура ПередЗаписью(ДокументОбъект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
	
КонецПроцедуры

#КонецОбласти

#Область ПанельМаркировкиМДЛП

// См. ИнтеграцияМДЛППереопределяемый.*ТекстЗапросаОформите.
Функция УведомлениеТексЗапросаОформите(Уведомление) Экспорт
	
	Основания = Новый Массив;
	Для Каждого ТипОснования Из Уведомление.Реквизиты.Основание.Тип.Типы() Цикл
		
		Если ОбщегоНазначения.ЭтоСсылка(ТипОснования) Тогда
			Основания.Добавить(Метаданные.НайтиПоТипу(ТипОснования));
		КонецЕсли;
		
	КонецЦикла;
	
	Если Основания.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СтатусыОформления.Основание) КАК КоличествоДокументов
	|ИЗ
	|	РегистрСведений.СтатусыОформленияДокументовМДЛП КАК СтатусыОформления
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыОформленияДокументовМДЛП КАК ДругиеУведомленияПоОснованию
	|	ПО
	|		ДругиеУведомленияПоОснованию.Основание = СтатусыОформления.Основание
	|		И ДругиеУведомленияПоОснованию.СтатусОформления <> ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовМДЛП.НеОформлено)
	|		И НЕ ДругиеУведомленияПоОснованию.Документ В (&СовместноВводимыеУведомления)
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	|	ПО
	|		ОрганизацииМДЛП.Организация = СтатусыОформления.Организация
	|		И ОрганизацииМДЛП.МестоДеятельности = СтатусыОформления.МестоДеятельности
	|//СОЕДИНЕНИЯ
	|ГДЕ
	|	СтатусыОформления.Документ = &Уведомление
	|	И СтатусыОформления.СтатусОформления В (
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовМДЛП.НеОформлено),
	|		ЗНАЧЕНИЕ(Перечисление.СтатусыОформленияДокументовМДЛП.ОформленоЧастично)
	|	)
	|	И ДругиеУведомленияПоОснованию.Основание ЕСТЬ NULL
	|	И (&Организация = НЕОПРЕДЕЛЕНО ИЛИ ОрганизацииМДЛП.Организация = &Организация)
	|	И (&МестоДеятельности = НЕОПРЕДЕЛЕНО ИЛИ ОрганизацииМДЛП.МестоДеятельности = &МестоДеятельности)
	|//УСЛОВИЯ
	|";
	
	Соединения = "";
	УсловияСсылка = Новый Массив;
	
	Для Каждого Основание Из Основания Цикл
		
		Если Не ПравоДоступа("Чтение", Основание) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяТаблицы = Основание.ПолноеИмя();
		Псевдоним  = Основание.Имя;
		
		Соединения = Соединения + СтрШаблон("
		|	ЛЕВОЕ СОЕДИНЕНИЕ
		|		%1 КАК %2
		|	ПО
		|		%2.Ссылка = СтатусыОформления.Основание
		|",
		ИмяТаблицы,
		Псевдоним);
		УсловияСсылка.Добавить(СтрШаблон("%1.Ссылка ЕСТЬ НЕ NULL", Псевдоним));
		
	КонецЦикла;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&Уведомление", СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Уведомление.ПолноеИмя()));
	
	СовместноВводимыеУведомления = Новый Массив;
	СовместноВводимыеУведомления.Добавить(СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Уведомление.ПолноеИмя()));
	Если Уведомление.ПолноеИмя() = Метаданные.Документы.УведомлениеОПередачеНаУничтожениеМДЛП.ПолноеИмя() Тогда
		СовместноВводимыеУведомления.Добавить(СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Метаданные.Документы.УведомлениеОФактеУничтоженияМДЛП.ПолноеИмя()));
	ИначеЕсли Уведомление.ПолноеИмя() = Метаданные.Документы.УведомлениеОФактеУничтоженияМДЛП.ПолноеИмя() Тогда
		СовместноВводимыеУведомления.Добавить(СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Метаданные.Документы.УведомлениеОПередачеНаУничтожениеМДЛП.ПолноеИмя()));
	ИначеЕсли Уведомление.ПолноеИмя() = Метаданные.Документы.УведомлениеОВыбытииМДЛП.ПолноеИмя() Тогда
		СовместноВводимыеУведомления.Добавить(СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Метаданные.Документы.УведомлениеОПовторномВводеВОборотМДЛП.ПолноеИмя()));
	ИначеЕсли Уведомление.ПолноеИмя() = Метаданные.Документы.УведомлениеОПовторномВводеВОборотМДЛП.ПолноеИмя() Тогда
		СовместноВводимыеУведомления.Добавить(СтрШаблон("ЗНАЧЕНИЕ(%1.ПустаяСсылка)", Метаданные.Документы.УведомлениеОВыбытииМДЛП.ПолноеИмя()));
	КонецЕсли;
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СовместноВводимыеУведомления", СтрСоединить(СовместноВводимыеУведомления, ","));
	
	Если Не ПустаяСтрока(Соединения) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//СОЕДИНЕНИЯ", Соединения);
	КонецЕсли;
	
	Если УсловияСсылка.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЯ", СтрШаблон("И (%1)", СтрСоединить(УсловияСсылка, " ИЛИ ")) + Символы.ПС + "//УСЛОВИЯ");
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти


#Область ПрограммныйИнтерфейс

Процедура ПриИзмененииПараметровНоменклатуры(Объект, ТекущаяСтрока, ПараметрыЗаполнения) Экспорт
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.Номенклатура) И ЗначениеЗаполнено(ТекущаяСтрока.Серия) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	СправочникНоменклатура.Ссылка КАК Номенклатура,
	|	СправочникСерии.Ссылка КАК Серия
	|ИЗ
	|	Справочник.Номенклатура КАК СправочникНоменклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ПО (СправочникСерии.Владелец = СправочникНоменклатура.Ссылка)
	|			И (СправочникСерии.НомерСерии = &НомерСерии)
	|			И (СправочникСерии.ГоденДо = &ГоденДо)
	|			И (СправочникСерии.СерияПромаркированаДляЦелейМДЛП)
	|ГДЕ
	|	СправочникНоменклатура.Ссылка = &Номенклатура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ШтрихкодыНоменклатуры.Владелец,
	|	СправочникСерии.Ссылка
	|ИЗ
	|	РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ПО (СправочникСерии.Владелец = ШтрихкодыНоменклатуры.Владелец)
	|			И (СправочникСерии.НомерСерии = &НомерСерии)
	|			И (СправочникСерии.ГоденДо = &ГоденДо)
	|			И (СправочникСерии.СерияПромаркированаДляЦелейМДЛП)
	|ГДЕ
	|	&Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И ШтрихкодыНоменклатуры.Штрихкод = &GTIN
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СправочникСерии.Владелец,
	|	СправочникСерии.Ссылка
	|ИЗ
	|	Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|		ПО (ШтрихкодыНоменклатуры.Штрихкод = &GTIN)
	|ГДЕ
	|	&Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
	|	И СправочникСерии.НомерСерии = &НомерСерии
	|	И СправочникСерии.ГоденДо = &ГоденДо
	|	И СправочникСерии.СерияПромаркированаДляЦелейМДЛП
	|	И ШтрихкодыНоменклатуры.Владелец ЕСТЬ NULL");
	
	
	Запрос.УстановитьПараметр("ГоденДо",				ТекущаяСтрока.ГоденДо		);
	Запрос.УстановитьПараметр("НомерСерии",				ТекущаяСтрока.НомерСерии	);
	Запрос.УстановитьПараметр("МаркировкаМДЛПЗначение",	Истина						);
	Запрос.УстановитьПараметр("GTIN"        ,			ТекущаяСтрока.GTIN			);
	Запрос.УстановитьПараметр("Номенклатура",			ТекущаяСтрока.Номенклатура	);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
	КонецЕсли;
	
КонецПроцедуры

Функция СтруктураРеквизитыРасчетаСтатусаОформления() Экспорт
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Проведен");
	Реквизиты.Вставить("Дата");
	Реквизиты.Вставить("Номер");
	Реквизиты.Вставить("Ответственный");
	Реквизиты.Вставить("МестоДеятельности");
	Реквизиты.Вставить(ПроцедурыСпециализацииПоставки.ИмяРеквизитаФилиалДокументов());
	
	Возврат Реквизиты;
	
КонецФункции

Функция ЗапросСтатусаОформленияУведомленияОПриемке(ДокументОснование) Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка,
	|	Статусы.Статус КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|		ПО (Статусы.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры КАК Серия,
	|	ТаблицаТовары.Количество / Коэффициенты.Коэффициент КАК План,
	|	0 КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	#ДокументПриемкиТовары КАК ТаблицаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Коэффициенты
	|		ПО (Коэффициенты.Владелец = ТаблицаТовары.Номенклатура)
	|			И (Коэффициенты.Ссылка = ТаблицаТовары.Номенклатура.Упаковка)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(ТаблицаТовары.СерияНоменклатуры.СерияПромаркированаДляЦелейМДЛП, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Серия,
	|	0,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|			ТОГДА ВЫБОР
	|					КОГДА ОформленныеДокументы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто)
	|						ТОГДА 0
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПриемкеМДЛП.Товары КАК ОформленныеТовары
	|		ПО (ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка)
	|			И (ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументы КАК ОформленныеДокументы
	|		ПО (ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Серия,
	|	0,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|			ТОГДА ВЫБОР
	|					КОГДА ОформленныеДокументы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто)
	|						ТОГДА 0
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК УпаковкиТовара
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументы КАК ОформленныеДокументы
	|		ПО (ОформленныеДокументы.Ссылка = УпаковкиТовара.Ссылка)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ОформленныеТовары
	|		ПО (ОформленныеТовары.Ссылка = УпаковкиТовара.Ссылка)
	|			И (ОформленныеТовары.ИдентификаторСтрокиУпаковки = УпаковкиТовара.ИдентификаторСтроки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ОформленныеУпаковки
	|		ПО (ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка)
	|			И (ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	СУММА(ТоварыКОформлению.План) КАК План,
	|	СУММА(ТоварыКОформлению.Факт) КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт > 0
	|			И Т.План > 0) КАК ЕстьОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.Факт >= 0
	|			И Т.План > Т.Факт) КАК ЕстьНеОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План = Т.Факт) КАК ЕстьПолностьюОформленныеТовары,
	|	1 В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			1
	|		ИЗ
	|			Результат КАК Т
	|		ГДЕ
	|			Т.План < Т.Факт) КАК ЕстьОшибкиОформления";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументПриемкиТовары", ДокументОснование.Метаданные().ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияУведомленияОбОтгрузке(ДокументОснование) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка,
	|	Статусы.Статус           КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеМДЛП КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры                      КАК Серия,
	|	ТаблицаТовары.Количество / Коэффициенты.Коэффициент  КАК План,
	|	0                                                    КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	#ДокументОтгрузкиТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК Коэффициенты
	|	ПО
	|		Коэффициенты.Владелец = ТаблицаТовары.Номенклатура
	|		И Коэффициенты.Ссылка = ТаблицаТовары.Номенклатура.Упаковка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(ТаблицаТовары.СерияНоменклатуры.СерияПромаркированаДляЦелейМДЛП, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	0                               КАК План,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|			ТОГДА ВЫБОР
	|					КОГДА ОформленныеДокументы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто)
	|						ТОГДА 0
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Факт
	|ИЗ
	|	Документ.УведомлениеОбОтгрузкеМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОтгрузкеМДЛП.Товары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	СУММА(ТоварыКОформлению.План)    КАК План,
	|	СУММА(ТоварыКОформлению.Факт)    КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План = Т.Факт)                        КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументОтгрузкиТовары", ДокументОснование.Метаданные().ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияОдностороннихУведомлений(МетаданныеУведомления, ДокументОснование, Суффикс = "") Экспорт
	
	ИмяРеквизитаСерий = "СерияНоменклатуры";
	
	//Для Каждого ТипОснования Из Метаданные.ОпределяемыеТипы.ОснованиеУведомленияОРозничнойПродажеМДЛП.Тип.Типы() Цикл
	//	Если ТипЗнч(ДокументОснование) = ТипОснования Тогда
	//		ИмяРеквизитаСерий = "ХарактеристикаНоменклатуры";
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
		
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	#УведомлениеШапка КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|	И НЕ (ТаблицаДокументы.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|		И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура" + Суффикс + "                           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры" + Суффикс + "                      КАК Серия,
	|	ТаблицаТовары.Количество" + Суффикс + " / Коэффициенты.Коэффициент  КАК План,
	|	0                             КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	#ДокументТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК Коэффициенты
	|	ПО
	|		Коэффициенты.Владелец = ТаблицаТовары.Номенклатура" + Суффикс + "
	|		И Коэффициенты.Ссылка = ТаблицаТовары.Номенклатура" + Суффикс + ".Упаковка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(ТаблицаТовары.СерияНоменклатуры" + Суффикс + ".СерияПромаркированаДляЦелейМДЛП, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	0                               КАК План,
	|	1                               КАК Факт
	|ИЗ
	|	#УведомлениеНомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		#УведомлениеТовары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|ГДЕ
	|	НЕ ОформленныеУпаковки.Отклонено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура  КАК Номенклатура,
	|	ТоварыКОформлению.Серия         КАК Серия,
	|	СУММА(ТоварыКОформлению.План)   КАК План,
	|	СУММА(ТоварыКОформлению.Факт)   КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План = Т.Факт)                        КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеШапка", МетаданныеУведомления.ПолноеИмя());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеНомераУпаковок", МетаданныеУведомления.ПолноеИмя() + ".НомераУпаковок");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеТовары", МетаданныеУведомления.ПолноеИмя() + ".Товары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументТовары", ДокументОснование.Метаданные().ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос;
	
КонецФункции

Функция ЗапросСтатусаОформленияУведомленияОбОприходовании(ДокументОснование) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка,
	|	Статусы.Статус           КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|	И НЕ (ТаблицаДокументы.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|		И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры                      КАК Серия,
	|	ТаблицаТовары.Количество / Коэффициенты.Коэффициент  КАК План,
	|	0                                                    КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	#ДокументПриемкиТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК Коэффициенты
	|	ПО
	|		Коэффициенты.Владелец = ТаблицаТовары.Номенклатура
	|		И Коэффициенты.Ссылка = ТаблицаТовары.Номенклатура.Упаковка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(ТаблицаТовары.СерияНоменклатуры.СерияПромаркированаДляЦелейМДЛП, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	0                               КАК План,
	|	1                               КАК Факт
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.Товары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|ГДЕ
	|	НЕ ОформленныеУпаковки.Отклонено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	0                               КАК План,
	|	1                               КАК Факт
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК УпаковкиТовара
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = УпаковкиТовара.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.СоставТранспортныхУпаковок КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = УпаковкиТовара.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтрокиУпаковки = УпаковкиТовара.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.ТранспортныеУпаковки КАК ОформленныеУпаковки
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|ГДЕ
	|	НЕ ОформленныеУпаковки.Отклонено
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура  КАК Номенклатура,
	|	ТоварыКОформлению.Серия         КАК Серия,
	|	СУММА(ТоварыКОформлению.План)   КАК План,
	|	СУММА(ТоварыКОформлению.Факт)   КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План = Т.Факт)                        КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументПриемкиТовары", ДокументОснование.Метаданные().ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Возврат Запрос;
	
КонецФункции

Функция ЕстьМаркируемаяПродукцияМДЛП(ДокументСсылка, ИмяТабличнойЧасти = "Товары", ИмяКолонки = "СерияНоменклатуры") Экспорт
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ЕстьМаркируемаяПродукция
	|ИЗ
	|	#Товары КАК ТаблицаТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ПО ТаблицаТовары.СерияНоменклатуры = СправочникСерии.Ссылка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументСсылка
	|	И СправочникСерии.СерияПромаркированаДляЦелейМДЛП";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СерияНоменклатуры", ИмяКолонки);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Товары", ДокументСсылка.Метаданные().ПолноеИмя() + "." + ИмяТабличнойЧасти);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ЕстьРасхожденияМеждуУведомлениемИОснованием(Уведомление, Основание) Экспорт
	
	ТекстЗапроса = "";
	ТипУведомления = ТипЗнч(Уведомление);
	Если ТипУведомления = Тип("ДокументСсылка.УведомлениеОПриемкеМДЛП") Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаСостоянияУведомленияОПриемке();
	ИначеЕсли ТипУведомления = Тип("ДокументСсылка.УведомлениеОбОприходованииМДЛП") Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаСостоянияУведомленияОбОприходовании();
	ИначеЕсли ТипУведомления = Тип("ДокументСсылка.УведомлениеОПеремещенииМДЛП") Тогда
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаСостоянияУведомленияОПеремещении();
	Иначе
		ТекстЗапроса = ТекстЗапроса + ТекстЗапросаСостоянияУведомления(Уведомление.Метаданные());
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов() + "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                           КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры                      КАК Серия,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Количество / Коэффициенты.Коэффициент КАК ЧИСЛО(15, 5))  КАК План,
	|	0                                                    КАК Факт
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	#ДокументПриемкиТовары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК Коэффициенты
	|	ПО
	|		Коэффициенты.Владелец = ТаблицаТовары.Номенклатура
	|		И Коэффициенты.Ссылка = ТаблицаТовары.Номенклатура.Упаковка
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|	И ЕСТЬNULL(ТаблицаТовары.СерияНоменклатуры.СерияПромаркированаДляЦелейМДЛП, ЛОЖЬ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура                           КАК Номенклатура,
	|	ТаблицаТовары.Серия                                  КАК Серия,
	|	0                                                    КАК План,
	|	ТаблицаТовары.Количество                             КАК Факт
	|ИЗ
	|	ДанныеУведомления КАК ТаблицаТовары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура   КАК Номенклатура,
	|	ТоварыКОформлению.Серия          КАК Серия,
	|	ВЫРАЗИТЬ(СУММА(ТоварыКОформлению.План) КАК ЧИСЛО(15, 3))  КАК План,
	|	ВЫРАЗИТЬ(СУММА(ТоварыКОформлению.Факт) КАК ЧИСЛО(15, 3))  КАК Факт
	|ПОМЕСТИТЬ Результат
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт > 0 И Т.План > 0)                КАК ЕстьОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.Факт >= 0 И Т.План > Т.Факт)          КАК ЕстьНеОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План = Т.Факт)                        КАК ЕстьПолностьюОформленныеТовары,
	|	1 В (ВЫБРАТЬ ПЕРВЫЕ 1 1 ИЗ Результат КАК Т ГДЕ Т.План < Т.Факт)                        КАК ЕстьОшибкиОформления
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументПриемкиТовары", Основание.Метаданные().ПолноеИмя() + ".Товары");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Уведомление", Уведомление);
	Запрос.УстановитьПараметр("ДокументОснование", Основание);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.ЕстьОшибкиОформления;
	
КонецФункции

Процедура ЗаполнитьНоменклатуруВТабличнойЧасти(ТаблицаТовары) Экспорт
	
	Если ТаблицаТовары.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки  КАК НомерСтроки,
	|	ТаблицаТовары.GTIN         КАК GTIN
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	&ТаблицаТовары КАК ТаблицаТовары
	|ИНДЕКСИРОВАТЬ ПО
	|	GTIN
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки               КАК НомерСтроки,
	|	ТаблицаТовары.GTIN                      КАК GTIN,
	|	ШтрихкодыНоменклатуры.Владелец      КАК Номенклатура,
	|	ШтрихкодыНоменклатуры.ЕдиницаИзмерения  КАК ЕдиницаИзмерения
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.Штрихкоды КАК ШтрихкодыНоменклатуры
	|	ПО
	|		ШтрихкодыНоменклатуры.Владелец = ТаблицаТовары.GTIN
	|");
	
	Запрос.УстановитьПараметр("ТаблицаТовары", ТаблицаТовары.Выгрузить(, "НомерСтроки, GTIN"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаТаблицы = ТаблицаТовары[Выборка.НомерСтроки - 1];
		СтрокаТаблицы.Номенклатура = Выборка.Номенклатура;
	КонецЦикла;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ТаблицаТовары[0], "КоличествоУпаковок") Тогда
		Количество = ТаблицаТовары.ВыгрузитьКолонку("Количество");
		ТаблицаТовары.ЗагрузитьКолонку(Количество, "КоличествоУпаковок");
	КонецЕсли;
	
КонецПроцедуры

Функция ОрганизацияМестоДеятельностиОбъекта(ОрганизацияКонтрагент, Склад = Неопределено)
	//+бит
	Экспорт
	//-бит
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	СубъектыОбращения.Организация        КАК Организация,
	|	СубъектыОбращения.МестоДеятельности  КАК МестоДеятельности
	|ИЗ
	|	РегистрСведений.СубъектыОбращенияМДЛП КАК СубъектыОбращения
	|ГДЕ
	|	СубъектыОбращения.ОрганизацияКонтрагент = &ОрганизацияКонтрагент
	|");
	Запрос.УстановитьПараметр("ОрганизацияКонтрагент", ОрганизацияКонтрагент);
	
	Если ЗначениеЗаполнено(Склад) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И СубъектыОбращения.ОбъектМестаДеятельности = &Склад
		|";
		Запрос.УстановитьПараметр("Склад", Склад);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Если Выборка.Количество() > 1 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Выборка.Следующий();
	Результат = Новый Структура("Организация, МестоДеятельности");
	ЗаполнитьЗначенияСвойств(Результат, Выборка);
	Возврат Результат;
	
КонецФункции

Функция ТребуетсяОформлениеДокументовМДЛП(МетаданныеУведомления, Основание) Экспорт
	
	//// В качестве серий мы используем справочник ХарактеристикиНоменклатуры
	//ЕстьМаркируемаяПродукция = ЕстьМаркируемаяПродукцияМДЛП(Основание,, "ХарактеристикаНоменклатуры");
	ЕстьМаркируемаяПродукция = ЕстьМаркируемаяПродукцияМДЛП(Основание,, "СерияНоменклатуры");
	
	Возврат ЕстьМаркируемаяПродукция;
	
КонецФункции

Процедура ЗаполнитьСгенерироватьСерии(Объект, ИмяТабличнойЧасти, СтрокиКОбработке, Результат) Экспорт
	
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	Таблица = ТабличнаяЧасть.Выгрузить(СтрокиКОбработке, "НомерСтроки, Номенклатура, Серия, НомерСерии, ГоденДо");
	
	СтрокиКУдалению = Новый Массив;
	Для Каждого Строка Из Таблица Цикл
		
		Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			
			ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка.НомерСтроки);
			Поле = "Объект." + ИмяТабличнойЧасти + "[%1].Номенклатура";
		
		ИначеЕсли Не ЗначениеЗаполнено(Строка.НомерСерии) Или Не ЗначениеЗаполнено(Строка.ГоденДо) Тогда
			
			ТекстСообщения = НСтр("ru = 'Нет информации о параметрах серии в строке %НомерСтроки%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка.НомерСтроки);
			Поле = "Объект." + ИмяТабличнойЧасти + "[%1].НомерСерии";
			
		ИначеЕсли ЗначениеЗаполнено(Строка.Серия) Тогда
			СтрокиКУдалению.Добавить(Строка);
			Продолжить;
		Иначе
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Результат.Ошибки,
			Поле,
			ТекстСообщения,
			Неопределено,
			Строка.НомерСтроки - 1);
		
		СтрокиКУдалению.Добавить(Строка);
		
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиКУдалению Цикл
		Таблица.Удалить(Строка);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НомерСерии КАК НомерСерии,
	|	Товары.ГоденДо КАК ГоденДо
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	&Товары КАК Товары
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Номенклатура КАК Номенклатура,
	|	СправочникСерии.Ссылка КАК Серия,
	|	Товары.НомерСерии КАК НомерСерии,
	|	Товары.ГоденДо КАК ГоденДо,
	|	&ИспользоватьНомерСерии КАК ИспользоватьНомерСерии,
	|	&ИспользоватьСрокГодностиСерии КАК ИспользоватьСрокГодностиСерии
	|ИЗ
	|	Товары КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	|		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	|		ПО (СправочникСерии.Владелец = Товары.Номенклатура)
	|			И (СправочникСерии.СерияПромаркированаДляЦелейМДЛП)
	|			И (ВЫБОР
	|				КОГДА &ИспользоватьНомерСерии
	|					ТОГДА СправочникСерии.НомерСерии = Товары.НомерСерии
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|			И (ВЫБОР
	|				КОГДА &ИспользоватьСрокГодностиСерии
	|					ТОГДА СправочникСерии.ГоденДо = Товары.ГоденДо
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)");
	
	Запрос.УстановитьПараметр("Товары", Таблица);
	Запрос.УстановитьПараметр("ИспользоватьНомерСерии", ИспользоватьНомерСерии());
	Запрос.УстановитьПараметр("ИспользоватьСрокГодностиСерии", ИспользоватьСрокГодностиСерии());
	
	ТаблицаГенерацииСерий = Новый ТаблицаЗначений;
	ТаблицаГенерацииСерий.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаГенерацииСерий.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацииСерий.Колонки.Добавить("НомерСерии", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ТаблицаГенерацииСерий.Колонки.Добавить("ГоденДо", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТовары = ТабличнаяЧасть[Выборка.НомерСтроки - 1];
		Если ЗначениеЗаполнено(СтрокаТовары.Серия) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Выборка.Серия) Тогда
			СтрокаТовары.Серия = Выборка.Серия;
		Иначе
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
			ПараметрыПоиска.Вставить("НомерСерии"  , Выборка.НомерСерии);
			ПараметрыПоиска.Вставить("ГоденДо"     , Выборка.ГоденДо);
			НайденныеСтроки = ТаблицаГенерацииСерий.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				СтрокаТовары.Серия = НайденныеСтроки[0].Серия;
			Иначе
				НоваяСерия = Справочники.СерииНоменклатуры.СоздатьЭлемент();
				НоваяСерия.Наименование = Строка(Выборка.НомерСерии) + " до " + Формат(Выборка.ГоденДо, "ДФ=dd.MM.yyyy");
				НоваяСерия.Владелец = Выборка.Номенклатура;
				Если Выборка.ИспользоватьНомерСерии Тогда
					НоваяСерия.НомерСерии = Выборка.НомерСерии;
				КонецЕсли;
				Если Выборка.ИспользоватьСрокГодностиСерии Тогда
					НоваяСерия.ГоденДо = Выборка.ГоденДо;
				КонецЕсли;
				НоваяСерия.СерияПромаркированаДляЦелейМДЛП = Истина;
				
				Попытка
					НоваяСерия.Записать();
				Исключение
					ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать серию по причине: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
					ЗаписьЖурналаРегистрации(
						ИнтеграцияМДЛП.СобытиеЖурналаРегистрации(НСтр("ru = 'Генерация серий'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())),
						УровеньЖурналаРегистрации.Ошибка,
						Метаданные.Справочники.СерииНоменклатуры,
						НоваяСерия.Ссылка,
						ТекстСообщения);
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.Ошибки,
						"Объект." + ИмяТабличнойЧасти + "[%1].Серия",
						ТекстСообщения,
						Неопределено,
						Выборка.НомерСтроки - 1);
				КонецПопытки;
				
				СтрокаТовары.Серия = НоваяСерия.Ссылка;
				
				СгенерированнаяСерия = ТаблицаГенерацииСерий.Добавить();
				ЗаполнитьЗначенияСвойств(СгенерированнаяСерия, ПараметрыПоиска);
				СгенерированнаяСерия.Серия = НоваяСерия.Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Результат.ЕстьЗаполненныеСтроки = Истина;
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция ИспользоватьНомерСерии() Экспорт
	Возврат Истина;
КонецФункции

Функция ИспользоватьСрокГодностиСерии() Экспорт
	Возврат Истина;
КонецФункции

Процедура ОбработатьШтрихкоды(Форма, ДанныеДляОбработки, КэшированныеЗначения) Экспорт
	
	Форма.ЗаблокироватьДанныеФормыДляРедактирования();
	
	Модифицированность = Ложь;
	
	ПараметрыЗаполнения = ДанныеДляОбработки.ДействияСИзмененнымиСтроками;
	
	ТабличнаяЧастьТовары = Форма.Объект.Товары;
	ТабличнаяЧастьНомераУпаковок = Форма.Объект.НомераУпаковок;
	
	Если КэшированныеЗначения = Неопределено Тогда
		КэшированныеЗначения = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьСтруктуруКэшированныхЗначений();
	КонецЕсли;
	
	Если ДанныеДляОбработки.Штрихкоды.Количество() > 0 Тогда
		ОбработкаТабличнойЧастиСервер.ЗаполнитьДанныеПоШтрихкодамУпаковок(ДанныеДляОбработки.Штрихкоды, КэшированныеЗначения, ДанныеДляОбработки);
	КонецЕсли;
	
	Для Каждого ТекущийШтрихкод Из ДанныеДляОбработки.Штрихкоды Цикл
		
		Если ТабличнаяЧастьНомераУпаковок.НайтиСтроки(Новый Структура("НомерКиЗ", ТекущийШтрихкод.SGTIN)).Количество() <> 0 Тогда
			Текст = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Упаковка с номером %1 уже присутствует в документе'"),
			ТекущийШтрихкод.SGTIN);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Текст, Форма.Объект.Ссылка,, "Объект");
			Продолжить;
		КонецЕсли;
		
		ДанныеШтрихкода = КэшированныеЗначения.Штрихкоды[ТекущийШтрихкод.Штрихкод];
		Если ЗначениеЗаполнено(ДанныеШтрихкода.Номенклатура) Тогда
			ОтборСтрок = Новый Структура("Номенклатура, Серия");
			ОтборСтрок.Номенклатура = ДанныеШтрихкода.Номенклатура;
			ОтборСтрок.Серия        = ДанныеШтрихкода.СерияНоменклатуры;
		Иначе
			ОтборСтрок = Новый Структура("GTIN, Серия");
			ОтборСтрок.GTIN  = ТекущийШтрихкод.GTIN;
			ОтборСтрок.Серия = Справочники.СерииНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
		НайденныеСтроки = ТабличнаяЧастьТовары.НайтиСтроки(ОтборСтрок);
		Если НайденныеСтроки.Количество() = 0 Тогда
			СтрокаТовара = ТабличнаяЧастьТовары.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТовара, ОтборСтрок);
			СтрокаТовара.GTIN = ТекущийШтрихкод.GTIN;
			СтрокаТовара.ЕдиницаИзмерения = ДанныеШтрихкода.ЕдиницаИзмерения;
			СтрокаТовара.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
			КоличествоУпаковок = 0;
		Иначе
			СтрокаТовара = НайденныеСтроки[0];
			КоличествоУпаковок = ТабличнаяЧастьНомераУпаковок.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаТовара.ИдентификаторСтроки)).Количество();
		КонецЕсли;
		
		Если СтрокаТовара.Количество < КоличествоУпаковок + 1 Тогда
			СтрокаТовара.Количество = СтрокаТовара.Количество + 1;
			СтрокаТовара.КоличествоУпаковок = СтрокаТовара.Количество;
			Если ПараметрыЗаполнения.ПересчитатьСумму Тогда
				СтрокаТовара.Сумма = СтрокаТовара.Количество * СтрокаТовара.Цена;
				СтрокаТовара.СуммаНДС = ?(СтрокаТовара.Количество = 1, СтрокаТовара.СуммаНДС, СтрокаТовара.Количество * СтрокаТовара.СуммаНДС / (СтрокаТовара.Количество - 1));
			КонецЕсли;
		КонецЕсли;
		
		СтрокаУпаковки = ТабличнаяЧастьНомераУпаковок.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаУпаковки, ТекущийШтрихкод);
		СтрокаУпаковки.ИдентификаторСтроки = СтрокаТовара.ИдентификаторСтроки;
		СтрокаУпаковки.НомерКиЗ = ТекущийШтрихкод.SGTIN;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(СтрокаУпаковки, "СостояниеПодтверждения") Тогда
			СтрокаУпаковки.СостояниеПодтверждения = Перечисления.СостоянияПодтвержденияМДЛП.КПередаче;
		КонецЕсли;
		
		Модифицированность = Истина;
		
	КонецЦикла;
	
	КэшированныеЗначения.Штрихкоды.Очистить();
	
	Если Модифицированность Тогда
		Форма.Модифицированность = Модифицированность;
	КонецЕсли;
	
КонецПроцедуры

Функция ОбъектПоОрганизацииМестуДеятельности(Организация, МестоДеятельности, СобственнаяОрганизация) Экспорт
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	МАКСИМУМ(Субъекты.ОрганизацияКонтрагент)                КАК ОрганизацияКонтрагент,
	|	МАКСИМУМ(Субъекты.ОбъектМестаДеятельности)              КАК ОбъектМестаДеятельности,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Субъекты.ОрганизацияКонтрагент)    КАК КоличествоОрганизацияКонтрагент,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Субъекты.ОбъектМестаДеятельности)  КАК КоличествоОбъектМестаДеятельности
	|ИЗ
	|	РегистрСведений.СубъектыОбращенияМДЛП  КАК Субъекты
	|ГДЕ
	|	Субъекты.Организация = &Организация
	|	И (&МестоДеятельности = НЕОПРЕДЕЛЕНО ИЛИ Субъекты.МестоДеятельности = &МестоДеятельности)
	|	И Субъекты.СобственнаяОрганизация = &СобственнаяОрганизация
	|");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МестоДеятельности", ?(ЗначениеЗаполнено(МестоДеятельности), МестоДеятельности, Неопределено));
	Запрос.УстановитьПараметр("СобственнаяОрганизация", СобственнаяОрганизация);
	
	Результат = Новый Структура("Организация, Склад");
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Если Выборка.КоличествоОрганизацияКонтрагент = 1 Тогда
			Результат.Организация = Выборка.ОрганизацияКонтрагент;
		КонецЕсли;
		Если Выборка.КоличествоОбъектМестаДеятельности = 1 Тогда
			Результат.Склад = Выборка.ОбъектМестаДеятельности;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура СохранитьРезультатСопоставленияУпаковокТоваровОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	ТипИсточника = ТипЗнч(Источник);
	Если ТипИсточника = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") Тогда
		ПрименитьРезультатСопоставленияДляУпаковокТовара(Источник.Ссылка);
	ИначеЕсли ЗначениеЗаполнено(Источник.Основание) Тогда
		ПрименитьРезультатСопоставленияДляУпаковокТовара(Источник.Основание);
	ИначеЕсли Не ЗначениеЗаполнено(Источник.Основание) Тогда
		ПрименитьРезультатСопоставленияДляУпаковокТовараИзУведомления(Источник.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПрименитьРезультатСопоставленияДляУпаковокТовара(Поступление)
	
	Запрос = Новый Запрос("
	// Уведомления о приемке
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ПОМЕСТИТЬ УпаковкиУведомления
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено)
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И ТранспортныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено)
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уведомления о перемещении
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ НомераУпаковок.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|	И ТаблицаТовары.Ссылка.Операция = &Операция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ НомераУпаковок.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|	И ТаблицаТовары.Ссылка.Операция = &Операция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уведомления об оприходовании
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ НомераУпаковок.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И ТранспортныеУпаковки.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ ТранспортныеУпаковки.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка.Основание = &Поступление
	|");
	
	Запрос.УстановитьПараметр("Поступление", Поступление);
	Запрос.УстановитьПараметр("Операция"   , Перечисления.ОперацииПеремещенияМДЛП.ПриходныйОрдер);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "УпаковкиУведомления");
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура       КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры  КАК СерияНоменклатуры,
	|	МАКСИМУМ("""") 					 КАК Партия
	|ПОМЕСТИТЬ ТоварыПоступления
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаТовары
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Поступление
	|	И ТаблицаТовары.Ссылка.Проведен
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаТовары.Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.СерияНоменклатуры    КАК СерияНоменклатуры,
	|	ТаблицаТовары.Партия               КАК Партия,
	|	УпаковкиУведомления.НомерУпаковки  КАК НомерУпаковки,
	|	УпаковкиУведомления.ГоденДо        КАК ГоденДо,
	|	УпаковкиТовара.Ссылка              КАК УпаковкаТовара
	|ИЗ
	|	ТоварыПоступления КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		УпаковкиУведомления КАК УпаковкиУведомления
	|	ПО
	|		УпаковкиУведомления.Номенклатура = ТаблицаТовары.Номенклатура
	|		И УпаковкиУведомления.Серия = ТаблицаТовары.СерияНоменклатуры
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.УпаковкиМаркируемогоТовара КАК УпаковкиТовара
	|	ПО
	|		УпаковкиТовара.НомерУпаковки = УпаковкиУведомления.НомерУпаковки
	|		И УпаковкиТовара.КлючУпаковки  = УпаковкиУведомления.КлючУпаковки
	|		И УпаковкиТовара.ГоденДо = УпаковкиУведомления.ГоденДо
	|ГДЕ
	|	УпаковкиТовара.Ссылка ЕСТЬ NULL
	|	ИЛИ УпаковкиТовара.Номенклатура <> ТаблицаТовары.Номенклатура
	|	ИЛИ УпаковкиТовара.СерияНоменклатуры <> ТаблицаТовары.СерияНоменклатуры
	|	ИЛИ УпаковкиТовара.Партия <> ТаблицаТовары.Партия
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.УпаковкаТовара) Тогда
			УпаковкаТовара = Выборка.УпаковкаТовара.ПолучитьОбъект();
		Иначе
			УпаковкаТовара = Справочники.УпаковкиМаркируемогоТовара.СоздатьЭлемент();
			УпаковкаТовара.НомерУпаковки = Выборка.НомерУпаковки;
			УпаковкаТовара.ГоденДо = Выборка.ГоденДо;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(УпаковкаТовара, Выборка, "Номенклатура, СерияНоменклатуры, Партия");
		
		УпаковкаТовара.Записать();
		
	КонецЦикла;
	
КонецПроцедуры


Процедура ПрименитьРезультатСопоставленияДляУпаковокТовараИзУведомления(Уведомление)
	
	Запрос = Новый Запрос("
	// Уведомления о приемке
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ПОМЕСТИТЬ УпаковкиУведомления
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И ТранспортныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.Подтверждено)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уведомления о перемещении
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ НомераУпаковок.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление
	|	И ТаблицаТовары.Ссылка.Операция = &Операция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И ТранспортныеУпаковки.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ ТранспортныеУпаковки.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление
	|	И ТаблицаТовары.Ссылка.Операция = &Операция
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	// Уведомления об оприходовании
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.Товары КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И НомераУпаковок.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ НомераУпаковок.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.Номенклатура         КАК Номенклатура,
	|	ТаблицаТовары.Серия                КАК Серия,
	|	ТаблицаТовары.ГоденДо              КАК ГоденДо,
	|	НомераУпаковок.НомерКиЗ            КАК НомерУпаковки
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК НомераУпаковок
	|	ПО
	|		НомераУпаковок.Ссылка = ТаблицаТовары.Ссылка
	|		И НомераУпаковок.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтрокиУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.ТранспортныеУпаковки КАК ТранспортныеУпаковки
	|	ПО
	|		ТранспортныеУпаковки.Ссылка = ТаблицаТовары.Ссылка
	|		И ТранспортныеУпаковки.ИдентификаторСтроки = ТаблицаТовары.ИдентификаторСтроки
	|		И ТранспортныеУпаковки.Ссылка.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ПринятоГИСМ)
	|		И НЕ ТранспортныеУпаковки.Отклонено
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &Уведомление");
	
	Запрос.УстановитьПараметр("Уведомление", Уведомление);
	Запрос.УстановитьПараметр("Операция"   , Перечисления.ОперацииПеремещенияМДЛП.ПриходныйОрдер);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	ИнтеграцияМДЛП.ДобавитьКлючиУпаковок(Запрос.МенеджерВременныхТаблиц, "УпаковкиУведомления");
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	УпаковкиУведомления.Номенклатура       КАК Номенклатура,
	|	УпаковкиУведомления.Серия              КАК СерияНоменклатуры,
	|	УпаковкиУведомления.НомерУпаковки      КАК НомерУпаковки,
	|	УпаковкиУведомления.ГоденДо            КАК ГоденДо,
	|	УпаковкиТовара.Ссылка                  КАК УпаковкаТовара
	|ИЗ
	|	УпаковкиУведомления КАК УпаковкиУведомления
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.УпаковкиМаркируемогоТовара КАК УпаковкиТовара
	|	ПО
	|		УпаковкиТовара.НомерУпаковки = УпаковкиУведомления.НомерУпаковки
	|		И УпаковкиТовара.КлючУпаковки  = УпаковкиУведомления.КлючУпаковки
	|		И УпаковкиТовара.ГоденДо = УпаковкиУведомления.ГоденДо
	|ГДЕ
	|	УпаковкиТовара.Ссылка ЕСТЬ NULL
	|	ИЛИ УпаковкиТовара.Номенклатура <> УпаковкиУведомления.Номенклатура
	|	ИЛИ УпаковкиТовара.СерияНоменклатуры <> УпаковкиУведомления.Серия
	|";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.УпаковкаТовара) Тогда
			УпаковкаТовара = Выборка.УпаковкаТовара.ПолучитьОбъект();
		Иначе
			УпаковкаТовара = Справочники.УпаковкиМаркируемогоТовара.СоздатьЭлемент();
			УпаковкаТовара.НомерУпаковки = Выборка.НомерУпаковки;
			УпаковкаТовара.ГоденДо = Выборка.ГоденДо;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(УпаковкаТовара, Выборка, "Номенклатура, СерияНоменклатуры");
		
		УпаковкаТовара.Записать();
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКоличествоВозможныхОснованийДляУведомления(Объект) Экспорт
	
	Запрос = Новый Запрос(ТекстЗапросаДокументовПоступленийДляУведомлений(ТипЗнч(Объект.Ссылка)));

	Запрос.УстановитьПараметр("Организация",		Объект.Организация);
	Запрос.УстановитьПараметр("МестоДеятельности",	Объект.МестоДеятельности);
	Запрос.УстановитьПараметр("Грузоотправитель",	Объект.Грузоотправитель);
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "МестоДеятельностиГрузоотправителя") Тогда
		Запрос.УстановитьПараметр("МестоДеятельностиГрузоотправителя", Объект.МестоДеятельностиГрузоотправителя);
	Иначе
		Запрос.УстановитьПараметр("МестоДеятельностиГрузоотправителя", Неопределено);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать().Количество();
	
КонецФункции

Функция ВозможныеУведомленияПоОснованию(МетаданныеУведомления, Основание) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Уведомления.Ссылка КАК Ссылка
	|ИЗ
	|	#Уведомления КАК Уведомления
	|ГДЕ
	|	НЕ Уведомления.ПометкаУдаления
	|	И Уведомления.Организация = &Организация
	|	И Уведомления.МестоДеятельности = &МестоДеятельности
	|	И Уведомления.Основание В (&ПустоеОснование)
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#Уведомления", МетаданныеУведомления.ПолноеИмя());
	
	ИменаРеквизитов = Новый Структура;
	ИменаРеквизитов.Вставить("Организация", ПроцедурыСпециализацииПоставки.ИмяРеквизитаФилиалДокументов());
	
	МетаданныеОснования = Основание.Метаданные();
	Если ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "Склад") Тогда
		ИменаРеквизитов.Вставить("Склад");
	ИначеЕсли ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "СкладОтправитель") Тогда
		ИменаРеквизитов.Вставить("Склад", "СкладОтправитель");
	Иначе
		ИменаРеквизитов.Вставить("Склад", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "НомерВходящегоДокумента") Тогда
		ИменаРеквизитов.Вставить("НомерДокумента", "НомерВходящегоДокумента");
	Иначе
		ИменаРеквизитов.Вставить("НомерДокумента", "Номер");
	КонецЕсли;
	Если ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "ДатаВходящегоДокумента") Тогда
		ИменаРеквизитов.Вставить("ДатаДокумента", "ДатаВходящегоДокумента");
	Иначе
		ИменаРеквизитов.Вставить("ДатаДокумента", "Дата");
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "Контрагент") Тогда
		ИменаРеквизитов.Вставить("Контрагент");
	Иначе
		ИменаРеквизитов.Вставить("Контрагент", "НЕОПРЕДЕЛЕНО");
	КонецЕсли;
	
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Основание, ИменаРеквизитов);
	
	ДанныеОрганизации = ОрганизацияМестоДеятельностиОбъекта(Реквизиты.Организация, Реквизиты.Склад);
	ДанныеКонтрагента = ОрганизацияМестоДеятельностиОбъекта(Реквизиты.Контрагент);
	
	ПустоеОснование = Новый Массив;
	ПустоеОснование.Добавить(МетаданныеУведомления.Реквизиты.Основание.Тип.ПривестиЗначение());
	Для Каждого Тип Из МетаданныеУведомления.Реквизиты.Основание.Тип.Типы() Цикл
		ПустоеОснование.Добавить(ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(Метаданные.НайтиПоТипу(Тип).ПолноеИмя()).ПустаяСсылка());
	КонецЦикла;
	
	Если ЗначениеЗаполнено(Реквизиты.НомерДокумента) И ЗначениеЗаполнено(Реквизиты.ДатаДокумента) Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И Уведомления.НомерДокумента = &НомерДокумента
		|	И Уведомления.ДатаДокумента = &ДатаДокумента
		|";
	КонецЕсли;
	
	Если ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеУведомления, "Грузоотправитель")
	   И ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(МетаданныеОснования, "Контрагент") Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И Уведомления.Грузоотправитель = &Контрагент
		
		|";
	КонецЕсли;
	//+бит
	//Если ОбщегоНазначения.ЕстьРеквизитОбъекта("МестоДеятельностиГрузоотправителя", МетаданныеУведомления) Тогда
	Если ОбщегоНазначения.ЕстьРеквизитОбъектаОбратныйПорядок("МестоДеятельностиГрузоотправителя", МетаданныеУведомления) Тогда
		//-бит
		ТекстЗапроса = ТекстЗапроса + "
		|	И Уведомления.МестоДеятельностиГрузоотправителя = &МестоДеятельностиКонтрагента
		|";
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "Организация"));
	Запрос.УстановитьПараметр("МестоДеятельности", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеОрганизации, "МестоДеятельности"));
	Запрос.УстановитьПараметр("Контрагент", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеКонтрагента, "Организация"));
	Запрос.УстановитьПараметр("МестоДеятельностиКонтрагента", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеКонтрагента, "МестоДеятельности"));
	Запрос.УстановитьПараметр("ПустоеОснование"         , ПустоеОснование);
	Запрос.УстановитьПараметр("НомерДокумента"          , Реквизиты.НомерДокумента);
	Запрос.УстановитьПараметр("ДатаДокумента"           , Реквизиты.ДатаДокумента);
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ТекстЗапросаСостоянияУведомленияОПриемке()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка,
	|	Статусы.Статус           КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Ссылка = &Уведомление
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|			ТОГДА ВЫБОР
	|					КОГДА ОформленныеДокументы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто)
	|						ТОГДА 0
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ДанныеУведомления
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.Товары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем)
	|			ТОГДА 0
	|		КОГДА ОформленныеУпаковки.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|			ТОГДА ВЫБОР
	|					КОГДА ОформленныеДокументы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто)
	|						ТОГДА 0
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Факт
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК УпаковкиТовара
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = УпаковкиТовара.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = УпаковкиТовара.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтрокиУпаковки = УпаковкиТовара.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ОформленныеУпаковки
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСостоянияУведомленияОПеремещении()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.Отклонено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ДанныеУведомления
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.Товары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.Отклонено
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Количество
	|ИЗ
	|	Документ.УведомлениеОПеремещенииМДЛП.НомераУпаковок КАК УпаковкиТовара
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.СоставТранспортныхУпаковок КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = УпаковкиТовара.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтрокиУпаковки = УпаковкиТовара.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПеремещенииМДЛП.ТранспортныеУпаковки КАК ОформленныеУпаковки
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСостоянияУведомления(МетаданныеУведомления)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ВЫБОР
	|		КОГДА ОформленныеУпаковки.Отклонено
	|			ТОГДА 0
	|		ИНАЧЕ
	|			ВЫБОР
	|				КОГДА ОформленныеТовары.КоличествоПервичныхУпаковокВоВторичной > 0 И ОформленныеУпаковки.КоличествоПервичныхУпаковок > 0
	|					ТОГДА ВЫРАЗИТЬ(ОформленныеУпаковки.КоличествоПервичныхУпаковок / ОформленныеТовары.КоличествоПервичныхУпаковокВоВторичной КАК ЧИСЛО(15, 5))
	|				ИНАЧЕ 1
	|			КОНЕЦ
	|	КОНЕЦ КАК Количество
	|ПОМЕСТИТЬ ДанныеУведомления
	|ИЗ
	|	#УведомлениеНомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		#УведомлениеТовары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеНомераУпаковок", МетаданныеУведомления.ПолноеИмя() + ".НомераУпаковок");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеТовары", МетаданныеУведомления.ПолноеИмя() + ".Товары");
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса для получения документов ПоступлениеТоваров, которые могут быть связаны с Уведомлением.
// В запросе устанавливается отбор по тем документам-поступлениям, которые еще не связаны с другими Уведомлениями.
//
// Параметры:
//  ТипУведомления - Тип - тип документа Уведомления.
//
// Возвращаемое значение:
//  ТекстЗапроса - Строка
//
Функция ТекстЗапросаДокументовПоступленийДляУведомлений(ТипУведомления) Экспорт
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	СобственныеСубъекты.ОрганизацияКонтрагент    КАК Организация,
	|	СобственныеСубъекты.ОбъектМестаДеятельности  КАК Склад,
	|	Субъекты.ОрганизацияКонтрагент               КАК Контрагент
	|ПОМЕСТИТЬ Субъекты
	|ИЗ
	|	РегистрСведений.СубъектыОбращенияМДЛП КАК СобственныеСубъекты
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СубъектыОбращенияМДЛП КАК Субъекты
	|	ПО
	|		Субъекты.Организация = &Грузоотправитель
	|		И (&МестоДеятельностиГрузоотправителя = НЕОПРЕДЕЛЕНО ИЛИ Субъекты.МестоДеятельности = &МестоДеятельностиГрузоотправителя)
	|		И НЕ Субъекты.СобственнаяОрганизация
	|ГДЕ
	|	СобственныеСубъекты.Организация = &Организация
	|	И СобственныеСубъекты.МестоДеятельности = &МестоДеятельности
	|	И СобственныеСубъекты.СобственнаяОрганизация
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПоступлениеТоваров.Ссылка
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваров
	|		//УСЛОВИЕ_СОЕДИНЕНИЯ
	|ГДЕ
	|	НЕ ПоступлениеТоваров.ПометкаУдаления
	|	И (ПоступлениеТоваров.Филиал, ПоступлениеТоваров.Склад, ПоступлениеТоваров.Контрагент) В
	|		(ВЫБРАТЬ
	|			Т.Организация, Т.Склад, Т.Контрагент
	|		ИЗ
	|			Субъекты КАК Т)
	|	//УСЛОВИЕ_ОТБОРА
	|";
	
	МетаданныеУведомленийОснований = Новый Массив;
	ТипыОснованияУведомления = Метаданные.НайтиПоТипу(ТипУведомления).Реквизиты.Основание.Тип.Типы();
	Для Каждого ТипУведомленияПоиска Из Метаданные.ОпределяемыеТипы.ДокументИнформированияМДЛП.Тип.Типы() Цикл
		МетаданныеУведомления = Метаданные.НайтиПоТипу(ТипУведомленияПоиска);
		ТипОснованияУведомления = МетаданныеУведомления.Реквизиты.Основание.Тип;
		Для Каждого ТипОснования Из ТипыОснованияУведомления Цикл
			Если ТипОснованияУведомления.СодержитТип(ТипОснования) Тогда
				Если МетаданныеУведомленийОснований.Найти(МетаданныеУведомления) = Неопределено Тогда
					МетаданныеУведомленийОснований.Добавить(МетаданныеУведомления);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ЧастиУсловияСоединения = Новый Массив;
	ЧастиУсловияОтбора = Новый Массив;
	Для Каждого МетаданныеУведомления Из МетаданныеУведомленийОснований Цикл
		ЧастиУсловияСоединения.Добавить(СтрШаблон("
			|	ЛЕВОЕ СОЕДИНЕНИЕ
			|		%1 КАК %2
			|	ПО
			|		%2.Основание = ПоступлениеТоваров.Ссылка
			|", МетаданныеУведомления.ПолноеИмя(), МетаданныеУведомления.Имя));
		ЧастиУсловияОтбора.Добавить(СтрШаблон("
			|И %1.Ссылка ЕСТЬ NULL
			|", МетаданныеУведомления.Имя));
	КонецЦикла;
	
	Если ЧастиУсловияСоединения.Количество() > 0 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ_СОЕДИНЕНИЯ", СтрСоединить(ЧастиУсловияСоединения));
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ_ОТБОРА", СтрСоединить(ЧастиУсловияОтбора));
	КонецЕсли;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСостоянияУведомленияОбОприходовании()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка,
	|	Статусы.Статус           КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументы
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Ссылка = &Уведомление
	|	И НЕ (ТаблицаДокументы.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	|		И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	1                               КАК Количество
	|ПОМЕСТИТЬ ДанныеУведомления
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК ОформленныеУпаковки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.Товары КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|ГДЕ
	|	НЕ ОформленныеУпаковки.Отклонено
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	1                               КАК Факт
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.НомераУпаковок КАК УпаковкиТовара
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументы КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = УпаковкиТовара.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.СоставТранспортныхУпаковок КАК ОформленныеТовары
	|	ПО
	|		ОформленныеТовары.Ссылка = УпаковкиТовара.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтрокиУпаковки = УпаковкиТовара.ИдентификаторСтроки
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОбОприходованииМДЛП.ТранспортныеУпаковки КАК ОформленныеУпаковки
	|	ПО
	|		ОформленныеТовары.Ссылка = ОформленныеУпаковки.Ссылка
	|		И ОформленныеТовары.ИдентификаторСтроки = ОформленныеУпаковки.ИдентификаторСтроки
	|ГДЕ
	|	НЕ ОформленныеУпаковки.Отклонено
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗаполнитьСгенерироватьШтрихКоды(Объект, ИмяТабличнойЧасти, СтрокиКОбработке, Результат) Экспорт
	
	ТабличнаяЧасть = Объект[ИмяТабличнойЧасти];
	Таблица = ТабличнаяЧасть.Выгрузить(СтрокиКОбработке, "НомерСтроки, Номенклатура, GTIN");
	
	СтрокиКУдалению = Новый Массив;
	Для Каждого Строка Из Таблица Цикл
		
		Если Не ЗначениеЗаполнено(Строка.Номенклатура) Тогда
			ТекстСообщения = НСтр("ru = 'Не указана номенклатура в строке %НомерСтроки%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка.НомерСтроки);
			Поле = "Объект." + ИмяТабличнойЧасти + "[%1].Номенклатура";
		ИначеЕсли Не ЗначениеЗаполнено(Строка.GTIN) Тогда
			ТекстСообщения = НСтр("ru = 'Нет информации о GTIN в строке %НомерСтроки%.'");
			ТекстСообщения = СтрЗаменить(ТекстСообщения, "%НомерСтроки%", Строка.НомерСтроки);
			Поле = "Объект." + ИмяТабличнойЧасти + "[%1].GTIN";
		Иначе
			Продолжить;
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(
			Результат.Ошибки,
			Поле,
			ТекстСообщения,
			Неопределено,
			Строка.НомерСтроки - 1);
		
		СтрокиКУдалению.Добавить(Строка);
		
	КонецЦикла;
	
	Для Каждого Строка Из СтрокиКУдалению Цикл
		Таблица.Удалить(Строка);
	КонецЦикла;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Товары.НомерСтроки КАК НомерСтроки,
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.GTIN КАК GTIN
	                      |ПОМЕСТИТЬ Товары
	                      |ИЗ
	                      |	&Товары КАК Товары
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.НомерСтроки КАК НомерСтроки,
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.GTIN КАК GTIN,
	                      |	ЕСТЬNULL(Штрихкоды.Штрихкод, """") КАК Штрихкод
	                      |ИЗ
	                      |	Товары КАК Товары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
	                      |		ПО Товары.Номенклатура = СправочникНоменклатура.Ссылка
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Штрихкоды КАК Штрихкоды
	                      |		ПО (Штрихкоды.Владелец = Товары.Номенклатура)
	                      |			И (Штрихкоды.ТипШтрихкода = &ТипШтрихкодМДЛП)
	                      |			И Товары.GTIN = Штрихкоды.Штрихкод");
	
	Запрос.УстановитьПараметр("Товары", Таблица);
	Запрос.УстановитьПараметр("ТипШтрихкодМДЛП", ПланыВидовХарактеристик.ТипыШтрихкодов.ШтрихкодМДЛП);
	
	ТаблицаГенерацииШК = Новый ТаблицаЗначений;
	ТаблицаГенерацииШК.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаГенерацииШК.Колонки.Добавить("Серия", Новый ОписаниеТипов("СправочникСсылка.СерииНоменклатуры"));
	ТаблицаГенерацииШК.Колонки.Добавить("GTIN", ОбщегоНазначения.ОписаниеТипаСтрока(14));	
	ТаблицаГенерацииШК.Колонки.Добавить("Штрихкод", ОбщегоНазначения.ОписаниеТипаСтрока(200));
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТовары = ТабличнаяЧасть[Выборка.НомерСтроки - 1];
		
		Если ЗначениеЗаполнено(Выборка.Штрихкод) Тогда
			Продолжить;	//штрихкод уже создан и записан в базу
		Иначе
			
			ПараметрыПоиска = Новый Структура;
			ПараметрыПоиска.Вставить("Номенклатура", Выборка.Номенклатура);
			ПараметрыПоиска.Вставить("GTIN", Выборка.GTIN);
			НайденныеСтроки = ТаблицаГенерацииШК.НайтиСтроки(ПараметрыПоиска);
			Если НайденныеСтроки.Количество() > 0 Тогда
				Продолжить;	//штрихкод не записан в базу, но был создан ранее этим же алгоритмом
			Иначе
				Запись = РегистрыСведений.Штрихкоды.СоздатьМенеджерЗаписи();
				Запись.Владелец = Выборка.Номенклатура;
				Запись.Штрихкод = Выборка.GTIN;
				Запись.ТипШтрихкода = ПланыВидовХарактеристик.ТипыШтрихкодов.ШтрихкодМДЛП;
				
				Попытка
					Запись.Записать(Истина);
				Исключение
					ТекстСообщения = НСтр("ru = 'Не удалось сгенерировать штрихкод по причине: %Причина%'");
					ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Причина%", ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
					
					ЗаписьЖурналаРегистрации(
						ИнтеграцияМДЛП.СобытиеЖурналаРегистрации(НСтр("ru = 'Генерация штрихкодов'", ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка())),
						УровеньЖурналаРегистрации.Ошибка,
						Метаданные.РегистрыСведений.Штрихкоды,
						,
						ТекстСообщения);
					ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Результат.Ошибки,
						"Объект." + ИмяТабличнойЧасти + "[%1].GTIN",
						ТекстСообщения,
						Неопределено,
						Выборка.НомерСтроки - 1);
				КонецПопытки;
				
				СгенерированныйШК = ТаблицаГенерацииШК.Добавить();
				ЗаполнитьЗначенияСвойств(СгенерированныйШК, ПараметрыПоиска);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Результат.ЕстьЗаполненныеСтроки = Истина;
		
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеНаОсновании

#Область Документы_УМЦ

Процедура ЗаполнитьДокументНаОснованииУведомления(Объект, ДанныеЗаполнения) Экспорт
	
	ТипДокумента = ТипЗнч(Объект);
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДокумента = Тип("ДокументОбъект.ПоступлениеТоваровУслуг") И ТипДанныхЗаполнения = Тип("ДокументСсылка.УведомлениеОПриемкеМДЛП") Тогда
		ЗаполнитьДокументПоступленияНаОснованииУведомленияОПриемке(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьДокументПоступленияНаОснованииУведомленияОПриемке(Объект, ДокументОснование)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка                                   КАК Основание,
	|	ДанныеДокумента.Организация                              КАК ОрганизацияМДЛП,
	|	ДанныеДокумента.МестоДеятельности                        КАК МестоДеятельности,
	|	ДанныеДокумента.Грузоотправитель                         КАК ГрузоотправительМДЛП,
	|	ДанныеДокумента.МестоДеятельностиГрузоотправителя        КАК МестоДеятельностиГрузоотправителя,
	|	ДанныеДокумента.НомерДокумента                           КАК НомерВходящегоДокумента,
	|	ДанныеДокумента.ДатаДокумента                            КАК ДатаВходящегоДокумента,
	|	ИСТИНА                                                   КАК ЦенаВключаетНДС,
	|	НЕ ДанныеДокумента.Проведен                              КАК ЕстьОшибкиПроведен
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &ДокументОснование
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	УпаковкиТовара.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	КОЛИЧЕСТВО(1)                       КАК Количество
	|ПОМЕСТИТЬ  ПринятыеУпаковкиТовара
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.НомераУпаковок КАК УпаковкиТовара
	|ГДЕ
	|	УпаковкиТовара.Ссылка = &ДокументОснование
	|	И НЕ УпаковкиТовара.СостояниеПодтверждения В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется)
	|	)
	|СГРУППИРОВАТЬ ПО
	|	УпаковкиТовара.ИдентификаторСтроки
	|;
	|
	|//////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.ИдентификаторСтроки     КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Номенклатура            КАК Номенклатура,
	|	ТаблицаТовары.Серия                   КАК СерияНоменклатуры,
	|	ПринятыеУпаковкиТовара.Количество     КАК КоличествоВЕдиницахИзмерения,
	|	ТаблицаТовары.Количество              КАК КоличествоУпаковокПоДокументу,
	|	ТаблицаТовары.Номенклатура.Упаковка   КАК ЕдиницаИзмерения,
	|	КоэффициентыУпаковок.Коэффициент      КАК Коэффициент,
	|	ТаблицаТовары.Количество * КоэффициентыУпаковок.Коэффициент  КАК Количество,
	|	ТаблицаТовары.Цена                    КАК Цена,
	|	ТаблицаТовары.Сумма                   КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СуммаНДС = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.СтавкаНДС
	|	КОНЕЦ                                 КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС                КАК СуммаНДС,
	|	ТаблицаТовары.Сумма                   КАК СуммаСНДС
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК КоэффициентыУпаковок
	|	ПО
	|		ТаблицаТовары.Номенклатура = КоэффициентыУпаковок.Владелец
	|		И ТаблицаТовары.Номенклатура.Упаковка = КоэффициентыУпаковок.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПринятыеУпаковкиТовара КАК ПринятыеУпаковкиТовара
	|	ПО
	|		ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаТовары.ИдентификаторСтроки          КАК ИдентификаторСтроки,
	|	ТаблицаТовары.Номенклатура                 КАК Номенклатура,
	|	ТаблицаТовары.Серия                        КАК СерияНоменклатуры,
	|	ТаблицаТовары.Количество                   КАК КоличествоВЕдиницахИзмерения,
	|	ТаблицаТовары.Количество                   КАК КоличествоУпаковокПоДокументу,
	|	ТаблицаТовары.Номенклатура.Упаковка        КАК ЕдиницаИзмерения,
	|	КоэффициентыУпаковок.Коэффициент           КАК Коэффициент,
	|	ТаблицаТовары.Количество * КоэффициентыУпаковок.Коэффициент  КАК Количество,
	|	ТаблицаТовары.Цена                         КАК Цена,
	|	ТаблицаТовары.Сумма                        КАК Сумма,
	|	ВЫБОР
	|		КОГДА ТаблицаТовары.СуммаНДС = 0
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|		ИНАЧЕ ТаблицаТовары.Номенклатура.СтавкаНДС
	|	КОНЕЦ                                      КАК СтавкаНДС,
	|	ТаблицаТовары.СуммаНДС * ТаблицаТовары.Количество  КАК СуммаНДС,
	|	ТаблицаТовары.Сумма                        КАК СуммаСНДС
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.СоставТранспортныхУпаковок КАК ТаблицаТовары
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения КАК КоэффициентыУпаковок
	|	ПО
	|		ТаблицаТовары.Номенклатура = КоэффициентыУпаковок.Владелец
	|		И ТаблицаТовары.Номенклатура.Упаковка = КоэффициентыУпаковок.Ссылка
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.УведомлениеОПриемкеМДЛП.ТранспортныеУпаковки КАК ПринятыеУпаковкиТовара
	|	ПО
	|		ТаблицаТовары.Ссылка = ПринятыеУпаковкиТовара.Ссылка
	|		И ТаблицаТовары.ИдентификаторСтроки = ПринятыеУпаковкиТовара.ИдентификаторСтроки
	|		И НЕ ПринятыеУпаковкиТовара.СостояниеПодтверждения В (
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтозваноПоставщиком),
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоПокупателем),
	|			ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.НеТребуется)
	|		)
	|ГДЕ
	|	ТаблицаТовары.Ссылка = &ДокументОснование
	|");
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	РеквизитыШапки = РезультатЗапроса[0].Выбрать();
	РеквизитыШапки.Следующий();
	
	ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(РеквизитыШапки.Основание, РеквизитыШапки.ЕстьОшибкиПроведен);
	
	ЗаполнитьЗначенияСвойств(Объект, РеквизитыШапки);
	
	Субъект = ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.ОрганизацияМДЛП, РеквизитыШапки.МестоДеятельности, Истина);
	Объект.Организация = Субъект.Организация;
	Объект.Склад       = Субъект.Склад;
	
	Субъект = ОбъектПоОрганизацииМестуДеятельности(РеквизитыШапки.ГрузоотправительМДЛП, РеквизитыШапки.МестоДеятельностиГрузоотправителя, Ложь);
	Объект.Контрагент = Субъект.Организация;
	//
	//Действия = ОбработкаТабличнойЧастиКлиентСервер;
	//
	//ДействияПересчетСумм = Новый Структура;
	//ДействияПересчетСумм.Вставить(Действия.Действие_ПересчитатьСумму());
	//ПараметрыПересчетаСуммы = Действия.ПолучитьПараметрыПересчетаСуммыНДС(Объект);
	//ДействияПересчетСумм.Вставить(Действия.Действие_ПересчитатьСуммуНДС(), ПараметрыПересчетаСуммы);
	//ДействияПересчетСумм.Вставить(Действия.Действие_ПересчитатьСуммуСНДС(), ПараметрыПересчетаСуммы);
	
	КэшированныеЗначения = Неопределено;
	
	ВыборкаТовары = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	Пока ВыборкаТовары.Следующий() Цикл
		
		СтрокаТовара = Объект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, ВыборкаТовары);
		
		НеобходимПересчетСумм = (ВыборкаТовары.КоличествоВЕдиницахИзмерения <> ВыборкаТовары.КоличествоУпаковокПоДокументу);
		
		Если НеобходимПересчетСумм Тогда
			//ОбработкаТабличнойЧастиСервер.ОбработатьСтрокуТабличнойЧасти(СтрокаТовара, ДействияПересчетСумм, КэшированныеЗначения);
			СтрокаТовара.Сумма = СтрокаТовара.Цена * СтрокаТовара.Количество;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область УведомлениеОПриемкеМДЛП 

Процедура ЗаполнитьУведомлениеОПриемкеМДЛП(ДокументОбъект, ДанныеЗаполнения)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЗаполнитьУведомлениеОПриемкеНаОснованииПоступленияТоваровУслуг(ДокументОбъект, ДанныеЗаполнения);		
		//ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ВводОстатков") Тогда
		//	ЗаполнитьУведомлениеОПриемкеНаОснованииВводаОстатков(ДокументОбъект, ДанныеЗаполнения);
	//ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
	//	ЗаполнитьУведомлениеОПриемкеНаОснованииАвансовогоОтчета(ДокументОбъект, ДанныеЗаполнения);
		//ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ПриемЗаказаИзМастерской") Тогда
		//	ЗаполнитьУведомлениеОПриемкеНаОснованииПриемаЗаказаИзМастерской(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеОПриемкеНаОснованииАвансовогоОтчета(ДокументОбъект, ДокументОснование)
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	АвансовыйОтчетТовары.Ссылка КАК Ссылка,
	|	АвансовыйОтчетТовары.Ссылка КАК Основание,
	|	АвансовыйОтчетТовары.Ссылка.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
	|	АвансовыйОтчетТовары.Ссылка.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
	|	АвансовыйОтчетТовары.Ссылка.Проведен КАК ЕстьОшибкиПроведения,
	|	ОрганизацииМДЛП.Организация КАК Организация,
	|	ОрганизацииМДЛП.МестоДеятельности КАК МестоДеятельности,
	|	КонтрагентыМДЛП.Организация КАК Грузоотправитель,
	|	КонтрагентыМДЛП.МестоДеятельности КАК МестоДеятельностиГрузоотправителя,
	|	ОрганизацииМДЛП.ИдентификаторОрганизации КАК ИдентификаторОрганизации,
	|	КонтрагентыМДЛП.ИдентификаторОрганизации КАК ИдентификаторКонтрагента
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	|		ПО АвансовыйОтчетТовары.Ссылка.Филиал = ОрганизацииМДЛП.Организация
	|			И АвансовыйОтчетТовары.Ссылка.Склад = ОрганизацииМДЛП.МестоДеятельности
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК КонтрагентыМДЛП
	|		ПО АвансовыйОтчетТовары.Поставщик = КонтрагентыМДЛП.Организация
	|ГДЕ
	|	АвансовыйОтчетТовары.Ссылка = &ДокументОснование
	|ИТОГИ ПО
	|	ИдентификаторКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка КАК Ссылка,
	|	Статусы.Статус КАК Статус,
	|	ВЫБОР
	|		КОГДА ТаблицаДокументы.СхемаАкцептования = ЗНАЧЕНИЕ(Перечисление.СхемыАкцептованияМДЛП.ПрямойПорядок)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПрямаяСхемаАкцептования,
	|	ТаблицаДокументы.ИдентификаторКонтрагента КАК ИдентификаторКонтрагента
	|ПОМЕСТИТЬ ОформленныеДокументыПриемки
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП КАК ТаблицаДокументы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|		ПО (Статусы.Документ = ТаблицаДокументы.Ссылка)
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА КАК ПрямаяСхемаАкцептования
	|ПОМЕСТИТЬ ЕстьУведомлениеОбОтгрузкеОтПоставщика
	|ИЗ
	|	ОформленныеДокументыПриемки КАК ОформленныеДокументыПриемки
	|ГДЕ
	|	ОформленныеДокументыПриемки.ПрямаяСхемаАкцептования
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыйОтчетТовары.Номенклатура КАК Номенклатура,
	|	АвансовыйОтчетТовары.СерияНоменклатуры КАК Серия,
	|	АвансовыйОтчетТовары.Количество КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА АвансовыйОтчетТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ АвансовыйОтчетТовары.Сумма / АвансовыйОтчетТовары.Количество
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА АвансовыйОтчетТовары.Количество = 0
	|				ТОГДА 0
	|			ИНАЧЕ АвансовыйОтчетТовары.Сумма
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	|	СубъектыОбращенияМДЛП.ИдентификаторОрганизации КАК ИдентификаторКонтрагента
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК АвансовыйОтчетТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	|		ПО АвансовыйОтчетТовары.ЕдиницаИзмерения = ЕдиницыИзмерения.Ссылка
	|			И АвансовыйОтчетТовары.Номенклатура = ЕдиницыИзмерения.Владелец
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СерииНоменклатуры
	|		ПО АвансовыйОтчетТовары.СерияНоменклатуры = СерииНоменклатуры.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК СубъектыОбращенияМДЛП
	|		ПО АвансовыйОтчетТовары.Поставщик = СубъектыОбращенияМДЛП.Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура,
	|	ОформленныеТовары.Серия,
	|	-ОформленныеТовары.Количество,
	|	ОформленныеТовары.Цена,
	|	-ОформленныеТовары.Сумма,
	|	ОформленныеДокументы.ИдентификаторКонтрагента
	|ИЗ
	|	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ОформленныеТовары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументыПриемки КАК ОформленныеДокументы
	|		ПО (ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	|	ТоварыКОформлению.Серия КАК Серия,
	|	ТоварыКОформлению.Номенклатура.GTIN КАК GTIN,
	|	ТоварыКОформлению.Цена КАК Цена,
	|	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	|	ТоварыКОформлению.ИдентификаторКонтрагента КАК ИдентификаторКонтрагента
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Цена,
	|	ТоварыКОформлению.Номенклатура.GTIN,
	|	ТоварыКОформлению.ИдентификаторКонтрагента
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|ИТОГИ ПО
	|	ИдентификаторКонтрагента";
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Дата");
	Запрос.УстановитьПараметр("ДатаОснования"    , РеквизитыОснования.Дата);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ЭтоПерезаполнение = Не ДокументОбъект.Ссылка.Пустая();	
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(
		Шапка.Ссылка,
		Шапка.ЕстьОшибкиПроведен);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Шапка);		
		// TODO: Реализовать проверку и выбор типа договора. Пока будем считать, что платим всегда
		Если Истина Тогда
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.КупляПродажа;
		Иначе
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.ПередачаНаБезвозмезднойОснове;
		КонецЕсли;
		ДокументОбъект.Операция = Перечисления.ОперацииПриемкиМДЛП.Поступление;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.НомераУпаковок.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.ВГраница()], ДокументОснование);
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеОПриемкеНаОснованииПоступленияТоваровУслуг(ДокументОбъект, ДокументОснование)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Документ.Ссылка КАК Ссылка,
	                      |	Документ.Ссылка КАК Основание,
	                      |	ОрганизацииМДЛП.Организация КАК Организация,
	                      |	ОрганизацииМДЛП.МестоДеятельности КАК МестоДеятельности,
	                      |	КонтрагентыМДЛП.Организация КАК Грузоотправитель,
	                      |	КонтрагентыМДЛП.МестоДеятельности КАК МестоДеятельностиГрузоотправителя,
	                      |	Документ.НомерВходящегоДокумента КАК НомерДокумента,
	                      |	Документ.ДатаВходящегоДокумента КАК ДатаДокумента,
	                      |	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваровУслуг КАК Документ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	                      |		ПО (ОрганизацииМДЛП.ОрганизацияКонтрагент = Документ.Филиал)
	                      |			И (ОрганизацииМДЛП.ОбъектМестаДеятельности = Документ.Склад)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК КонтрагентыМДЛП
	                      |		ПО (КонтрагентыМДЛП.ОрганизацияКонтрагент = Документ.Контрагент)
	                      |ГДЕ
	                      |	Документ.Ссылка = &ДокументОснование
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаДокументы.Ссылка КАК Ссылка,
	                      |	Статусы.Статус КАК Статус,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаДокументы.СхемаАкцептования = ЗНАЧЕНИЕ(Перечисление.СхемыАкцептованияМДЛП.ПрямойПорядок)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ПрямаяСхемаАкцептования
	                      |ПОМЕСТИТЬ ОформленныеДокументыПриемки
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП КАК ТаблицаДокументы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	                      |		ПО (Статусы.Документ = ТаблицаДокументы.Ссылка)
	                      |ГДЕ
	                      |	ТаблицаДокументы.Основание = &ДокументОснование
	                      |	И НЕ ТаблицаДокументы.ПометкаУдаления
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ИСТИНА КАК ПрямаяСхемаАкцептования
	                      |ПОМЕСТИТЬ ЕстьУведомлениеОбОтгрузкеОтПоставщика
	                      |ИЗ
	                      |	ОформленныеДокументыПриемки КАК ОформленныеДокументыПриемки
	                      |ГДЕ
	                      |	ОформленныеДокументыПриемки.ПрямаяСхемаАкцептования
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.СерияНоменклатуры КАК Серия,
	                      |	ЕСТЬNULL(Упаковки.Коэффициент, 1) КАК КоличествоВУпаковке,
	                      |	ВЫРАЗИТЬ(ВЫБОР
	                      |			КОГДА Товары.Количество = 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ Товары.Сумма / Товары.Количество
	                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	                      |	Товары.Количество КАК Количество,
	                      |	ВЫРАЗИТЬ(ВЫБОР
	                      |			КОГДА Товары.Количество = 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ Товары.Сумма
	                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	                      |	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	                      |ПОМЕСТИТЬ ТоварыКОформлению
	                      |ИЗ
	                      |	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	                      |		ПО (СправочникСерии.Ссылка = Товары.СерияНоменклатуры)
	                      |			И (СправочникСерии.СерияПромаркированаДляЦелейМДЛП)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Упаковки
	                      |		ПО (Упаковки.Владелец = Товары.Номенклатура)
	                      |			И (Упаковки.Ссылка = Товары.Номенклатура.Упаковка)
	                      |ГДЕ
	                      |	Товары.Ссылка = &ДокументОснование
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ОформленныеТовары.Номенклатура,
	                      |	ОформленныеТовары.Серия,
	                      |	ЕСТЬNULL(Упаковки.Коэффициент, 1),
	                      |	ОформленныеТовары.Цена,
	                      |	-ОформленныеТовары.Количество,
	                      |	-ОформленныеТовары.Сумма,
	                      |	-ОформленныеТовары.СуммаНДС
	                      |ИЗ
	                      |	Документ.УведомлениеОПриемкеМДЛП.Товары КАК ОформленныеТовары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументыПриемки КАК ОформленныеДокументы
	                      |		ПО (ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Упаковки
	                      |		ПО (Упаковки.Владелец = ОформленныеТовары.Номенклатура)
	                      |			И (Упаковки.Ссылка = ОформленныеТовары.Номенклатура.Упаковка)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	                      |	ТоварыКОформлению.Серия КАК Серия,
	                      |	ТоварыКОформлению.Цена КАК Цена,
	                      |	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	                      |	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	                      |	СУММА(ТоварыКОформлению.СуммаНДС) КАК СуммаНДС,
	                      |	ТоварыКОформлению.КоличествоВУпаковке КАК КоличествоВУпаковке
	                      |ИЗ
	                      |	ТоварыКОформлению КАК ТоварыКОформлению
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТоварыКОформлению.Номенклатура,
	                      |	ТоварыКОформлению.Серия,
	                      |	ТоварыКОформлению.Цена,
	                      |	ТоварыКОформлению.КоличествоВУпаковке
	                      |
	                      |ИМЕЮЩИЕ
	                      |	СУММА(ТоварыКОформлению.Количество) > 0");
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Дата");
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования"    , РеквизитыОснования.Дата);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ЭтоПерезаполнение = Не ДокументОбъект.Ссылка.Пустая();	
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(
		Шапка.Ссылка,
		Шапка.ЕстьОшибкиПроведен);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Шапка);		
		// TODO: Реализовать проверку и выбор типа договора. Пока будем считать, что платим всегда
		Если Истина Тогда
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.КупляПродажа;
		Иначе
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.ПередачаНаБезвозмезднойОснове;
		КонецЕсли;
		
		ДокументОбъект.Операция = Перечисления.ОперацииПриемкиМДЛП.Поступление;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.НомераУпаковок.Очистить();
	// TODO: рассчет сумм ндс
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.ВГраница()], ДокументОснование);
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеОПриемкеНаОснованииПриемаЗаказаИзМастерской(ДокументОбъект, ДокументОснование)
	
КонецПроцедуры

#КонецОбласти

#Область УведомлениеОбОтгрузкеМДЛП 

Процедура ЗаполнитьУведомлениеОбОтгрузкеМДЛП(ДокументОбъект, ДанныеЗаполнения)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
		ЗаполнитьУведомлениеОбОтгрузкеНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДанныеЗаполнения);
	//ИначеЕсли ТипДанныхЗаполнения = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
	//	ЗаполнитьУведомлениеОбОтгрузкеНаОснованииОказанияУслуг(ДокументОбъект, ДанныеЗаполнения)
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеОбОтгрузкеНаОснованииВозвратаТоваровПоставщику(ДокументОбъект, ДокументОснование)
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Документ.Ссылка КАК Ссылка,
	                      |	Документ.Ссылка КАК Основание,
	                      |	ОрганизацииМДЛП.Организация КАК Организация,
	                      |	ОрганизацииМДЛП.МестоДеятельности КАК МестоДеятельности,
	                      |	КонтрагентыМДЛП.Организация КАК Грузополучатель,
	                      |	КонтрагентыМДЛП.МестоДеятельности КАК МестоДеятельностиГрузополучателя,
	                      |	Документ.Номер КАК НомерДокумента,
	                      |	Документ.Дата КАК ДатаДокумента,
	                      |	НЕ Документ.Проведен КАК ЕстьОшибкиПроведен
	                      |ИЗ
	                      |	Документ.ВозвратТоваровПоставщику КАК Документ
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	                      |		ПО (ОрганизацииМДЛП.СобственнаяОрганизация)
	                      |			И (ОрганизацииМДЛП.ОрганизацияКонтрагент = Документ.Филиал)
	                      |			И (ОрганизацииМДЛП.ОбъектМестаДеятельности = Документ.Склад)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК КонтрагентыМДЛП
	                      |		ПО (НЕ КонтрагентыМДЛП.СобственнаяОрганизация)
	                      |			И (КонтрагентыМДЛП.ОрганизацияКонтрагент = Документ.Контрагент)
	                      |ГДЕ
	                      |	Документ.Ссылка = &ДокументОснование
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТаблицаДокументы.Ссылка КАК Ссылка,
	                      |	Статусы.Статус КАК Статус,
	                      |	ВЫБОР
	                      |		КОГДА ТаблицаДокументы.СхемаАкцептования = ЗНАЧЕНИЕ(Перечисление.СхемыАкцептованияМДЛП.ПрямойПорядок)
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ПрямаяСхемаАкцептования
	                      |ПОМЕСТИТЬ ОформленныеДокументыПриемки
	                      |ИЗ
	                      |	Документ.УведомлениеОбОтгрузкеМДЛП КАК ТаблицаДокументы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	                      |		ПО (Статусы.Документ = ТаблицаДокументы.Ссылка)
	                      |ГДЕ
	                      |	ТаблицаДокументы.Основание = &ДокументОснование
	                      |	И НЕ ТаблицаДокументы.ПометкаУдаления
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ИСТИНА КАК ПрямаяСхемаАкцептования
	                      |ПОМЕСТИТЬ ЕстьУведомлениеОбОтгрузкеОтПоставщика
	                      |ИЗ
	                      |	ОформленныеДокументыПриемки КАК ОформленныеДокументыПриемки
	                      |ГДЕ
	                      |	ОформленныеДокументыПриемки.ПрямаяСхемаАкцептования
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Товары.Номенклатура КАК Номенклатура,
	                      |	Товары.СерияНоменклатуры КАК Серия,
	                      |	ВЫРАЗИТЬ(ВЫБОР
	                      |			КОГДА Товары.Количество = 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ Товары.Сумма / Товары.Количество
	                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Цена,
	                      |	Товары.Количество КАК Количество,
	                      |	ВЫРАЗИТЬ(ВЫБОР
	                      |			КОГДА Товары.Количество = 0
	                      |				ТОГДА 0
	                      |			ИНАЧЕ Товары.Сумма
	                      |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК Сумма,
	                      |	ВЫРАЗИТЬ(0 КАК ЧИСЛО(15, 2)) КАК СуммаНДС
	                      |ПОМЕСТИТЬ ТоварыКОформлению
	                      |ИЗ
	                      |	Документ.ВозвратТоваровПоставщику.Товары КАК Товары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	                      |		ПО (СправочникСерии.Ссылка = Товары.СерияНоменклатуры)
	                      |			И (СправочникСерии.СерияПромаркированаДляЦелейМДЛП)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Упаковки
	                      |		ПО (Упаковки.Владелец = Товары.Номенклатура)
	                      |			И (Упаковки.Ссылка = Товары.Номенклатура.Упаковка)
	                      |ГДЕ
	                      |	Товары.Ссылка = &ДокументОснование
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	ОформленныеТовары.Номенклатура,
	                      |	ОформленныеТовары.Серия,
	                      |	ОформленныеТовары.Цена,
	                      |	-ОформленныеТовары.Количество,
	                      |	-ОформленныеТовары.Сумма,
	                      |	-ОформленныеТовары.СуммаНДС
	                      |ИЗ
	                      |	Документ.УведомлениеОбОтгрузкеМДЛП.Товары КАК ОформленныеТовары
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументыПриемки КАК ОформленныеДокументы
	                      |		ПО (ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ТоварыКОформлению.Номенклатура КАК Номенклатура,
	                      |	ТоварыКОформлению.Серия КАК Серия,
	                      |	ТоварыКОформлению.Цена КАК Цена,
	                      |	СУММА(ТоварыКОформлению.Количество) КАК Количество,
	                      |	СУММА(ТоварыКОформлению.Сумма) КАК Сумма,
	                      |	СУММА(ТоварыКОформлению.СуммаНДС) КАК СуммаНДС
	                      |ИЗ
	                      |	ТоварыКОформлению КАК ТоварыКОформлению
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ТоварыКОформлению.Номенклатура,
	                      |	ТоварыКОформлению.Серия,
	                      |	ТоварыКОформлению.Цена
	                      |
	                      |ИМЕЮЩИЕ
	                      |	СУММА(ТоварыКОформлению.Количество) > 0");
	
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Дата");
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	Запрос.УстановитьПараметр("ДатаОснования"    , РеквизитыОснования.Дата);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ЭтоПерезаполнение = Не ДокументОбъект.Ссылка.Пустая();
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(
			Шапка.Ссылка,
			Шапка.ЕстьОшибкиПроведен);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Шапка);
		
		//ДокументОбъект.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерДокумента);
		ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.КупляПродажа;
		ДокументОбъект.Операция = Перечисления.ОперацииОтгрузкиМДЛП.Возврат;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.НомераУпаковок.Очистить();
	// TODO: Заполнение СуммаНДС
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.ВГраница()], ДокументОснование);	
КонецПроцедуры

#КонецОбласти

Процедура ЗаполнитьУведомлениеОбОприходованииМДЛП(ДокументОбъект, ДанныеЗаполнения)
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		ЗаполнитьУведомлениеОбОприходованииНаОснованииПоступленияТоваров(ДокументОбъект, ДанныеЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеОбОприходованииНаОснованииПоступленияТоваров(ДокументОбъект, ДокументОснование)
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	Документ.Ссылка                    КАК Ссылка,
	|	Документ.Ссылка                    КАК Основание,
	|	ОрганизацииМДЛП.Организация        КАК Организация,
	|	ОрганизацииМДЛП.МестоДеятельности  КАК МестоДеятельности,
	|	КонтрагентыМДЛП.Организация        КАК Грузоотправитель,
	|	КонтрагентыМДЛП.МестоДеятельности  КАК МестоДеятельностиГрузоотправителя,
	|	Документ.НомерВходящегоДокумента   КАК НомерДокумента,
	|	Документ.ДатаВходящегоДокумента    КАК ДатаДокумента,
	|	НЕ Документ.Проведен               КАК ЕстьОшибкиПроведен
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК Документ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	|	ПО
	|		ОрганизацииМДЛП.ОрганизацияКонтрагент = Документ.Филиал
	|		И ОрганизацииМДЛП.ОбъектМестаДеятельности = Документ.Склад
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СубъектыОбращенияМДЛП КАК КонтрагентыМДЛП
	|	ПО
	|		КонтрагентыМДЛП.ОрганизацияКонтрагент = Документ.Контрагент
	|ГДЕ
	|	Документ.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокументы.Ссылка  КАК Ссылка,
	|	Статусы.Статус           КАК Статус
	|ПОМЕСТИТЬ ОформленныеДокументыПриемки
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП КАК ТаблицаДокументы
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	|	ПО
	|		Статусы.Документ = ТаблицаДокументы.Ссылка
	|ГДЕ
	|	ТаблицаДокументы.Основание = &ДокументОснование
	|	И НЕ ТаблицаДокументы.ПометкаУдаления
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Номенклатура                                    КАК Номенклатура,
	|	Товары.СерияНоменклатуры                               КАК Серия,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Сумма * ЕСТЬNULL(Упаковки.Коэффициент, 1) / Товары.Количество
	|	КОНЕЦ КАК ЧИСЛО(15,2))                                 КАК Цена,
	|	Товары.Количество / ЕСТЬNULL(Упаковки.Коэффициент, 1)  КАК Количество,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Сумма
	|	КОНЕЦ КАК ЧИСЛО(15,2))                                 КАК Сумма,
	
	//Пересчет Суммы НДС, в соответствии с реккомендациями ЦРПТ.
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА Товары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ((Товары.Сумма) * ЕСТЬNULL(Упаковки.Коэффициент, 1) / Товары.Количество * &СтавкаНДСЧислом КАК ЧИСЛО(15, 2))
	|		* Товары.Количество /ЕСТЬNULL(Упаковки.Коэффициент, 1)КОНЕЦ КАК ЧИСЛО(15,2))                                 КАК СуммаНДС
	|ПОМЕСТИТЬ ТоварыКОформлению
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК Товары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.СерииНоменклатуры КАК СправочникСерии
	|	ПО
	|		СправочникСерии.Ссылка = Товары.СерияНоменклатуры
	|		И СправочникСерии.СерияПромаркированаДляЦелейМДЛП
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ЕдиницыИзмерения  КАК Упаковки
	|	ПО
	|		Упаковки.Владелец = Товары.Номенклатура
	|		И Упаковки.Ссылка = Товары.Номенклатура.Упаковка
	|ГДЕ
	|	Товары.Ссылка = &ДокументОснование
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ОформленныеТовары.Номенклатура  КАК Номенклатура,
	|	ОформленныеТовары.Серия         КАК Серия,
	|	ОформленныеТовары.Цена          КАК Цена,
	|	-ОформленныеТовары.Количество   КАК Количество,
	|	-ОформленныеТовары.Сумма        КАК Сумма,
	|	-ОформленныеТовары.СуммаНДС     КАК СуммаНДС
	|ИЗ
	|	Документ.УведомлениеОбОприходованииМДЛП.Товары  КАК ОформленныеТовары
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ОформленныеДокументыПриемки КАК ОформленныеДокументы
	|	ПО
	|		ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТоварыКОформлению.Номенклатура       КАК Номенклатура,
	|	ТоварыКОформлению.Серия              КАК Серия,
	|	ТоварыКОформлению.Цена               КАК Цена,
	|	СУММА(ТоварыКОформлению.Количество)  КАК Количество,
	|	СУММА(ТоварыКОформлению.Сумма)       КАК Сумма,
	|	СУММА(ТоварыКОформлению.СуммаНДС)    КАК СуммаНДС
	|ИЗ
	|	ТоварыКОформлению КАК ТоварыКОформлению
	|СГРУППИРОВАТЬ ПО
	|	ТоварыКОформлению.Номенклатура,
	|	ТоварыКОформлению.Серия,
	|	ТоварыКОформлению.Цена
	|ИМЕЮЩИЕ
	|	СУММА(ТоварыКОформлению.Количество) > 0
	|");
	
	ПолучитьСтавкуНДСЧисломВЗапросе(Запрос.Текст);
	
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РеквизитыОснования = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, "Дата");
	Запрос.УстановитьПараметр("ДатаОснования"    , РеквизитыОснования.Дата);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ЭтоПерезаполнение = Не ДокументОбъект.Ссылка.Пустая();
	
	Если Не ЭтоПерезаполнение Тогда
			
		ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(
		Шапка.Ссылка,
		Шапка.ЕстьОшибкиПроведен);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Шапка);
		
		// TODO: Реализовать проверку и выбор типа договора. Пока будем считать, что платим всегда
		Если Истина Тогда
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.КупляПродажа;
		Иначе
			ДокументОбъект.ТипДоговора = Перечисления.ТипыДоговоровМДЛП.ПередачаНаБезвозмезднойОснове;
		КонецЕсли;
		
		ДокументОбъект.Операция = Перечисления.ОперацииОприходованияМДЛП.Поступление;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.НомераУпаковок.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.ВГраница()], ДокументОснование);
	
КонецПроцедуры

Процедура ПолучитьСтавкуНДСЧисломВЗапросе(ТекстЗапроса, ИмяТаблицы = "Товары", ИмяПараметраЗамены = "&СтавкаНДСЧислом") Экспорт
	
	// Переделать когда реализуем учет НДС в ПТУ с учетом УП
	//ТекстПолученияСтавкиНДСЧислом = "
	//|	ВЫБОР
	//|		КОГДА Товары.Номенклатура.ВидСтавкиНДС = В (ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Общая), ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.ОбщаяРасчетная))
	//|			ТОГДА 0.2
	//|		КОГДА Товары.Номенклатура.ВидСтавкиНДС В (ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Пониженная), ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.ПониженнаяРасчетная))
	//|			ТОГДА 0.1
	//|		КОГДА Товары.Номенклатура.ВидСтавкиНДС В (ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.Нулевая), ЗНАЧЕНИЕ(Перечисление.ВидыСтавокНДС.БезНДС))
	//|			ТОГДА 0
	//|		ИНАЧЕ 0
	//|	КОНЕЦ
	//|";
	
	ТекстПолученияСтавкиНДСЧислом = "
	|	ВЫБОР
	|		КОГДА Истина Тогда 0
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|";
	
	ТекстПолученияСтавкиНДСЧислом = СтрЗаменить(ТекстПолученияСтавкиНДСЧислом, "Товары", ИмяТаблицы);
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, ИмяПараметраЗамены, ТекстПолученияСтавкиНДСЧислом);
	
КонецПроцедуры

Процедура ЗаполнитьУведомлениеНаОсновании(ДокументОбъект, ДокументОснование)
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	Шапка.Ссылка КАК Ссылка,
	               |	Шапка.Ссылка КАК Основание,
	               |	ОрганизацииМДЛП.Организация КАК Организация,
	               |	ОрганизацииМДЛП.МестоДеятельности КАК МестоДеятельности,
	               |	Шапка.Номер КАК НомерДокумента,
	               |	Шапка.Дата КАК ДатаДокумента,
	               |	НЕ Шапка.Проведен КАК ЕстьОшибкиПроведен
	               |ИЗ
	               |	#ДокументШапка КАК Шапка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СубъектыОбращенияМДЛП КАК ОрганизацииМДЛП
	               |		ПО (ОрганизацииМДЛП.ОрганизацияКонтрагент = Шапка.Филиал)
	               |			И (ОрганизацииМДЛП.ОбъектМестаДеятельности = Шапка.Склад)
	               |ГДЕ
	               |	Шапка.Ссылка = &ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаДокументы.Ссылка КАК Ссылка
	               |ПОМЕСТИТЬ ОформленныеДокументыПриемки
	               |ИЗ
	               |	#УведомлениеШапка КАК ТаблицаДокументы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыИнформированияМДЛП КАК Статусы
	               |		ПО (Статусы.Документ = ТаблицаДокументы.Ссылка)
	               |ГДЕ
	               |	ТаблицаДокументы.Основание = &ДокументОснование
	               |	И НЕ ТаблицаДокументы.ПометкаУдаления
	               |	И НЕ(ТаблицаДокументы.СостояниеПодтверждения = ЗНАЧЕНИЕ(Перечисление.СостоянияПодтвержденияМДЛП.ОтклоненоГИСМ)
	               |				И Статусы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыИнформированияМДЛП.Закрыто))
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ТаблицаТовары.Номенклатура КАК Номенклатура,
	               |	ТаблицаТовары.СерияНоменклатуры КАК Серия,
	               |	ТаблицаТовары.Количество КАК Количество,
	               |	ЕСТЬNULL(Упаковки.Коэффициент, 1) КАК КоличествоВУпаковке
	               |ПОМЕСТИТЬ КОформлению
	               |ИЗ
	               |	#ДокументТовары КАК ТаблицаТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СерииНоменклатуры КАК СправочникСерии
	               |		ПО (СправочникСерии.Ссылка = ТаблицаТовары.СерияНоменклатуры)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Упаковки
	               |		ПО (Упаковки.Владелец = ТаблицаТовары.Номенклатура)
	               |			И (Упаковки.Ссылка = ТаблицаТовары.Номенклатура.Упаковка)
	               |ГДЕ
	               |	ТаблицаТовары.Ссылка = &ДокументОснование
	               |	И СправочникСерии.СерияПромаркированаДляЦелейМДЛП
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ТаблицаТовары.Номенклатура,
	               |	ТаблицаТовары.Серия,
	               |	-1,
	               |	ЕСТЬNULL(Упаковки.Коэффициент, 1)
	               |ИЗ
	               |	#УведомлениеНомераУпаковок КАК ОформленныеТовары
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОформленныеДокументыПриемки КАК ОформленныеДокументы
	               |		ПО (ОформленныеДокументы.Ссылка = ОформленныеТовары.Ссылка)
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #УведомлениеТовары КАК ТаблицаТовары
	               |		ПО (ТаблицаТовары.Ссылка = ОформленныеТовары.Ссылка)
	               |			И (ТаблицаТовары.ИдентификаторСтроки = ОформленныеТовары.ИдентификаторСтроки)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК Упаковки
	               |		ПО (Упаковки.Владелец = ТаблицаТовары.Номенклатура)
	               |			И (Упаковки.Ссылка = ТаблицаТовары.Номенклатура.Упаковка)
	               |ГДЕ
	               |	НЕ ОформленныеТовары.Отклонено
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Товары.Номенклатура КАК Номенклатура,
	               |	Товары.Серия КАК Серия,
	               |	СУММА(Товары.Количество) КАК Количество,
	               |	Товары.КоличествоВУпаковке КАК КоличествоВУпаковке,
	               |	ВЫБОР
	               |		КОГДА ЕСТЬNULL(ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).Упаковка.КоличествоВУпаковке, 0) = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ ВЫРАЗИТЬ(Товары.Номенклатура КАК Справочник.Номенклатура).Упаковка.КоличествоВУпаковке
	               |	КОНЕЦ КАК КоличествоПервичныхУпаковокВоВторичной
	               |ИЗ
	               |	КОформлению КАК Товары
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	Товары.Номенклатура,
	               |	Товары.Серия,
	               |	Товары.КоличествоВУпаковке
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(Товары.Количество) > 0";
	
	МетаданныеУведомления = ДокументОбъект.Метаданные();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеШапка", МетаданныеУведомления.ПолноеИмя());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеНомераУпаковок", МетаданныеУведомления.ПолноеИмя() + ".НомераУпаковок");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#УведомлениеТовары", МетаданныеУведомления.ПолноеИмя() + ".Товары");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументШапка", ДокументОснование.Метаданные().ПолноеИмя());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "#ДокументТовары", ДокументОснование.Метаданные().ПолноеИмя() + ".Товары");
	
	Если Не ОбщегоНазначения.ЕстьРеквизитВМетаданныхОбъекта(ДокументОснование.Метаданные(), "Склад") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Шапка.Склад", "Шапка.СкладОтправитель");
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	Шапка = РезультатЗапроса[0].Выбрать();
	Шапка.Следующий();
	
	ЭтоПерезаполнение = Не ДокументОбъект.Ссылка.Пустая();
	
	Если Не ЭтоПерезаполнение Тогда
		
		ОбщегоНазначенияМедицина.ПроверитьВозможностьВводаНаОсновании(
			Шапка.Ссылка,
			Шапка.ЕстьОшибкиПроведен);
		
		ЗаполнитьЗначенияСвойств(ДокументОбъект, Шапка);
		
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ДокументОбъект, "НомерДокумента") Тогда
			ДокументОбъект.НомерДокумента = СокрЛП(ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДокументОбъект.НомерДокумента));
		КонецЕсли;
		Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.СписаниеТоваров") И ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.УведомлениеОВыбытииМДЛП") Тогда
			ДокументОбъект.ТипВыводаИзОборота = Перечисления.ВидыВыводаИзОборотаМДЛП.Недостача;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПеремещениеМатериалов") И ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.УведомлениеОПеремещенииМДЛП") Тогда
			Реквизиты = Новый Структура;
			Реквизиты.Вставить("Организация", "СкладПолучатель.Филиал");
			Реквизиты.Вставить("Склад"      , "СкладПолучатель");
			Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, Реквизиты);
			Значения = ОрганизацияМестоДеятельностиОбъекта(Реквизиты.Организация, Реквизиты.Склад);
			ОрганизацияПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "Организация");
			Если ЗначениеЗаполнено(ДокументОбъект.Организация) И ДокументОбъект.Организация = ОрганизацияПолучатель Тогда
				ДокументОбъект.МестоДеятельностиПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "МестоДеятельности");
			ИначеЕсли Не ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
				ДокументОбъект.Организация = ОрганизацияПолучатель;
				ДокументОбъект.МестоДеятельностиПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "МестоДеятельности");
			КонецЕсли;
		ИначеЕсли ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ОказаниеУслуг") И ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.УведомлениеОРозничнойПродажеМДЛП") Тогда
			//Реквизиты = Новый Структура;
			//Реквизиты.Вставить("Организация", ПроцедурыСпециализацииПоставки.ИмяРеквизитаФилиалДокументов());
			//Реквизиты.Вставить("Склад"      , "Склад");
			//Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументОснование, Реквизиты);
			//Значения = ОрганизацияМестоДеятельностиОбъекта(Реквизиты.Организация, Реквизиты.Склад);
			//ОрганизацияПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "Организация");
			//Если ЗначениеЗаполнено(ДокументОбъект.Организация) И ДокументОбъект.Организация = ОрганизацияПолучатель Тогда
			//	ДокументОбъект.МестоДеятельностиПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "МестоДеятельности");
			//ИначеЕсли Не ЗначениеЗаполнено(ДокументОбъект.Организация) Тогда
			//	ДокументОбъект.Организация = ОрганизацияПолучатель;
			//	ДокументОбъект.МестоДеятельностиПолучатель = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Значения, "МестоДеятельности");
			//КонецЕсли;
			ДокументОбъект.ВидДокумента = Перечисления.ВидыДокументовПродажиМДЛП.Прочее;
			ДокументОбъект.НаименованиеДокумента = НСтр("ru = 'Отчет о розничных продажах'");
		ИначеЕсли ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.УведомлениеОПовторномВводеВОборотМДЛП") Тогда
			ДокументОбъект.ПричинаВыводаИзОборота = Перечисления.ПричиныВыводаИзОборотаМДЛП.Списание;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокументОбъект.Товары.Очистить();
	ДокументОбъект.НомераУпаковок.Очистить();
	
	ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса[РезультатЗапроса.ВГраница()], ДокументОснование);
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьТовары(ДокументОбъект, РезультатЗапроса, ДокументОснование)
	
	Если РезультатЗапроса.Пустой() Тогда
		
		ВызватьИсключение СтрШаблон(
		НСтр("ru='В %1 отсутствуют данные для заполнения.'"),
		ДокументОснование);
		
	КонецЕсли;
	
	//В некоторых уведомлениях отсутствует колонка Цена	
	ЗаполнятьЦенуТовара = ДокументОбъект.Метаданные().ТабличныеЧасти.Товары.Реквизиты.Найти("Цена") <> Неопределено;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтрокаТовара = ДокументОбъект.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТовара, Выборка);
		СтрокаТовара.ИдентификаторСтроки = Строка(Новый УникальныйИдентификатор);
		
		//УпаковкаНоменклатура = СтрокаТовара.Номенклатура.Упаковка;
		//Если ЗначениеЗаполнено(УпаковкаНоменклатура) И (УпаковкаНоменклатура.СостоитИзДругихУпаковок) Тогда
		//	КоэффициентВложенныхУпаковок = ПолучитьКоэффициентУпаковки(УпаковкаНоменклатура.ВложеннаяУпаковка);
		//	КоэффициентВложенныхУпаковок = ?(КоэффициентВложенныхУпаковок = 0, 1, КоэффициентВложенныхУпаковок); // на всякий случай
		//Иначе
		//	КоэффициентВложенныхУпаковок = 1;	
		//КонецЕсли;
		КоэффициентУпаковки = ПолучитьКоэффициентУпаковки(СтрокаТовара.Номенклатура.Упаковка);
		
		//Изменим способ фиксации кол-ва упаковок
		////СтрокаТовара.КоличествоУпаковок = Выборка.Количество / КоэффициентУпаковки;
		СтрокаТовара.Количество = Выборка.Количество / КоэффициентУпаковки;
		СтрокаТовара.КоличествоУпаковок = СтрокаТовара.Количество;
		
		Если ЗаполнятьЦенуТовара Тогда
			СтрокаТовара.Цена 				= ?(СтрокаТовара.КоличествоУпаковок <> 0, Выборка.Сумма / СтрокаТовара.КоличествоУпаковок, Выборка.Сумма);
		КонецЕсли;
		//СтрокаТовара.Количество			= Выборка.Количество;
		
		//TODO: Не у всех есть эти реквизиты серии поэтому пока в попытке. Возможно не стоит их заполнять?
		Попытка
			Если ЗначениеЗаполнено(Выборка.Серия) Тогда
				СтрокаТовара.НомерСерии = Выборка.Серия.НомерСерии;
				СтрокаТовара.ГоденДо 	= Выборка.Серия.ГоденДо;
			КонецЕсли;
		Исключение
			
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьКоэффициентУпаковки(Упаковка) Экспорт 
	Если ЗначениеЗаполнено(Упаковка) И Упаковка.СостоитИзДругихУпаковок Тогда
		Возврат Упаковка.КоличествоВУпаковке * ПолучитьКоэффициентУпаковки(Упаковка.ВложеннаяУпаковка);
	ИначеЕсли ЗначениеЗаполнено(Упаковка) Тогда
		Возврат Упаковка.Коэффициент;
	Иначе
		Возврат 1;
	КонецЕсли;
КонецФункции

#КонецОбласти