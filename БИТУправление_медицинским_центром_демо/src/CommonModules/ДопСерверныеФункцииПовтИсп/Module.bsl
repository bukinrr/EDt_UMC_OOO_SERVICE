#Область ПрограммныйИнтерфейс

// Возвращает Соответствие, где Ключ - синоним значения перечисления, а Значение - ссылка значения перечисления.
//
// Параметры:
//  ИмяПеречисления	 - Строка - Имя метаданных перечисления.
// 
// Возвращаемое значение:
//   Соответствие.
//
Функция ПолучитьСоответствиеДляПеречисления(ИмяПеречисления) Экспорт
	
	Результат = Новый Соответствие;
	
	ЗаполнитьКоллекциюПеречислением(Результат, ИмяПеречисления);
	
	Возврат Результат;
	
КонецФункции

// Возвращает Структуру, где Ключ - имя значения перечисления, а Значение - ссылка значения перечисления.
//
// Параметры:
//  ИмяПеречисления	 - Строка - Имя метаданных перечисления.
// 
// Возвращаемое значение:
//   Структура.
//
Функция ПолучитьСтруктуруДляПеречисления(ИмяПеречисления) Экспорт
	
	Результат = Новый Структура;
	
	ЗаполнитьКоллекциюПеречислением(Результат, ИмяПеречисления);
	
	Возврат Результат;
	
КонецФункции

// Возвращает Истина, если в конфигурации есть объект метаданных с указанным полным именем.
//
// Параметры:
//  ПолноеИмяМетаданных	 - Строка - полное имя объекта метаданных.
// 
// Возвращаемое значение:
//   - Булево
//
Функция ЕстьОбъектМетаданных(ПолноеИмяМетаданных) Экспорт
	
	Возврат Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданных) <> Неопределено;
	
КонецФункции

// Проверяет, есть ли указанное право на объект конфигурации.
//
// Параметры:
//  Право - Строка - имя права доступа.
//  ОбъектМетаданных - Строка, ОбъектМетаданных - полное имя типа, например, Документ.Прием.
//  Пользователь - Строка - По умолчанию Неопределено
//
// Возвращаемое значение:
//  Булево.
//
Функция ЕстьПравоДоступа(Право, Знач ОбъектМетаданных, Пользователь = Неопределено) Экспорт 
	
	Возврат ОбщегоНазначения.ЕстьПравоДоступа(Право, ОбъектМетаданных, Пользователь);
	
КонецФункции

// Цвет стиля из библиотеки стилей.
//
// Параметры:
//  ИмяЭлементаСтиля - Строка - имя элемента стиля.
// 
// Возвращаемое значение:
//  Цвет.
//
Функция ЦветСтиля(ИмяЭлементаСтиля) Экспорт
	
	Возврат ЦветаСтиля[ИмяЭлементаСтиля];
	
КонецФункции

// Шрифт стиля из библиотеки стилей.
//
// Параметры:
//  ИмяЭлементаСтиля - Строка - имя элемента стиля.
// 
// Возвращаемое значение:
//  Шрифт - искомый шрифт.
//
Функция ШрифтСтиля(ИмяЭлементаСтиля) Экспорт
	
	Возврат ШрифтыСтиля[ИмяЭлементаСтиля];
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьКоллекциюПеречислением(Коллекция, ИмяПеречисления)
	
	// Коллекция - Структура или Соответствие.
	ЗначенияПеречисленияМетаданные = Метаданные.Перечисления.Найти(ИмяПеречисления).ЗначенияПеречисления;
	Перечисление = Перечисления[ИмяПеречисления];
	
	Для Каждого МетаданныеЗначения Из ЗначенияПеречисленияМетаданные Цикл
		
		Коллекция.Вставить(МетаданныеЗначения.Имя, Перечисление[МетаданныеЗначения.Имя]);
		
	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

