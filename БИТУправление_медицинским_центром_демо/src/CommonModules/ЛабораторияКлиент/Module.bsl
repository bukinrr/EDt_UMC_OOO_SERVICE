
#Область ПрограммныйИнтерфейс

// Формирует и возвращает кеш НСИ лабораторий для использования на стороне клиентского приложения.
//
// Параметры:
//  Обновить - Булево - требуется ли обновить, если уже сформирован.
// 
// Возвращаемое значение:
//   Структура.
//
Функция ПолучитьКешНСИЛабораторийДляСтороныКлиента(Обновить = Ложь) Экспорт
	
	Если Не Обновить Тогда
		глКешНСИЛаборатории = ЛабораторияСервер.ПолучитьКешНСИЛабораторий();
	КонецЕсли;
	
	Если глКешНСИЛаборатории = Неопределено Или Обновить Тогда
		ЛабораторияСервер.ЗаполнитьКэшНСИЛабораторий();
		глКешНСИЛаборатории = ЛабораторияСервер.ПолучитьКешНСИЛабораторий();
	КонецЕсли;
		
	Возврат глКешНСИЛаборатории;
	
КонецФункции

// Возвращает правила забора анализа для номенклатуры и указанной лаборатории.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура анализа
//  Лаборатория	 - СправочникСсылка.Лаборатории	 - лаборатория 
//	ФормаДокумента - ДокументСсылка.Форма.
// 
// Возвращаемое значение:
//   Массив - массив структур с данным для заполнения табличной части забора по правилам анализа.
//
Функция ПолучитьПравилаЗабораАнализа(Номенклатура, Лаборатория, ФормаДокумента) Экспорт
	
	Если ЛабораторияКлиентСерверПовтИсп.ИспользуютсяПравилаЗабора(Лаборатория) Тогда
		
		МодульОбработчик = ЛабораторияКлиентСерверПовтИсп.ПолучитьМодульОбработчик(Лаборатория, Ложь);
		Если МодульОбработчик <> Неопределено Тогда
			Попытка
				Возврат МодульОбработчик.ПолучитьПравилаЗабораАнализа(Номенклатура, Лаборатория, ФормаДокумента);
			Исключение
				Возврат МодульОбработчик.ПолучитьПравилаЗабораАнализа(Номенклатура, Лаборатория);
			КонецПопытки;
		Иначе
			Возврат Неопределено;
		КонецЕсли;	
		
	КонецЕсли;
	
КонецФункции

// Открывает форму со списком лабораторий, у которых справочники неактуальны.
//
// Параметры:
//  Форма	 - 	ФормаКлиентскогоПриложения - форма документа "Действия над анализами".
//
Процедура ПроверитьАктуальностьСправочниковЛабораторий(Форма) Экспорт
	
	МассивЛаборатории = ЛабораторияСервер.ПроверитьАктуальностьСправочниковЛабораторий();
	Если МассивЛаборатории.Количество() <> 0 Тогда
		ИмяФормы = "РегистрСведений.ВерсииФайловСправочниковЛабораторий.Форма.ЛабораторииСНеактуальнымиСправочниками";
		ОткрытьФорму(ИмяФормы, Новый Структура("МассивЛаборатории", МассивЛаборатории),
			Форма,,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);  
	КонецЕсли;
	
КонецПроцедуры	

// Вызывается для печати этикеток со штрихкодами контейнеров.
//
// Параметры:
//  ДокументСсылка		 - ДокументСсылка.ДействияНадАнализами	 - документ, по которому печатаются этикетки.
//  ДанныеКонтейнеров	 - ДанныеФормыКоллекция					 - данные табличной части "Контейнеры" формы документа "Действия над анализами".
//  Клиент				 - СправочникСсылка.Клиенты				 - клиент, данные которого выводятся на этикетки.
// 
// Возвращаемое значение:
//  Булево - успешность операции.
//
Процедура НапечататьЭтикеткиПоДокументу(ДокументСсылка, ДанныеКонтейнеров, Клиент = Неопределено) Экспорт 
	
	Состояние(НСтр("ru='Фомирование этикеток...'"));
	
	Лаборатории = Новый Массив;
	Для Каждого Контейнер Из ДанныеКонтейнеров Цикл
		Если Лаборатории.Найти(Контейнер.Лаборатория) = Неопределено Тогда
			Лаборатории.Добавить(Контейнер.Лаборатория);
		КонецЕсли;
	КонецЦикла;
	
	МенеджерОборудованияКлиент.ОбновитьРабочееМестоКлиента();
	
	ПараметрыЗабора = Новый Структура("ДокументСсылка, Лаборатории, Клиент, ДанныеКонтейнеров", ДокументСсылка, Лаборатории, Клиент, ДанныеКонтейнеров);  
	НапечататьЭтикеткиПоДокументуПредВыбором(ПараметрыЗабора);
		
КонецПроцедуры

Процедура НапечататьЭтикеткиПоДокументуПредВыбором(ДопДанные)
	
	ПоддерживаемыеТипыВО = Новый Массив();
	ПоддерживаемыеТипыВО.Добавить("ПринтерЭтикеток");;

	ОповещениеПриЗавершении = Новый ОписаниеОповещения("НапечататьЭтикеткиПоДокументуНачалоПечати", ЭтотОбъект, ДопДанные);
	МенеджерОборудованияКлиент.ПредложитьВыбратьУстройство(ОповещениеПриЗавершении, ПоддерживаемыеТипыВО,
	НСтр("ru='Выберите принтер этикеток'"),
	НСтр("ru='Принтер этикеток не подключен.'"), 
	НСтр("ru='Принтер этикеток не выбран.'"));
	
КонецПроцедуры

// Напечатать этикетки по документу (начало печати).
//
// Параметры:
//  Результат	 - Структура - результат выбора принтера. 
//  ДопПараметры - Структура - дополнительные параметры.
//
Процедура НапечататьЭтикеткиПоДокументуНачалоПечати(Результат, ДопПараметры) Экспорт
	
	Если Результат.Результат Тогда 
		ИдентификаторУстройства = Результат.ИдентификаторУстройства;
		ДанныеЭтикеток = ЛабораторияСервер.СформироватьЭтикеткиКонтейнеров(ДопПараметры.ДокументСсылка, ДопПараметры.Лаборатории, ДопПараметры.Клиент);
		ДопДанные = Новый Структура;
		мДанныхЭтикеток = Новый Массив;
		Для Каждого Эл Из ДанныеЭтикеток Цикл
			мДанныхЭтикеток.Добавить(Эл.Значение);		
		КонецЦикла;
	
		ДопДанные.Вставить("Счетчик", 0);
		ДопДанные.Вставить("КоличествоДанных", 	мДанныхЭтикеток.Количество());
		ДопДанные.Вставить("ДанныеЭтикеток", мДанныхЭтикеток);
		ДопДанные.Вставить("ИдентификаторУстройства", ИдентификаторУстройства);
		НапечататьЭтикеткиПоДокументуПродолжение(Новый Структура("Результат", Истина), ДопДанные);
	Иначе
		НапечататьЭтикеткиПоДокументуНаПринтере(ДопПараметры.ДокументСсылка, ДопПараметры.ДанныеКонтейнеров, ДопПараметры.Клиент, ДопПараметры.Лаборатории);		
	КонецЕсли;
			
КонецПроцедуры

// Печатать этикетки по документу (оценка ответа от принтера этикеток).
//
// Параметры:
//  РезультатОперации	 - Структура - результат
//  ДопПараметры		 - Структура - дополнительные параметры
//
Процедура НапечататьЭтикеткиПоДокументуПродолжение(РезультатОперации, ДопПараметры) Экспорт
	
	Если РезультатОперации.Результат Тогда
		Сч = ДопПараметры.Счетчик;
		ДанныеЭтикеток = ДопПараметры.ДанныеЭтикеток;
		Если Сч < ДопПараметры.КоличествоДанных Тогда
			ПараметрыПечатиЭтикеток = ОборудованиеПринтерыЭтикетокКлиент.ПараметрыОперацииПечатиЭтикеток(ДанныеЭтикеток[Сч].XMLОписаниеМакета, ДанныеЭтикеток[Сч].МассивЭтикеток);
			ДопПараметры.Счетчик = ДопПараметры.Счетчик + 1;
			ОповещениеЗавершения = Новый ОписаниеОповещения("НапечататьЭтикеткиПоДокументуПродолжение", ЭтотОбъект, ДопПараметры);
			ОборудованиеПринтерыЭтикетокКлиент.НачатьПечатьЭтикеток(ОповещениеЗавершения, Новый УникальныйИдентификатор, ДопПараметры.ИдентификаторУстройства, ПараметрыПечатиЭтикеток);
		КонецЕсли;
	Иначе
		ОбщегоНазначения.СообщитьПользователю(РезультатОперации.ОписаниеОшибки);
	КонецЕсли;
	
КонецПроцедуры

// Печатает этикетки по документу на принтере
//
// Параметры:
//  ДокументСсылка		 - ДокументСсылка.ДействияНадАнализами	 - документ, по которому печатаются этикетки.
//  ДанныеКонтейнеров	 - ДанныеФормыКоллекция					 - данные табличной части "Контейнеры" формы документа "Действия над анализами".
//  Клиент				 - СправочникСсылка.Клиенты				 - клиент, данные которого выводятся на этикетки. 
//  Лаборатории			 - СправочникСсылка.Лаборатории - лаборатория.
//
Процедура НапечататьЭтикеткиПоДокументуНаПринтере(ДокументСсылка, ДанныеКонтейнеров, Клиент, Лаборатории)
	
	Отбор = Новый Структура("Лаборатория");
	Для Каждого Лаборатория Из Лаборатории Цикл
		Если ЛабораторияСервер.ИспользуетсяПечатьЭтикеток(Лаборатория) Тогда
			СтруктураПечати = ЛабораторияСервер.ПолучитьСтруктуруПечатиЭтикеток(ДанныеКонтейнеров, Лаборатория, ДокументСсылка, Клиент);	
					
			Если ТипЗнч(СтруктураПечати) = Тип("Структура") Тогда
				Если ПредварительныйПросмотрЭтикеток() Тогда
					ПечатьДокументовКлиент.ВывестиНапечататьДокумент(СтруктураПечати, "Печать_Этикеток");
				Иначе
					// Используемый режим
					ЭтикеткиТабДок = СтруктураПечати.ПечДокумент;
					Если ЭтикеткиТабДок = Неопределено Тогда  
						ЭтикеткиТабДок = Новый ТабличныйДокумент; 
					КонецЕсли;
					ЭтикеткиТабДок.Напечатать(РежимИспользованияДиалогаПечати.Использовать);
				КонецЕсли;
			ИначеЕсли ТипЗнч(СтруктураПечати) = Тип("Строка") Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьОбОшибке(СтруктураПечати);
			Иначе
				ПоказатьПредупреждение(,СтрШаблон(НСтр("ru='Для лаборатории %1 печать этикеток поддерживается только на оборудовании, указанном в справочнике ""Подключаемое оборудование"".
														   |Для текущего рабочего места нет подключенных принтеров этикеток!'"),
												  Строка(ЛабораторияСерверПовтИсп.ВидЛаборатории(Лаборатория))));
				Продолжить;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает отбор допустимых для выбора из справочника значений параметра забора.
//
// Параметры:
//  ФормаДокумента	 - 	ФормаКлиентскогоПриложения - форма документа "Действия над анализами".
//
Процедура УстановитьДопустимыеЗначенияПараметраЗабора(ФормаДокумента) Экспорт
	
	ТекущиеДанные = ФормаДокумента.Элементы.ПараметрыАнализа.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДопустимыеЗначения = Неопределено;
	
	Если ТипЗнч(ТекущиеДанные.Параметр) = Тип("ПланВидовХарактеристикСсылка.invЛабораторныеПараметры") Тогда
		ДопустимыеЗначения = invИнвитроКлиент.ПолучитьДопустимыеЗначенияПараметраЗабора(ТекущиеДанные.Параметр, ФормаДокумента.Объект.ПараметрыЗабора);
	КонецЕсли;
	
	Если ДопустимыеЗначения <> Неопределено Тогда
		НовыйПараметр = Новый ПараметрВыбора("Отбор.Ссылка", ДопустимыеЗначения);
	Иначе
		НовыйПараметр = Новый ПараметрВыбора("Отбор.ПометкаУдаления", Ложь);
	КонецЕсли;
	
	НовыйМассив = Новый Массив();
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	ФормаДокумента.Элементы.ПараметрыАнализаЗначение.ПараметрыВыбора = НовыеПараметры;
	
КонецПроцедуры

// Очищает при изменении параметра забора значения других зависимых от него параметров.
//
// Параметры:
//  ФормаДокумента	 - 	ФормаКлиентскогоПриложения - форма документа "Действия над анализами".
//
Процедура ОчиститьЗависимыеПараметрыЗабора(ФормаДокумента) Экспорт

	ТекущиеДанные = ФормаДокумента.Элементы.ПараметрыАнализа.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПодчиненныеПараметры = Неопределено;
	
	Если ТипЗнч(ТекущиеДанные.Параметр) = Тип("ПланВидовХарактеристикСсылка.invЛабораторныеПараметры") Тогда
		ПодчиненныеПараметры = invИнвитроКлиент.ПолучитьЗависимыеПараметрыЗабора(ТекущиеДанные.Параметр);
	КонецЕсли;
	
	Если ПодчиненныеПараметры <> Неопределено Тогда
		Для Каждого Параметр Из ПодчиненныеПараметры Цикл
			СтрокиПараметрыЗабора = ФормаДокумента.Объект.ПараметрыЗабора.НайтиСтроки(Новый Структура("Параметр", Параметр));
			Для Каждого СтрокаПараметрыЗабора Из СтрокиПараметрыЗабора Цикл
				Если ЗначениеЗаполнено(СтрокаПараметрыЗабора.Значение) Тогда
					СтрокаПараметрыЗабора.Значение = Неопределено;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры	

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Для переопределения расширениями, например, при отладеке. ЛОЖЬ - не показывать этикетку а сразу переходить к выбору принтера.
// 
// Возвращаемое значение:
//  Булево. 
//
Функция ПредварительныйПросмотрЭтикеток()
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти