#Область ПрограммныйИнтерфейс

// Формирует документ WORD по шаблону
//
// Параметры:
//  ШаблонПечати				 - СправочникСсылка.ШаблоныПечати	 - Шаблон, по котрому нужно распечатать документ
//  мсПараметрыШаблона			 - Массив							 - Массив вычисленных параметров шаблона печати
//  ДвоичныеДанныеДокумента		 - ДвоичныеДанные					 - В этот параметр будут помещены двоичные данные сформированного документа при серверном вызове
//  СодержаниеОшибки			 - Строка							 - Строка, куда помещается описание ошибки, если она была
//  СтруктураПараметровПечати	 - Структура						 - параметры печати
// 
// Возвращаемое значение:
//  Неопределено, ДвоичныеДанные - Сформированные двоичные данные документа WORD.
//
Функция СформироватьДокументWORDПоШаблону(ШаблонПечати, мсПараметрыШаблона, ДвоичныеДанныеДокумента = Неопределено, СодержаниеОшибки = "", СтруктураПараметровПечати = Неопределено) Экспорт 
	
	#Если ВебКлиент Или МобильныйКлиент Тогда
	СодержаниеОшибки = "В режиме Веб-клиента данная операция не доступна.";
	Возврат Ложь;
	#Иначе
	
	ДанныеФайла = РаботаСШаблонамиПечатиСервер.ПолучитьФайлМакетаШаблонаПечати(ШаблонПечати);
	
	Если ДанныеФайла = Неопределено Тогда 
		СодержаниеОшибки = "Не указан файл шаблона договора";
		Возврат Ложь;
	КонецЕсли;
	
	Файл = Новый Файл(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ШаблонПечати, "ИмяФайлаМакета"));
	 
	ИмяФайла = ПолучитьИмяВременногоФайла("." + Файл.Расширение);
	Попытка
		ДанныеФайла.Записать(ИмяФайла);
	Исключение
		СодержаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	Попытка
		Word = Новый COMОбъект("Word.Application");
	Исключение
		СодержаниеОшибки =	"Приложение Microsoft Word не установлено или работа с ним в режиме COM-соединения невозможна.
							|Не удалось создать COM-объект ""Word.Application""
							|" + ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
		
	Попытка		
		Документ = Word.Documents.Add(ИмяФайла);
	Исключение
		Word.Application.Quit();
		СодержаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
		
	wdReplaceAll = 2;
	Попытка
		Замена = Документ.Content.Find;
		Для Каждого РеквизитШаблона Из мсПараметрыШаблона Цикл
			Если ТипЗнч(РеквизитШаблона.Значение) = Тип("Строка") Тогда
				
				ЗаменяемаяСтрока	= РеквизитШаблона.ИмяПараметра;
				ЗаменяющееЗначение	= Строка(РеквизитШаблона.Значение);
				
				// Если надо вставить в word строку длиннее 255 символов, то делим её на части менее 255 и подставляем,
				// пока не останется менее 255. Это обход ограничения Microsoft Word на операцию поиска-замены.
				Если СтрДлина(ЗаменяющееЗначение) > 255 Тогда
					
					НоваяЗаменяемаяСтрока = Строка (Новый УникальныйИдентификатор);
					Замена.Execute(ЗаменяемаяСтрока, Ложь, Истина, Ложь, , , Истина, , Ложь, НоваяЗаменяемаяСтрока, wdReplaceAll);
					ЗаменяемаяСтрока = НоваяЗаменяемаяСтрока;
					
					РазмерПорцииЗаменяющейСтроки = 255 - СтрДлина(ЗаменяемаяСтрока);
					Пока СтрДлина(ЗаменяющееЗначение) >= 255 Цикл
						СтрокаПромежуточнойПодстановки = Лев(ЗаменяющееЗначение, РазмерПорцииЗаменяющейСтроки) + ЗаменяемаяСтрока;
						Замена.Execute(ЗаменяемаяСтрока, Ложь, Истина, Ложь, , , Истина, , Ложь, СтрокаПромежуточнойПодстановки, wdReplaceAll);
						
						ЗаменяющееЗначение = Прав(ЗаменяющееЗначение, СтрДлина(ЗаменяющееЗначение) - РазмерПорцииЗаменяющейСтроки);
					КонецЦикла;
				КонецЕсли;
				
				Замена.Execute(ЗаменяемаяСтрока, Ложь, Истина, Ложь, , , Истина, , Ложь, ЗаменяющееЗначение, wdReplaceAll);
				
			ИначеЕсли ТипЗнч(РеквизитШаблона.Значение) = Тип("ТабличныйДокумент")
				// Или ТипЗнч(РеквизитШаблона.Значение) = Тип("ТаблицаЗначений")
			Тогда
				Замена.Execute(РеквизитШаблона.ИмяПараметра);
				Если Замена.Found И Замена.Parent.Tables.Count > 0 Тогда
					
					Таблица = РеквизитШаблона.Значение;
					ЭтоТД = ТипЗнч(Таблица) = Тип("ТабличныйДокумент");

					ЧислоСтрок = ?(ЭтоТД, Таблица.ВысотаТаблицы, Таблица.Количество());
					ЧислоКолонок = ?(ЭтоТД, Таблица.ШиринаТаблицы, Таблица.Колонки.Количество());
					
					Если Замена.Parent.Tables.Count = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					ТаблицаВорд = Замена.Parent.Tables.Item(1);
					
					Если Замена.Parent.Rows.Count > 0 Тогда 
						НомерНачальнойСтроки = Замена.Parent.Rows.Item(1).Index;
					Иначе
						НомерНачальнойСтроки = 1;
					КонецЕсли;
					
					ЧислоСтрокВорд = ТаблицаВорд.Rows.Count;
					ЧислоКолонокВорд = ТаблицаВорд.Columns.Count;
					
					ЧислоКолонокДляЗаполнения = Мин(ЧислоКолонок, ТаблицаВорд.Columns.Count);
					
					СтрокаЭталонВорд = ТаблицаВорд.Rows.Item(НомерНачальнойСтроки);
					// Заполнение таблицы.
					Для СчС = 1 По ЧислоСтрок Цикл
						НоваяСтрока = ТаблицаВорд.Rows.Add(СтрокаЭталонВорд);
						Для СчК = 1 По ЧислоКолонокДляЗаполнения Цикл
							ЯчейкаДок = ТаблицаВорд.Cell(НоваяСтрока.Index, СчК);
							ЗначениеЯчейкиПараметра = ?(ЭтоТД, Таблица.Область(СчС, СчК).Текст, Таблица[СчС][СчК]);
							ЯчейкаДок.Range.Text = ЗначениеЯчейкиПараметра;
						КонецЦикла;
					КонецЦикла;
					СтрокаЭталонВорд.Delete();
					Замена = Документ.Content.Find;
				КонецЕсли;
			Иначе
				Замена.Execute(РеквизитШаблона.ИмяПараметра, Ложь, Истина, Ложь, , , Истина, , Ложь, Строка(РеквизитШаблона.Значение), wdReplaceAll);
			КонецЕсли;
		КонецЦикла;
	Исключение
		СодержаниеОшибки = ОписаниеОшибки();
		Попытка
			Документ.Close(0);
		Исключение КонецПопытки;
		Word.Application.Quit();
		Возврат Ложь;
	КонецПопытки;
	
	#КонецЕсли	
	
	#Если ВебКлиент Или МобильныйКлиент Тогда
	#ИначеЕсли Клиент Тогда
		Если СтруктураПараметровПечати <> Неопределено Тогда 
			
			Если СтруктураПараметровПечати.НаПринтер Тогда  
				Word.PrintOut(0, 0, 0, "", "", "", 0, СтруктураПараметровПечати.КоличествоЭкземпляров);
				Попытка
					Документ.Close(0);
				Исключение КонецПопытки;
				Word.Application.Quit();
			Иначе
				Word.Application.WindowState = 2;
				Word.Visible = Истина;
				Word.Application.WindowState = 1;
				Word.Activate();
				Документ.Activate();	
				Документ.Application.Activate();
			КонецЕсли;
		Иначе
			Word.Application.WindowState = 2;
			Word.Visible = Истина;
			Word.Application.WindowState = 1;
			Word.Activate();
			Документ.Activate();	
			Документ.Application.Activate();
		КонецЕсли;
		
	#Иначе
	    РежимПечатиПоШаблонуWORD = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("РежимПечатиПоШаблонуWORD");
		Если РежимПечатиПоШаблонуWORD = ПредопределенноеЗначение("Перечисление.РежимыПечатиПоШаблонуWORD.ФормироватьНаСервереCOMmsWORD_PDF") Тогда
			КодФормата = 17;
			Расширение = "pdf";
		Иначе
			КодФормата = 6;
			Расширение = "rtf";
		КонецЕсли;
	
		ИмяФайлаРезультата = ПолучитьИмяВременногоФайла(Расширение); 
		Попытка
			Документ.SaveAs(ИмяФайлаРезультата, КодФормата);
			Документ.Close(0);
		Исключение
			СодержаниеОшибки = ОписаниеОшибки();
			Word.Application.Quit();
		Возврат Ложь;
		КонецПопытки;

		Word.Application.Quit();
		
		ДвоичныеДанныеДокумента = Новый ДвоичныеДанные(ИмяФайлаРезультата);
		
		УдалитьФайлы(ИмяФайлаРезультата);
		УдалитьФайлы(ИмяФайла);
	#КонецЕсли
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти