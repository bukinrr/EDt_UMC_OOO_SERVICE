#Область ПрограммныйИнтерфейс
// Процедура ОбработатьОшибку.
//
// Параметры:
//  ИнформацияОбОшибке - ИнформацияОбОшибке - информация об ошибке.
//  ВыводитьСообщение - Булево - По умолчанию Истина
//  Метаданные - Метаданные - Метаданные объекта.
//  Данные - ЛюбаяСсылка - контекст ошибки.
//
Процедура ОбработатьОшибку(ИнформацияОбОшибке, ВыводитьСообщение = Истина, Метаданные = Неопределено, Данные = Неопределено) Экспорт
	Перем Первопричина, СообщенияВОчереди;
	
	СообщенияВОчереди = ПолучитьСообщенияПользователю();
	
	Если СообщенияВОчереди.Количество() > 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
	
	Если ТекстОшибки = "" Тогда
		ТекстОшибки = "Ошибка в " + ИнформацияОбОшибке.ИмяМодуля + ", стр. " + ИнформацияОбОшибке.НомерСтроки
			+ " " + ИнформацияОбОшибке.ИсходнаяСтрока + ": " + ИнформацияОбОшибке.Описание;

		Инфо = ИнформацияОбОшибке;

		Пока Инфо.Причина <> Неопределено Цикл
			Инфо = Инфо.Причина;
			ТекстОшибки = ТекстОшибки + Символы.ПС
						+ "Ошибка в " + Инфо.ИмяМодуля + ", стр. " + Инфо.НомерСтроки
						+ " " + Инфо.ИсходнаяСтрока + ": " + Инфо.Описание;
		КонецЦикла;
	КонецЕсли;


	Уровень = УровеньЖурналаРегистрации.Ошибка;
	ЗаписьЖурналаРегистрации(
		"Ошибка выполнения", 
		Уровень,
		Метаданные,
		Данные,
		ТекстОшибки
	);

	Если ВыводитьСообщение Тогда
		Инфо = ИнформацияОбОшибке;

		Пока Инфо.Причина <> Неопределено Цикл
			Инфо = Инфо.Причина;
		КонецЦикла;
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Инфо.Описание);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти 