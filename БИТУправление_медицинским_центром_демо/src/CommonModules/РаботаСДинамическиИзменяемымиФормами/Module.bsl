#Область ПрограммныйИнтерфейс

Процедура СкопироватьЭлементыФормыРекурсивно(Знач ФормаПриемник, ГруппаПриемник, ГруппаИсточник, СуффиксЭлементов, СоздаватьРеквизиты = Ложь) Экспорт
	
	мсРеквизиты = Новый Массив;
	
	Для Каждого Элемент Из ГруппаИсточник.ПодчиненныеЭлементы Цикл
		
		Попытка
			Подчиненные = Элемент.ПодчиненныеЭлементы;
			ЕстьПодчиненныеЭлементы = Истина;
		Исключение
			ЕстьПодчиненныеЭлементы = Ложь;
		КонецПопытки;
		 
		НовыйЭлемент = СкопироватьЭлементФормы(ФормаПриемник, ГруппаПриемник, Элемент, СуффиксЭлементов, Истина);
		
		// Копирование обработчиков
		КопируемыеОбработчики = ПолучитьОбработчикиСобытийЭлемента(НовыйЭлемент);
		Для Каждого Обработчик Из КопируемыеОбработчики Цикл 
			ИмяОбработчика = "";
			Попытка
				ИмяОбработчика = Элемент.ПолучитьДействие(Обработчик);
			Исключение
			КонецПопытки;
			Если Не ПустаяСтрока(ИмяОбработчика) Тогда 
				НовыйЭлемент.УстановитьДействие(Обработчик, ИмяОбработчика);
			КонецЕсли;
		КонецЦикла;
		
		Если ЕстьПодчиненныеЭлементы Тогда 
			СкопироватьЭлементыФормыРекурсивно(ФормаПриемник, НовыйЭлемент, Элемент, СуффиксЭлементов, СоздаватьРеквизиты);
		КонецЕсли;
		
	КонецЦикла;
	
	Если мсРеквизиты.Количество() > 0 Тогда 
		ФормаПриемник.ИзменитьРеквизиты(мсРеквизиты);
	КонецЕсли;
	
КонецПроцедуры

Функция СкопироватьЭлементФормы(ФормаПриемник, ГруппаПриемник, ЭлементИсточник, СуффиксЭлемента, СоздаватьРеквизит = Ложь) Экспорт 
	
	ЭлементыФормы = ФормаПриемник.Элементы;
	
	ТипЭлемента = ТипЗнч(ЭлементИсточник);
	
	ИмяЭлемента = ЭлементИсточник.Имя + СуффиксЭлемента;
	Если ГруппаПриемник = Неопределено Тогда 
		НовыйЭлемент = ЭлементыФормы.Добавить(ИмяЭлемента, ТипЗнч(ЭлементИсточник));
	Иначе
		НовыйЭлемент = ЭлементыФормы.Добавить(ИмяЭлемента, ТипЗнч(ЭлементИсточник), ГруппаПриемник);
	КонецЕсли;
	ИсключаемыеСвойства = ПолучитьСвойстваТолькоДляЧтенияЭлемента(ЭлементИсточник, СоздаватьРеквизит);
	ЗаполнитьЗначенияСвойств(НовыйЭлемент, ЭлементИсточник, , ИсключаемыеСвойства);
	
	Если СоздаватьРеквизит Тогда
		
		Если ТипЭлемента = Тип("ПолеФормы") Или ТипЭлемента = Тип("ТаблицаФормы") Тогда // Создаем реквизит
			НовыйРеквизит = СкопироватьРеквизитФормы(ФормаПриемник, ЭлементИсточник.ПутьКДанным, СуффиксЭлемента);
			Если НовыйРеквизит <> Неопределено Тогда
				НовыйЭлемент.ПутьКДанным = НовыйРеквизит.Путь + ?(ПустаяСтрока(НовыйРеквизит.Путь), "", ".") + НовыйРеквизит.Имя;
			КонецЕсли;
		ИначеЕсли ТипЭлемента = Тип("КнопкаФормы") Тогда // Создаем команду 
			НоваяКоманда = СкопироватьКомандуФормы(ФормаПриемник, ЭлементИсточник.ИмяКоманды, СуффиксЭлемента);
			Если НоваяКоманда <> Неопределено Тогда 
				НовыйЭлемент.ИмяКоманды = НоваяКоманда.Имя;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат НовыйЭлемент;
	
КонецФункции

Функция СкопироватьРеквизитФормы(ФормаПриемник, ПутьКДаннымИсточник, СуффиксЭлемента) Экспорт 
	
	Если ПустаяСтрока(ПутьКДаннымИсточник) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	РеквизитИсточник = ПолучитьРеквизитФормы(ФормаПриемник, ПутьКДаннымИсточник);
	Если РеквизитИсточник = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	// Проверка на существование такого реквизита
	ПутьНовогоРеквизита = РеквизитИсточник.Путь + СуффиксЭлемента;
	НовыйРеквизит = ПолучитьРеквизитФормы(ФормаПриемник, ПутьНовогоРеквизита);
	Если НовыйРеквизит <> Неопределено Тогда 
		Возврат НовыйРеквизит;
	КонецЕсли;
	
	мсРеквизиты = Новый Массив;
	НовыйРеквизит = Новый РеквизитФормы(РеквизитИсточник.Имя + СуффиксЭлемента, РеквизитИсточник.ТипЗначения, 
		РеквизитИсточник.Путь, РеквизитИсточник.Заголовок, РеквизитИсточник.СохраняемыеДанные); 
	мсРеквизиты.Добавить(НовыйРеквизит);
	ФормаПриемник.ИзменитьРеквизиты(мсРеквизиты);
		
	СкопироватьДанныеОсобыхРеквизитовФормы(НовыйРеквизит, РеквизитИсточник);
	
	Возврат НовыйРеквизит;
		
КонецФункции

Функция СкопироватьДанныеОсобыхРеквизитовФормы(РеквизитПриемник, РеквизитИсточник)
	
	Если РеквизитПриемник.ТипЗначения.СодержитТип(Тип("ДинамическийСписок")) Тогда
		ЗаполнитьЗначенияСвойств(РеквизитПриемник, РеквизитИсточник, , "Параметры, Отбор, УсловноеОформление");
		Для Каждого ЗначениеПараметра Из РеквизитИсточник.Параметры.Элементы Цикл
			РеквизитПриемник.Параметры.УстановитьЗначениеПараметра(ЗначениеПараметра.Параметр, ЗначениеПараметра.Значение);
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

Функция СкопироватьКомандуФормы(ФормаПриемник, ИмяКоманды, СуффиксЭлемента) Экспорт
	
	Если ПустаяСтрока(ИмяКоманды) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	КомандаИсточник = ФормаПриемник.Команды.Найти(ИмяКоманды);
	Если КомандаИсточник = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	НовоеИмяКоманды = КомандаИсточник.Имя + СуффиксЭлемента;
	НоваяКоманда = ФормаПриемник.Команды.Найти(НоваяКоманда);
	Если НоваяКоманда <> Неопределено Тогда 
		Возврат НоваяКоманда;
	КонецЕсли;
	
	НоваяКоманда = ФормаПриемник.Команды.Добавить(НовоеИмяКоманды);
	ЗаполнитьЗначенияСвойств(НоваяКоманда, КомандаИсточник, , "Имя");
	
	Возврат НоваяКоманда;
	
КонецФункции

// Перечень не полный
Функция ПолучитьОбработчикиСобытийЭлемента(ЭлементФормы)
	
	Обработчики = Новый Массив;
	
	ТипЭлемента = ТипЗнч(ЭлементФормы);
	Если ТипЭлемента = Тип("ПолеФормы") Тогда 
		Обработчики.Добавить("ПриИзменении");
		ВидЭлемента = ЭлементФормы.Вид;
		Если ВидЭлемента = ВидПоляФормы.ПолеHTMLДокумента Тогда
			Обработчики.Добавить("ДокументСформирован");
			Обработчики.Добавить("ПриНажатии");
		КонецЕсли;
	ИначеЕсли ТипЭлемента = Тип("ГруппаФормы") Тогда
		ВидЭлемента = ЭлементФормы.Вид;
		Если ВидЭлемента = ВидГруппыФормы.Страницы Тогда
			Обработчики.Добавить("ПриСменеСтраницы");
		КонецЕсли; 
	ИначеЕсли ТипЭлемента = Тип("ТаблицаФормы") Тогда
		Обработчики = Новый Массив;
		Обработчики.Добавить("ПриИзменении");
	ИначеЕсли ТипЭлемента = Тип("ДекорацияФормы") Тогда 
		ВидЭлемента = ЭлементФормы.Вид;
		Если ВидЭлемента = ВидДекорацииФормы.Надпись Тогда
			Обработчики.Добавить("Нажатие");
			Обработчики.Добавить("ОбработкаНавигационнойСсылки");
		ИначеЕсли ВидЭлемента = ВидДекорацииФормы.Картинка Тогда 
			Обработчики.Добавить("Нажатие");
			Обработчики.Добавить("НачалоПеретаскивания");
			Обработчики.Добавить("ОкончаниеПеретаскивания");
			Обработчики.Добавить("Перетаскивание");
			Обработчики.Добавить("ПроверкаПеретаскивания");
		КонецЕсли; 		
	КонецЕсли;
	Возврат Обработчики;
	
КонецФункции

Функция ПолучитьСвойстваТолькоДляЧтенияЭлемента(ЭлементФормы, ИсключатьПутьКДанным = Истина) Экспорт 
	
	ИсключаемыеСвойства = "Имя, Родитель";
	
	ТипЭлемента = ТипЗнч(ЭлементФормы);
	Если ТипЭлемента = Тип("ПолеФормы") Тогда
		ВидЭлемента = ЭлементФормы.Вид;
		Если ВидЭлемента = ВидПоляФормы.ПолеВвода Тогда
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ВыделенныйТекст, ТекстРедактирования, СвязьПоТипу";
		КонецЕсли;
		Если ИсключатьПутьКДанным Тогда 
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ПутьКДанным";
		КонецЕсли;
	ИначеЕсли ТипЭлемента = Тип("ГруппаФормы") Тогда
		ВидЭлемента = ЭлементФормы.Вид;
		Если ВидЭлемента = ВидГруппыФормы.ОбычнаяГруппа Тогда 
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ПутьКДаннымЗаголовка";
		ИначеЕсли ВидЭлемента = ВидГруппыФормы.ГруппаКолонок Тогда 
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ПутьКДаннымШапки";	
		КонецЕсли;
	ИначеЕсли ТипЭлемента = Тип("ТаблицаФормы") Тогда
		Если ИсключатьПутьКДанным Тогда 
			ИсключаемыеСвойства = ИсключаемыеСвойства + ", ПутьКДанным";
		КонецЕсли;
	ИначеЕсли ТипЭлемента = Тип("КнопкаФормы") Тогда
	ИначеЕсли ТипЭлемента = Тип("ДекорацияФормы") Тогда 
	КонецЕсли;
	
	Возврат ИсключаемыеСвойства;
	
КонецФункции

Функция ПолучитьРеквизитФормы(Форма, Знач ПутьРеквизита) Экспорт 
	
	Если ПустаяСтрока(ПутьРеквизита) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	мсСоставныеПути = ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(ПутьРеквизита, ".");
	КоличествоРеквизитов = мсСоставныеПути.Количество();
	
	Если КоличествоРеквизитов = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ПоследнееИмя = мсСоставныеПути[КоличествоРеквизитов - 1];
	ПутьДоПоследнего = "";
	Если КоличествоРеквизитов > 1 Тогда
		ПутьДоПоследнего = Лев(ПутьРеквизита, СтрДлина(ПутьРеквизита) - СтрДлина(ПоследнееИмя) - 1);
	КонецЕсли;	
	
	мсРеквизитыФормы = Форма.ПолучитьРеквизиты(ПутьДоПоследнего);
	
	Для Каждого элРеквизит Из мсРеквизитыФормы Цикл
		Если элРеквизит.Имя = ПоследнееИмя Тогда 
			Возврат элРеквизит;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

#КонецОбласти