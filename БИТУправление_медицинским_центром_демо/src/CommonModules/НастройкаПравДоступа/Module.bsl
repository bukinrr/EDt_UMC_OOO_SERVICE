#Область ПрограммныйИнтерфейс

// Проверка возможности записи данных документа с учетом даты запрета изменения данных (даты запрета редактирования).
//
Процедура ПередЗаписьюДокументовПроверкаДоступностиПериода(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт

	Если Отказ
		Или ПараметрыСеанса.ПроверкаГраницыЗапретаИзмененияДанныхВыключена
		Или (Источник.ДополнительныеСвойства.Свойство("НеПроверятьГраницуЗапретаИзмененияДанных")
				И Источник.ДополнительныеСвойства.НеПроверятьГраницуЗапретаИзмененияДанных = Истина)
		Или (Источник.ДополнительныеСвойства.Свойство("НеДелатьПроверокПриЗаписи")
				И Источник.ДополнительныеСвойства.НеДелатьПроверокПриЗаписи = Истина)
	Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаПериодаДокумента(Источник, Отказ, РежимЗаписи);
	
	Если Отказ Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru='Редактирование данных этого периода запрещено. Изменения не могут быть записаны...'"));
	КонецЕсли;
	
КонецПроцедуры	// ПередЗаписьюДокументовПроверкаДоступностиПериода.

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Функция возвращает структуру с параметрами проверки документа по умолчанию.
//
Функция ПолучитьПараметрыПроверкиДокумента(ДокументОбъект)
	
	ПараметрыПроверкиДокумента = Новый Структура;
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	
	ПараметрыПроверкиДокумента.Вставить("МетаданныеДокумента", МетаданныеДокумента);
	
	// Если для документа проведение запрещено, проверка на дату запрета редактирования
	// Проверяется без учета проведенности.
	ПараметрыПроверкиДокумента.Вставить("ПроверятьПроведениеДокумента", (МетаданныеДокумента.Проведение = Метаданные.СвойстваОбъектов.Проведение.Разрешить));
	
	Если ЗаполнитьПараметрыПроверкиПоВидуДокумента(ДокументОбъект, ПараметрыПроверкиДокумента) Тогда
		Возврат ПараметрыПроверкиДокумента;
	КонецЕсли;
	
	Возврат ПараметрыПроверкиДокумента;
	
КонецФункции // ПолучитьПараметрыПроверкиДокумента()

// Процедура проверки версии документа на нарушение даты запрета.
//
Процедура ПроверитьВерсиюДокумента(ДокументОбъект, ПараметрыПроверкиДокумента, СоответствиеГраницЗапрета, Отказ, РежимЗаписи = Неопределено)
	
	Если ПараметрыПроверкиДокумента.ПроверятьПроведениеДокумента Тогда		
		ДокументПроведен = ДокументОбъект.Проведен ИЛИ ?(РежимЗаписи = Неопределено, ЛОЖЬ, РежимЗаписи = РежимЗаписиДокумента.Проведение);
		Если Не ДокументПроведен Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	ГраницаЗапрета = СоответствиеГраницЗапрета[ПараметрыСеанса.ТекущийПользователь];
	
	// Если регламентированная дата запрета для регламентного документа не определена
	// то используется общая дата запрета изменения данных.
	Если ГраницаЗапрета = Неопределено Тогда
		ГраницаЗапрета = СоответствиеГраницЗапрета["ОбщаяДатаЗапретаРедактирования"];    
	КонецЕсли;
	
	Если ГраницаЗапрета <> Неопределено Тогда
		
		СтандартнаяОбработка = Истина;
		ПроверитьВерсиюДокументаНаГраницуЗапретаРедактирования(ДокументОбъект, ГраницаЗапрета, Отказ, СтандартнаяОбработка);
		
		Если СтандартнаяОбработка Тогда
			Если ДокументОбъект.Дата <= ГраницаЗапрета Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Процедура проверки возможности записи (изменения) данных документа с учетом 
// даты запрета изменения данных (даты запрета редактирования).
Процедура ПроверкаПериодаДокумента(ДокументОбъект, Отказ, РежимЗаписи = Неопределено)
	
	Попытка
		СоответствиеГраницЗапрета = ПараметрыСеанса.ГраницыЗапретаИзмененияДанных.Получить();
	Исключение
		 СоответствиеГраницЗапрета = Неопределено;
	КонецПопытки;
	
	// Для пользователя с полными правами проверок выполнять не нужно.
	Если СоответствиеГраницЗапрета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроверкиДокумента = ПолучитьПараметрыПроверкиДокумента(ДокументОбъект);
	
	Если Не ДокументОбъект.ЭтоНовый() Тогда
		СтараяВерсияДокумента = ПолучитьВерсиюДокументаПередИзменением(ДокументОбъект, ПараметрыПроверкиДокумента);
		ПроверитьВерсиюДокумента(СтараяВерсияДокумента, ПараметрыПроверкиДокумента, СоответствиеГраницЗапрета, Отказ);
	КонецЕсли;
	
	Если Не Отказ Тогда
		ПроверитьВерсиюДокумента(ДокументОбъект, ПараметрыПроверкиДокумента, СоответствиеГраницЗапрета, Отказ, РежимЗаписи);
	КонецЕсли;
	
КонецПроцедуры // ПроверкаПериодаДокумента.

// Функция возвращает из БД версию документа до его изменения.
//
Функция ПолучитьВерсиюДокументаПередИзменением(ДокументОбъект, ПараметрыПроверкиДокумента)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|Дата" 
	
	+ ?(ПараметрыПроверкиДокумента.ПроверятьПроведениеДокумента, "," + Символы.ПС + "Проведен КАК Проведен", "") + "	
	|ИЗ Документ." + ПараметрыПроверкиДокумента.МетаданныеДокумента.Имя + "
	|ГДЕ Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка;
	
КонецФункции // ПолучитьВерсиюДокументаПередИзменением()

Процедура ПроверитьВерсиюДокументаНаГраницуЗапретаРедактирования(ДокументОбъект, ГраницаЗапрета, Отказ, СтандартнаяОбработка)
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.Событие") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если ДокументОбъект.Ссылка.Пустая() Тогда
			ДатаДокумента	= ДокументОбъект.Дата;
			ДатаФакт		= ДокументОбъект.ДатаФакт;
			ДатаФактСтарая	= Дата(1,1,1);
		Иначе
			ДатаДокумента	= ДокументОбъект.Ссылка.Дата;
			ДатаФактСтарая	= ДокументОбъект.Ссылка.ДатаФакт;
			ДатаФакт = ДокументОбъект.ДатаФакт;
		КонецЕсли;
		
		// Проверяем только события с заполненной фактической датой
		Если ЗначениеЗаполнено(ДатаФакт)
			Или ЗначениеЗаполнено(ДатаФактСтарая)
		Тогда
			Если ЗначениеЗаполнено(ДатаФакт) И ДатаФакт <= ГраницаЗапрета
				Или ЗначениеЗаполнено(ДатаФактСтарая) И ДатаФактСтарая <= ГраницаЗапрета
			Тогда
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Функция возвращает структуру параметров проверки документа для нетиповых случаев.
//
Функция ЗаполнитьПараметрыПроверкиПоВидуДокумента(ДокументОбъект, ПараметрыПроверкиДокумента)
	
	Возврат Ложь;
	
КонецФункции // ЗаполнитьПараметрыПроверкиПоВидуДокумента()

#КонецОбласти
