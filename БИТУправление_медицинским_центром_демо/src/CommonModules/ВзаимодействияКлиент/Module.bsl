#Область ПрограммныйИнтерфейс

// Обработчик для события формы ПроверкаПеретаскивания. Вызывается для списка предметов при перетаскивании в него взаимодействий.
//
// Параметры:
//  Элемент                   - ТаблицаФормы - таблица, для которой обрабатывается событие.
//  ПараметрыПеретаскивания   - ПараметрыПеретаскивания - содержит перетаскиваемое значение, тип действия и возможные
//                                                        действия при перетаскивании.
//  СтандартнаяОбработка      - Булево - признак стандартной обработки события.
//  Строка                    - СтрокаТаблицы - строка таблицы, над которой находится курсор.
//  Поле                      - Поле - элемент управляемой формы, с которым связана данная колонка таблицы.
//
Процедура СписокПредметПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле) Экспорт
	
	Если (Строка = Неопределено) ИЛИ (ПараметрыПеретаскивания.Значение = Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип("Массив") Тогда
		
		Для каждого ЭлементМассива Из ПараметрыПеретаскивания.Значение Цикл
			Если ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(ЭлементМассива) Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Открывает форму нового документа "Электронное письмо исходящее"
// с переданными в процедуру параметрами.
//
// Параметры:
//  ПараметрыПисьма - Структура - см. РаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма.
//  ОписаниеОповещенияОЗакрытии - ОписаниеОповещения - описание оповещения о закрытии формы письма.
//
Процедура ОткрытьФормуОтправкиПисьма(Знач ПараметрыПисьма = Неопределено, Знач ОписаниеОповещенияОЗакрытии = Неопределено) Экспорт
	
	ОткрытьФорму("Документ.ЭлектронноеПисьмоИсходящее.ФормаОбъекта", ПараметрыПисьма, , , , , ОписаниеОповещенияОЗакрытии);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Обработчик для события формы ОбработкаОповещения. Вызывается для взаимодействия.
Процедура ОтработатьОповещение(Форма,ИмяСобытия, Параметр, Источник) Экспорт
	
	Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("ТипОповещения") Тогда
		Если (Параметр.ТипОповещения = "ЗаписьВзаимодействия" ИЛИ Параметр.ТипОповещения = "ЗаписьПредмета")
			И Параметр.Основание = Форма.Объект.Ссылка Тогда
			
			Если (Форма.Предмет = Неопределено ИЛИ ВзаимодействияКлиентСервер.ЯвляетсяВзаимодействием(Форма.Предмет))
				И Форма.Предмет <> Параметр.Предмет Тогда
				Форма.Предмет = Параметр.Предмет;
				Форма.ОтобразитьИзменениеДанных(Форма.Предмет, ВидИзмененияДанных.Изменение);
			КонецЕсли;
						
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ОБРАБОТЧИКИ СОБЫТИЙ ДОКУМЕНТОВ ВЗАИМОДЕЙСТВИЙ

// Обработка выбора поля "рассмотреть после" в документах взаимодействиях.
//
// Параметры:
//  ЗначениеПоля         - Дата - значение поля "Отработать после". 
//  ВыбранноеЗначение    - Дата, число - либо выбранная дата, либо числовой инкремент от текущей даты.
//  СтандартнаяОбработка - Булево - признак стандартной обработки обработчика события формы.
//  Модифицированность   - Булево - признак модифицированности формы.
//
Процедура ОбработатьВыборВПолеРассмотретьПосле(ЗначениеПоля, ВыбранноеЗначение, СтандартнаяОбработка, Модифицированность) Экспорт
	
	СтандартнаяОбработка = Ложь;
	Модифицированность = Истина;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Число") Тогда
		ЗначениеПоля = ОбщегоНазначенияКлиент.ДатаСеанса() + ВыбранноеЗначение;
	Иначе
		ЗначениеПоля = ВыбранноеЗначение;
	КонецЕсли;
	
КонецПроцедуры

// Задает вопрос пользователю при смене режима форматирования электронного письма с HTML на обычный текст.
Процедура ВопросПриИзмененииФорматаСообщенияНаОбычныйТекст(Форма, ДополнительныеПараметры = Неопределено) Экспорт
	
	ОбработчикОповещенияОЗакрытии = Новый ОписаниеОповещения("ВопросПриИзмененииФорматаПриЗакрытии", Форма, ДополнительныеПараметры);
	ТекстСообщения = НСтр("ru='При преобразовании этого сообщения в обычный текст будут утеряны все элементы оформления, картинки и прочие вставленные элементы. Продолжить?'");
	ПоказатьВопрос(ОбработчикОповещенияОЗакрытии, ТекстСообщения, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, НСтр("ru = 'Изменение формата письма'"));
	
КонецПроцедуры

// Обработчик для события формы ПриНажатии поля HTML документа.
//
// Параметры:
//  Элемент                        - ЭлементФормы - для которой обрабатывается событие.
//  ДанныеСобытия                  - ФиксированнаяСтруктура - данные содержит параметры события.
//  СтандартнаяОбработка           - Булево - признак стандартной обработки события.
//
Процедура ПолеHTMLПриНажатии(Элемент, ДанныеСобытия, СтандартнаяОбработка) Экспорт
	
	Если ДанныеСобытия.Href <> Неопределено Тогда
		СтандартнаяОбработка = ЛОЖЬ;
		
		ОбщегоНазначенияКлиент.ПерейтиПоСсылке(ДанныеСобытия.Href);
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет проверку правильности заполнения реквизитов ДатаКогдаОтправить и ДатаАктуальностиОтправки в форме
// документа.
//
// Параметры:
//  Объект - ДокументОбъект - документ, в котором выполняется проверка.
//  Отказ  - Булево - устанавливает в истина, если реквизиты заполнены не правильно.
//
Процедура ПроверкаЗаполненностиРеквизитовОтложеннойОтправки(Объект, Отказ) Экспорт
		
КонецПроцедуры

// Формирует структуру по умолчанию параметров письма-вложения, которая передается в форму просмотра и печати.
//
// Параметры:
//
// Возвращаемое значение:
//   Структура   - содержит следующие параметры
//     *ДатаПисьмаОснования          - Дата - Дата письма основания.
//     *ИмяПользователяУчетнойЗаписи - Строка - Имя пользователя учетной записи, которая приняла письмо-основание.
//     *НеВызыватьКомандуПечати      - Булево - признак того, что при открытии формы печати не нужно вызывать команду
//                                              печати ОС.
//     *ПисьмоОснование              - Неопределено,
//                                   - Строка,
//                                   - ДокументСсылка.ЭлектронноеПисьмоВходящее,
//                                   - ДокументСсылка.ЭлектронноеПисьмоИсходящее - ссылка на письмо основание или
//                                                                                 представление письма.
//     *ТемаПисьмаОснования          - Строка - Тема письма-основания.
//
Функция ПустаяСтруктураПараметровПисьмаВложения() Экспорт

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ДатаПисьмаОснования", Дата(1, 1, 1));
	ПараметрыОткрытия.Вставить("ИмяПользователяУчетнойЗаписи", "");
	ПараметрыОткрытия.Вставить("НеВызыватьКомандуПечати", Истина);
	ПараметрыОткрытия.Вставить("ОтображатьВложенияПисьма", Истина);
	ПараметрыОткрытия.Вставить("ПисьмоОснование", Неопределено);
	ПараметрыОткрытия.Вставить("ТемаПисьмаОснования", "");
	
	Возврат ПараметрыОткрытия;

КонецФункции 

#КонецОбласти
