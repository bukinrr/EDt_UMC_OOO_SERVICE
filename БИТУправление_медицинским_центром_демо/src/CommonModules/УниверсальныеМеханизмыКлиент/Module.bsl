#Область СлужебныеПроцедурыИФункции

// Выполнение действий перед началом работы системы
//
Процедура ПередНачаломРаботыСистемы() Экспорт
	
	ТребуетсяПерезапуск = Ложь;
	
	ТребуетсяПерезапуск = ТребуетсяПерезапуск Или БИТСтили_ОформлениеИнтерфейса.ПриЗапускеСистемы();
	ТребуетсяПерезапуск = ТребуетсяПерезапуск Или ОбщегоНазначенияСервер.УстановитьКомпактныйРежимТакси();
	
	Если ТребуетсяПерезапуск Тогда
		ПрекратитьРаботуСистемы(Истина);
	КонецЕсли;
	
	ПроцедурыСпециализацииПоставкиКлиент.ПередНачаломРаботыСистемы();
	
КонецПроцедуры

#Область ИнформацияОПрограмме

Функция ПолучитьИнформациюОПрограмме() Экспорт
	
	ИнформацияОПрограмме = УниверсальныеМеханизмыСервер.ПолучитьИнформациюОПрограммеСервер();
	ИнформацияКлиентское = СистемнаяИнформацияОКлиентскомПриложении();
	
	МассивДанныхИнформации = Новый Массив;
	
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Конфигурация",		ИнформацияОПрограмме.ИмяКонфигурации);
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Версия конфигурации", ИнформацияОПрограмме.ВерсияКонфигурации);
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Версия платформы",	ИнформацияОПрограмме.ВерсияПлатформы);

	
	Если ЗначениеЗаполнено(ИнформацияОПрограмме.РасширенияКонфигурации) Тогда
		ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Расширения конфигурации", Символы.ПС + ИнформацияОПрограмме.РасширенияКонфигурации);
	КонецЕсли;
	
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "", "");
	
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Режим", ПредставлениеРежимаБазы(ИнформацияКлиентское.Режим));
	ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Клиентское приложение",
		ИнформацияОПрограмме.ТипКлиента + " " + ИнформацияКлиентское.ТипПлатформы + " (" + ИнформацияКлиентское.ТипПлатформыТекст + ")" + " (RAM " + ИнформацияКлиентское.ОЗУ + "Гб)");
	//ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "ОС клиентского приложения",	ИнформацияОПрограмме.ВерсияОС + " (RAM " + ИнформацияКлиентское.ОЗУ + " Гб)");
	
	Если ИнформацияКлиентское.Режим <> "Файловый" Тогда
		ДобавитьФорматированнуюСтрокуВМассив(МассивДанныхИнформации, "Сервер ",	ИнформацияОПрограмме.ТипПлатформы + " (RAM " + ИнформацияОПрограмме.ОЗУ + "Гб)");
	КонецЕсли;
	
	Возврат МассивДанныхИнформации; 
	
КонецФункции

Процедура ДобавитьФорматированнуюСтрокуВМассив(МассивСтрок, Заголовок, Значение)
	
	ФС_Заголовок = Новый ФорматированнаяСтрока(Заголовок, Новый Шрифт(,,Истина,,Ложь));
	ФС = Новый ФорматированнаяСтрока(	ФС_Заголовок,
										?(ЗначениеЗаполнено(Заголовок), ": ", ""),
										Значение,
										Символы.ПС);
	МассивСтрок.Добавить(ФС);
	
КонецПроцедуры

Функция СистемнаяИнформацияОКлиентскомПриложении()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Инфо = Новый Структура;
	Инфо.Вставить("ТипПлатформы", СистемнаяИнформация.ТипПлатформы);
	Инфо.Вставить("ТипПлатформыТекст", ?(СтрНайти(Строка(СистемнаяИнформация.ТипПлатформы), "64")>0, "64", "32") + НСтр("ru='-разрядный'"));
	Инфо.Вставить("ВерсияОС", СистемнаяИнформация.ВерсияОС);
	Инфо.Вставить("ОЗУ", Окр(СистемнаяИнформация.ОперативнаяПамять/1024 + 0.2));
	Инфо.Вставить("Режим", ПолучитьРежим());
	
	Возврат Инфо;
	
КонецФункции

Функция ПолучитьРежим()
	
	Если ОбщегоНазначения.ИнформационнаяБазаФайловая(СтрокаСоединенияИнформационнойБазы()) Тогда
		Возврат "Файловый";
	ИначеЕсли ОбщегоНазначенияКлиентСервер.КлиентПодключенЧерезВебСервер() Тогда
		Возврат "ВебСерверный";
	Иначе
		Возврат "Серверный";
	КонецЕсли; 
	
КонецФункции

Функция ПредставлениеРежимаБазы(Режим)
	
	Если Режим = "Файловый" Тогда
		Возврат НСтр("ru='Файловый'");
	ИначеЕсли Режим = "ВебСерверный" Тогда
		Возврат НСтр("ru='Веб-серверный'");
	Иначе
		Возврат НСтр("ru='Серверный'");
	КонецЕсли; 
	
КонецФункции

#КонецОбласти

#Область ПечатныеФормы

// Процедура открывает общую форму выбора печатных форм. Выводит на печать документ.
//
// Параметры:
//  Объект			 - Метаданные				 - объект медаданных
//  ФормаВладелец	 - ФормаКлиентскогоПриложения	 - владелец ФормаВыбораПечатныхФорм.
//
Процедура ОткрытьФормуВыбораПечатныхФормОбъекта(Объект, ФормаВладелец) Экспорт
	
	Попытка 
		 //Открыть форму выбора печатных форм
		Если ТипЗнч(Объект) = Тип("Массив") Тогда 
			ДокСсылка = Объект[1];
			НаПринтер = Истина;
		Иначе 
			ДокСсылка = Объект;
			НаПринтер = Ложь;
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура("ТолькоПечать, ДокументСсылка", НаПринтер , ДокСсылка);
		
		ДополнительныеПараметры = Новый Структура;
		
		ДополнительныеПараметры.Вставить("Объект", Объект);
		ДополнительныеПараметры.Вставить("НаПринтер", НаПринтер);
		ДополнительныеПараметры.Вставить("ФормаВладелец", ФормаВладелец);
		ДополнительныеПараметры.Вставить("ДокСсылка", ДокСсылка);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗакрытияФормыВыбораПечатныхФормОбъекта", УниверсальныеМеханизмыКлиент, ДополнительныеПараметры);
		
		ОткрытьФорму("ОбщаяФорма.ФормаВыбораПечатныхФормУпр", ПараметрыФормы, ФормаВладелец, , , , ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца); 
	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
		
КонецПроцедуры

Процедура ПослеЗакрытияФормыВыбораПечатныхФормОбъекта(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда 
		Объект = ДополнительныеПараметры.Объект; 
		ФормаВладелец = ДополнительныеПараметры.ФормаВладелец;
		НаПринтер = ДополнительныеПараметры.НаПринтер;
		ДокСсылка = ДополнительныеПараметры.ДокСсылка;
		
		Если ТипЗнч(Объект) = Тип("Массив") Тогда
			РедактированиеПакета = Ложь;
		Иначе 
			РедактированиеПакета = Результат.РедактированиеПакета;
		КонецЕсли;
		// Печать макета объекта
		Для Каждого Строка Из Результат.ДеревоМакетовПечати.ВыделенныеСтроки Цикл
			СтрокаКнопки = Результат.ДеревоМакетовПечати.ДанныеСтроки(Строка);
			Расшифровка = СтрокаКнопки.Расшифровка;
			мсПакет = Новый Массив;
			Если РедактированиеПакета И ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати") Тогда 
				мсПакет.Добавить(СтрокаКнопки.СсылкаНаВнешнююОбработку);
			Иначе 
				Если ТипЗнч(Объект) = Тип("Массив") Тогда 
					Если ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати") Тогда 
						СоставПакета = ПечатьДокументовСервер.ПередатьСоставВКлиент(СтрокаКнопки.СсылкаНаВнешнююОбработку, ДокСсылка);
					Иначе 
						СоставПакета = ПечатьДокументовСервер.ПередатьСоставВКлиент(СтрокаКнопки, ДокСсылка);
					КонецЕсли;	
					СтруктураНаПечать = ПечатьДокументовКлиент.НапечататьПакетДокументов(СоставПакета, ДокСсылка, СтрокаКнопки.СсылкаНаВнешнююОбработку, НаПринтер);
				Иначе 
					ВывестиНапечататьДокумент(Объект, Расшифровка,ДокСсылка,Результат.НаПринтер,ФормаВладелец,СтрокаКнопки);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если мсПакет.Количество() > 0 Тогда 
			Парам = Новый Структура("Пакет, Источник",мсПакет, ДокСсылка);
			Форма = ПолучитьФорму("ОбщаяФорма.ФормаПакетнойПечати",Парам ,ФормаВладелец);
			Форма.ОткрытьМодально();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
	
Процедура ВывестиНапечататьДокумент(Объект, Расшифровка,ДокСсылка,НаПринтерФорма,ФормаВладелец,СтрокаКнопки)
	
	Перем ИспользованиеДиалогаПечати;
	
	Если ТипЗнч(Расшифровка) = Тип("Строка") И Расшифровка <> "Структура" Тогда
	
		СтруктураНаПечать = ПечатьДокументовСервер.ПечатьСервер(ДокСсылка, Расшифровка, 1, НаПринтерФорма); 
	
	ИначеЕсли ТипЗнч(Расшифровка) = Тип("Строка") И Расшифровка = "Структура" Тогда
	
		Если ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ВнешниеОбработки") Тогда
	
			стрРасшифровка = новый Структура;
			стрРасшифровка.Вставить("ВидПечатнойФормы", СтрокаКнопки.ВидПечатнойФормы);
			стрРасшифровка.Вставить("СсылкаНаВнешнююОбработку", СтрокаКнопки.СсылкаНаВнешнююОбработку);
			стрРасшифровка.Вставить("ЗаменяемаяПечатнаяФорма", СтрокаКнопки.ЗаменяемаяПечатнаяФорма);
			стрРасшифровка.Вставить("ОбъектПечати", ДокСсылка);
			
			РезультатПечати = ПечатьДокументовКлиент.НапечататьВнешнююФормуСПроверкойРежимаКлиент(Объект, стрРасшифровка);
			Если ТипЗнч(РезультатПечати) = Тип("ТабличныйДокумент") Тогда
				ТабДокумент = РезультатПечати;
				ЭтоДокумент = Найти(ФормаВладелец.ИмяФормы,"Документ") <> 0;
				СтруктураНаПечать = УниверсальныеМеханизмыСервер.НапечататьДокумент(ТабДокумент, 0, НаПринтерФорма, ?(ЭтоДокумент, 
				ОбщегоНазначенияСервер.СформироватьЗаголовокДокумента(Объект), Строка(Объект)), 
					Объект, Расшифровка,,, СтрокаКнопки.Текст);
			Иначе
				Возврат;
			КонецЕсли;

		ИначеЕсли ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ШаблоныПечати") Тогда
		
			ШаблонПечати = СтрокаКнопки.СсылкаНаВнешнююОбработку;
			СодержаниеОшибки = "";
			Результат = РаботаСШаблонамиПечатиКлиент.ВыполнитьПечатьДокументаПоШаблонуПечати(Объект, ШаблонПечати, СодержаниеОшибки,,Новый Структура("НаПринтер,КоличествоЭкземпляров",НаПринтерФорма,1));
			Если Не Результат Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СодержаниеОшибки);
			КонецЕсли;
				
		ИначеЕсли ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати") Тогда
			СоставПакета = ПечатьДокументовСервер.ПередатьСоставВКлиент(СтрокаКнопки.СсылкаНаВнешнююОбработку, ДокСсылка);
			НаПринтер = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаКнопки.СсылкаНаВнешнююОбработку, "НаПринтер");
			СтруктураНаПечать = ПечатьДокументовКлиент.НапечататьПакетДокументов(СоставПакета, ДокСсылка, СтрокаКнопки.СсылкаНаВнешнююОбработку, НаПринтер);
			
			Если НаПринтер Тогда
				ИспользованиеДиалогаПечати = РежимИспользованияДиалогаПечати.Использовать;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПечатьДокументовКлиент.ВывестиНапечататьДокумент(СтруктураНаПечать,ДокСсылка,ИспользованиеДиалогаПечати);
		
КонецПроцедуры

// Процедура открывает общую форму выбора печатных форм. Выводит на печать документ.
//
// Параметры:
//  Объект			 - Метаданные				 - объект медаданных
//  ФормаВладелец	 - ФормаКлиентскогоПриложения	 - владелец ФормаВыбораПечатныхФорм.
// 
// Возвращаемое значение:
//   Массив. 
//
Функция ОткрытьФормуВыбораПечатныхФормОбъектаМножественнаяПечать(Объект, ФормаВладелец) Экспорт
	
	мсСостав = Новый Массив;
	
	Попытка
		НаПринтер = Истина;
		ДокСсылка = Объект;
		
		// Открыть форму выбора печатных форм
		Форма = ПолучитьФорму("ОбщаяФорма.ФормаВыбораПечатныхФормУпр", ,ФормаВладелец);
		Форма.ДокументСсылка = ДокСсылка;
		Форма.ТолькоПечать = НаПринтер;
			
		Если ТипЗнч(Форма.ОткрытьМодально()) <> Тип("Структура") Тогда
			Возврат мсСостав;
		КонецЕсли;
		
		Для Каждого Строка Из Форма.Элементы.ДеревоМакетовПечати.ВыделенныеСтроки Цикл
			СтрокаКнопки = Форма.Элементы.ДеревоМакетовПечати.ДанныеСтроки(Строка);
			Если ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ПакетыПечати")  Тогда
				мсСостав = ПечатьДокументовСервер.ПередатьСоставВКлиент(СтрокаКнопки.СсылкаНаВнешнююОбработку, ПредопределенноеЗначение("Документ.ПрохождениеМедосмотра.ПустаяСсылка"));
			Иначе 
				мсСостав.Добавить(СоставПакетаПоКнопке(СтрокаКнопки));
			КонецЕсли;
		КонецЦикла;

	Исключение
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
	КонецПопытки;
		
	Возврат мсСостав;
		
КонецФункции

Функция СоставПакетаПоКнопке(СтрокаКнопки) Экспорт //+бит
		
	Если ТипЗнч(СтрокаКнопки.Расшифровка) = Тип("Строка") И СтрокаКнопки.Расшифровка <> "Структура" Тогда		
		ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ПечатнаяФорма");
	ИначеЕсли ТипЗнч(СтрокаКнопки.Расшифровка) = Тип("Строка") И СтрокаКнопки.Расшифровка = "Структура" Тогда
		ВидОбъекта = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ПечатнаяФорма");
	ИначеЕсли ТипЗнч(СтрокаКнопки.СсылкаНаВнешнююОбработку) = Тип("СправочникСсылка.ШаблоныПечати") Тогда 	
		ВидОбъекта  = ПредопределенноеЗначение("Перечисление.ВидыДокументовДляПечати.ШаблонПечати")
	КонецЕсли;
	
	СтруктураСтрока = Новый Структура;
	СтруктураСтрока.Вставить("ПредставлениеОбъекта", СтрокаКнопки.Имя);
	СтруктураСтрока.Вставить("ВидОбъекта",ВидОбъекта);
	СтруктураСтрока.Вставить("ВключатьВПакет", Ложь);
	СтруктураСтрока.Вставить("КолЭкз",1);
	СтруктураСтрока.Вставить("СсылкаОбъекта",СтрокаКнопки.СсылкаНаВнешнююОбработку);
	СтруктураСтрока.Вставить("Имя",СтрокаКнопки.Имя);
	СтруктураСтрока.Вставить("СсылкаНаВнешнююОбработку",СтрокаКнопки.СсылкаНаВнешнююОбработку);
	СтруктураСтрока.Вставить("ЗаменяемаяПечатнаяФорма",СтрокаКнопки.ВидПечатнойФормы);
	СтруктураСтрока.Вставить("Расшифровка",СтрокаКнопки.Расшифровка);
	СтруктураСтрока.Вставить("ВидПечатнойФормы", СтрокаКнопки.ВидПечатнойФормы);
	СтруктураСтрока.Вставить("Действие", СтрокаКнопки.Действие);
	СтруктураСтрока.Вставить("Текст",СтрокаКнопки.Текст);
	СтруктураСтрока.Вставить("Печатать",Истина);
	СтруктураСтрока.Вставить("НаПринтер",Истина);
	
	Возврат СтруктураСтрока;
	
КонецФункции

// Процедура - Печать документов множественная печать
//
// Параметры:
//  мсПФ						 - Массив - массив имен печатных форм.
//  ДокСсылка					 - ДокументСсылка	 - печатаемый объект.
//  ИспользованиеДиалогаПечати	 - Булево	 - показывать ли диалог печати.
//
Процедура ПечатьДокументовМножественнаяПечать(мсПФ,ДокСсылка,ИспользованиеДиалогаПечати) Экспорт
	
	СтруктураНаПечать = ПечатьДокументовКлиент.НапечататьПакетДокументов(мсПФ,ДокСсылка,,Истина);
	ПечатьДокументовКлиент.ВывестиНапечататьДокумент(СтруктураНаПечать,ДокСсылка,ИспользованиеДиалогаПечати);
	
КонецПроцедуры

#КонецОбласти

#Область глОбщиеЗначения // Работа с клиентским кешем глОбщиеЗначения (переменная модуля приложения).

Функция ПолучитьЗначениеКлиентскогоКеша(Ключ) Экспорт
	
	Значение = Неопределено;
	
	Если ТипЗнч(глОбщиеЗначения) = Тип("Структура") Тогда
		глОбщиеЗначения.Свойство(Ключ, Значение);
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Процедура УстановитьЗначениеКлиентскогоКеша(Ключ, Значение) Экспорт
	
	Если глОбщиеЗначения = Неопределено Тогда
		глОбщиеЗначения = Новый Структура;
	КонецЕсли;
	
	глОбщиеЗначения.Вставить(Ключ, Значение);
	
КонецПроцедуры

Процедура УдалитьЗначениеКлиентскогоКеша(Ключ) Экспорт
	
	Если ТипЗнч(глОбщиеЗначения) = Тип("Структура")
		И глОбщиеЗначения.Свойство(Ключ)
	Тогда
		глОбщиеЗначения.Удалить(Ключ);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
