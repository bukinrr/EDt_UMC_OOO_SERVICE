#Область ПрограммныйИнтерфейс

// Переопределяемая функция получения цены номенклатуры в контексте документа.
//
// Параметры:
//  СтандартнаяОбработка		 - Булево									 - при установке в Ложь стандартная операция выполняться не будет.
//  ДанныеШапкиОбъекта			 - Структура, ДокументОбъект				 - данные шапки документа для получения пола по полю Клиент.
//  Прейскурант					 - СправочникСсылка.Прейскуранты			 - прейскурант.
//  Номенклатура				 - СправочникСсылка.Номенклатура			 - номенклатура.
//  НаМомент					 - Дата, МоментВремени						 - дата цен.
//  ХарактеристикаНоменклатуры	 - СправочникСсылка.ХарактеристикаНоменклатуры	 - характеристика.
//  ЕдиницаИзмерения			 - СправочникСсылка.ЕдиницаИзмерения			 - единица измерения.
// 
// Возвращаемое значение:
//   Число.
//
Функция ПолучитьЦену(СтандартнаяОбработка, ДанныеШапкиОбъекта, Прейскурант, Номенклатура, НаМомент, ХарактеристикаНоменклатуры, ЕдиницаИзмерения) Экспорт
	
КонецФункции

// Создает дополнительные команды операций журнала записи для создания документов.
//
// Параметры:
//  МассивОписанийКоманд - Массив	 - описание команд.
//
Процедура ДополнительныеКомандыОперацийЖурналаЗаписи(МассивОписанийКоманд = Неопределено) Экспорт
	
	Если ТипЗнч(МассивОписанийКоманд) <> Тип("Массив") Тогда
		МассивОписанийКоманд = Новый Массив;
	КонецЕсли;
	
	// Создание продаж из прочих источников.
	МетаданныеФормы = Метаданные.ОбщиеФормы.Найти("ВыборУслугДляСозданияДокумента");
	Если МетаданныеФормы <> Неопределено
		И ПравоДоступа("Просмотр", МетаданныеФормы)
	Тогда
		НужнаКомандаПродажПоПриемам = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("ПостоплатаПоПриемамИспользуется") = Истина;
		
		НужнаКомандаПродажПоАнализам = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("ИспользоватьЛабораторныеИсследования") = Истина
									 И УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("ЛабораторияПоПостоплатеПрименяется") = Истина;
			
		НужнаКомандаПродажПоВакцинациям = УправлениеНастройкамиПереопределяемый.ПолучитьПараметрУчета("ИспользоватьВакцинации") = Истина;
		
		Заголовок = Неопределено;
		Подсказка = Неопределено;
		
		Если НужнаКомандаПродажПоПриемам Тогда
			Заголовок = НСтр("ru='Продажа выполенных услуг'");
			Подсказка = НСтр("ru='Оформить продажу выполненных услуг'");
			
			Если НужнаКомандаПродажПоАнализам Тогда
				Заголовок = Заголовок + НСтр("ru=', забранных анализов'");
				Подсказка = Подсказка + НСтр("ru=', забранных анализов'");
			КонецЕсли;
			Если НужнаКомандаПродажПоВакцинациям Тогда
				Заголовок = Заголовок + НСтр("ru=', выполненных вакцинаций'");
				Подсказка = Подсказка + НСтр("ru=', выполненных вакцинаций'");
			КонецЕсли;
		Иначе
			Если НужнаКомандаПродажПоАнализам И НЕ НужнаКомандаПродажПоВакцинациям Тогда
				Заголовок = НСтр("ru='Продажа забранных анализов'");
				Подсказка = НСтр("ru='Оформить продажу забранных анализов'");
			ИначеЕсли Не НужнаКомандаПродажПоАнализам И НужнаКомандаПродажПоВакцинациям Тогда
				Заголовок = НСтр("ru='Продажа выполненных вакцинаций'");
				Подсказка = НСтр("ru='Оформить продажу выполненных вакцинаций'");
			ИначеЕсли НужнаКомандаПродажПоАнализам И НужнаКомандаПродажПоВакцинациям Тогда
				Заголовок = НСтр("ru='Продажа забранных анализов, выполненных вакцинаций'");
				Подсказка = НСтр("ru='Оформить продажу забранных анализов, выполненных вакцинаций'");
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Заголовок) Тогда
			
			МассивОписанийКоманд.Добавить(РаботаСФормамиСервер.ОписаниеУниверсальнойПодключаемойКомандыФормы(
											"РаботаСКлиентамиКлиентПереопределяемый.СоздатьПродажуПоНачатомуПосещению",
											Заголовок,
											Подсказка,
											ОбщегоНазначенияКлиентСервер.СвойствоОбъекта(БиблиотекаКартинок, "ЛабораторныеКонтейнерыСхематично"),
											,, Новый СочетаниеКлавиш(Клавиша.S, Истина)
											));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик заполнения нового документа по основанию.
//
// Параметры:
//  СтандартнаяОбработка - Булево - Признак, требуется ли далее выполнение стандартной обработки.
//  ЭтотОбъект			 - ДокументОбъект	 - Новый документ, заполняемый по основанию.
//  Основание			 - Произвольный	 - Параметр-основание для ввода документа.
//  Копирование			 - Булево - Признак ввода документа копированием.
//
Процедура ОбработчикЗаполнения(СтандартнаяОбработка, ЭтотОбъект, Основание, Копирование) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти