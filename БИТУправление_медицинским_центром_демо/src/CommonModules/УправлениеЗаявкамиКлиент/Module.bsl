#Область ПрограммныйИнтерфейс

#Область ПодборРасписания

// Открывает подбор времени записи
//
// Параметры:
//  Форма			 - ФормаКлиентскогоПриложения	 - форма, из которой открывается подбор.
//  Объект			 - ДанныеФормыСтруктура	 - объект на форме.
//  УчетнаяПолитика	 - Структура	 - кеш учетной политики.
//
Процедура ОткрытьПодборВремениЗаписи(Форма, Объект, УчетнаяПолитика = Неопределено) Экспорт
	
	Если УчетнаяПолитика <> Неопределено Тогда
		НоменклатураОжиданияКлиента = УчетнаяПолитика.НоменклатураОжиданияКлиента;
	Иначе
		НоменклатураОжиданияКлиента = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("НоменклатураОжиданияКлиента");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(НоменклатураОжиданияКлиента) Тогда
		ПоказатьПредупреждение(, НСтр("ru='В учетной политике не задана номенклатура ожидания клиента. Применение механизма недоступно.'"), 30);
		Возврат;
	КонецЕсли;
	
	СотрудникВремя = Новый Массив;
	Для Каждого Строка Из Объект.Работы Цикл
		Если Строка.Номенклатура <> НоменклатураОжиданияКлиента Тогда
			СтруктураСотрудникВремя = Новый Структура;
			Если ЗначениеЗаполнено(Строка.Сотрудник) Тогда
				СтруктураСотрудникВремя.Вставить("Сотрудник", Строка.Сотрудник);
			Иначе
				//СтруктураСотрудникВремя.Вставить("Врач", Объект.Сотрудник);
			КонецЕсли;
			СтруктураСотрудникВремя.Вставить("Время", Строка.Продолжительность);
			СтруктураСотрудникВремя.Вставить("Номенклатура", Строка.Номенклатура);
			СотрудникВремя.Добавить(СтруктураСотрудникВремя);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("СотрудникВремя", СотрудникВремя);
	ПараметрыФормы.Вставить("Филиал", Объект.Филиал);
	ПараметрыФормы.Вставить("Дата", Объект.ДатаНачала);
	ПараметрыФормы.Вставить("СотрудникШапки", Объект.Сотрудник);
	ПараметрыФормы.Вставить("Заявка", Объект.Ссылка);
	
	ПараметрыОповещения = Новый Структура("Форма, Объект, НоменклатураОжиданияКлиента", Форма, Объект, НоменклатураОжиданияКлиента);
	Оповещение = Новый ОписаниеОповещения("ПодборВремениЗавершение", УправлениеЗаявкамиКлиент, ПараметрыОповещения);
	
	ОткрытьФорму("ОбщаяФорма.ПодборСвободногоВремени", ПараметрыФормы,,,,, Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

// Обработка результата подбора времени записи.
//
// Параметры:
//  Результат				 - Структура	 - результат подбора.
//  ДополнительныеПараметры	 - Структура	 -  данные владельца подбора.
//
Процедура ПодборВремениЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Объект	= ДополнительныеПараметры.Объект;
	Форма	= ДополнительныеПараметры.Форма;
	НоменклатураОжиданияКлиента = ДополнительныеПараметры.НоменклатураОжиданияКлиента;
	
	Если Результат <> Неопределено Тогда
		
		// Удаление номенклатуры ожидания из текущего документа
		ОбрИнд = Объект.Работы.Количество()-1;
		Для Счетчик = 0 По ОбрИнд Цикл
			Строка = Объект.Работы[ОбрИнд-Счетчик];
			Если Строка.Номенклатура = НоменклатураОжиданияКлиента Тогда
				Объект.Работы.Удалить(ОбрИнд-Счетчик); 
			КонецЕсли;
		КонецЦикла;
		
		// Заполнение результатами поиска времени
		Объект.ДатаНачала = Результат.День + (Результат.Работы[0].Время - Дата(1,1,1));
		Объект.ВремяНачала = Результат.Работы[0].Время;
		
		Для Счетчик = 0 По Объект.Работы.Количество()-1 Цикл
			Строка = Объект.Работы[Счетчик];
			Строка.ДатаНачала = Результат.День + (Результат.Работы[Счетчик].Время - Дата(1,1,1));
			Строка.ДатаОкончания = Строка.ДатаНачала + (Строка.Продолжительность - Дата(1,1,1)); 
			Строка.Продолжительность = Дата(1,1,1) + (Строка.ДатаОкончания - Строка.ДатаНачала);
			Строка.Сотрудник = ?(Не ЗначениеЗаполнено(Строка.Сотрудник), Результат.Работы[Счетчик].Сотрудник, Строка.Сотрудник); 
		КонецЦикла;
		
		Объект.ВремяОкончания = Результат.Работы[Счетчик-1].Время + (Объект.Работы[Объект.Работы.Количество() - 1].Продолжительность - Дата(1,1,1));  
		Объект.ДатаОкончания = Результат.День + (Объект.ВремяОкончания - Дата(1,1,1)); 
		
		РасставлениеТехническойНоменклатуры(Объект, НоменклатураОжиданияКлиента);
		
		Форма.Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Возвращает основные услуги сотрудника
//
// Параметры:
//  Сотрудник - СправочникСсылка.Сотрудники	 - Сотрудник.
// 
// Возвращаемое значение:
//   Массив.
//
Функция ПолучитьОсновныеУслугиСотрудника(Сотрудник) Экспорт
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
	    Возврат Новый Массив;
	КонецЕсли;
	
	Если глКэшОсновныхУслугСотрудников = Неопределено Тогда
		глКэшОсновныхУслугСотрудников = УправлениеЗаявками.ИнициироватьКешОсновныхУслугСотрундиков();
	КонецЕсли;
	
	ОсновныеУслуги = глКэшОсновныхУслугСотрудников.Получить(Сотрудник);
	Если ОсновныеУслуги = Неопределено Тогда
		МассивУслуг = УправлениеЗаявками.ПолучитьОсновныеУслугиСотрудника(Сотрудник);
		глКэшОсновныхУслугСотрудников.Вставить(Сотрудник, МассивУслуг);
		ОсновныеУслуги = МассивУслуг;
	КонецЕсли;
	
	Возврат ОсновныеУслуги;
	
КонецФункции

// Максимальная периодичность оповещения о приходе клиента (минуты).
// 
// Возвращаемое значение:
//  Число - максимальная периодичность оповещения.
//
Функция МаксимальнаяПериодичностьОповещенияОПриходеКлиента() Экспорт

	Возврат 15;	
	
КонецФункции

// Включение или выключение обрботчика ожидания прихода клиента.
//
// Параметры:
//  Подключить	 - Булево - подключить или наоборот.
//
Процедура УправлениеОбрботчикомОжиданияПриходКлиента(Подключить = Ложь) Экспорт
	
	Если Подключить Тогда
		ПодключитьОбработчикОжидания("ПоказатьОповещениеОПриходеКлиентов", 60, Истина);	
	Иначе
		ОтключитьОбработчикОжидания("ПоказатьОповещениеОПриходеКлиентов");	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПодборРасписания

Процедура РасставлениеТехническойНоменклатуры(Объект, НоменклатураОжиданияКлиента)
	
	ОбратныйИндекс = Объект.Работы.Количество()-1;
	Для Счетчик = 1 по ОбратныйИндекс Цикл
		СтрокаТЗ = Объект.Работы[ОбратныйИндекс-Счетчик];
		Если СтрокаТЗ.ДатаОкончания <> Объект.Работы[ОбратныйИндекс-Счетчик+1].ДатаНачала  Тогда
			НоваяСтрока = Объект.Работы.Добавить();
			НоваяСтрока.Номенклатура = НоменклатураОжиданияКлиента;
			НоваяСтрока.Продолжительность = Дата(1,1,1,0,0,0)+(Объект.Работы[ОбратныйИндекс-Счетчик+1].ДатаНачала - СтрокаТЗ.ДатаОкончания); 
			НоваяСтрока.ДатаНачала = СтрокаТЗ.ДатаОкончания; 
			НоваяСтрока.ДатаОкончания = Объект.Работы[ОбратныйИндекс-Счетчик+1].ДатаНачала;
		КонецЕсли;
	КонецЦикла;
	
	Объект.Работы.Сортировать("ДатаНачала");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти