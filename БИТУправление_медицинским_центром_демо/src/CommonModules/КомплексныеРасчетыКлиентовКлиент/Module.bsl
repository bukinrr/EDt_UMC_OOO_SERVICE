#Область ПрограммныйИнтерфейс

// Открывает форму подбора в документ из комплексного расчета
//
// Параметры:
//  КомплексныйРасчет	 - ДокументСсылка.ОказаниеУслуг.КомплексныйРасчет - комплексный расчет
//  ПозицииПриемника	 - КоллекцияЗначений - коллекция строк работ, товаров и т.д. документа, в который делается подбор позиций
//  ПриемникСсылка		 - ДокументСсылка - ссылка на документ, в который делается подбор
//  ФормаВладелец		 - Объект - форма владелец
//  РежимВозврат		 - Булево - режим возврата
//
Процедура ОткрытьПодборИзКомплексногоРасчетаКлиента(КомплексныйРасчет, ПозицииПриемника, ПриемникСсылка, ФормаВладелец = Неопределено, РежимВозврат = Ложь) Экспорт
	
	ОткрытьФорму("Документ.КомплексныйРасчетКлиента.Форма.ФормаПодбораПозицийПоДокументу", 
				 Новый Структура("КомплексныйРасчет, ПозицииПриемника, ПриемникСсылка, РежимВозврат", КомплексныйРасчет, ПозицииПриемника, ПриемникСсылка, РежимВозврат),
				 ФормаВладелец);
	
КонецПроцедуры
			 
// Собирает из документа, в который будет подбор, те позиции, которые в нём уже есть.
//
// Параметры:
//  Объект	 - ДокументОбъект.ОказаниеУслуг, ДокументОбъект.Прием - документ для побора из копмлексного расчета.
// 
// Возвращаемое значение:
//   Массив.
//
Функция ПолучитьВФормеПозицииДокументаДляПодбораИзКомплексногоРасчета(Объект) Экспорт
	
	Перем Результат;
	
	Если ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.ОказаниеУслуг") Тогда
		
		Результат = Новый Массив;
		мсТЧ = Новый Структура("Работы, Товары, Материалы");
		
		Для Каждого кзТЧ Из мсТЧ Цикл
			Для Каждого СтрокаТЧ Из Объект[кзТЧ.Ключ] Цикл
				СтруктураСтроки = ПолучитьСтруктуруПозицииДокументаВызоваПодбораИзКомплексногоРасчета();
				ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТЧ);
				Результат.Добавить(СтруктураСтроки);
			КонецЦикла;
		КонецЦикла;
		
	ИначеЕсли ТипЗнч(Объект.Ссылка) = Тип("ДокументСсылка.Прием") Тогда
		
		Результат = Новый Массив;
		// Материалы? ***.
		Для Каждого СтрокаТЧ Из Объект.Работы Цикл
			СтруктураСтроки = ПолучитьСтруктуруПозицииДокументаВызоваПодбораИзКомплексногоРасчета();
			ЗаполнитьЗначенияСвойств(СтруктураСтроки, СтрокаТЧ);
			Результат.Добавить(СтруктураСтроки);
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#Область ОбработчикиСобытийТаблицыЭтаповРабот

// Функция - Этапы работ выполнен при изменении
//
// Параметры:
//  СтрокаЭтапа	 - Элементы.ЭтапыРабот.ТекущиеДанные - строка этапа
// 
// Возвращаемое значение:
//  Отсутствует 
//
Функция ЭтапыРаботВыполненПриИзменении(СтрокаЭтапа) Экспорт
	
	СтрокаЭтапа.ОтметкаВыполнения = ЗначениеЗаполнено(СтрокаЭтапа.Выполнен);
	СтрокаЭтапа.ВыполненВЭтомДокументе = СтрокаЭтапа.ОтметкаВыполнения;
	
	СтрокаЭтапа.Пользователь = ?(СтрокаЭтапа.ОтметкаВыполнения, Пользователи.ТекущийПользователь(), Неопределено);
	СтрокаЭтапа.ИсполнительФакт = ?(СтрокаЭтапа.ОтметкаВыполнения, СтрокаЭтапа.ИсполнительПлан, Неопределено);	
		
КонецФункции

// Функция - Этапы работ отметка выполнения при изменении
//
// Параметры:
//  СтрокаЭтапа	 - Элементы.ЭтапыРабот.ТекущиеДанные - строка этапа
// 
// Возвращаемое значение:
//  Отсутствует 
//
Функция ЭтапыРаботОтметкаВыполненияПриИзменении(СтрокаЭтапа) Экспорт
	
	СтрокаЭтапа.ВыполненВЭтомДокументе = СтрокаЭтапа.ОтметкаВыполнения;
	СтрокаЭтапа.Выполнен = ?(СтрокаЭтапа.ОтметкаВыполнения, ТекущаяДата(), Дата(1,1,1));
	
	СтрокаЭтапа.Пользователь = ?(СтрокаЭтапа.ОтметкаВыполнения, Пользователи.ТекущийПользователь(), Неопределено);
	СтрокаЭтапа.ИсполнительФакт = ?(СтрокаЭтапа.ОтметкаВыполнения, СтрокаЭтапа.ИсполнительПлан, Неопределено);	

	ЭтапыРаботУстановитьТипИсполнителя(СтрокаЭтапа);
	
КонецФункции

// Процедура - Этапы работ установить тип исполнителя
//
// Параметры:
//  СтрокаЭтапа	 - Элементы.ЭтапыРабот.ТекущиеДанные - строка этапа
//
Процедура ЭтапыРаботУстановитьТипИсполнителя(СтрокаЭтапа) Экспорт 
	
	ТипИсполнителя = Новый ОписаниеТипов(?(СтрокаЭтапа.ВнешнийИсполнитель, 
		"СправочникСсылка.Контрагенты", "СправочникСсылка.Сотрудники"));
	СтрокаЭтапа.ИсполнительПлан = ТипИсполнителя.ПривестиЗначение(СтрокаЭтапа.ИсполнительПлан);
	СтрокаЭтапа.ИсполнительФакт = ТипИсполнителя.ПривестиЗначение(СтрокаЭтапа.ИсполнительФакт);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Позволяет получить структуру позиции документа для вызова подбора из комплексного расчета
// 
// Возвращаемое значение:
//	Структура.
//
Функция ПолучитьСтруктуруПозицииДокументаВызоваПодбораИзКомплексногоРасчета() Экспорт
	Возврат Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, Цена, ЕдиницаИзмерения, Количество")
КонецФункции

#КонецОбласти