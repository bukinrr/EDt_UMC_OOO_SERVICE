#Область ПрограммныйИнтерфейс

// Функция возвращает список доступных назначений для "Свойств и категорий объектов" по переданной ссылке.
//
// Параметры:
// 	Ссылка - Ссылка на справочник или документ.
//
// Возвращаемое значение:
// Список значений: доступные назначения для свойств и категорий.
//
Функция ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке(Ссылка) Экспорт

	Результат = Новый СписокЗначений;

	ТипСсылки = ТипЗнч(Ссылка);
	ЭтоХарактеристика = (ТипСсылки = Тип("СправочникСсылка.ХарактеристикиНоменклатуры"));

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НазначениеХарактеристика", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Назначения.Ссылка КАК Ссылка,
	|	Назначения.ТипЗначения КАК ТипЗначения
	|ИЗ
	|	ПланВидовХарактеристик.НазначенияСвойствКатегорийОбъектов КАК Назначения
	|ГДЕ
	|	НЕ Назначения.ПометкаУдаления
	|	И НЕ Назначения.ЭтоГруппа
	|";

	Если ЭтоХарактеристика Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	И Назначения.Ссылка = &НазначениеХарактеристика
		|";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	И Назначения.Ссылка <> &НазначениеХарактеристика
		|";
	КонецЕсли;

	Запрос.Текст = ТекстЗапроса;

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЭтоХарактеристика Или Выборка.ТипЗначения.СодержитТип(ТипСсылки) Тогда
			Результат.Добавить(Выборка.Ссылка);
		КонецЕсли;
	КонецЦикла;

	Возврат Результат;

КонецФункции // ПолучитьСписокНазначенийСвойствКатегорийОбъектовПоСсылке()

// Процедура пересчитывает значения свойств объекта и записывает их в регистр сведений - ЗначенияСвойствОбъектов.
//
// Параметры:
//  Источник - СправочникОбъект.Номенклатура	 - Пересчитываемый объект.
//  Отказ	 - Булево	 - Флаг отмены записи объекта.
//
Процедура ПересчитатьЗначенияСвойствОбъекта(Источник, Отказ) Экспорт
	
	Если Источник.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	// Проверить, есть ли авторасчитываемые свойства.
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НазначениеСвойства", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
	Запрос.УстановитьПараметр("Объект", Источник.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СвойстваОбъектовОтборы.Ссылка КАК Свойство
	|ПОМЕСТИТЬ Свойства
	|ИЗ
	|	ПланВидовХарактеристик.СвойстваОбъектов.Отборы КАК СвойстваОбъектовОтборы
	|ГДЕ
	|	СвойстваОбъектовОтборы.Ссылка.НазначениеСвойства = &НазначениеСвойства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Свойства.Свойство КАК Свойство
	|ИЗ
	|	Свойства КАК Свойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НазначенияСвойствОбъектов КАК НазначенияСвойствОбъектов
	|		ПО Свойства.Свойство = НазначенияСвойствОбъектов.Свойство
	|ГДЕ
	|	(НазначенияСвойствОбъектов.Объект ЕСТЬ NULL
	|			ИЛИ НазначенияСвойствОбъектов.Объект = &Объект)";
	ВыбСвойства = Запрос.Выполнить().Выбрать();
	Если ВыбСвойства.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Записываем значения в регистр
	НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();	
	НаборЗаписей.Отбор.Объект.Установить(Источник.Ссылка);
	
	ОтборыОбъекта = Новый Структура;
	
	// Задаем параметры для проверки отбора
	Если ТипЗнч(Источник) = Тип("СправочникОбъект.Номенклатура") Тогда
		СКД = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьМакет("МакетОтбораНоменклатуры");
		ОтборыОбъекта.Вставить("Номенклатура", Источник.Ссылка);
	Иначе
		Возврат;
	КонецЕсли;
	
	Пока ВыбСвойства.Следующий() Цикл
		
		ПересчитатьЗначениеСвойстваОбъекта(Источник.Ссылка, ВыбСвойства.Свойство, СКД, ОтборыОбъекта);
		
	КонецЦикла;
	
КонецПроцедуры

// Процедура пересчитывает значение свойства объекта.
//
// Параметры:
//  Объект	 - Ссылка на справочник или документ.
//  Свойство - ПланВидовХарактеристик.СвойстваОбъектов	 - Свойство.
//
Процедура ПересчитатьЗначениеСвойстваОбъекта(Объект, Свойство, СКД = Неопределено, ОтборыОбъекта = Неопределено) Экспорт
	
	Если ОтборыОбъекта = Неопределено Тогда
		
		ОтборыОбъекта = Новый Структура;
		// Задаем параметры для выполнения отбора
		Если ТипЗнч(Объект) = Тип("СправочникСсылка.Номенклатура") Тогда
			ОтборыОбъекта.Вставить("Номенклатура", Объект);
		ИначеЕсли ТипЗнч(Объект) = Тип("СправочникОбъект.Номенклатура") Тогда
			ОтборыОбъекта.Вставить("Номенклатура", Объект.Ссылка);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если СКД = Неопределено Тогда
		Если ТипЗнч(Объект) = Тип("СправочникОбъект.Номенклатура") Тогда
			СКД = ПланыВидовХарактеристик.СвойстваОбъектов.ПолучитьМакет("МакетОтбораНоменклатуры");
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
		
	Запись = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьМенеджерЗаписи();
	Запись.Объект = Объект;
	Запись.Свойство = Свойство;
	
	Значение = УниверсальныеМеханизмыСервер.ВычислитьЗначениеПоТаблицеОтборовСКД(СКД, 
																				 Свойство.Отборы,
																				 Свойство.ЗначениеПоУмолчанию,
																				 ОтборыОбъекта,
																				 "Значение");
	Если ЗначениеЗаполнено(Значение) Тогда
		Запись.Значение = Значение;
		Запись.Записать();
	Иначе
		Запись.Прочитать();
		Если Запись.Выбран() Тогда
			Запись.Удалить();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Возвращает Истина, если свойство рассчитывается автоматически.
//
// Параметры:
//  Свойство - ПланВидовХарактеристикСсылка.СвойстваОбъектов - проверяемое свойство.
// 
// Возвращаемое значение:
//   - Булево.
//
Функция СвойствоРассчитываетсяАвтоматически(Свойство) Экспорт
	
	Возврат Свойство.Отборы.Количество() <> 0;
	
КонецФункции

// Записывает значения свойств при записи в форме объекта.
//
// Параметры:
//  ТекущийОбъект		 - ПланыВидовХарактеристикСсылка.НазначениеСвойствОбъектов	 - Владелец значений свойств.
//  СвойстваИЗначения	 - ТаблицаФормы - Табличная часть обработки ЗначенияСвойствОбъектов на форме.
//
Процедура ПодготовитьКЗаписиЗначенияСвойствВФорме(ТекущийОбъект, СвойстваИЗначения) Экспорт
	
	Если СвойстваИЗначения.Количество() <> 0 Тогда
		ТекущийОбъект.ДополнительныеСвойства.Вставить("ЗначенияСвойствОбъекта", СвойстваИЗначения.Выгрузить());
	КонецЕсли;
	
КонецПроцедуры


// Записывает значения свойств при записи в форме объекта.
//
// Параметры:
//  Объект				 - ПланыВидовХарактеристикСсылка.НазначениеСвойствОбъектов	 - Владелец значений свойств.
//  СвойстваИЗначения	 - ТаблицаФормы - Табличная часть обработки ЗначенияСвойствОбъектов на форме.
//
Процедура ЗаписатьЗначенияСвойствВФорме(Объект, СвойстваИЗначения) Экспорт
	
	АвтоРассчитываемыеСвойства = Новый Массив;
	
	ОбъектСсылка = ?(ОбщегоНазначения.ЭтоСсылка(ТипЗнч(Объект)), Объект, Объект.Ссылка);
	Если ТипЗнч(ОбъектСсылка) = Тип("СправочникСсылка.Номенклатура") Тогда
		Для Каждого СтрокаСвойств Из СвойстваИЗначения Цикл
			Если СвойстваИЗначенияСервер.СвойствоРассчитываетсяАвтоматически(СтрокаСвойств.Свойство) Тогда
				АвтоРассчитываемыеСвойства.Добавить(СтрокаСвойств.Свойство);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ЗначенияСвойствОбъектов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Объект.Установить(ОбъектСсылка);
	
	Если АвтоРассчитываемыеСвойства.Количество() <> 0 Тогда
		НаборЗаписей.Прочитать();
	КонецЕсли;
	ТаблицаНабора = НаборЗаписей.Выгрузить();
	
	Для Каждого СтрокаСвойств Из СвойстваИЗначения Цикл
		Если АвтоРассчитываемыеСвойства.Найти(СтрокаСвойств.Свойство) = Неопределено Тогда
			Запись = ТаблицаНабора.Найти(СтрокаСвойств.Свойство, "Свойство");
			Если ЗначениеЗаполнено(СтрокаСвойств.Значение) Тогда
				Если Запись = Неопределено Тогда
					Запись = ТаблицаНабора.Добавить();
					Запись.Объект = ОбъектСсылка;
					Запись.Свойство = СтрокаСвойств.Свойство;
				КонецЕсли;
				Запись.Значение = СтрокаСвойств.Значение;
			ИначеЕсли Запись <> Неопределено Тогда
				ТаблицаНабора.Удалить(Запись);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	НаборЗаписей.Загрузить(ТаблицаНабора);
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ЗначенияСвойствОбъектаЗаписьПриЗаписиОбъекта(Источник, Отказ) Экспорт
	
	Если Источник.ДополнительныеСвойства.Свойство("ЗначенияСвойствОбъекта") Тогда
		ЗаписатьЗначенияСвойствВФорме(Источник.Ссылка, Источник.ДополнительныеСвойства.ЗначенияСвойствОбъекта);
		Источник.ДополнительныеСвойства.Удалить("ЗначенияСвойствОбъекта");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
