#Область ПрограммныйИнтерфейс

Функция ПолучитьСтруктуруСоответствий(Шаблон, ДокументОбъект = Неопределено) Экспорт
	
	массивВозврата = новый Массив;
	
	Для Каждого Соотнесение из Шаблон.СоответствияПараметрам Цикл
		Если ТипЗнч(Соотнесение.Параметр.ЗначениеПоУмолчанию) = Тип("СправочникСсылка.ВычисляемыеЗначенияПараметров")
			И ДокументОбъект <> Неопределено
		Тогда
			Результат = "";
			
			УстановитьБезопасныйРежим(Истина);
			Попытка
				Выполнить(Соотнесение.Параметр.ЗначениеПоУмолчанию.АлгоритмВычисления);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			УстановитьБезопасныйРежим(Ложь);
			
			Структура = Новый Структура("Таблица,Имя,Значение", Неопределено, Соотнесение.Наименование, Результат);
		Иначе
			Структура = Новый Структура("Таблица,Имя,Значение", Неопределено, Соотнесение.Наименование, Соотнесение.Параметр.ЗначениеПоУмолчанию);
		КонецЕсли;
		массивВозврата.Добавить(Структура);
	КонецЦикла;
	
	Для Каждого Соотнесение из Шаблон.СоответствияТаблицамШаблонов Цикл
		Если ТипЗнч(Соотнесение.Параметр.ЗначениеПоУмолчанию) = Тип("СправочникСсылка.ВычисляемыеЗначенияПараметров")
			И ДокументОбъект <> Неопределено
		Тогда
			Результат = "";
			
			УстановитьБезопасныйРежим(Истина);
			Попытка
				Выполнить(Соотнесение.Параметр.ЗначениеПоУмолчанию.АлгоритмВычисления);
			Исключение
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
			КонецПопытки;
			УстановитьБезопасныйРежим(Ложь);
			
			Структура = Новый Структура("Таблица,Имя,Значение", Соотнесение.ТаблицаОбработки, Соотнесение.Наименование, Результат);
		Иначе
			Структура = Новый Структура("Таблица,Имя,Значение", Соотнесение.ТаблицаОбработки, Соотнесение.Наименование, Соотнесение.Параметр.ЗначениеПоУмолчанию);
		КонецЕсли;
		массивВозврата.Добавить(Структура);
	КонецЦикла;
	
	Возврат массивВозврата;
	
КонецФункции

Процедура ПриСозданииВнешнейОбработки(Форма) Экспорт
	
	// ФормаГруппаШаблоныЗаполнения
	Группа = Форма.Элементы.Добавить("ФормаГруппаШаблоныЗаполнения", Тип("ГруппаФормы"), Форма.Элементы.ФормаКоманднаяПанель);
	Группа.Заголовок = "Шаблоны заполнения";
	Инд=0;
	Для Каждого ЗаполнениеСсылка из Форма.Параметры.СписокЗаполнений Цикл
		ИмяКоманды = СтрЗаменить(ЗаполнениеСсылка.УникальныйИдентификатор(),"-","_");
		Команда = Форма.Команды.Добавить("Ссылка"+ИмяКоманды);
		Команда.Действие = "Выбор";
		НоваяКнопка = Форма.Элементы.Добавить("НоваяКнопка"+Инд, Тип("КнопкаФормы"), Группа);
		НоваяКнопка.ИмяКоманды = "Ссылка"+ ИмяКоманды;
		НоваяКнопка.Заголовок = ЗаполнениеСсылка.Наименование;
		Инд = Инд + 1;
	КонецЦикла;
	
КонецПроцедуры

Функция СформироватьМассивЗаполнений(ШаблонОсмотра) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ШаблоныЗаполненияОсмотра.Ссылка
		|ИЗ
		|	Справочник.ШаблоныЗаполненияОсмотра КАК ШаблоныЗаполненияОсмотра
		|ГДЕ
		|	ШаблоныЗаполненияОсмотра.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", ШаблонОсмотра);
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ОбработатьПоУИШаблонЗаполнения(СтрокаУИ) Экспорт
	
	Ссылка = Справочники.ШаблоныЗаполненияОсмотра.ПолучитьСсылку(Новый УникальныйИдентификатор(СтрокаУИ));
	
	МассивПараметров = Новый Массив;
	Для Каждого ЗначениеЗаполнения из Ссылка.ЗначенияЗаполнения Цикл
		Структура = Новый Структура("Параметр,Значение",ЗначениеЗаполнения.Параметр,ЗначениеЗаполнения.Значение);
		Структура.Вставить("Имя",Ссылка.Владелец.СоответствияПараметрам.Найти(ЗначениеЗаполнения.Параметр).Наименование);
		МассивПараметров.Добавить(Структура);
	КонецЦикла;
	
	МассивПараметровТаблиц = Новый Массив;
	Для Каждого ЗначениеЗаполнения из Ссылка.ЗначенияЗаполненияТаблиц Цикл
		СоответствияТаблицамШаблонов = Ссылка.Владелец.СоответствияТаблицамШаблонов;
		Для Каждого Строка Из СоответствияТаблицамШаблонов Цикл
			Если Строка.Параметр = ЗначениеЗаполнения.Параметр
				И Строка.ТаблицаШаблонов = ЗначениеЗаполнения.ТаблицаШаблонов
			Тогда
				Структура = Новый Структура("Параметр,Значение,ТаблицаШаблонов,НомерСтрокиТаблицы",ЗначениеЗаполнения.Параметр,ЗначениеЗаполнения.Значение,ЗначениеЗаполнения.ТаблицаШаблонов,ЗначениеЗаполнения.НомерСтрокиТаблицы);
				Структура.Вставить("Имя", Строка.Представление);
				Структура.Вставить("ТаблицаОбработки", Строка.ТаблицаОбработки);
				МассивПараметровТаблиц.Добавить(Структура);
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат Новый Структура("МассивПараметров, МассивПараметровТаблиц", МассивПараметров, МассивПараметровТаблиц);
	
КонецФункции

Функция СформироватьЗначенияПредыдущегоОсмотра(МедКарта, ЗаполняемыйПрием, ВыбранныеПараметры = Неопределено, ТолькоПараметрыЗаполняемыеПредыдущими = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ЗначенияПараметровHTML.Параметр КАК Параметр,
		|	Прием.Дата КАК ДокументДата,
		|	ЗначенияПараметровHTML.Документ КАК Документ,
		|	Прием.МедицинскаяКарта КАК МедицинскаяКарта,
		|	ЗначенияПараметровHTML.ИндексШаблона КАК ИндексШаблона,
		|	ЗначенияПараметровHTML.Значение КАК Значение
		|ПОМЕСТИТЬ ЗаписиРСБезОтбора
		|ИЗ
		|	РегистрСведений.ЗначенияПараметровHTML КАК ЗначенияПараметровHTML
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием КАК Прием
		|		ПО (Прием.Клиент = &Клиент)
		|			И ЗначенияПараметровHTML.Документ = Прием.Ссылка
		|			И (Прием.Проведен)
		|			И (Прием.Ссылка <> &Прием)
		|ГДЕ
		|	(&Параметр ЕСТЬ NULL
		|			ИЛИ ЗначенияПараметровHTML.Параметр В (&Параметр))
		|	И НЕ(&ТолькоПараметрыЗаполняемыеПредыдущими
		|				И ЗначенияПараметровHTML.Параметр.НеЗаполняетсяПредыдущимиЗначениями)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиРСБезОтбора.Параметр КАК Параметр,
		|	МАКСИМУМ(ЗаписиРСБезОтбора.ДокументДата) КАК ДокументДата
		|ПОМЕСТИТЬ ЗаписиСОтбором
		|ИЗ
		|	ЗаписиРСБезОтбора КАК ЗаписиРСБезОтбора
		|ГДЕ
		|	ЗаписиРСБезОтбора.МедицинскаяКарта = &МедицинскаяКарта
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиРСБезОтбора.Параметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиРСБезОтбора.Параметр КАК Параметр,
		|	МАКСИМУМ(ЗаписиРСБезОтбора.ДокументДата) КАК Дата
		|ПОМЕСТИТЬ ЗаписиБезОтбора
		|ИЗ
		|	ЗаписиРСБезОтбора КАК ЗаписиРСБезОтбора
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиРСБезОтбора.Параметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.Параметр
		|		ИНАЧЕ СОтбором.Параметр
		|	КОНЕЦ КАК Параметр,
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.ДокументДата
		|		ИНАЧЕ СОтбором.ДокументДата
		|	КОНЕЦ КАК Дата
		|ПОМЕСТИТЬ МаксимумыДокументы
		|ИЗ
		|	ЗаписиСОтбором КАК СОтбором
		|		ПОЛНОЕ СОЕДИНЕНИЕ ЗаписиРСБезОтбора КАК БезОтбора
		|		ПО СОтбором.Параметр = БезОтбора.Параметр
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриемШаблоныПриема.Ссылка КАК Ссылка,
		|	ПриемШаблоныПриема.НомерСтроки КАК НомерСтроки,
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема
		|ПОМЕСТИТЬ ШаблоныПриемов
		|ИЗ
		|	Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|ГДЕ
		|	ПриемШаблоныПриема.Ссылка В
		|			(ВЫБРАТЬ
		|				ЗаписиРСБезОтбора.Документ
		|			ИЗ
		|				ЗаписиРСБезОтбора)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПараметровHTML.Параметр КАК Параметр,
		|	ЗначенияПараметровHTML.Значение КАК Значение,
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема
		|ПОМЕСТИТЬ Выборка
		|ИЗ
		|	МаксимумыДокументы КАК МаксимумыДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаписиРСБезОтбора КАК ЗначенияПараметровHTML
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШаблоныПриемов КАК ПриемШаблоныПриема
		|			ПО ЗначенияПараметровHTML.Документ = ПриемШаблоныПриема.Ссылка
		|				И (ЗначенияПараметровHTML.ИндексШаблона = ПриемШаблоныПриема.НомерСтроки - 1)
		|		ПО МаксимумыДокументы.Параметр = ЗначенияПараметровHTML.Параметр
		|			И МаксимумыДокументы.Дата = ЗначенияПараметровHTML.ДокументДата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Выборка.Параметр КАК Параметр,
		|	Выборка.Значение КАК Значение,
		|	Выборка.ШаблонПриема КАК ШаблонПриема
		|ИЗ
		|	Выборка КАК Выборка";
	
	Запрос.УстановитьПараметр("МедицинскаяКарта", МедКарта);
	Запрос.УстановитьПараметр("Клиент", МедКарта.Клиент);
	Запрос.УстановитьПараметр("ТолькоПараметрыЗаполняемыеПредыдущими", ТолькоПараметрыЗаполняемыеПредыдущими);
	Запрос.УстановитьПараметр("Прием", ЗаполняемыйПрием);
	
	Если ЗначениеЗаполнено(ВыбранныеПараметры) Тогда
		Запрос.УстановитьПараметр("Параметр",ВыбранныеПараметры);
	Иначе
		Запрос.УстановитьПараметр("Параметр",NULL);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СформироватьЗначенияТаблицПредыдущегоОсмотра(МедКарта, ЗаполняемыйПрием, ВыбранныеПараметры = Неопределено, ТолькоПараметрыЗаполняемыеПредыдущими = Ложь, МассивТаблиц = Неопределено, Шаблон = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДанныеТаблицШаблоновПриема.Параметр КАК Параметр,
		|	Прием.Дата КАК ДокументДата,
		|	ДанныеТаблицШаблоновПриема.Документ КАК Документ,
		|	Прием.МедицинскаяКарта КАК МедицинскаяКарта,
		|	ДанныеТаблицШаблоновПриема.ИндексШаблона КАК ИндексШаблона,
		|	ДанныеТаблицШаблоновПриема.Значение КАК Значение,
		|	ДанныеТаблицШаблоновПриема.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ДанныеТаблицШаблоновПриема.ТаблицаШаблонов КАК ТаблицаШаблонов
		|ПОМЕСТИТЬ ЗаписиРСБезОтбора
		|ИЗ
		|	РегистрСведений.ДанныеТаблицШаблоновПриема КАК ДанныеТаблицШаблоновПриема
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием КАК Прием
		|		ПО (Прием.Клиент = &Клиент)
		|			И ДанныеТаблицШаблоновПриема.Документ = Прием.Ссылка
		|			И (Прием.Проведен)
		|			И (Прием.Ссылка <> &Прием)
		|ГДЕ
		|	(&Параметр ЕСТЬ NULL
		|			ИЛИ ДанныеТаблицШаблоновПриема.Параметр В (&Параметр))
		|	И (&Таблицы ЕСТЬ NULL
		|			ИЛИ ДанныеТаблицШаблоновПриема.ТаблицаШаблонов В (&Таблицы))
		|	И НЕ(&ТолькоПараметрыЗаполняемыеПредыдущими
		|				И ДанныеТаблицШаблоновПриема.Параметр.НеЗаполняетсяПредыдущимиЗначениями)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиРСБезОтбора.Параметр КАК Параметр,
		|	МАКСИМУМ(ЗаписиРСБезОтбора.ДокументДата) КАК ДокументДата,
		|	ЗаписиРСБезОтбора.ТаблицаШаблонов КАК ТаблицаШаблонов,
		|	ЗаписиРСБезОтбора.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы
		|ПОМЕСТИТЬ ЗаписиСОтбором
		|ИЗ
		|	ЗаписиРСБезОтбора КАК ЗаписиРСБезОтбора
		|ГДЕ
		|	ЗаписиРСБезОтбора.МедицинскаяКарта = &МедицинскаяКарта
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиРСБезОтбора.Параметр,
		|	ЗаписиРСБезОтбора.ТаблицаШаблонов,
		|	ЗаписиРСБезОтбора.НомерСтрокиТаблицы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗаписиРСБезОтбора.Параметр КАК Параметр,
		|	МАКСИМУМ(ЗаписиРСБезОтбора.ДокументДата) КАК Дата,
		|	ЗаписиРСБезОтбора.ТаблицаШаблонов КАК ТаблицаШаблонов,
		|	ЗаписиРСБезОтбора.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы
		|ПОМЕСТИТЬ ЗаписиБезОтбора
		|ИЗ
		|	ЗаписиРСБезОтбора КАК ЗаписиРСБезОтбора
		|
		|СГРУППИРОВАТЬ ПО
		|	ЗаписиРСБезОтбора.Параметр,
		|	ЗаписиРСБезОтбора.ТаблицаШаблонов,
		|	ЗаписиРСБезОтбора.НомерСтрокиТаблицы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.Параметр
		|		ИНАЧЕ СОтбором.Параметр
		|	КОНЕЦ КАК Параметр,
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.ДокументДата
		|		ИНАЧЕ СОтбором.ДокументДата
		|	КОНЕЦ КАК Дата,
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.ТаблицаШаблонов
		|		ИНАЧЕ СОтбором.ТаблицаШаблонов
		|	КОНЕЦ КАК ТаблицаШаблонов,
		|	ВЫБОР
		|		КОГДА СОтбором.Параметр ЕСТЬ NULL
		|			ТОГДА БезОтбора.НомерСтрокиТаблицы
		|		ИНАЧЕ СОтбором.НомерСтрокиТаблицы
		|	КОНЕЦ КАК НомерСтрокиТаблицы
		|ПОМЕСТИТЬ МаксимумыДокументы
		|ИЗ
		|	ЗаписиСОтбором КАК СОтбором
		|		ПОЛНОЕ СОЕДИНЕНИЕ ЗаписиРСБезОтбора КАК БезОтбора
		|		ПО СОтбором.Параметр = БезОтбора.Параметр
		|			И СОтбором.ТаблицаШаблонов = БезОтбора.ТаблицаШаблонов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПриемШаблоныПриема.Ссылка КАК Ссылка,
		|	ПриемШаблоныПриема.НомерСтроки КАК НомерСтроки,
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема
		|ПОМЕСТИТЬ ШаблоныПриемов
		|ИЗ
		|	Документ.Прием.ШаблоныПриема КАК ПриемШаблоныПриема
		|ГДЕ
		|	ПриемШаблоныПриема.Ссылка В
		|			(ВЫБРАТЬ
		|				ЗаписиРСБезОтбора.Документ
		|			ИЗ
		|				ЗаписиРСБезОтбора)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗначенияПараметровHTML.Параметр КАК Параметр,
		|	ЗначенияПараметровHTML.Значение КАК Значение,
		|	ПриемШаблоныПриема.ШаблонПриема КАК ШаблонПриема,
		|	ЗначенияПараметровHTML.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ЗначенияПараметровHTML.ТаблицаШаблонов КАК ТаблицаШаблонов
		|ПОМЕСТИТЬ ПараметрыТаблицШаблонов
		|ИЗ
		|	МаксимумыДокументы КАК МаксимумыДокументы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗаписиРСБезОтбора КАК ЗначенияПараметровHTML
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ШаблоныПриемов КАК ПриемШаблоныПриема
		|			ПО ЗначенияПараметровHTML.Документ = ПриемШаблоныПриема.Ссылка
		|				И (ЗначенияПараметровHTML.ИндексШаблона = ПриемШаблоныПриема.НомерСтроки - 1)
		|		ПО МаксимумыДокументы.Параметр = ЗначенияПараметровHTML.Параметр
		|			И МаксимумыДокументы.Дата = ЗначенияПараметровHTML.ДокументДата
		|			И МаксимумыДокументы.ТаблицаШаблонов = ЗначенияПараметровHTML.ТаблицаШаблонов
		|			И МаксимумыДокументы.НомерСтрокиТаблицы = ЗначенияПараметровHTML.НомерСтрокиТаблицы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыТаблицШаблонов.Параметр КАК Параметр,
		|	ПараметрыТаблицШаблонов.Значение КАК Значение,
		|	ПараметрыТаблицШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ПараметрыТаблицШаблонов.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ПараметрыТаблицШаблонов.ТаблицаШаблонов КАК ТаблицаШаблонов
		|ПОМЕСТИТЬ ПараметрыШаблона
		|ИЗ
		|	ПараметрыТаблицШаблонов КАК ПараметрыТаблицШаблонов
		|ГДЕ
		|	(&Шаблон ЕСТЬ NULL
		|			ИЛИ ПараметрыТаблицШаблонов.ШаблонПриема = &Шаблон)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПараметрыТаблицШаблонов.Параметр КАК Параметр,
		|	ПараметрыТаблицШаблонов.Значение КАК Значение,
		|	ПараметрыТаблицШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ПараметрыТаблицШаблонов.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ПараметрыТаблицШаблонов.ТаблицаШаблонов КАК ТаблицаШаблонов
		|ПОМЕСТИТЬ ПараметрыНеИзШаблона
		|ИЗ
		|	ПараметрыТаблицШаблонов КАК ПараметрыТаблицШаблонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыШаблона КАК ПараметрыШаблона
		|		ПО ПараметрыТаблицШаблонов.Параметр = ПараметрыШаблона.Параметр
		|			И ПараметрыТаблицШаблонов.Значение = ПараметрыШаблона.Значение
		|			И ПараметрыТаблицШаблонов.ШаблонПриема = ПараметрыШаблона.ШаблонПриема
		|			И ПараметрыТаблицШаблонов.НомерСтрокиТаблицы = ПараметрыШаблона.НомерСтрокиТаблицы
		|			И ПараметрыТаблицШаблонов.ТаблицаШаблонов = ПараметрыШаблона.ТаблицаШаблонов
		|ГДЕ
		|	ПараметрыШаблона.ШаблонПриема В (НЕОПРЕДЕЛЕНО, NULL)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ПараметрыШаблона.ШаблонПриема ЕСТЬ NULL
		|			ТОГДА ПараметрыНеИзШаблона.Параметр
		|		ИНАЧЕ ПараметрыШаблона.Параметр
		|	КОНЕЦ КАК Параметр,
		|	ВЫБОР
		|		КОГДА ПараметрыШаблона.ШаблонПриема ЕСТЬ NULL
		|			ТОГДА ПараметрыНеИзШаблона.Значение
		|		ИНАЧЕ ПараметрыШаблона.Значение
		|	КОНЕЦ КАК Значение,
		|	ВЫБОР
		|		КОГДА ПараметрыШаблона.ШаблонПриема ЕСТЬ NULL
		|			ТОГДА ПараметрыНеИзШаблона.ШаблонПриема
		|		ИНАЧЕ ПараметрыШаблона.ШаблонПриема
		|	КОНЕЦ КАК ШаблонПриема,
		|	ВЫБОР
		|		КОГДА ПараметрыШаблона.ШаблонПриема ЕСТЬ NULL
		|			ТОГДА ПараметрыНеИзШаблона.НомерСтрокиТаблицы
		|		ИНАЧЕ ПараметрыШаблона.НомерСтрокиТаблицы
		|	КОНЕЦ КАК НомерСтрокиТаблицы,
		|	ВЫБОР
		|		КОГДА ПараметрыШаблона.ШаблонПриема ЕСТЬ NULL
		|			ТОГДА ПараметрыНеИзШаблона.ТаблицаШаблонов
		|		ИНАЧЕ ПараметрыШаблона.ТаблицаШаблонов
		|	КОНЕЦ КАК ТаблицаШаблонов
		|ПОМЕСТИТЬ ПараметрыШаблонов
		|ИЗ
		|	ПараметрыШаблона КАК ПараметрыШаблона
		|		ПОЛНОЕ СОЕДИНЕНИЕ ПараметрыНеИзШаблона КАК ПараметрыНеИзШаблона
		|		ПО ПараметрыШаблона.Параметр = ПараметрыНеИзШаблона.Параметр
		|			И ПараметрыШаблона.ТаблицаШаблонов = ПараметрыНеИзШаблона.ТаблицаШаблонов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПараметрыШаблонов.Параметр КАК Параметр,
		|	ПараметрыШаблонов.Значение КАК Значение,
		|	ПараметрыШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ПараметрыШаблонов.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ПараметрыШаблонов.ТаблицаШаблонов КАК ТаблицаШаблонов
		|ИЗ
		|	ПараметрыШаблонов КАК ПараметрыШаблонов";
	
	Запрос.УстановитьПараметр("МедицинскаяКарта", МедКарта);
	Запрос.УстановитьПараметр("Клиент", МедКарта.Клиент);
	Запрос.УстановитьПараметр("ТолькоПараметрыЗаполняемыеПредыдущими", ТолькоПараметрыЗаполняемыеПредыдущими);
	Запрос.УстановитьПараметр("Прием", ЗаполняемыйПрием);
	
	
	Если ЗначениеЗаполнено(ВыбранныеПараметры) Тогда
		Запрос.УстановитьПараметр("Параметр",ВыбранныеПараметры);
	Иначе
		Запрос.УстановитьПараметр("Параметр",NULL);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МассивТаблиц) Тогда
		Запрос.УстановитьПараметр("Таблицы",МассивТаблиц);
	Иначе
		Запрос.УстановитьПараметр("Таблицы",NULL);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Шаблон) Тогда
		Запрос.УстановитьПараметр("Шаблон",Шаблон);
	Иначе
		Запрос.УстановитьПараметр("Шаблон",NULL);
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Функция СформироватьЗначенияДанныхТаблицПредыдущегоОсмотра(МедКарта, ЗаполняемыйПрием, ДатаДокумента, ВерсииШаблонов, ШаблоныПриема) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВерсииШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ВерсииШаблонов.ВерсияШаблона КАК ВерсияШаблона
		|ПОМЕСТИТЬ ВерсииШаблонов
		|ИЗ
		|	&ВерсииШаблонов КАК ВерсииШаблонов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВерсииШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ЕСТЬNULL(ДОБАВИТЬКДАТЕ(МАКСИМУМ(ПредыдущиеВерсииШаблонов.Дата), СЕКУНДА, 1), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК НачалоДействияВерсии,
		|	ЕСТЬNULL(ТекущиеВерсииШаблонов.Дата, ДАТАВРЕМЯ(3999, 12, 31, 23, 59, 59)) КАК КонецДействияВерсии
		|ПОМЕСТИТЬ ДатыДействияВерсийШаблонов
		|ИЗ
		|	ВерсииШаблонов КАК ВерсииШаблонов
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ТекущиеВерсииШаблонов
		|		ПО (ТекущиеВерсииШаблонов.Ссылка = ВерсииШаблонов.ВерсияШаблона)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВерсииШаблоновHTML КАК ПредыдущиеВерсииШаблонов
		|		ПО (ПредыдущиеВерсииШаблонов.Владелец = ВерсииШаблонов.ШаблонПриема)
		|			И (ПредыдущиеВерсииШаблонов.Дата < &ДатаДокумента)
		|			И (НЕ ПредыдущиеВерсииШаблонов.ПометкаУдаления)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВерсииШаблонов.ШаблонПриема,
		|	ТекущиеВерсииШаблонов.Дата
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыДействияВерсийШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	МАКСИМУМ(Прием.Дата) КАК ДатаПриема
		|ПОМЕСТИТЬ ДатыПредыдущихПриемов
		|ИЗ
		|	ДатыДействияВерсийШаблонов КАК ДатыДействияВерсийШаблонов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием.ШаблоныПриема КАК тчШаблоныПриема
		|		ПО (тчШаблоныПриема.ШаблонПриема = ДатыДействияВерсийШаблонов.ШаблонПриема)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием КАК Прием
		|		ПО (Прием.МедицинскаяКарта = &МедКарта)
		|			И (Прием.Ссылка = тчШаблоныПриема.Ссылка)
		|			И (Прием.Дата МЕЖДУ ДатыДействияВерсийШаблонов.НачалоДействияВерсии И ВЫБОР
		|				КОГДА ДатыДействияВерсийШаблонов.КонецДействияВерсии > &ДатаДокумента
		|					ТОГДА &ДатаДокумента
		|				ИНАЧЕ ДатыДействияВерсийШаблонов.КонецДействияВерсии
		|			КОНЕЦ)
		|			И (Прием.Проведен)
		|			И (Прием.Ссылка <> &ТекущийПрием)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыДействияВерсийШаблонов.ШаблонПриема
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыПредыдущихПриемов.ШаблонПриема КАК ШаблонПриема,
		|	МАКСИМУМ(Прием.Ссылка) КАК ПредыдущийПрием
		|ПОМЕСТИТЬ ПредыдущиеПриемыШаблонов
		|ИЗ
		|	ДатыПредыдущихПриемов КАК ДатыПредыдущихПриемов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием КАК Прием
		|		ПО (Прием.МедицинскаяКарта = &МедКарта)
		|			И (Прием.Дата = ДатыПредыдущихПриемов.ДатаПриема)
		|			И (Прием.Проведен)
		|			И (Прием.Ссылка <> &ТекущийПрием)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДатыПредыдущихПриемов.ШаблонПриема
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПредыдущиеПриемыШаблонов.ШаблонПриема КАК ШаблонПриема,
		|	ПредыдущиеПриемыШаблонов.ПредыдущийПрием КАК ПредыдущийПрием,
		|	МАКСИМУМ(тчШаблоныПриема.НомерСтроки) - 1 КАК ИндексШаблона
		|ПОМЕСТИТЬ ИндексыШаблоновВТаблицеПриемов
		|ИЗ
		|	ПредыдущиеПриемыШаблонов КАК ПредыдущиеПриемыШаблонов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.Прием.ШаблоныПриема КАК тчШаблоныПриема
		|		ПО (тчШаблоныПриема.ШаблонПриема = ПредыдущиеПриемыШаблонов.ШаблонПриема)
		|			И (тчШаблоныПриема.Ссылка = ПредыдущиеПриемыШаблонов.ПредыдущийПрием)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПредыдущиеПриемыШаблонов.ШаблонПриема,
		|	ПредыдущиеПриемыШаблонов.ПредыдущийПрием
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИндексыШаблоновВТаблицеПриемов.ШаблонПриема КАК ШаблонПриема,
		|	ДанныеТаблицШаблоновПриема.ТаблицаШаблонов КАК ТаблицаШаблонов,
		|	ДанныеТаблицШаблоновПриема.НомерСтрокиТаблицы КАК НомерСтрокиТаблицы,
		|	ДанныеТаблицШаблоновПриема.Параметр КАК Параметр,
		|	ЕСТЬNULL(ПараметрыHTML.ФорматнаяСтрока, """") КАК ФорматнаяСтрока,
		|	ДанныеТаблицШаблоновПриема.ИдентификаторСтроки КАК ИдентификаторСтроки,
		|	ДанныеТаблицШаблоновПриема.ИдентификаторРодительскойСтроки КАК ИдентификаторРодительскойСтроки,
		|	ДанныеТаблицШаблоновПриема.Значение КАК Значение
		|ИЗ
		|	ИндексыШаблоновВТаблицеПриемов КАК ИндексыШаблоновВТаблицеПриемов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеТаблицШаблоновПриема КАК ДанныеТаблицШаблоновПриема
		|		ПО (ДанныеТаблицШаблоновПриема.Документ = ИндексыШаблоновВТаблицеПриемов.ПредыдущийПрием)
		|			И (ДанныеТаблицШаблоновПриема.ИндексШаблона = ИндексыШаблоновВТаблицеПриемов.ИндексШаблона)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ТаблицыШаблоновПриема КАК ТаблицыШаблоновПриема
		|		ПО (ТаблицыШаблоновПриема.Ссылка = ДанныеТаблицШаблоновПриема.ТаблицаШаблонов)
		|			И (НЕ ТаблицыШаблоновПриема.НеЗаполняетсяПредыдущимиЗначениями)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ПараметрыHTML КАК ПараметрыHTML
		|		ПО (ПараметрыHTML.Ссылка = ДанныеТаблицШаблоновПриема.Параметр)
		|ИТОГИ ПО
		|	ШаблонПриема,
		|	ТаблицаШаблонов";
	
	Запрос.УстановитьПараметр("МедКарта",		МедКарта);
	Запрос.УстановитьПараметр("ВерсииШаблонов",	ВерсииШаблонов.Выгрузить());
	Запрос.УстановитьПараметр("ДатаДокумента",	ДатаДокумента);
	Запрос.УстановитьПараметр("ТекущийПрием",	ЗаполняемыйПрием);
	
	ВыборкаШаблонов = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПараметрыТаблицШаблонов = Новый Соответствие;
	
	Пока ВыборкаШаблонов.Следующий() Цикл
		ВыборкаТаблиц = ВыборкаШаблонов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		СтрокиШаблона = ШаблоныПриема.НайтиСтроки(Новый Структура("ШаблонПриема", ВыборкаШаблонов.ШаблонПриема));
		Если СтрокиШаблона.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ТекстШаблона = СтрокиШаблона[0].ТекстШаблона;
		
		ПараметрыЭталонныхСтрокТаблиц = РаботаСШаблонамиHTML.ПараметрыЭталонныхСтрокТаблиц(РаботаСШаблонамиHTML.ЭталонныеСтрокиТаблиц(ТекстШаблона), ТекстШаблона);
		
		тзПараметрыТаблицТекущегоШаблона = Новый ТаблицаЗначений;
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("ИдентификаторТаблицы");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("НомерСтрокиТаблицы");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("Параметр");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("ИдентификаторСтроки");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("ИдентификаторРодительскойСтроки");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("Представление");
		тзПараметрыТаблицТекущегоШаблона.Колонки.Добавить("Значение");
		
		Пока ВыборкаТаблиц.Следующий() Цикл
			
			ИдентификаторТаблицы = Строка(ВыборкаТаблиц.ТаблицаШаблонов.УникальныйИдентификатор());
			ПараметрыЭталоннойСтрокиТаблицы = РаботаСШаблонамиHTML.ПараметрыЭталоннойСтрокиТаблицы(ПараметрыЭталонныхСтрокТаблиц, ИдентификаторТаблицы);
			
			Если ПараметрыЭталоннойСтрокиТаблицы = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Выборка = ВыборкаТаблиц.Выбрать();
			Пока Выборка.Следующий() Цикл
				// Дополнительная мера предосторожности для предотвращения попадания параметров, которые не должны находиться в этой таблице
				Если ПараметрыЭталоннойСтрокиТаблицы.Найти(Выборка.Параметр) <> Неопределено
					Или (Не ЗначениеЗаполнено(Выборка.Параметр)
						И ПараметрыЭталоннойСтрокиТаблицы.Количество() = 0)
				Тогда
					Значение = Выборка.Значение;
					Если ТипЗнч(Выборка.Значение) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
						Значение = Выборка.Значение.Значение;
					КонецЕсли;
					НоваяСтрока = тзПараметрыТаблицТекущегоШаблона.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
					НоваяСтрока.Представление = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьПредставлениеПараметра(Выборка, Выборка.ФорматнаяСтрока);
					НоваяСтрока.ИдентификаторТаблицы = ИдентификаторТаблицы;
					НоваяСтрока.Значение = Значение;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		СтрокиКУдалению = Новый Массив;
		Для Каждого СтрокаПараметра Из тзПараметрыТаблицТекущегоШаблона Цикл
			Если ЗначениеЗаполнено(СтрокаПараметра.ИдентификаторРодительскойСтроки)
				И СтрокиКУдалению.Найти(СтрокаПараметра) = Неопределено
				И тзПараметрыТаблицТекущегоШаблона.НайтиСтроки(Новый Структура("ИдентификаторСтроки", СтрокаПараметра.ИдентификаторРодительскойСтроки)).Количество() = 0
			Тогда
				УдалитьПараметрыДочернихСтрокОтсутствующихТаблиц(СтрокаПараметра.ИдентификаторРодительскойСтроки, тзПараметрыТаблицТекущегоШаблона, СтрокиКУдалению);
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			тзПараметрыТаблицТекущегоШаблона.Удалить(СтрокаКУдалению);
		КонецЦикла;
		
		Если тзПараметрыТаблицТекущегоШаблона.Количество() > 0 Тогда
			ПараметрыТаблицТекущегоШаблона = Новый Соответствие;
			
			Таблицы = тзПараметрыТаблицТекущегоШаблона.Скопировать();
			Таблицы.Свернуть("ИдентификаторТаблицы");
			Для Каждого Таблица Из Таблицы Цикл
				ПараметрыТекущейТаблицыШаблона = Новый Массив;
				Для Каждого СтрокаПараметраТаблицы Из тзПараметрыТаблицТекущегоШаблона.НайтиСтроки(Новый Структура("ИдентификаторТаблицы", Таблица.ИдентификаторТаблицы)) Цикл
					СтруктураПараметра = Новый Структура("НомерСтрокиТаблицы, Параметр, ИдентификаторСтроки, ИдентификаторРодительскойСтроки, Представление, ИдентификаторТаблицы, Значение");
					ЗаполнитьЗначенияСвойств(СтруктураПараметра, СтрокаПараметраТаблицы);
					ПараметрыТекущейТаблицыШаблона.Добавить(СтруктураПараметра);
				КонецЦикла;
				ПараметрыТаблицТекущегоШаблона.Вставить(Таблица.ИдентификаторТаблицы, ПараметрыТекущейТаблицыШаблона);
			КонецЦикла;
			
			ПараметрыТаблицШаблонов.Вставить(ВыборкаШаблонов.ШаблонПриема, ПараметрыТаблицТекущегоШаблона);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПараметрыТаблицШаблонов;
	
КонецФункции

Процедура ЗаполнитьПоПредыдущимЗначениям(Форма) Экспорт
	
	Возврат
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьПараметрыДочернихСтрокОтсутствующихТаблиц(ИдентификаторСтрокиКУдалению, тзПараметрыТаблицТекущегоШаблона, СтрокиКУдалению)
	
	Для Каждого СтрокаПараметра Из тзПараметрыТаблицТекущегоШаблона.НайтиСтроки(Новый Структура("ИдентификаторРодительскойСтроки", ИдентификаторСтрокиКУдалению)) Цикл
		Если СтрокиКУдалению.Найти(СтрокаПараметра) = Неопределено Тогда
			СтрокиКУдалению.Добавить(СтрокаПараметра);
		КонецЕсли;
		УдалитьПараметрыДочернихСтрокОтсутствующихТаблиц(СтрокаПараметра.ИдентификаторСтроки, тзПараметрыТаблицТекущегоШаблона, СтрокиКУдалению)
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти