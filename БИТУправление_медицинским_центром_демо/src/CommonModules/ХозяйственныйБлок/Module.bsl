#Область ПрограммныйИнтерфейс

// Определяет, используются ли хозяйственные процедуры.
// 
// Возвращаемое значение:
//   Булево.
//
Функция ЕстьНаличиеХозяйственныхПроцедур() Экспорт
	
	ТекущийПользователь = ОбщегоНазначения.ТекущийПользователь();
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Исполнитель", ТекущийПользователь);
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИсполнителиХозяйственныхОпераций.Процедура КАК Процедура
	               |ИЗ
	               |	РегистрСведений.ИсполнителиХозяйственныхОпераций КАК ИсполнителиХозяйственныхОпераций
	               |ГДЕ
	               |	ИсполнителиХозяйственныхОпераций.Исполнитель = &Исполнитель
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИсполнителиХозяйственныхОпераций.Процедура
	               |ИЗ
	               |	РегистрСведений.ИсполнителиХозяйственныхОпераций КАК ИсполнителиХозяйственныхОпераций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	               |		ПО ИсполнителиХозяйственныхОпераций.Исполнитель = ГруппыПользователейСостав.Ссылка
	               |			И (ГруппыПользователейСостав.Пользователь = &Исполнитель)";
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда 
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
	
КонецФункции

// Определяет, может ли пользователь отмечать выполнение хозяйственных процедур.
// 
// Возвращаемое значение:
//   Булево.
//
Функция ЕстьПраваНаВыполнениеХозяйственныхПроцедур() Экспорт 
	
	Возврат ПравоДоступа("Чтение", Метаданные.Справочники.ХозяйственныеПроцедуры)
			И ПравоДоступа("Чтение", Метаданные.Справочники.ГрафикиХозяйственныхПроцедур)
			И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ИсполнителиХозяйственныхОпераций)
			И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.АктуальныеГрафикиХозяйственныхПроцедур)
			И ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ВыполненныеХозяйственныеПроцедуры)
			И ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ВыполненныеХозяйственныеПроцедуры)
			И ПравоДоступа("Просмотр", Метаданные.ОбщиеФормы.ОтметкаВыполненияХозяйственныхПроцедур)
	;			
			
КонецФункции

// Возвращает невыполненные хоз.процедуры филиала на текущий момент времени
//
// Параметры:
//  Филиал	 - СпарвочникСсылка.Филиалы - Филиал.
// 
// Возвращаемое значение:
//   Массив.
//
Функция ПолучитьНевыполненныеХозяйственныеПроцедуры(Филиал = Неопределено) Экспорт
	
	ДеньНедели = ОбщегоНазначенияСервер.ПолучитьДатуВремя(ТекущаяДата(), "День");	
	Исполнитель = ОбщегоНазначения.ТекущийПользователь();
	
	Если Филиал = Неопределено Тогда  
		Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя(Исполнитель);
	КонецЕсли;		
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДата());
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("ДеньНедели", ДеньНедели);
	Запрос.УстановитьПараметр("Исполнитель", Исполнитель);
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	АктуальныеГрафикиХозяйственныхПроцедур.Дата КАК ДатаНачалаДействияГрафика,
	               |	ГрафикиХозяйственныхПроцедурГрафикПроцедур.Время КАК ВремяПлан,
	               |	ГрафикиХозяйственныхПроцедурГрафикПроцедур.Процедура КАК Процедура
	               |ПОМЕСТИТЬ ГрафикиПроцедур
	               |ИЗ
	               |	Справочник.ГрафикиХозяйственныхПроцедур.ГрафикПроцедур КАК ГрафикиХозяйственныхПроцедурГрафикПроцедур
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АктуальныеГрафикиХозяйственныхПроцедур КАК АктуальныеГрафикиХозяйственныхПроцедур
	               |		ПО ГрафикиХозяйственныхПроцедурГрафикПроцедур.Ссылка = АктуальныеГрафикиХозяйственныхПроцедур.ГрафикПроцедур
	               |ГДЕ
	               |	АктуальныеГрафикиХозяйственныхПроцедур.Филиал = &Филиал
	               |	И АктуальныеГрафикиХозяйственныхПроцедур.ДеньНедели = &ДеньНедели
	               |	И ВЫБОР
	               |			КОГДА АктуальныеГрафикиХозяйственныхПроцедур.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1)
	               |				ТОГДА &НачалоПериода МЕЖДУ АктуальныеГрафикиХозяйственныхПроцедур.Дата И АктуальныеГрафикиХозяйственныхПроцедур.ДатаОкончания
	               |			ИНАЧЕ АктуальныеГрафикиХозяйственныхПроцедур.Дата <= &НачалоПериода
	               |		КОНЕЦ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	МАКСИМУМ(ГрафикиПроцедур.ДатаНачалаДействияГрафика) КАК ДатаНачалаДействияАктуальногоГрафика
	               |ПОМЕСТИТЬ НачалоДействияАктуальногоГрафика
	               |ИЗ
	               |	ГрафикиПроцедур КАК ГрафикиПроцедур
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ИсполнителиХозяйственныхОпераций.Процедура КАК Процедура
	               |ПОМЕСТИТЬ НазначенныеПроцедуры
	               |ИЗ
	               |	РегистрСведений.ИсполнителиХозяйственныхОпераций КАК ИсполнителиХозяйственныхОпераций
	               |ГДЕ
	               |	ИсполнителиХозяйственныхОпераций.Исполнитель = &Исполнитель
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	ИсполнителиХозяйственныхОпераций.Процедура
	               |ИЗ
	               |	РегистрСведений.ИсполнителиХозяйственныхОпераций КАК ИсполнителиХозяйственныхОпераций
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.Состав КАК ГруппыПользователейСостав
	               |		ПО ИсполнителиХозяйственныхОпераций.Исполнитель = ГруппыПользователейСостав.Ссылка
	               |ГДЕ
	               |	ГруппыПользователейСостав.Пользователь = &Исполнитель
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	МАКСИМУМ(ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), ГрафикиПроцедур.ВремяПлан, СЕКУНДА))) КАК ВремяСДатой,
	               |	НазначенныеПроцедуры.Процедура КАК Процедура
	               |ПОМЕСТИТЬ АктуальныеПроцедуры
	               |ИЗ
	               |	ГрафикиПроцедур КАК ГрафикиПроцедур
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НачалоДействияАктуальногоГрафика КАК НачалоДействияАктуальногоГрафика
	               |		ПО ГрафикиПроцедур.ДатаНачалаДействияГрафика = НачалоДействияАктуальногоГрафика.ДатаНачалаДействияАктуальногоГрафика
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НазначенныеПроцедуры КАК НазначенныеПроцедуры
	               |		ПО ГрафикиПроцедур.Процедура = НазначенныеПроцедуры.Процедура
	               |ГДЕ
	               |	ДОБАВИТЬКДАТЕ(&НачалоПериода, СЕКУНДА, РАЗНОСТЬДАТ(ДАТАВРЕМЯ(1, 1, 1), ГрафикиПроцедур.ВремяПлан, СЕКУНДА)) <= &КонецПериода
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	НазначенныеПроцедуры.Процедура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ГрафикиПроцедур
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НачалоДействияАктуальногоГрафика
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ НазначенныеПроцедуры
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВыполненныеХозяйственныеПроцедуры.Процедура КАК Процедура,
	               |	ВыполненныеХозяйственныеПроцедуры.ВремяПлан КАК ВремяПлан,
	               |	ВыполненныеХозяйственныеПроцедуры.ВремяФакт КАК ВремяФакт
	               |ПОМЕСТИТЬ Факт
	               |ИЗ
	               |	РегистрСведений.ВыполненныеХозяйственныеПроцедуры КАК ВыполненныеХозяйственныеПроцедуры
	               |ГДЕ
	               |	ВыполненныеХозяйственныеПроцедуры.Филиал = &Филиал
	               |	И ВыполненныеХозяйственныеПроцедуры.ВремяФакт МЕЖДУ &НачалоПериода И &КонецПериода
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	АктуальныеПроцедуры.Процедура КАК Процедура,
	               |	АктуальныеПроцедуры.ВремяСДатой КАК ПлановоеВремя,
	               |	АктуальныеПроцедуры.Процедура.НормаСрокаВыполнения КАК НормаСрокаВыполнения
	               |ИЗ
	               |	АктуальныеПроцедуры КАК АктуальныеПроцедуры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Факт КАК Факт
	               |		ПО АктуальныеПроцедуры.Процедура = Факт.Процедура
	               |			И АктуальныеПроцедуры.ВремяСДатой = Факт.ВремяПлан
	               |ГДЕ
	               |	Факт.ВремяФакт ЕСТЬ NULL";
	
	Результат = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Результат.Добавить(Новый Структура("Процедура, ПлановоеВремя, НормаСрокаВыполнения", Выборка.Процедура, Выборка.ПлановоеВремя, Выборка.НормаСрокаВыполнения));
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции
			
// Возвращает выполненные хоз.процедуры филиала с утра текущего дня и до текущего момента
//
// Параметры:
//  Филиал	 - СпарвочникСсылка.Филиалы - Филиал.
// 
// Возвращаемое значение:
//   ТаблицаЗначений.
//
Функция ПолучитьВыполненныеХозяйственныеПроцедуры(Филиал = Неопределено) Экспорт
	
	Если Филиал = Неопределено Тогда  
		Филиал = УправлениеНастройками.ПолучитьФилиалПоУмолчаниюПользователя();
	КонецЕсли;		
		
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Филиал", Филиал);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("КонецПериода", ТекущаяДата());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВыполненныеХозяйственныеПроцедуры.Процедура КАК Процедура,
	               |	ВыполненныеХозяйственныеПроцедуры.ВремяПлан КАК ПлановоеВремя
	               |ИЗ
	               |	РегистрСведений.ВыполненныеХозяйственныеПроцедуры КАК ВыполненныеХозяйственныеПроцедуры
	               |ГДЕ
	               |	ВыполненныеХозяйственныеПроцедуры.Филиал = &Филиал
	               |	И ВыполненныеХозяйственныеПроцедуры.ВремяФакт МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции 		

#КонецОбласти
