
#Область ФормированиеДанныхОбъектаДляПодписи

Функция ПолучитьАктуальныйНомерВерсииПодписываемыхДанных(ТипОбъекта = Неопределено) Экспорт
	
	Если ТипОбъекта = Тип("ДокументСсылка.Прием") Тогда
		Возврат 3;
	КонецЕсли;
	
	Возврат 0;
	
КонецФункции

Функция СформироватьДанныеФайловОбъектаДляПодписи(Ссылка, Версия, ХешироватьДанные = Истина, ФункцияХеш = Неопределено) Экспорт
	
	Если Версия = Неопределено Тогда
		Версия = ПолучитьАктуальныйНомерВерсииПодписываемыхДанных(Тип("ДокументСсылка.Прием"));
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХранилищеДополнительнойИнформации.Ссылка КАК Ссылка,
		|	ХранилищеДополнительнойИнформации.ВФайле,
		|	ХранилищеДополнительнойИнформации.Наименование,
		|	ХранилищеДополнительнойИнформации.Хранилище
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
		|ГДЕ
		|	ХранилищеДополнительнойИнформации.Объект = &Объект
		|	И НЕ ХранилищеДополнительнойИнформации.ПометкаУдаления
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка";
	Запрос.УстановитьПараметр("Объект", Ссылка);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат "";
	КонецЕсли;
	
	ДанныеBase64 = "";
	Если ХешироватьДанные Тогда
		Если ФункцияХеш = Неопределено Тогда
			ФункцияХеш = ХешФункция.SHA256;
		КонецЕсли;
		ХешированиеДанных = Новый ХешированиеДанных(ФункцияХеш);
	КонецЕсли;
	
	БазовыйКаталог = РаботаСФайлами.ПолучитьБазовыйКаталогФайлов(Ссылка);
	
	ВыборкаФайлы = Результат.Выбрать();
	Пока ВыборкаФайлы.Следующий() Цикл
		ДанныеФайла = РаботаСФайлами.ПолучитьФайлНаСервере(ВыборкаФайлы.Ссылка, БазовыйКаталог, Истина);
		Если ДанныеФайла.ФайлНайден И ДанныеФайла.ДвоичныеДанные <> Неопределено Тогда
			Если ХешироватьДанные Тогда
				ХешированиеДанных.Добавить(ДанныеФайла.ДвоичныеДанные);
			Иначе
				ДанныеBase64 = ДанныеBase64 + Base64Строка(ДанныеФайла.ДвоичныеДанные);
			КонецЕсли;
		Иначе
			Если ХешироватьДанные Тогда
				ХешированиеДанных.Добавить("Файл отсутствует");
			Иначе
				ДанныеBase64 = ДанныеBase64 + "Файл отсутствует";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если ХешироватьДанные Тогда
		Возврат ПолучитьСтроковоеПредставлениеЗначения(ХешированиеДанных.ХешСумма, "ХешФайлов");
	Иначе
		Возврат ПолучитьСтроковоеПредставлениеЗначения(ДанныеBase64, "ДанныеФайлов");
	КонецЕсли;
	
КонецФункции

Функция СформироватьДанныеПриема(Ссылка, Версия, ПараметрыПриема) Экспорт
	
	Если Версия = 2 Тогда
		Возврат СформироватьХешПриемаВерсия2(Ссылка);
	КонецЕсли;
	
	ДанныеПриемаСтрокой = "";
	Прием = Ссылка.ПолучитьОбъект();
	
	ДанныеПриемаСтрокой = 
		ПолучитьСтроковоеПредставлениеЗначения(Прием.Ссылка, "Прием") +
		ПолучитьСтроковоеПредставлениеЗначения(НачалоДня(Прием.Дата), "Дата") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.Клиент, "Клиент") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.Врач, "Врач") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.МедицинскаяКарта, "Медкарта") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.Филиал, "Клиника") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.УдалитьТипЭМПЗ, "ТипЭМПЗ") +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.ПометкаУдаления) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВПроведенииДопОбследования) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВОбследованииВЦентреПрофпатологии) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВАмбулаторномОбследованииИЛечении) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВСтационарномОбследованииИЛечении) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВСанаторноКурортномЛечении) +
		ПолучитьСтроковоеПредставлениеЗначения(Прием.НуждаетсяВДиспансерномНаблюдении);
	
	// Диагнозы
	ТаблицаДиагнозов = Прием.Диагнозы.Выгрузить();
	ОтраслевыеДополнения.СвернутьТаблицуДиагнозов(ТаблицаДиагнозов);
	ТаблицаДиагнозов.Сортировать("Диагноз");
	Для Каждого СтрокаДиагноз Из ТаблицаДиагнозов Цикл
		
		ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Диагноз, "Диагноз") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Детализация, "Детализация") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.ВыявленВпервые) +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Классификация1, "Классификация1") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Классификация2, "Классификация2") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Классификация3, "Классификация3") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Сопутствующий) +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Травма, "Травма") +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Исход, "Исход");
		
		Если ТаблицаДиагнозов.Колонки.Найти("Профессиональное") <> Неопределено Тогда
			ДанныеПриемаСтрокой = ДанныеПриемаСтрокой + ПолучитьСтроковоеПредставлениеЗначения(СтрокаДиагноз.Профессиональное);
		КонецЕсли;
	КонецЦикла;
	
	Если Метаданные.Документы.Прием.ТабличныеЧасти.Найти("ВредныеФакторыПротивопоказаний") <> Неопределено Тогда
		// Вредные факторы
		ТаблицаФакторов = Прием.ВредныеФакторыПротивопоказаний.Выгрузить(, "ВредныйФактор");
		ТаблицаФакторов.Свернуть("ВредныйФактор");
		ТаблицаФакторов.Сортировать("ВредныйФактор");
		Для Каждого СтрокаФактор Из Прием.ВредныеФакторыПротивопоказаний Цикл
			
			ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
				ПолучитьСтроковоеПредставлениеЗначения(СтрокаФактор.ВредныйФактор, "ВредныйФактор");
			
		КонецЦикла;
	КонецЕсли;
	
	// Значения параметров html
	Если ПараметрыПриема <> Неопределено Тогда
		
		ТаблицаПараметров = ПараметрыПриема.ТаблицаПараметров;
		ТаблицаПараметров.Свернуть("Параметр, Значение");
		ТаблицаПараметров.Сортировать("Параметр");
		Для Каждого СтрокаПараметра Из ТаблицаПараметров Цикл
			Если ЗначениеЗаполнено(СтрокаПараметра.Значение) Тогда
				ЗначениеПараметра = СтрокаПараметра.Значение;
				Если ТипЗнч(ЗначениеПараметра) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
					ЗначениеПараметра = ЗначениеПараметра.Значение;
				КонецЕсли;
				
				ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
					ПолучитьСтроковоеПредставлениеЗначения(СтрокаПараметра.Параметр, "ПараметрОсмотра") +
					ПолучитьСтроковоеПредставлениеЗначения(ЗначениеПараметра, "ЗначениеПараметра");
			КонецЕсли;
		КонецЦикла;
		
		ПараметрыТаблицШаблонов = ПараметрыПриема.ПараметрыТаблицШаблонов;
		ПараметрыТаблицШаблонов.Свернуть("Параметр, НомерСтрокиТаблицы, Значение");
		ПараметрыТаблицШаблонов.Сортировать("НомерСтрокиТаблицы, Параметр");
		Для Каждого СтрокаПараметра Из ПараметрыТаблицШаблонов Цикл
			Если ЗначениеЗаполнено(СтрокаПараметра.Значение) Тогда
				ЗначениеПараметра = СтрокаПараметра.Значение;
				Если ТипЗнч(ЗначениеПараметра) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
					ЗначениеПараметра = ЗначениеПараметра.Значение;
				КонецЕсли;
				
				ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
					ПолучитьСтроковоеПредставлениеЗначения(СтрокаПараметра.Параметр, "ПараметрТаблицыШаблонаОсмотра") +
					ПолучитьСтроковоеПредставлениеЗначения(ЗначениеПараметра, "ЗначениеПараметраТаблицыШаблона");
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗначенияПараметровHTML.Параметр КАК Параметр,
			|	ЗначенияПараметровHTML.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.ЗначенияПараметровHTML КАК ЗначенияПараметровHTML
			|ГДЕ
			|	ЗначенияПараметровHTML.Документ = &Прием
			|
			|УПОРЯДОЧИТЬ ПО
			|	ЗначенияПараметровHTML.Параметр.Наименование";
		Запрос.УстановитьПараметр("Прием", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗначениеПараметра = Выборка.Значение;
			Если ТипЗнч(ЗначениеПараметра) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
				ЗначениеПараметра = ЗначениеПараметра.Значение;
			КонецЕсли;
			
			ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
				ПолучитьСтроковоеПредставлениеЗначения(Выборка.Параметр, "ПараметрОсмотра") +
				ПолучитьСтроковоеПредставлениеЗначения(ЗначениеПараметра, "ЗначениеПараметра");
		КонецЦикла;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеТаблицШаблоновПриема.Параметр КАК Параметр,
			|	ДанныеТаблицШаблоновПриема.Значение КАК Значение
			|ИЗ
			|	РегистрСведений.ДанныеТаблицШаблоновПриема КАК ДанныеТаблицШаблоновПриема
			|ГДЕ
			|	ДанныеТаблицШаблоновПриема.Документ = &Прием
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДанныеТаблицШаблоновПриема.НомерСтрокиТаблицы,
			|	ДанныеТаблицШаблоновПриема.Параметр.Наименование";
		Запрос.УстановитьПараметр("Прием", Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ЗначениеПараметра = Выборка.Значение;
			Если ТипЗнч(ЗначениеПараметра) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
				ЗначениеПараметра = ЗначениеПараметра.Значение;
			КонецЕсли;
			
			ДанныеПриемаСтрокой = ДанныеПриемаСтрокой +
				ПолучитьСтроковоеПредставлениеЗначения(Выборка.Параметр, "ПараметрТаблицыШаблонаОсмотра") +
				ПолучитьСтроковоеПредставлениеЗначения(ЗначениеПараметра, "ЗначениеПараметраТаблицыШаблона");
		КонецЦикла;
	КонецЕсли;
		
	Возврат ДанныеПриемаСтрокой;
	
КонецФункции

Функция ПолучитьСтроковоеПредставлениеЗначения(Значение, Имя = Неопределено) Экспорт
	
	Возврат бит_СертификатыЭЦП.ПолучитьДанныеОбъектаСтрокой(Значение, Имя, НазначениеТипаXML.Неявное);
	
КонецФункции

Функция СформироватьДанныеПрохожденияМедОсмотра(Ссылка) Экспорт
	
	ДанныеМедОсмотраСтрокой = "";
	ПрохождениеМедОсмотра = Ссылка.ПолучитьОбъект();
	
	ДанныеМедОсмотраСтрокой = 
		ПолучитьСтроковоеПредставлениеЗначения(ПрохождениеМедОсмотра.Ссылка, "ПрохождениеМедосмотра") +
		ПолучитьСтроковоеПредставлениеЗначения(НачалоДня(ПрохождениеМедОсмотра.Дата), "Дата") +
		ПолучитьСтроковоеПредставлениеЗначения(ПрохождениеМедОсмотра.Клиент, "Клиент") +
		ПолучитьСтроковоеПредставлениеЗначения(ПрохождениеМедОсмотра.ПредседательМедКомиссии, "ПредседательМедКомиссии") +
		ПолучитьСтроковоеПредставлениеЗначения(ПрохождениеМедОсмотра.ВидПрохожденияМО, "ВидПрохожденияМО") +
		ПолучитьСтроковоеПредставлениеЗначения(ПрохождениеМедОсмотра.ДатаЗавершения, "ДатаЗавершения");
	
	// Значения параметров html
	ТаблицаПараметров = ПрохождениеМедОсмотра.ПараметрыПриема.Выгрузить();
	Для Каждого СтрокаПараметр Из ТаблицаПараметров Цикл
		
		ЗначениеПараметра = СтрокаПараметр.Значение;
		Если ТипЗнч(ЗначениеПараметра) = Тип("СправочникСсылка.СтрокиЭМКНеограниченнойДлины") Тогда
			ЗначениеПараметра = ЗначениеПараметра.Значение;
		КонецЕсли;
		
		ДанныеМедОсмотраСтрокой = ДанныеМедОсмотраСтрокой +
			ПолучитьСтроковоеПредставлениеЗначения(СтрокаПараметр.Параметр, "ПараметрОсмотра") +
			ПолучитьСтроковоеПредставлениеЗначения(ЗначениеПараметра, "ЗначениеПараметра");
	КонецЦикла;
	
	Возврат ДанныеМедОсмотраСтрокой;
	
КонецФункции

Функция СформироватьДанныеМедицинскийОтчет(Ссылка) Экспорт
	
	ДанныеОтчета = Ссылка.ДанныеОтчета.Получить();
	
	СтрокаДляПодписанияXML = "";
	
	Для Каждого Страница Из ДанныеОтчета.ПоказателиОтчета Цикл
		СтраницаXML = "";
		Для Каждого Поле Из Страница.Значение Цикл
			СтраницаXML = СтраницаXML + "<" + Поле.Ключ + ">" + Поле.Значение +"</" + Поле.Ключ + ">";
		КонецЦикла;
		СтрокаДляПодписанияXML = СтрокаДляПодписанияXML + "<" + Страница.Ключ + ">" + СтраницаXML +"</" + Страница.Ключ + ">";
	КонецЦикла;
	
	СтрокаДляПодписанияXML = "<ПоказателиОтчета>" + СтрокаДляПодписанияXML +"</ПоказателиОтчета>";
	
	Возврат СтрокаДляПодписанияXML;
	
КонецФункции

Функция СформироватьДанныеВрачебнойКомиссии(Ссылка) Экспорт
	
	ДанныеВК = Новый Соответствие;
	
	ДанныеВК.Вставить("Документ",						 Строка(Ссылка.УникальныйИдентификатор()));
	ДанныеВК.Вставить("Дата",							 НачалоДня(Ссылка.Дата));
	ДанныеВК.Вставить("Клиент",							 Строка(Ссылка.Клиент.УникальныйИдентификатор()));
	ДанныеВК.Вставить("Цель",							 Строка(Ссылка.Цель.УникальныйИдентификатор()));
	ДанныеВК.Вставить("Заключение",						 Ссылка.Заключение);
	ДанныеВК.Вставить("ДатаНачалаНетрудоспособности",	 Ссылка.ДатаНачалаНетрудоспособности);
	ДанныеВК.Вставить("ДатаОкончанияНетрудоспособности", Ссылка.ДатаОкончанияНетрудоспособности);
	ДанныеВК.Вставить("ПредседательКомиссии",			 Строка(Ссылка.ПредседательКомиссии.УникальныйИдентификатор()));
	ДанныеВК.Вставить("HTMLПредставление",				 Ссылка.HTMLПредставление);
	ДанныеВК.Вставить("МедицинскаяКарта",				 Строка(Ссылка.МедицинскаяКарта.УникальныйИдентификатор()));
	ДанныеВК.Вставить("РассмотренныеВопросы",			 Ссылка.РассмотренныеВопросы);
	ДанныеВК.Вставить("Рекомендации",					 Ссылка.Рекомендации);
	ДанныеВК.Вставить("Жалобы",							 Ссылка.Жалобы);
	ДанныеВК.Вставить("Лечение",						 Ссылка.Лечение);
	
	СоставКомиссии = Новый Массив;
	Для Каждого СтрокаСоставаКомиссии Из Ссылка.СоставКомиссии Цикл
		СоставКомиссии.Добавить(Строка(СтрокаСоставаКомиссии.Сотрудник.УникальныйИдентификатор()));
	КонецЦикла;
	ДанныеВК.Вставить("СоставКомиссии", СоставКомиссии);
	
	Диагнозы = Новый Массив;
	Для Каждого СтрокаДиагноза Из Ссылка.Диагнозы Цикл
		СтруктураДиагноза = Новый Структура;
		СтруктураДиагноза.Вставить("Диагноз", Строка(СтрокаДиагноза.Диагноз.УникальныйИдентификатор()));
		СтруктураДиагноза.Вставить("Описание", СтрокаДиагноза.Описание);
		Диагнозы.Добавить(СтруктураДиагноза);
	КонецЦикла;
	ДанныеВК.Вставить("Диагнозы", Диагнозы);
	
	Возврат ОбщегоНазначенияПереопределяемый.СформироватьСтрокуJSON(ДанныеВК);
	
КонецФункции

#КонецОбласти

#Область СтарыеФункцииФормированияДанныхПриема

Функция СформироватьХешПриемаВерсия2(Ссылка) Экспорт
	
	ХешируемаяСтрока = "";
	Прием = Ссылка.ПолучитьОбъект();
	ХешДанных = ОбщегоНазначенияСервер.СоздатьХешированиеДанных();
	
	ХешируемаяСтрока = 
		Строка(Прием.Ссылка.УникальныйИдентификатор()) +
		Формат(Прием.Дата, "ДФ=dd.MM.yy") +
		Строка(Прием.Клиент.УникальныйИдентификатор()) +
		Строка(Прием.Врач.УникальныйИдентификатор()) +
		Строка(Прием.МедицинскаяКарта.УникальныйИдентификатор()) +
		Строка(Прием.ШаблонОсмотра.УникальныйИдентификатор()) +
		Строка(Прием.Филиал.УникальныйИдентификатор()) +
		Строка(Прием.УдалитьТипЭМПЗ.УникальныйИдентификатор()) +
		Строка(Прием.ПометкаУдаления) +
		Строка(Прием.НуждаетсяВПроведенииДопОбследования) +
		Строка(Прием.НуждаетсяВОбследованииВЦентреПрофпатологии) +
		Строка(Прием.НуждаетсяВАмбулаторномОбследованииИЛечении) +
		Строка(Прием.НуждаетсяВСтационарномОбследованииИЛечении) +
		Строка(Прием.НуждаетсяВСанаторноКурортномЛечении) +
		Строка(Прием.НуждаетсяВДиспансерномНаблюдении);
	
	// Диагнозы
	Для Каждого СтрокаДиагноз Из Прием.Диагнозы Цикл
		
		ХешируемаяСтрока = ХешируемаяСтрока +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Диагноз) +
			СтрокаДиагноз.Детализация +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.ВыявленВпервые) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Классификация1) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Классификация2) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Классификация3) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Сопутствующий) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Травма) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Исход);
		
		Если Прием.Диагнозы.ВыгрузитьКолонки().Колонки.Найти("Противопоказание") <> Неопределено Тогда
			ХешируемаяСтрока = ХешируемаяСтрока + ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Противопоказание);
		КонецЕсли;
		Если Прием.Диагнозы.ВыгрузитьКолонки().Колонки.Найти("Профессиональное") <> Неопределено Тогда
			ХешируемаяСтрока = ХешируемаяСтрока + ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.Профессиональное);
		КонецЕсли;
		Если Прием.Диагнозы.ВыгрузитьКолонки().Колонки.Найти("ПрофнепригодностьВременная") <> Неопределено Тогда
			ХешируемаяСтрока = ХешируемаяСтрока + ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаДиагноз.ПрофнепригодностьВременная);
		КонецЕсли;
	КонецЦикла;
	
	// Вредные факторы
	Для Каждого СтрокаФактор Из Прием.ВредныеФакторыПротивопоказаний Цикл
		
		ХешируемаяСтрока = ХешируемаяСтрока +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(СтрокаФактор.ВредныйФактор);
		
	КонецЦикла;
	
	// Значения параметров html
	Выборка = РегистрыСведений.ЗначенияПараметровHTML.Выбрать(Новый Структура("Документ", Ссылка));
	Пока Выборка.Следующий() Цикл
		
		ХешируемаяСтрока = ХешируемаяСтрока +
			Строка(Выборка.Параметр.УникальныйИдентификатор()) +
			ПолучитьСтроковоеПредставлениеЗначенияВерсия2(Выборка.Значение);
		
	КонецЦикла;
	// Хешируем строку приема
	ХешДанных.Добавить(ХешируемаяСтрока);
	
	// Файлы приема
	БазовыйКаталог = РаботаСФайлами.ПолучитьБазовыйКаталогФайлов(Ссылка);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХранилищеДополнительнойИнформации.Ссылка,
		|	ХранилищеДополнительнойИнформации.ВФайле,
		|	ХранилищеДополнительнойИнформации.Наименование,
		|	ХранилищеДополнительнойИнформации.Хранилище
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
		|ГДЕ
		|	ХранилищеДополнительнойИнформации.Объект = &Объект
		|	И НЕ ХранилищеДополнительнойИнформации.ПометкаУдаления";
	Запрос.УстановитьПараметр("Объект", Ссылка);
	ВыборкаФайлы = Запрос.Выполнить().Выбрать();
	Пока ВыборкаФайлы.Следующий() Цикл
		Если ВыборкаФайлы.ВФайле Тогда
			ФайлПриема = Новый Файл(БазовыйКаталог + ВыборкаФайлы.Наименование);
			Если ФайлПриема.Существует() Тогда
				ХешДанных.ДобавитьФайл(ФайлПриема.ПолноеИмя);
			Иначе
				ХешДанных.Добавить("Файл отсутствует");
			КонецЕсли;
		Иначе
			ХешДанных.Добавить(ВыборкаФайлы.Хранилище.Получить());
		КонецЕсли;
	КонецЦикла;
	
	Возврат ХешДанных.ХешСумма;
	
КонецФункции

Функция ПолучитьСтроковоеПредставлениеЗначенияВерсия2(Значение)
	
	Попытка
		Возврат Строка(Значение.УникальныйИдентификатор());
	Исключение
		Попытка
			Возврат ЗначениеВСтрокуВнутр(Значение);
		Исключение
			Возврат "Error";
		КонецПопытки;
	КонецПопытки;
	
КонецФункции

#КонецОбласти
