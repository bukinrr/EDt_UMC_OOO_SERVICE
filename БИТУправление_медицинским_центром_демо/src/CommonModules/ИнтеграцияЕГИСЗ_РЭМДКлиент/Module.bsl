#Область ПрограммныйИнтерфейс

// Выполняет регистрацию ЭМД в РЭМД, на основе данных справочника СообщенияРЭМД.
//
// Параметры:
//  СообщениеРЭМД	 - СправочникСсылка.СообщенияРЭМД	 - сообщение РЭМД, подготовленное к отправке.
//
Процедура ЗарегистрироватьДокументВРЭМД(СообщениеРЭМД, ДостигнутЛимит) Экспорт
	
	// Определим по каким МО доступна отправка с клиента, а по каким - с Сервера.
	// Для случая НаКлиентеИНаСервере считаем приоритетным способом Сервер.
	НастройкиОтправки = ИнтеграцияЕГИСЗСерверПовтИсп.ПолучитьНастройкиОтправкиКлиентСервер();
	
	Если Не ЗначениеЗаполнено(НастройкиОтправки) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не заполнены настройки ЕГИСЗ, регистрация документов отменена.");
		Возврат;
	КонецЕсли;
	
	РезультатОтРЭМД = ИнтеграцияЕГИСЗ_РЭМД.ЗарегистрироватьДокументВРЭМД(СообщениеРЭМД);
	
	Если ТипЗнч(РезультатОтРЭМД) = Тип("Структура")
		И РезультатОтРЭМД.Свойство("ДостигнутЛимит")
		И РезультатОтРЭМД.ДостигнутЛимит = Истина
	Тогда
		ДостигнутЛимит = Истина;
	Иначе
		ИнтеграцияЕГИСЗ_РЭМД.СохранитьРезультатыОтправкиСообщения(Новый Структура("СообщениеРЭМД, РезультатОтРЭМД", СообщениеРЭМД, РезультатОтРЭМД));
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполнитьДействие(Форма, Действие, ТребуетсяПроведениеДокумента = Истина) Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыполнитьДействиеРЭМД", ИнтеграцияЕГИСЗ_РЭМДКлиент, Новый Структура("Действие, Форма", Действие, Форма));
	РаботаСДиалогамиКлиент.ПроверитьМодифицированностьВФорме(Форма, ТребуетсяПроведениеДокумента, ОписаниеОповещения);
	
КонецПроцедуры

Процедура ВыполнитьДействиеРЭМД(Результат, Параметры) Экспорт
	
	Если Не Результат Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Действие = "ПроверитьДанныеПередПодписанием" Тогда
		ПроверитьДанныеПередПодписанием(Параметры.Форма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьДанныеПередПодписанием(Форма) Экспорт
	
	ОткрытьФорму("ОбщаяФорма.РЭМДПроверитьДанныеПередПодписанием", Новый Структура("Ссылка", Форма.Объект.Ссылка), Форма, Форма.УникальныйИдентификатор);
	
КонецПроцедуры

// Настраивает видимость и доступность стандартных элементов формы медицинского документа.
//
// Параметры:
//  Форма	 - ФормаКлиентскогоПриложения	 - Форма документа медицинского документа.
//
Процедура НастроитьЭлементыФормы(Форма) Экспорт
	
	ИмяТипаДокумента = ДопСерверныеФункции.ИмяСсылочногоТипа(Форма.Объект.Ссылка);
	Если ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра"
		И Форма.Объект.ВидПрохожденияМО <> ДопСерверныеФункцииПовтИсп.ПолучитьСтруктуруДляПеречисления("ВидыМедосмотров").СправкаПрочий
	Тогда
		НастроитьЭлементыФормыЗаключенияМО(Форма);
	ИначеЕсли ИмяТипаДокумента = "Документ.ВрачебнаяКомиссия" Тогда // Версия КОРП
		НастроитьЭлементыФормыВрачебнойКомиссии(Форма);
	ИначеЕсли ИмяТипаДокумента = "Документ.Рецепт" Тогда
		НастроитьЭлементыФормыРецепта(Форма);
	Иначе
		НастроитьЭлементыФормыПоШаблонам(Форма, ИмяТипаДокумента);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьЭлементыФормыЗаключенияМО(Форма)
	
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ГруппаРЭМД", 	"Видимость",		Форма.ИспользуетсяРЭМД);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "КнопкаФилиал",	"Доступность",		Не Форма.Объект.ПодписанЭП);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "Тестовый",		"ТолькоПросмотр",	Форма.Объект.ПодписанЭП);
	
	Если Форма.ИспользуетсяРЭМД Тогда
		РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ЭППодписатьДокумент", "Картинка", БиблиотекаКартинок.ВыполнитьЗадачу);
	КонецЕсли;
	
КонецПроцедуры

Процедура НастроитьЭлементыФормыВрачебнойКомиссии(Форма)
	
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ГруппаРЭМД", 	"Видимость",		Форма.ИспользуетсяРЭМД);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "КнопкаФилиал",	"Доступность",		Не Форма.Объект.ПодписанЭП);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "Тестовый",		"ТолькоПросмотр",	Форма.Объект.ПодписанЭП);
	
КонецПроцедуры

Процедура НастроитьЭлементыФормыРецепта(Форма)
	
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ЭП", 	"Видимость",				Форма.ИспользуетсяРЭМД);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "КнопкаФилиал",	"Доступность",		Не Форма.Объект.ПодписанЭП);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "Тестовый",		"ТолькоПросмотр",	Форма.Объект.ПодписанЭП);
	
КонецПроцедуры

Процедура НастроитьЭлементыФормыПоШаблонам(Форма, ИмяТипаДокумента)
	
	ЕстьШаблоныРЭМД = Ложь;
	ЕстьШаблоныБезРЭМД = Ложь;
	
	Если ИмяТипаДокумента = "Документ.Прием" Тогда
		Для Каждого Шаблон Из Форма.Объект.ШаблоныПриема Цикл
			Если ЗначениеЗаполнено(Шаблон.ВидДокумента) Тогда
				ЕстьШаблоныРЭМД = Истина;
			Иначе
				ЕстьШаблоныБезРЭМД = Истина;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
		ЕстьШаблоныРЭМД = Форма.ШаблонРЭМД;
		ЕстьШаблоныБезРЭМД = Не Форма.ШаблонРЭМД;
	КонецЕсли;
	
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ГруппаРЭМД",	"Видимость",		ЕстьШаблоныРЭМД И Форма.ИспользуетсяРЭМД);
	РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "Тестовый",		"ТолькоПросмотр",	Форма.Объект.ПодписанЭП);
	
	Если ИмяТипаДокумента = "Документ.ПрохождениеМедосмотра" Тогда
		РаботаСФормамиКлиентСервер.УстановитьПолеЭлементаФормы(Форма.Элементы, "ГруппаМедкарта", "Видимость", Форма.ИспользуетсяРЭМД);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбработатьРезультатПодписанияПоРЭМД(Параметры, ПараметрыПослеПодписаний) Экспорт
	
	СтруктурыЭЦППоУИДЭЦП = СформироватьСтруктурыЭЦППоУИДЭЦП(Параметры);
	
	Если СтруктурыЭЦППоУИДЭЦП.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Все данные для формирования сообщения в РЭМД сохраняются в данных табличных частей РолиИПодписиЭМД и ЭМД. 
	РезультатСохранения = ЭЦП_УМЦ_Сервер.СохранитьИзмененияВДокументе(Параметры.Объект, СтруктурыЭЦППоУИДЭЦП);
	Если Не РезультатСохранения.ЗаписьУспешна Тогда
		Возврат;
	КонецЕсли;
	
	ИнтеграцияЕГИСЗ_РЭМД.ОбновитьДанныеСообщенийРЭМД(РезультатСохранения.УИДы, Параметры.Объект);
	ПараметрыПослеПодписаний.РезультатСохраненияРЭМД = РезультатСохранения;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьСтруктурыЭЦППоУИДЭЦП(Параметры)
	
	СтруктурыЭЦППоУИДЭЦП = Новый Массив;
	
	Для Каждого СтрокаЭЦП Из Параметры.УИДыЭЦП Цикл
		
		Если СтрокаЭЦП.ТипПодписания <> 3 Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтруктураДанных Из Параметры.СтруктурыДанных Цикл
			Если СтруктураДанных.УИД_Шаблона = СтрокаЭЦП.УИД_Шаблона Тогда
				СтруктурыЭЦППоУИДЭЦП.Добавить(Новый Структура("УИД_ЭЦП, СтруктураДанных", СтрокаЭЦП.ПолученныйУИДЭЦП, СтруктураДанных));
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат СтруктурыЭЦППоУИДЭЦП;
	
КонецФункции

#КонецОбласти