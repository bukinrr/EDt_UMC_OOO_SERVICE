#Область ПрограммныйИнтерфейс

// Создает версию шаблона.
//
// Параметры:
//  Владелец - СправочникСсылка.ШаблоныHTML	 - шаблон.
//  Дата	 - Дата							 - Дата версии.
// 
// Возвращаемое значение:
//  СправочникСсылка.ВерсииШаблоновHTML.
//
Функция СоздатьВерсиюШаблона(Владелец, Дата = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	НоваяВерсия = Справочники.ВерсииШаблоновHTML.СоздатьЭлемент();
	НоваяВерсия.Владелец = Владелец;
	НоваяВерсия.Дата = Дата;
	НоваяВерсия.ТекстHTML = Владелец.ТекстHTML;
	НоваяВерсия.ВидШаблона = Владелец.ВидШаблона;
	НоваяВерсия.Обработка = Новый ХранилищеЗначения(Владелец.Обработка.Получить(), Новый СжатиеДанных(9));
	НоваяВерсия.ВидДокумента = Владелец.ВидДокумента;
	НоваяВерсия.НаименованиеСЭМД = Владелец.НаименованиеСЭМД;
	НоваяВерсия.НеИспользоватьШапкуШаблона = Владелец.НеИспользоватьШапкуШаблона;
	НоваяВерсия.РасположениеПодписи = Владелец.РасположениеПодписи;
	НоваяВерсия.ВидМедицинскойДокументации = Владелец.ВидМедицинскойДокументации;
	НоваяВерсия.НеФормироватьОтдельныйЭМД = Владелец.НеФормироватьОтдельныйЭМД;
	
	Для Каждого СтрокаИзображение Из Владелец.СписокИзображений Цикл
		ЗаполнитьЗначенияСвойств(НоваяВерсия.СписокИзображений.Добавить(), СтрокаИзображение);
	КонецЦикла;
	
	Для Каждого СтрокаПараметр Из Владелец.СоответствияПараметрам Цикл
		ЗаполнитьЗначенияСвойств(НоваяВерсия.СоответствияПараметрам.Добавить(), СтрокаПараметр);
	КонецЦикла;
	
	Для Каждого СтрокаТаблицыШаблона Из Владелец.СоответствияТаблицамШаблонов Цикл
		ЗаполнитьЗначенияСвойств(НоваяВерсия.СоответствияТаблицамШаблонов.Добавить(), СтрокаТаблицыШаблона);
	КонецЦикла;
	
	Для Каждого СтрокаКонстанты Из Владелец.КонстантыCDAДокумента Цикл
		ЗаполнитьЗначенияСвойств(НоваяВерсия.КонстантыCDAДокумента.Добавить(), СтрокаКонстанты);
	КонецЦикла;
	
	Для Каждого СтрокаРоли Из Владелец.РолиПодписей Цикл
		ЗаполнитьЗначенияСвойств(НоваяВерсия.РолиПодписей.Добавить(), СтрокаРоли);
	КонецЦикла;
	
	НоваяВерсия.Записать();
	Возврат НоваяВерсия.Ссылка;
	
КонецФункции

// Формировует таблицу версий указанных шаблонов на дату.
//
// Параметры:
//  СписокШаблонов	 - Массив	 - массив шаблонов.
//  Дата			 - Дата		 - Дата версий.
//  ВернутьСтруктуру - Булево	 - нужно ли вернуть массив структур вместо таблицы значений.
//  УчетнаяПолитика	 - Структура - учетная политика.
// 
// Возвращаемое значение:
//  ТаблицаЗначений.
//
Функция ПолучитьТаблицуВерсийШаблонов(СписокШаблонов, Дата = Неопределено, ВернутьСтруктуру = Ложь, УчетнаяПолитика = Неопределено)  Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Если УчетнаяПолитика = Неопределено Тогда
		УчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ШаблоныHTML.Ссылка КАК ШаблонПриема
	|ПОМЕСТИТЬ ШаблоныПриема
	|ИЗ
	|	Справочник.ШаблоныHTML КАК ШаблоныHTML
	|ГДЕ
	|	ШаблоныHTML.Ссылка В(&СписокШаблонов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВерсииШаблоновHTML.Ссылка КАК Версия
	|ПОМЕСТИТЬ ВерсииДоДаты
	|ИЗ
	|	Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
	|ГДЕ
	|	ВерсииШаблоновHTML.Владелец В(&СписокШаблонов)
	|	И ВерсииШаблоновHTML.Дата >= &Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(ВерсииДоДаты.Версия, ШаблоныПриема.ШаблонПриема) КАК ВерсияШаблона,
	|	ШаблоныПриема.ШаблонПриема
	|ИЗ
	|	ШаблоныПриема КАК ШаблоныПриема
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВерсииДоДаты КАК ВерсииДоДаты
	|		ПО ШаблоныПриема.ШаблонПриема = ВерсииДоДаты.Версия.Владелец
	|			И (ВерсииДоДаты.Версия.Дата В
	|				(ВЫБРАТЬ
	|					МИНИМУМ(ВерсииДоДатыМин.Версия.Дата) КАК ВерсияДата
	|				ИЗ
	|					ВерсииДоДаты КАК ВерсииДоДатыМин
	|				ГДЕ
	|					ВерсииДоДатыМин.Версия.Владелец = ВерсииДоДаты.Версия.Владелец))
	|			И (&ИспользоватьВерсионирование)";
	Запрос.УстановитьПараметр("СписокШаблонов", СписокШаблонов);
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("ИспользоватьВерсионирование", УчетнаяПолитика.ИспользоватьВерсионированиеШО);
	Если ВернутьСтруктуру Тогда
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(Запрос.Выполнить().Выгрузить());
	Иначе
		Возврат Запрос.Выполнить().Выгрузить();
	КонецЕсли;
	
КонецФункции

// Создает версию шаблона.
//
// Параметры:
//  Шаблон			 - СправочникСсылка.ШаблоныHTML	 - шаблон.
//  Дата			 - Дата							 - Дата версии.
//  УчетнаяПолитика	 - Структура					 - учетная политика.
// 
// Возвращаемое значение:
//  СправочникСсылка.ВерсииШаблоновHTML.
//
Функция ПолучитьВерсиюШаблона(Шаблон, Дата = Неопределено, УчетнаяПолитика = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда 
		Дата = ТекущаяДата();
	КонецЕсли;
	
	Если УчетнаяПолитика = Неопределено Тогда
		УчетнаяПолитика = УправлениеНастройками.ПолучитьУчетнуюПолитику();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ВерсииШаблоновHTML.Ссылка КАК ВерсияШаблона
	|ИЗ
	|	Справочник.ВерсииШаблоновHTML КАК ВерсииШаблоновHTML
	|ГДЕ
	|	ВерсииШаблоновHTML.Владелец = &Шаблон
	|	И &Дата <= ВерсииШаблоновHTML.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВерсииШаблоновHTML.Дата";
	Запрос.УстановитьПараметр("Дата", Дата);
	Запрос.УстановитьПараметр("Шаблон", Шаблон);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() И УчетнаяПолитика.ИспользоватьВерсионированиеШО Тогда
		Возврат Выборка.ВерсияШаблона;
	Иначе
		Возврат Шаблон;
	КонецЕсли;
	
КонецФункции

#КонецОбласти