#Область ПрограммныйИнтерфейс

// Возвращает структуру значений учетной политики
//
// Параметры:
//	Дата - не используется 
//
// Возвращаемое значение:
//  Структура с параметрами учетной политики
//
Функция ПолучитьУчетнуюПолитику() Экспорт
	
	нзУчетнаяПолитика = РегистрыСведений.НастройкиМедицинскогоУчета.СоздатьНаборЗаписей();
	нзУчетнаяПолитика.Прочитать();
	
	мУчетнаяПолитика = Новый Структура;
	
	Если нзУчетнаяПолитика.Количество()<>0 Тогда
		
		мУчетнаяПолитика = Новый Структура;
		мМетаданныеРесурсы = Метаданные.РегистрыСведений.НастройкиМедицинскогоУчета.Ресурсы;
		Для Каждого Ресурс Из мМетаданныеРесурсы Цикл
			мУчетнаяПолитика.Вставить(Ресурс.Имя, нзУчетнаяПолитика[0][Ресурс.Имя]); 
		КонецЦикла;

	Иначе
		мУчетнаяПолитика = ПолучитьУчетнуюПолитикуПоУмолчанию();                                         
	КонецЕсли;
	
	ПроцедурыСпециализацииПоставки.ДополнитьУчетнуюПолитикуНастройкамиУзла(мУчетнаяПолитика);
	
	Возврат мУчетнаяПолитика;
	
КонецФункции                                                                                    

// Возвращает значение параметра учетной политики
//
// Параметры:
//  ИмяПараметра - имя параметра
//	Дата		 - не используется 
//
// Возвращаемое значение:
//  определяется типом значения параметра
//
Функция ПолучитьПараметрУчетнойПолитики(ИмяПараметра) Экспорт
	
	Перем Возв;
	
	мУчетнаяПолитика = РегистрыСведений.НастройкиМедицинскогоУчета.СоздатьНаборЗаписей();
	мУчетнаяПолитика.Прочитать();
	
	Если мУчетнаяПолитика.Количество() <> 0 Тогда
		Возврат мУчетнаяПолитика[0][ИмяПараметра]; 
	Иначе
		Возврат ПолучитьЗначениеПараметраУчетнойПолитикиПоУмолчанию(ИмяПараметра)
	КонецЕсли;
	
КонецФункции

// Возвращает структуру значений учетной политики по умолчанию
//
// Параметры:
//	Нет
//
// Возвращаемое значение:
//  Структура с параметрами учетной политики
//
Функция ПолучитьУчетнуюПолитикуПоУмолчанию()
	
	мМетаданные	= Метаданные.РегистрыСведений.НастройкиМедицинскогоУчета.Ресурсы;
	СтруктураВозврата = Новый Структура;
	Для Каждого Реквизит из мМетаданные Цикл
		
		СтруктураВозврата.Вставить(Реквизит.Имя, ПолучитьЗначениеПараметраУчетнойПолитикиПоУмолчанию(Реквизит.Имя));
		
	КонецЦикла;
	Возврат СтруктураВозврата;
	
КонецФункции

// Возвращает значение параметра учетной политики по умолчанию
//
// Параметры:
//  ИмяПараметра - имя параметра
//
// Возвращаемое значение:
//  определяется типом значения параметра
//
Функция ПолучитьЗначениеПараметраУчетнойПолитикиПоУмолчанию(ИмяПараметра) Экспорт
	
	Возврат Метаданные.РегистрыСведений.НастройкиМедицинскогоУчета.Ресурсы[ИмяПараметра].Тип.ПривестиЗначение(Неопределено);
	
КонецФункции

Процедура УстановитьЗначениеПараметра(ИмяПараметра, Значение) Экспорт
	
	РесурсУП = Метаданные.РегистрыСведений.НастройкиМедицинскогоУчета.Ресурсы.Найти(ИмяПараметра);
	Если РесурсУП <> Неопределено Тогда 
		
		Запись = РегистрыСведений.НастройкиМедицинскогоУчета.СоздатьМенеджерЗаписи();
		Запись.Прочитать();
		Если Не РесурсУП.Тип.СодержитТип(Тип("ХранилищеЗначения")) Или 
			(РесурсУП.Тип.СодержитТип(Тип("ХранилищеЗначения")) И ТипЗнч(Значение) = Тип("ХранилищеЗначения")) 
		Тогда 
			Запись[ИмяПараметра] = Значение;
		Иначе
			Запись[ИмяПараметра] = Новый ХранилищеЗначения(Значение);
		КонецЕсли;
		Запись.Записать();
		
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти