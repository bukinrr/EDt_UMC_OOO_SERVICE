#Область ПрограммныйИнтерфейс

// Если длина значения (2-й параметр) больше количества символов (3-й параметр),
// то фон элемента формы (1-й параметр) будет выделен красным цветом.
//
// Параметры:
//   Элемент - ЭлементФормы - Элемент формы.
//   Значение - Произвольный - Значение элемента формы.
//   МаксКолСимволов - Число -
//     Максимально допустимое количество символов.
//     Если значение состоит из большего количества символов, чем передано в этом параметре, то
//     элемент будет подкрашен красным цветом.
Процедура КоличествоСимволовБольшеЧемВБланке(Элемент, Значение, МаксКолСимволов) Экспорт
	Значение = СокрЛП(Значение);
	ЦветВажнойКнопки = Новый Цвет(255, 0, 0); 
	ЦветОбычнойКнопки = Новый Цвет();
	Если СтрДлина(Значение) > МаксКолСимволов Тогда
		Элемент.ЦветФона = ЦветВажнойКнопки;	
	Иначе 		
		Элемент.ЦветФона = ЦветОбычнойКнопки;	
	КонецЕсли;
КонецПроцедуры

// Проверяет условие: текст должен состоять из 13 или из 15 символов.
//
// Параметры:
// 	Текст - Строка - Проверяемый текст.
// 	СтандартнаяОбработка - Булево - Результат проверки.
Процедура ПроверкаКоличестваСимволовОГРНО(Текст, СтандартнаяОбработка) Экспорт
	КолЦифр = СтрДлина(СокрП(Текст));
	Если КолЦифр <> 13 И КолЦифр <> 15 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("ОГРН должен состоять из 13 или 15 цифр.");
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 
КонецПроцедуры

// Добавляет запись о событии в листке нетрудоспособности
//
// Параметры:
// 	СписокСобытий - СписокЗначений - Список уже имеющихся событий
// 	ИмяСобытия - Строка - Под каким именем добавить событие
// 	Данные - Произвольный - Данные события
// 	Комментарий - Строка - комментарий для события.
Процедура ФормированиеЗаписиДляЖурналаРегистрации(СписокСобытий, ИмяСобытия, Данные, Комментарий) Экспорт
	
	ИмяСобытия = ИмяСобытия + " документа ЛистокНетрудоспособности";
	Стр = Новый Структура("ИмяСобытия,ОбъектМетаданных,ПредставлениеУровня,Комментарий,Данные",
						ИмяСобытия,"Документ.ЛистокНетрудоспособности","Информация",Комментарий,Данные);
	СписокСобытий.Добавить(Стр);
	
КонецПроцедуры

// Убирает запрещенные символы.
//
// Параметры: 
//   Стр - Строка - Строка для преобразования
//
// Возврат:
//   Строка - Преобразованная строка.
Функция ПолучитьСтрокуБезСпецСимволов(Знач Стр) Экспорт
	
	ЗапретСимволов = Новый Структура("С1,С2,С3,С4,С5,С6,С7,С8,С9,С10,С11,С12,С13,С14,С15,С16,С17,С18,С19,С20,С21,С22,С23,С24,С25,С26,С27,С28,С29,С30",
		",",".","!","\","/",
		"""","'",">","<","№",
		"$","%","?",";","(",
		")","{","}","[","]",
		"_","+","=","^",":",
		"#","&","*","~","`","@");
		
	Для Каждого Символ Из ЗапретСимволов Цикл
		Если СтрЧислоВхождений(Стр, Символ.Значение) <> 0 Тогда
			Стр = СтрЗаменить(Стр, Символ.Значение, "");		
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Стр;
	
КонецФункции

#КонецОбласти