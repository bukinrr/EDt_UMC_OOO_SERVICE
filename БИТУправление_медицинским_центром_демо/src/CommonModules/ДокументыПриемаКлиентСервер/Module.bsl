#Область ПрограммныйИнтерфейс

// Формирует таблицу версий для документа приема.
//
// Параметры:
//  ВерсииШаблонов	 - ТаблицаЗначений, ДанныеФормыКоллекция - Таблица версий шаблонов приема.
//  Документ		 - ДокументСсылка.Прием, ДокументОбъект.Прием	 - Прием.
//  Дата			 - Дата	 - Дата версии.
//
Процедура ЗаполнитьТаблицуВерсийШаблонов(ВерсииШаблонов, Документ, Дата = Неопределено) Экспорт
	
	Если Дата = Неопределено Тогда
		Дата = Документ.Дата;
	КонецЕсли;	
	
	ВерсииШаблонов.Очистить();
	
	ИспользуетсяВерсионирование = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ИспользоватьВерсионированиеШО");
	
	Если ИспользуетсяВерсионирование Тогда
		мсШаблоныПриема = Новый Массив;
		Для Каждого СтрокаШаблон Из Документ.ШаблоныПриема Цикл
			мсШаблоныПриема.Добавить(СтрокаШаблон.ШаблонПриема);
		КонецЦикла;
		мсВерсии = ВерсионированиеШаблонов.ПолучитьТаблицуВерсийШаблонов(мсШаблоныПриема, Дата, Истина);
		Для Каждого Версия Из мсВерсии Цикл
			ЗаполнитьЗначенияСвойств(ВерсииШаблонов.Добавить(), Версия);
		КонецЦикла;
	Иначе
		Для Каждого СтрокаШаблон Из Документ.ШаблоныПриема Цикл
			НоваяСтрока = ВерсииШаблонов.Добавить();
			НоваяСтрока.ВерсияШаблона = СтрокаШаблон.ШаблонПриема;
			
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока, "ШаблонОсмотра") Тогда
				НоваяСтрока.ШаблонОсмотра  = СтрокаШаблон.ШаблонПриема;
			КонецЕсли;
			Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(НоваяСтрока, "ШаблонПриема") Тогда
				НоваяСтрока.ШаблонПриема  = СтрокаШаблон.ШаблонПриема;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти