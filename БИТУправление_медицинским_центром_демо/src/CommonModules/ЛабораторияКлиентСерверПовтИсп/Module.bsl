
#Область ПрограммныйИнтерфейс

// Возвращает общий модуль указанной лаборатории, реализующий стандартный программный интерфейс интеграции.
//
// Параметры:
//  ЛабораторияИлиВидЛаборатории - СправочникСсылка.Лаборатории, ПеречислениеСсылка.ВнешниеЛаборатории	 - вид лаборатории.
//  НаСервере					 - Булево - определяет, нужно получить клиентский или серверный модуль.
// 
// Возвращаемое значение:
//  ОбщийМодуль.
//
Функция ПолучитьМодульОбработчик(ЛабораторияИлиВидЛаборатории, НаСервере = Истина) Экспорт 
	
	Если ТипЗнч(ЛабораторияИлиВидЛаборатории) = Тип("ПеречислениеСсылка.ВнешниеЛаборатории") Тогда
		ВидЛаборатории = ЛабораторияИлиВидЛаборатории;
	ИначеЕсли ТипЗнч(ЛабораторияИлиВидЛаборатории) = Тип("СправочникСсылка.Лаборатории") Тогда
		Если ЗначениеЗаполнено(ЛабораторияИлиВидЛаборатории) Тогда
			ВидЛаборатории = ДопСерверныеФункции.ПолучитьРеквизит(ЛабораторияИлиВидЛаборатории, "ВнешняяЛаборатория");
		Иначе
			ВидЛаборатории = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВидЛаборатории) Тогда
		Возврат ВнутренняяЛабораторияСервер;
	Иначе
		ИмяВидаЛаборатории = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидЛаборатории);
		ИмяМодуля = Неопределено;
		
		МодулиЛаборатории = МодулиЛабораторий().Получить(ИмяВидаЛаборатории);
		Если МодулиЛаборатории <> Неопределено Тогда
			Если НаСервере Тогда
				ИмяМодуля = МодулиЛаборатории.Сервер;
			Иначе
				ИмяМодуля = МодулиЛаборатории.Клиент;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ИмяМодуля) Тогда
				Попытка
					Возврат ОбщегоНазначенияКлиентСервер.ОбщийМодуль(ИмяМодуля);
				Исключение
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Использование лабораторией функционала правил забора.
//
// Параметры:
//  Лаборатория	 - СправочникСсылка.Лаборатории, ПеречислениеСсылка.ВнешниеЛаборатории	 - лаборатория.
// 
// Возвращаемое значение:
//   Булево.
//
Функция ИспользуютсяПравилаЗабора(Лаборатория) Экспорт
	
	Используются = Ложь;
	
	Если ЗначениеЗаполнено(Лаборатория) Тогда
		Если ТипЗнч(Лаборатория) = Тип("СправочникСсылка.Лаборатории") Тогда
			ВидЛаборатории = ЛабораторияСерверПовтИсп.ВидЛаборатории(Лаборатория);
		Иначе
			ВидЛаборатории = Лаборатория;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВидЛаборатории) Тогда
			
			Используются = Истина;
			ПриОпределенииИспользуютсяПравилаЗабора(ВидЛаборатории, Используются);
			
		КонецЕсли;
	КонецЕсли;
	
	Возврат Используются;
		
КонецФункции

// Можно ли применить значение по умолчанию параметра забора анализа вместо ввода значения пользователем.
//
// Параметры:
//  ЗначениеПоУмолчанию						 - Произвольный	 - значение.
//  ЗначенияПоУмолчаниюУсловияПрименения	 - Структура	 - условия применения значения по умолчанию
//  ПараметрыПримененияЗначенияПоУмолчанию	 - Структура	 - параметры из забора анализа по конкретному клиенту.
// 
// Возвращаемое значение:
//  Булево.
//
Функция ПараметрЗабораЗначениеПоУмолчаниюПрименимо(ЗначениеПоУмолчанию, ЗначенияПоУмолчаниюУсловияПрименения, ПараметрыПримененияЗначенияПоУмолчанию) Экспорт

	Результат = Истина;
	
	Если ЗначениеПоУмолчанию = Неопределено Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначенияПоУмолчаниюУсловияПрименения.Пол)
		И ЗначенияПоУмолчаниюУсловияПрименения.Пол <> ПараметрыПримененияЗначенияПоУмолчанию.Пол
	Тогда
		Результат = Ложь;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Список видов лабораторий, для которых есть встроенное заполнение параметров забора.
// 
// Возвращаемое значение:
//  СписокЗначений 
//
Функция ВидыЛабораторийСЗагрузкойПараметровЗабора() Экспорт
	
	ВидыЛабораторий = Новый СписокЗначений;
	ВидыЛабораторий.Добавить(ПредопределенноеЗначение("Перечисление.ВнешниеЛаборатории.Helix"));
	ВидыЛабораторий.Добавить(ПредопределенноеЗначение("Перечисление.ВнешниеЛаборатории.СитиЛаб"));
	
	Возврат ВидыЛабораторий;
	
КонецФункции

// Использование лабораторией существующих в контейнерах кодов проб при получении номеров заявок и формировании
// кодов проб новых контейнеров в документе забора анализов.
//
// Параметры:
//  Лаборатория	 - СправочникСсылка.Лаборатории	 - лаборатория.
// 
// Возвращаемое значение:
//  Булево
//
Функция ИспользуютсяСуществующиеКодыПробПриПолученииНомеровЗаявок(Лаборатория) Экспорт
	
	Результат = Ложь; // Значение по умолчанию. Например, внутренняя лаборатория.
	
	Если ЗначениеЗаполнено(Лаборатория) Тогда
		
		МодульОбработчик = ЛабораторияКлиентСерверПовтИсп.ПолучитьМодульОбработчик(Лаборатория);
		
		Если МодульОбработчик <> Неопределено Тогда
			// Вызываем у модуля конкретной лаборатории ИспользуютсяСуществующиеКодыПробПриПолученииНомеровЗаявок().
			Попытка
				Результат = МодульОбработчик.ИспользуютсяСуществующиеКодыПробПриПолученииНомеровЗаявок();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриОпределенииИспользуютсяПравилаЗабора(ВидЛаборатории, Используются)
	
	// Пример:
	// ИмяВидаЛаборатории = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидЛаборатории);
	// Если ИмяВидаЛаборатории = "Invitro") Тогда
	// 	Используются = Ложь;
	// КонецЕсли;
	 ИмяВидаЛаборатории = ОбщегоНазначения.ИмяЗначенияПеречисления(ВидЛаборатории);
	 Если ИмяВидаЛаборатории = "Гемотест" Тогда
	 	Используются = Ложь;
	 КонецЕсли;
	
	Возврат;
	
КонецПроцедуры

Функция МодулиЛабораторий()
	
	МодулиЛабораторий = Новый Соответствие;
	
	МодулиЛабораторий.Вставить("Helix",		 Новый Структура("Сервер, Клиент", "Helix_ИнтеграцияСервер", "Helix_ИнтеграцияКлиент"));
	МодулиЛабораторий.Вставить("Invitro",	 Новый Структура("Сервер, Клиент", "invИнвитроСервер", "invИнвитроКлиент"));
	МодулиЛабораторий.Вставить("СитиЛаб",	 Новый Структура("Сервер, Клиент", "СитиЛаб_ИнтеграцияСервер", "СитиЛаб_ИнтеграцияКлиент"));
	МодулиЛабораторий.Вставить("КДЛ",	 	 Новый Структура("Сервер, Клиент", "КДЛ_ИнтеграцияСервер", "КДЛ_ИнтеграцияКлиент"));
	МодулиЛабораторий.Вставить("Гемотест",	 Новый Структура("Сервер, Клиент", "Гемотест_Сервер", "Гемотест_Клиент"));
	
	Возврат МодулиЛабораторий;
	
КонецФункции

#КонецОбласти