#Область СлужебныеПроцедурыИФункции

Функция КэшФормы(Знач ИмяФормы, Знач ИсточникиЧерезЗапятую, Знач ЭтоФормаОбъекта) Экспорт
	Возврат ПодключаемыеКоманды.КэшФормы(ИмяФормы, ИсточникиЧерезЗапятую, ЭтоФормаОбъекта);
КонецФункции

Функция Параметры() Экспорт
	
	УстановитьОтключениеБезопасногоРежима(Истина);
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = СтандартныеПодсистемыСервер.ПараметрРаботыПрограммы("СтандартныеПодсистемы.ПодключаемыеКоманды");
	Если Параметры = Неопределено Тогда
		ПодключаемыеКоманды.ОперативноеОбновлениеОбщихДанныхКонфигурации();
		Параметры = СтандартныеПодсистемыСервер.ПараметрРаботыПрограммы("СтандартныеПодсистемы.ПодключаемыеКоманды");
		Если Параметры = Неопределено Тогда
			Возврат Новый Структура("ПодключенныеОбъекты", Новый Соответствие);
		КонецЕсли;
	КонецЕсли;
	
	//+БИТ
	//Если ЗначениеЗаполнено(ПараметрыСеанса.ВерсияРасширений) Тогда
	//	ПараметрыРасширений = СтандартныеПодсистемыСервер.ПараметрРаботыРасширения(ПодключаемыеКоманды.ПолноеИмяПодсистемы());
	//	Если ПараметрыРасширений = Неопределено Тогда
	//		ПодключаемыеКоманды.ПриЗаполненииВсехПараметровРаботыРасширений();
	//		ПараметрыРасширений = СтандартныеПодсистемыСервер.ПараметрРаботыРасширения(ПодключаемыеКоманды.ПолноеИмяПодсистемы());
	//		Если ПараметрыРасширений = Неопределено Тогда
	//			Возврат Параметры;
	//		КонецЕсли;
	//	КонецЕсли;
	//	ДополнитьСоответствиеСМассивами(Параметры.ПодключенныеОбъекты, ПараметрыРасширений.ПодключенныеОбъекты);
	//КонецЕсли;
	//
	//-БИТ

	УстановитьПривилегированныйРежим(Ложь);
	УстановитьОтключениеБезопасногоРежима(Ложь);
	
	Возврат Параметры;
КонецФункции

#КонецОбласти
