////////////////////////////////////////////////////////////////////////////////
// Обработка штрихкодов
#Область Штрихкоды

// Функция получает структуру обработки штрихкодов
//
// Параметры:
//  Штрихкоды - штрихкод или массив штрихкодов
//  ДействияСДобавленнымиСтроками - структура действий для новый строк
//  ДействияСИзмененнымиСтроками - структура действий для измененных строк
//
// Возвращаемое значение:
//  Структура
//
Функция ПолучитьПараметрыОбработкиШтрихкодов(Штрихкоды, ДействияСДобавленнымиСтроками, ДействияСИзмененнымиСтроками) Экспорт
	
	ДанныеШтрихкодов = ПодготовитьВходящиеШтирхкодыДляОбработки(Штрихкоды);
	
	ПараметрыОбработкиШтрихкода = Новый Структура;
	ПараметрыОбработкиШтрихкода.Вставить("Штрихкоды"                      , ДанныеШтрихкодов);
	ПараметрыОбработкиШтрихкода.Вставить("ИзменятьКоличество"             , Истина);
	ПараметрыОбработкиШтрихкода.Вставить("ПараметрыУчетаНоменклатуры"     , Неопределено);
	ПараметрыОбработкиШтрихкода.Вставить("ПропускатьНенайденныеШтрихкоды" , Ложь);
	ПараметрыОбработкиШтрихкода.Вставить("ДействияСДобавленнымиСтроками"  , ДействияСДобавленнымиСтроками);
	ПараметрыОбработкиШтрихкода.Вставить("ДействияСИзмененнымиСтроками"   , ДействияСИзмененнымиСтроками);
	ПараметрыОбработкиШтрихкода.Вставить("БлокироватьДанныеФормы"         , Истина);
	
	ПараметрыОбработкиШтрихкода.Вставить("ЕстьКолонкаКоличество"          , Истина);
	ПараметрыОбработкиШтрихкода.Вставить("ИмяКолонкиКоличество"           , "Количество");
	ПараметрыОбработкиШтрихкода.Вставить("ИмяТабличнойЧасти"              , "Товары");
	ПараметрыОбработкиШтрихкода.Вставить("ШтрихкодыВТЧ"                   , Ложь);
	
	ПараметрыОбработкиШтрихкода.Вставить("НеизвестныеШтрихкоды"           , Новый Массив);
	ПараметрыОбработкиШтрихкода.Вставить("ОтборСтрок"                     , Новый Структура);
	
	Возврат ПараметрыОбработкиШтрихкода;
	
КонецФункции

Функция ПодготовитьВходящиеШтирхкодыДляОбработки(Штрихкоды) Экспорт
	
	Если ТипЗнч(Штрихкоды) = Тип("Массив") Тогда
		МассивШтрихкодов = Штрихкоды;
	Иначе
		МассивШтрихкодов = Новый Массив;
		МассивШтрихкодов.Добавить(Штрихкоды);
	КонецЕсли;
	
	Для Каждого ДанныеШтрихкода Из МассивШтрихкодов Цикл
		
		ДанныеИзШтрихкода = ОбработкаТабличнойЧастиКлиентСервер.ПолучитьДанныеИзШтрихкода(ДанныеШтрихкода.Штрихкод);
		ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ДанныеШтрихкода, ДанныеИзШтрихкода, Истина);
		
	КонецЦикла;
	
	Возврат МассивШтрихкодов;
	
КонецФункции

// Функция получает структуру обработки перезаполнения строки ТЧ по штрихкоду
//
// Возвращаемое значение:
//  Структура
//
Функция ПолучитьПараметрыОбработкиНенайденныхШтрихкодов() Экспорт
	
	ПараметрыОбработкиШтрихкода = Новый Структура;
	ПараметрыОбработкиШтрихкода.Вставить("ДействияСИзмененнымиСтроками", Новый Структура);
	ПараметрыОбработкиШтрихкода.Вставить("ИмяТабличнойЧасти"           , "Товары");
	ПараметрыОбработкиШтрихкода.Вставить("ЗарегистрированныеШтрихкоды" , Новый Массив);
	ПараметрыОбработкиШтрихкода.Вставить("НеизвестныеШтрихкоды"        , Новый Массив);
	
	Возврат ПараметрыОбработкиШтрихкода;
	
КонецФункции

// Показывает диалог ввода штрихкода, после закрытия вызывает процедуру ПослеВводаШтрихкода.
//
// Параметры:
//  Источник - УникальныйИдентификатор - идентификатор формы для которой показывается диалог
//
Процедура ПоказатьВводШтрихкода(Источник) Экспорт
	
	Оповещение = Новый ОписаниеОповещения("ПослеВводаШтрихкода", ЭтотОбъект, Источник);
	ПоказатьВводЗначения(Оповещение, "", НСтр("ru = 'Введите штрихкод'"));
	
КонецПроцедуры

// Обрабатывает ввод штрихкода. Если штрихкод указан, то выполняется оповещение открытых форм
// с событием "ВведенШтрихкод", в качестве источника оповещения указывается параметр, переданный
// в метод ПоказатьВводШтрихкода.
//
// Параметры:
//  Значение - Строка, Неопределено - введенный штрихкод
//  Источник - УникальныйИдентификатор
//
Процедура ПослеВводаШтрихкода(Значение, Источник) Экспорт
	
	Если ЗначениеЗаполнено(Значение) Тогда
		Оповестить("ВведенШтрихкод", Значение, Источник);
	КонецЕсли;
	
КонецПроцедуры

// Процедура выводит сообщения пользователю о не найденных штрихкодах
//
// Параметры:
//  ПараметрыДействия - параметры обработки штрихкодов
//
Процедура СообщитьОНеизвестныхШтрихкодах(ПараметрыДействия) Экспорт
	
	Для Каждого НеизвестныйШтрихкод Из ПараметрыДействия.НеизвестныеШтрихкоды Цикл
		
		Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(НеизвестныйШтрихкод, "ТипУпаковки") = ПредопределенноеЗначение("Перечисление.ТипыУпаковокМДЛП.МаркированныйТовар") Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Данные упаковки со штрихкодом не найдены: %1'"),
				НеизвестныйШтрихкод.Штрихкод)
		Иначе
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Данные по штрихкоду не найдены: %1; количество: %2'"),
				НеизвестныйШтрихкод.Штрихкод,
				НеизвестныйШтрихкод.Количество);
		КонецЕсли;
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
		
	КонецЦикла;
	
КонецПроцедуры

// Проверяет наличие ненайденных штрихкодов в табличной части
//
// Параметры:
//  ТабличнаяЧасть - таблица значений с колонкой "Штрихкод"
//
// Возвращаемое значение:
//  Булево - Истина, если есть штрихкоды в табличной части
//
Функция ЕстьНенайденныеШтрихкоды(ТабличнаяЧасть) Экспорт
	
	Для Каждого СтрокаТабличнойЧасти Из ТабличнаяЧасть Цикл
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Штрихкод) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

// Сообщает пользователю о результате обновления данных по штрихкодам
//
// Параметры:
//  ПараметрыДействия
//
Процедура СообщитьОРезультатеОбновленияДанныхПоШтрихкодам(ПараметрыДействия) Экспорт
	
	Если ПараметрыДействия.КоличествоОбработанныхСтрок Тогда
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru='Данные обновлены в %1'"),
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(НСтр("ru=';%1-ой строке;;%1-х строках;%1-и строках;%1 строках'"),
				ПараметрыДействия.КоличествоОбработанныхСтрок));
		
	Иначе
		
		ТекстСообщения = НСтр("ru='Нет данных для заполнения.'");
		
	КонецЕсли;
	
	Состояние(ТекстСообщения,,, БиблиотекаКартинок.Информация32);
	
КонецПроцедуры

// Процедура обрабатывает ненайденные штрихкоды из табличной части документа
//
Процедура ОбработатьНенайденныеШтрихкоды(Товары, Форма) Экспорт
	
	ДанныеШтрихкодов = Новый Массив();
	Для Каждого СтрокаТовара Из Товары Цикл
		Если ЗначениеЗаполнено(СтрокаТовара.Штрихкод) Тогда
			ДанныеШтрихкодов.Добавить(
				ОбработкаТабличнойЧастиКлиентСервер.ПолучитьДанныеШтрихкода(СтрокаТовара.Штрихкод, СтрокаТовара.КоличествоВЕдиницахИзмерения));
		КонецЕсли;
	КонецЦикла;
	
	Если ДанныеШтрихкодов.Количество() = 0 Тогда
		ТекстСообщения = НСтр("ru='В документе отсутствуют штрихкоды.'");
		ПоказатьПредупреждение(, ТекстСообщения, 10);
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("НеизвестныеШтрихкоды", ДанныеШтрихкодов);
	//TODO:
	//ОткрытьФорму("РегистрСведений.Штрихкоды.Форма.РегистрацияШтрихкодовНоменклатуры", ПараметрыФормы, Форма);
	
КонецПроцедуры

#КонецОбласти // Штрихкоды
