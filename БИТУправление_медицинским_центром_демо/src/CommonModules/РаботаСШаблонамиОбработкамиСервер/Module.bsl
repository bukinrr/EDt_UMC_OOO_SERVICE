#Область СлужебныйПрограммныйИнтерфейс

Процедура СоздатьОбработчикиАвтоВыбораРеквизитов(Объект, ЭтаФорма, Параметры, ИмяОбработчика) Экспорт
	
	Элементы = ЭтаФорма.Элементы;
	
	Для Каждого Реквизит Из ПолучитьРеквизитыФормы(Объект, ЭтаФорма) Цикл
		
		Если ТипЗнч(Реквизит.Значение) = Тип("Строка") Тогда
			Параметр = ПолучитьПараметр(Реквизит.Ключ, Параметры);
			
			Если ЗначениеЗаполнено(Параметр) Тогда
				РедактированиеТекста = Не Параметр.ВыборПоСсылкеИзОграниченногоСписка Или Параметр.РазрешитьВводВручнуюПриВыбореИзОграниченногоСписка;
										 
				Если Параметр.ВыборПоСсылкеИзОграниченногоСписка Тогда
					Элемент = Элементы.Найти(Реквизит.Ключ);
					Если Элемент <> Неопределено Тогда
						Элемент.УстановитьДействие("АвтоПодбор", ИмяОбработчика);
						Элемент.КнопкаВыпадающегоСписка = Истина;
						Элемент.КнопкаОчистки = Истина;
						Элемент.РедактированиеТекста = РедактированиеТекста;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура СоздатьОбработчикиАвтоВыбораТаблицШаблонов(Объект, ЭтаФорма, Параметры, ИмяОбработчика) Экспорт
	
	Элементы = ЭтаФорма.Элементы;
	
	Для Каждого Таблица Из ПолучитьРеквизитыТаблицШаблоновФормы(Объект, ЭтаФорма) Цикл
		
		ТЧ = Объект[Таблица.Ключ];
		ТЗ = ТЧ.Выгрузить();
		
		Для Каждого Колонка Из ТЗ.Колонки Цикл
			
			Параметр = ПолучитьПараметрТаблицыШаблона(Колонка.Имя, Параметры);
			
			РедактированиеТекста = (ЗначениеЗаполнено(Параметр)
									И (Параметр.ВыборПоСсылкеИзОграниченногоСписка
									И Параметр.РазрешитьВводВручнуюПриВыбореИзОграниченногоСписка 
									Или Не Параметр.ВыборПоСсылкеИзОграниченногоСписка) 
									Или Не ЗначениеЗаполнено(Параметр)
									);
			
			КнопкаВыпадающегоСписка = ЗначениеЗаполнено(Параметр) И Параметр.ВыборПоСсылкеИзОграниченногоСписка;
			
			Элемент = Элементы.Найти(Колонка.Имя);
			Если Элемент <> Неопределено Тогда
				Элемент.УстановитьДействие("АвтоПодбор", ИмяОбработчика);
				Элемент.КнопкаВыпадающегоСписка = КнопкаВыпадающегоСписка;
				Элемент.КнопкаОчистки = Истина;
				Элемент.РедактированиеТекста = РедактированиеТекста;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьПараметр(ЭлементИмя, Параметры) Экспорт
	
	СтрокаТЧ = Параметры.ШаблонПриема.СоответствияПараметрам.Найти(ЭлементИмя, "Наименование");
	Параметр = ?(ЗначениеЗаполнено(СтрокаТЧ), СтрокаТЧ.Параметр, Неопределено);
	
	Возврат Параметр;
	
КонецФункции

Функция ПолучитьПараметрТаблицыШаблона(ЭлементИмя, Параметры) Экспорт
	
	СтрокаТЧ = Параметры.ШаблонПриема.СоответствияТаблицамШаблонов.Найти(ЭлементИмя, "Представление");
	Параметр = ?(ЗначениеЗаполнено(СтрокаТЧ), СтрокаТЧ.Параметр, Неопределено);
	
	Возврат Параметр;
	
КонецФункции

Функция ПолучитьТаблицуОбработкиПараметра(ЭлементИмя, Параметры) Экспорт
	
	СтрокаТЧ = Параметры.ШаблонПриема.СоответствияТаблицамШаблонов.Найти(ЭлементИмя, "Представление");
	Таблица = ?(ЗначениеЗаполнено(СтрокаТЧ), СтрокаТЧ.ТаблицаОбработки, Неопределено);
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьРеквизитыФормы(Объект, ЭтаФорма) Экспорт
	
	РеквизитыФормы = Новый Структура;
	Для Каждого Стр Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		Если Стр.Имя = "Объект" Тогда
			Продолжить;
		КонецЕсли;
		РеквизитыФормы.Вставить(Стр.Имя, Объект[Стр.Имя]);
	КонецЦикла;
	
	Возврат РеквизитыФормы;
	
КонецФункции

Функция ПолучитьРеквизитыТаблицШаблоновФормы(Объект, ЭтаФорма) Экспорт
	
	ТаблицыПриемов = Новый Структура;
	
	Для Каждого Стр Из ЭтаФорма.ПолучитьРеквизиты() Цикл
		Если Стр.Имя = "ТаблицаПараметров" Или Стр.Имя = "Объект" Тогда
			Продолжить;
		КонецЕсли;
		Если Стр.ТипЗначения = Новый ОписаниеТипов("ТаблицаЗначений") Тогда
			ТЧ = Объект[Стр.Имя];
			ТЗ = ТЧ.Выгрузить();
			РеквизитыТаблицы = Новый Структура;
			Для Каждого Колонка Из ТЗ.Колонки Цикл
				РеквизитыТаблицы.Вставить(Колонка.Имя, Колонка.ТипЗначения.Типы()[0]);
			КонецЦикла;
			ТаблицыПриемов.Вставить(Стр.Имя, РеквизитыТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицыПриемов;
	
КонецФункции

Процедура СходитьНаСервер() Экспорт
	
КонецПроцедуры

Функция ПолучитьДеревоЗначенийВыбораПараметраФорма(Параметр) Экспорт
	
	Возврат ПланыВидовХарактеристик.ПараметрыHTML.ПолучитьДеревоЗначенийВыбораПараметра(Параметр);
	
КонецФункции

Процедура ЗаполнитьСоответствиеПараметрам(Объект, СоответствияПараметрам, ПараметрыШаблона) Экспорт
	
	Параметры = ПараметрыШаблона.ШаблонПриема.СоответствияПараметрам.Выгрузить();
	ПараметрыДТ = ПараметрыШаблона.ШаблонПриема.СоответствияТаблицамШаблонов.Выгрузить();
	
	СоответствияПараметрам.Загрузить(Параметры);
	
	Для Каждого СтрокаТЗ Из ПараметрыДТ Цикл
		Строка = СоответствияПараметрам.Добавить();
		ЗаполнитьЗначенияСвойств(Строка, СтрокаТЗ);
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Параметры", СоответствияПараметрам.Выгрузить(,"Параметр").ВыгрузитьКолонку("Параметр"));
	Запрос.Текст = "ВЫБРАТЬ
				|	ВыборПоСсылкеИзОграниченногоСписка КАК ВыборПоСсылкеИзОграниченногоСписка,
				|	Ссылка КАК Параметр
				|ИЗ
				|	ПланВидовХарактеристик.ПараметрыHTML КАК ПараметрыHTML
				|ГДЕ
				|	Ссылка В(&Параметры)";
	Выборка = Запрос.Выполнить().Выбрать();
	Отбор = Новый Структура("Параметр");
	
	Для Каждого СтрокаПараметр Из СоответствияПараметрам Цикл
		Отбор.Параметр = СтрокаПараметр.Параметр;
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Отбор) Тогда
			ЗаполнитьЗначенияСвойств(СтрокаПараметр, Выборка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьФорматнуюСтрокуПараметра(ПараметрШаблона) Экспорт
	Возврат ПараметрШаблона.ФорматнаяСтрока;
КонецФункции

// Возвращает табличную часть соответствия парамтеров шаблона обработки.
//
// Параметры:
//  ШаблонПриема	 - СправочникСсылка.ШаблоныHTML	 - Шаблон приема.
//  ВернутьМассив	 - Булево - Преобразовать таблицу результата в массив структур.
// 
// Возвращаемое значение:
//   ТаблицаЗначений, Массив.
//
Функция ПолучитьСоответствиеПараметровОбработки(ШаблонПриема, ПараметрыТаблицШаблонов = Ложь, ВернутьМассив = Ложь) Экспорт
	
	ИмяТабличнойЧасти = ?(ПараметрыТаблицШаблонов,"СоответствияТаблицамШаблонов","СоответствияПараметрам");
	
	ТаблицаСоответствий = ШаблонПриема[ИмяТабличнойЧасти];
	
	Если ВернутьМассив Тогда
		Возврат ОбщегоНазначения.ТаблицаЗначенийВМассив(ТаблицаСоответствий.Выгрузить());
	Иначе
		Возврат ТаблицаСоответствий;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьДанныеЗаполненияПоПредыдущемуПриему(ЭтаФорма) Экспорт
	
	СтруктураШапки = ЭтаФорма.Параметры.СтруктураШапки;
	ШаблонПриема = ЭтаФорма.Параметры.ШаблонПриема;
	
	СоответствиеРеквизитамЭлементов = Новый Соответствие;
	Элементы = ЭтаФорма.Элементы;
	Для Каждого Элемент Из Элементы Цикл
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Элемент, "ПутьКДанным") Тогда
			СоответствиеРеквизитамЭлементов.Вставить(Элемент.ПутьКДанным, Элемент.Имя);
		КонецЕсли;
	КонецЦикла;
	
	СписокЗаполнений = Новый Массив;
	СоответствиеПараметровРеквизитам = Новый Соответствие;
	ТаблицаПараметровШаблона = ОбщегоНазначенияКлиентСервер.ТаблицуЗначенийВМассивСтруктур(ШаблонПриема.СоответствияПараметрам.Выгрузить());
	Для Каждого Строка Из ТаблицаПараметровШаблона Цикл
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, Строка.Представление) Тогда
			СписокЗаполнений.Добавить(Строка.Параметр);
			СоответствиеПараметровРеквизитам.Вставить(Строка.Параметр, Строка.Представление);
		КонецЕсли;
	КонецЦикла;
	
	СписокЗаполненийТаблиц = Новый Массив;
	СоответствиеТаблиц = Новый Соответствие;
	СоответствиеПараметровТаблицРеквизитам = Новый Соответствие;
	
	ТаблицаПараметровТаблицШаблона = ОбщегоНазначенияКлиентСервер.ТаблицуЗначенийВМассивСтруктур(ШаблонПриема.СоответствияТаблицамШаблонов.Выгрузить());
	
	СтруктураКолонокТаблицОбработки = Новый Структура;
	
	мОбрИнд = ТаблицаПараметровТаблицШаблона.Количество()-1;
	Для Сч = 0 По мОбрИнд Цикл
		СтрокаТЗ = ТаблицаПараметровТаблицШаблона[мОбрИнд-Сч];
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(ЭтаФорма, СтрокаТЗ.ТаблицаОбработки) Тогда
			
			Если СтруктураКолонокТаблицОбработки.Свойство(СтрокаТЗ.ТаблицаОбработки) Тогда
				КолонкиТаблицОбработки = СтруктураКолонокТаблицОбработки[СтрокаТЗ.ТаблицаОбработки];
			Иначе
				СтруктураКолонокТаблицОбработки.Вставить(СтрокаТЗ.ТаблицаОбработки, ЭтаФорма[СтрокаТЗ.ТаблицаОбработки].Выгрузить().Колонки);
				КолонкиТаблицОбработки = СтруктураКолонокТаблицОбработки[СтрокаТЗ.ТаблицаОбработки];
			КонецЕсли;
			
			Если КолонкиТаблицОбработки.Найти(СтрокаТЗ.Представление) <> Неопределено Тогда
				СписокЗаполненийТаблиц.Добавить(СтрокаТЗ.Параметр);
				СоответствиеТаблиц.Вставить(СтрокаТЗ.ТаблицаШаблонов, СтрокаТЗ.ТаблицаОбработки);
				СоответствиеРеквизитовТаблиц = СоответствиеПараметровТаблицРеквизитам.Получить(СтрокаТЗ.ТаблицаОбработки);
				Если СоответствиеРеквизитовТаблиц = Неопределено Тогда
					СоответствиеРеквизитовТаблиц = Новый Соответствие;
				КонецЕсли;
				СоответствиеРеквизитовТаблиц.Вставить(СтрокаТЗ.Параметр, СтрокаТЗ.Представление);
				СоответствиеПараметровТаблицРеквизитам.Вставить(СтрокаТЗ.ТаблицаОбработки, СоответствиеРеквизитовТаблиц);
			Иначе
				ТаблицаПараметровТаблицШаблона.Удалить(мОбрИнд-Сч);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
	
	МедКарта = СтруктураШапки.МедицинскаяКарта;
	ДокументПриема = СтруктураШапки.Ссылка;
	
	ЗначенияПредыдущегоОсмотра = ОбщегоНазначенияКлиентСервер.ТаблицуЗначенийВМассивСтруктур(УправлениеОбработкамиШаблоновСервер.СформироватьЗначенияПредыдущегоОсмотра(МедКарта, ДокументПриема, СписокЗаполнений, Истина));
	
	МассивТаблиц = Новый Массив;
	Для Каждого Соответствие Из СоответствиеТаблиц Цикл
		МассивТаблиц.Добавить(Соответствие.Ключ);
	КонецЦикла;
	
	Если СписокЗаполненийТаблиц.Количество() > 0 Тогда
		ЗначенияТаблицПредыдущегоОсмотра = ОбщегоНазначенияКлиентСервер.ТаблицуЗначенийВМассивСтруктур(УправлениеОбработкамиШаблоновСервер.СформироватьЗначенияТаблицПредыдущегоОсмотра(МедКарта, ДокументПриема, СписокЗаполненийТаблиц, Истина, МассивТаблиц, ШаблонПриема));
		Для Каждого Строка Из ЗначенияТаблицПредыдущегоОсмотра Цикл
			Если СоответствиеТаблиц.Получить(Строка.ТаблицаШаблонов) <> Неопределено Тогда
				Строка.Вставить("ТаблицаОбработки", СоответствиеТаблиц.Получить(Строка.ТаблицаШаблонов));
				СоответствиеРеквизитовТаблиц = СоответствиеПараметровТаблицРеквизитам.Получить(Строка.ТаблицаОбработки);
				Строка.Вставить("Реквизит", СоответствиеРеквизитовТаблиц.Получить(Строка.Параметр));
			КонецЕсли;
		КонецЦикла;
	Иначе
		ЗначенияТаблицПредыдущегоОсмотра = Новый Массив;
		СоответствиеПараметровТаблицРеквизитам = Новый Соответствие;
	КонецЕсли;
	
	Возврат Новый Структура("СоответствиеРеквизитамЭлементов, СоответствиеПараметровРеквизитам, ЗначенияПредыдущегоОсмотра, СоответствиеПараметровТаблицРеквизитам, ЗначенияТаблицПредыдущегоОсмотра",
							СоответствиеРеквизитамЭлементов, СоответствиеПараметровРеквизитам, ЗначенияПредыдущегоОсмотра, СоответствиеПараметровТаблицРеквизитам, ЗначенияТаблицПредыдущегоОсмотра);
	
КонецФункции

Функция ПолучитьСтруктуруПараметровРеквизитовФормы()
	Возврат Новый Структура;
КонецФункции

#КонецОбласти
