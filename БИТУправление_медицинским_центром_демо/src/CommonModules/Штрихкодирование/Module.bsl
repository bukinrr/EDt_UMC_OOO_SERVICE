#Область ПрограммныйИнтерфейс

// Получить структуру параметров формирования картинки штрихкода.
//
// Параметры:
//  Ширина				 - Число - Ширина.
//  Высота				 - Число - Высота.
//  ТипКода				 - Число - код типа шрихкода из функции ПолучитьЗначениеТипаШтрихкодаДляЭУ.
//  ЗначениеШтрихкода	 - Строка - штрихкод.
// 
// Возвращаемое значение:
//   Структура.
//
Функция ПолучитьПараметрыШтрихкода(Ширина,Высота, ТипКода, ЗначениеШтрихкода) Экспорт 
	
	ПараметрыШтрихкода = Новый Структура;
	ПараметрыШтрихкода.Вставить("Ширина",         Ширина);
	ПараметрыШтрихкода.Вставить("Высота",         Высота);
	ПараметрыШтрихкода.Вставить("Штрихкод",       ЗначениеШтрихкода);
	ПараметрыШтрихкода.Вставить("ТипКода",         ТипКода);
	ПараметрыШтрихкода.Вставить("ОтображатьТекст", Истина);
	ПараметрыШтрихкода.Вставить("РазмерШрифта",    12);
	Возврат ПараметрыШтрихкода;
							
КонецФункции				

// Функция выполняет формирование изображения штрихкода.
//
// Параметры:
//  ВнешняяКомпонента	 - ВнешнийОбъект - компонента печати штрихкода.
//  ПараметрыШтрихкода	 - Структура	 - параметры формировния штрихкода.
//  ДвоичныеДанные		 - Булево		 - если Ложь, возвращается объект Картинка.
// 
// Возвращаемое значение:
//  Картинка, ДвоичныеДанные, Неопределено - Картинка со сформированным штрихкодом или НЕОПРЕДЕЛЕНО.
//
Функция ПолучитьКартинкуШтрихкода(ВнешняяКомпонента, ПараметрыШтрихкода, ДвоичныеДанные = Ложь) Экспорт
	
	// Зададим размер картинки.
	ВнешняяКомпонента.Ширина = Окр(ПараметрыШтрихкода.Ширина);
	ВнешняяКомпонента.Высота = Окр(ПараметрыШтрихкода.Высота);
	
	
	// Разрешим компоненте самой определять тип кода.
	ВнешняяКомпонента.АвтоТип = Ложь;
	ВнешняяКомпонента.ТипКода         = ПараметрыШтрихкода.ТипКода;
	ВнешняяКомпонента.ОтображатьТекст = ПараметрыШтрихкода.ОтображатьТекст;
	ВнешняяКомпонента.РазмерШрифта    = ПараметрыШтрихкода.РазмерШрифта;
	
	// Или установим код EAN-13
	// ВнешняяКомпонента.ТипКода = 1;
	//
	// Тип смотрим в документации на внешнуюю компоненту.
	
	// Если код содержит контрольный символ, обязательно указываем.
	ВнешняяКомпонента.СодержитКС = СтрДлина(ПараметрыШтрихкода.Штрихкод) = 13;
	
	// Если отображать контрольный символ не нужно.
	// ВнешняяКомпонента.ВидимостьКС = Ложь;.
	
	// Формируем картинку штрихкода.
	ВнешняяКомпонента.ЗначениеКода = ПараметрыШтрихкода.Штрихкод;
	
	// Если установленная нами ширина меньше минимально допустимой для этого штрихкода.
	Если ВнешняяКомпонента.Ширина < ВнешняяКомпонента.МинимальнаяШиринаКода Тогда
		// Скорректируем ширину.
		ВнешняяКомпонента.Ширина = ВнешняяКомпонента.МинимальнаяШиринаКода + 10;
	КонецЕсли;
	
	Если ПараметрыШтрихкода.Свойство("УголПоворота") Тогда
		ВнешняяКомпонента.УголПоворота = ПараметрыШтрихкода.УголПоворота;
	Иначе
		ВнешняяКомпонента.УголПоворота = 0;
	КонецЕсли;
	
	// Сформируем картинку.
	ДвоичныеДанныеКартинки = ВнешняяКомпонента.ПолучитьШтрихкод();
	
	// Если картинка сформировалась.
	Если ДвоичныеДанныеКартинки <> Неопределено Тогда
		// Формируем из двоичных данных.
		Если ДвоичныеДанные Тогда
			Возврат ДвоичныеДанныеКартинки;
		Иначе
			Возврат Новый Картинка(ДвоичныеДанныеКартинки);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Стандартное имя объекта штрихкода в области табличного макета.
// 
// Возвращаемое значение:
//   Строка.
//
Функция ПолучитьИмяПараметраШтрихкод() Экспорт
	
	Возврат "Штрихкод";
	
КонецФункции

Функция ПолучитьЗначениеТипаШтрихкодаДляЭУ(ТипКода) Экспорт 
	Перем Значение;
	
	Если ТипКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN8 Тогда
		Значение = 0;
	ИначеЕсли ТипКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN13 Тогда
		Значение = 1;
	ИначеЕсли ТипКода = ПланыВидовХарактеристик.ТипыШтрихкодов.EAN128 Тогда
		Значение = 2;
	ИначеЕсли ТипКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code39 Тогда
		Значение = 3;
	ИначеЕсли ТипКода = ПланыВидовХарактеристик.ТипыШтрихкодов.Code128 Тогда
		Значение = 4;
	Иначе
		Значение = -1;
	КонецЕсли;
	
	Возврат Значение;
КонецФункции // ПолучитьЗначениеТипаШтрихкодаДляЭУ()

// Получить значение штрихкода CODE128 для значения
//
// Параметры:
//  КодируемаяСтрока - Строка - кодируемая строка.
// 
// Возвращаемое значение:
//   Строка.
//
Функция ПолучитьЗначениеCODE128(КодируемаяСтрока) Экспорт
	
	Возврат БарКод(КодируемаяСтрока);				
	    
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ТипСимвол(КодСмв)
    Если КодСмв < 32 Тогда 
        Возврат 1;
    ИначеЕсли 48 <= КодСмв И КодСмв <= 57 Тогда 
        Возврат 3;
    Иначе 
        Возврат 2;
    КонецЕсли;    
КонецФункции

Функция БарКод(Вход, БазаМодеС = 6)
	
	Если Вход = "" Тогда 
		Возврат "";
	КонецЕсли;
	
	АскиБар =                                       
    "155515551449485845458494854548584944056416452065425461560506542164524212245605641254614650" +
    "11919191108980988109881889018890898001:0928120290:18212211829021281:0122209281:01218290:10" +
    "2305<0;0004=0<540=4<1<05<4105<0=441<4=0<14<50=4050<320=04830047407443074434470344704740113" +
    "13131100;0838030380;0308380023032203302";
	
	мсВых = Новый Массив;
    Дл = СтрДлина(СокрЛП(Вход));
    
    ТекСимвол = КодСимвола(Сред(Вход, 1, 1));
    ТипТекСимвол = ТипСимвол(ТекСимвол);
    Если Дл > 1 тогда
        СлСимвол  = КодСимвола(Сред(Вход, 2, 1));
        ТипСлСимвол = ТипСимвол(СлСимвол);
    Иначе
        ТипСлСимвол = 2;
    КонецЕсли;
    Моде = ТипТекСимвол;
	Если (ТипТекСимвол = 3) И (ТипСлСимвол = 3) Тогда 
		Моде = 3; 
	КонецЕсли;
    
    мсВых.Добавить(102 + Моде);
    Вых = Символ(64 + Моде);    

    Для Сч = 1 По Дл Цикл
        ТекСимвол = КодСимвола(Сред(Вход, Сч, 1));
        Если ТекСимвол > 127 тогда 
            Продолжить;
        КонецЕсли;    
        ТипТекСимвол = ТипСимвол(ТекСимвол);
        
        Если ТипТекСимвол <> Моде Тогда
            Если ТипТекСимвол < 3 Тогда
                Если Моде = 1 Тогда
                    мсВых.Добавить(100);
                Иначе    
                    мсВых.Добавить(101);
                КонецЕсли;
                Моде = ТипТекСимвол;
            Иначе
                ДлМ = ?(Дл < Сч + БазаМодеС - 1, Дл, Сч + БазаМодеС - 1);
                СчЦ = 0;
                Для СчМ = Сч По ДлМ Цикл
                    МодМ = ТипСимвол(КодСимвола(Сред(Вход, СчМ, 1)));
                    
                    Если МодМ = 3 Тогда 
                        СчЦ = СчЦ + 1;
                        Продолжить; 
                    Иначе
                        СчЦ = 0;
                        Прервать;
                    КонецЕсли;
                КонецЦикла;
                Если СчЦ - БазаМодеС = 0 Тогда
                    Моде = 3;
                    мсВых.Добавить(99);
                КонецЕсли;
            КонецЕсли;        
        КонецЕсли;        
        
        Если Моде = 3 Тогда
            СлСимвол = КодСимвола(Сред(Вход, Сч + 1, 1));
            ТипСлСимвол = ТипСимвол(СлСимвол);
            Если (Сч = Дл) Или (ТипТекСимвол <> 3)Или (ТипСлСимвол <> 3) тогда
                Моде = 2;
                мсВых.Добавить(100);   
            Иначе
                Если (ТипТекСимвол <> 3) Или (ТипСлСимвол <> 3) Тогда 
                    ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Ош." + Сч + " " + ТекСимвол+" " + СлСимвол);
                Иначе    
                    мсВых.Добавить(Число(Символ(ТекСимвол) + Символ(СлСимвол)));
                    Сч = Сч + 1;
                    Продолжить;
                КонецЕсли;
            КонецЕсли;    
        КонецЕсли;
        
        Если Моде = 1 Тогда
            мсВых.Добавить(ТекСимвол + 64);
        Иначе
            мсВых.Добавить(ТекСимвол - 32);
        КонецЕсли;    
	КонецЦикла;
	
    Сум = 0;
    Ном = 0;
    Для Каждого элВых Из мсВых Цикл
        Если Ном > 0 Тогда 
            Сум = (Сум + элВых * Ном) % 103;
            Вых = Вых + Сред(АскиБар,(элВых + 1) * 3 - 2, 3);
        Иначе    
            Сум = элВых % 103;
        КонецЕсли;
        Ном = Ном + 1;
    КонецЦикла;
    Возврат Вых + Сред(АскиБар, (Сум + 1) * 3 - 2, 3) + "@";
КонецФункции
#КонецОбласти						

	