
// Процедура - Заполнить этапы работ с отметками выполнения
//
// Параметры:
//  КомплексныйРасчет	 - ДокументСсылка.КомплексныйРасчет - Ссылка на документ расчета
//  ЭтапыРабот			 - ДанныеФормыКоллекция - Таблица, содержащая этапы работ
//  ТекущийДокумент		 - ДокументСсылка.ПередачаЗаказаВМастерскую, ДокументСсылка.ПриемЗаказаИзМастерской, 
//	ДокументСсылка.Прием - Текущий документ, для которого формируется таблица этапов 
//
Процедура ЗаполнитьЭтапыРаботСОтметкамиВыполнения(КомплексныйРасчет, ЭтапыРабот, ТекущийДокумент) Экспорт 
	
	ЭтапыСОтметками = УправлениеЗаказами.ПолучитьТаблицуЭтаповРаботСОтметкамиОВыполнении(КомплексныйРасчет);
	ЭтапыРабот.Очистить();
	Для Каждого СтрокаЭтап Из ЭтапыСОтметками Цикл
		НоваяСтрока = ЭтапыРабот.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаЭтап);
		Если ЗначениеЗаполнено(НоваяСтрока.Выполнен) И НоваяСтрока.ДокументРегистратор = ТекущийДокумент Тогда
			НоваяСтрока.ДокументРегистратор = Неопределено;
			НоваяСтрока.ВыполненВЭтомДокументе = Истина;
		КонецЕсли;
		НоваяСтрока.ВнешнийИсполнитель = (ТипЗнч(НоваяСтрока.ИсполнительПлан) = Тип("СправочникСсылка.Контрагенты"));
		ТипИсполнителя = Новый ОписаниеТипов(?(НоваяСтрока.ВнешнийИсполнитель, 
			"СправочникСсылка.Контрагенты", "СправочникСсылка.Сотрудники"));
		НоваяСтрока.ИсполнительФакт = ТипИсполнителя.ПривестиЗначение(НоваяСтрока.ИсполнительФакт);
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьВыполненныхЭтаповРаботИзТаблицы(ЭтапыРабот) Экспорт
	
	ВыполненныеЭтапы = Новый Массив;
	Для Каждого СтрокаЭтап Из 
		ЭтапыРабот.НайтиСтроки(Новый Структура("ОтметкаВыполнения, ВыполненВЭтомДокументе", Истина, Истина)) 
	Цикл
		ВыполненныеЭтапы.Добавить(
			Новый Структура("ИдентификаторЭтапа, Выполнен, ИсполнительФакт, Пользователь",
			СтрокаЭтап.ИдентификаторЭтапа, СтрокаЭтап.Выполнен, СтрокаЭтап.ИсполнительФакт, СтрокаЭтап.Пользователь));
	КонецЦикла;
	
	Возврат ВыполненныеЭтапы;
	
КонецФункции

Процедура ВыполнитьДвиженияПоВыработкеСотрудниковПоВыполненнымЭтапам(ДокументОбъект, Отказ) Экспорт 
	
	Если ДокументОбъект.Движения.Найти("ВыработкаСотрудников") = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ДокументОбъект.Движения.ВыработкаСотрудников.Записывать = Истина;
	НаборДвижений = ДокументОбъект.Движения.ВыработкаСотрудников;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВыполнениеЭтаповКомплексногоРасчета.ИсполнительФакт КАК Сотрудник,
	|	ВыполнениеЭтаповКомплексногоРасчета.ДокументРегистратор.Филиал КАК Филиал,
	|	ВыполнениеЭтаповКомплексногоРасчета.КомплексныйРасчет,
	|	ВыполнениеЭтаповКомплексногоРасчета.ИдентификаторЭтапа
	|ПОМЕСТИТЬ ВыполненныеЭтапыПоДокументу
	|ИЗ
	|	РегистрСведений.ВыполнениеЭтаповКомплексногоРасчета КАК ВыполнениеЭтаповКомплексногоРасчета
	|ГДЕ
	|	ВыполнениеЭтаповКомплексногоРасчета.ДокументРегистратор = &ДокументВыполнения
	|	И ВыполнениеЭтаповКомплексногоРасчета.ИсполнительФакт ССЫЛКА Справочник.Сотрудники
	|			И ВыполнениеЭтаповКомплексногоРасчета.ИсполнительФакт <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВыполненныеЭтапыПоДокументу.Сотрудник,
	|	ВыполненныеЭтапыПоДокументу.Филиал,
	|	КомплексныйРасчетКлиентаЭтапыРабот.Номенклатура,
	|	КомплексныйРасчетКлиентаЭтапыРабот.Номенклатура.ПродолжительностьЧас * 3600 + КомплексныйРасчетКлиентаЭтапыРабот.Номенклатура.ПродолжительностьМин * 60 КАК Продолжительность
	|ИЗ
	|	ВыполненныеЭтапыПоДокументу КАК ВыполненныеЭтапыПоДокументу
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КомплексныйРасчетКлиента.ЭтапыРабот КАК КомплексныйРасчетКлиентаЭтапыРабот
	|		ПО ВыполненныеЭтапыПоДокументу.КомплексныйРасчет = КомплексныйРасчетКлиентаЭтапыРабот.Ссылка
	|			И ВыполненныеЭтапыПоДокументу.ИдентификаторЭтапа = КомплексныйРасчетКлиентаЭтапыРабот.ИдентификаторЭтапа";
	Запрос.УстановитьПараметр("ДокументВыполнения", ДокументОбъект.Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = ДокументОбъект.Дата;
		Движение.Количество = 1;
		
	КонецЦикла;
	
КонецПроцедуры