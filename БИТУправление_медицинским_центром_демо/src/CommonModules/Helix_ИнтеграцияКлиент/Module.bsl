
#Область ПрограммныйИнтерфейс

// Получить правила забора указанного анализа для данной лаборатории.
//
// Параметры:
//  Номенклатура - СправочникСсылка.Номенклатура - номенклатура анализа, для которой получаем правила забора.
//  Лаборатория	 - СправочникСсылка.Лаборатории	 - лаборатория, для которой получаем правила забора.
// 
// Возвращаемое значение:
//   - Массив из Структура:
//  	* Биоматериал 					- Строка
//  	* ВыборНесколькихПравилЗабора 	- Булево
//  	* ИДБиоматериала 				- Строка
//  	* ИДКонтейнера 					- Строка
//  	* ИдПравила 					- УникальныйИдентификатор
//  	* Контейнер 					- Строка
//  	* Обязательное 					- Булево
//  	* Пометка 						- Булево
//  	* Представление 				- Неопределено.
//
Функция ПолучитьПравилаЗабораАнализа(Номенклатура, Лаборатория) Экспорт

	Перем ДанныеКешаНоменклатуры;
	
	ПравилаАнализа = Новый Массив;
	
	Если глКешНСИЛаборатории.Свойство("Helix") Тогда
	
		Для Каждого Анализ Из глКешНСИЛаборатории.Helix.НоменклатураАнализов Цикл 
			Если Анализ.Номенклатура = Номенклатура
				И Анализ.Лаборатория = Лаборатория
			Тогда 
				ДанныеКешаНоменклатуры = Анализ;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если ЗначениеЗаполнено(ДанныеКешаНоменклатуры) Тогда
				
			мHelix_MultipleRules = ДанныеКешаНоменклатуры.Helix_MultipleRules;
				
			ПравилаТекущегоАнализа = ПолучитьПравилаАнализаИзКешаПоАнализу(ДанныеКешаНоменклатуры.ИД, Лаборатория);
			
			Для Каждого ПравилоАнализа Из ПравилаТекущегоАнализа Цикл
				
				ДанныеПравила = Новый Структура("ИдПравила, Представление, Пометка, Обязательное, Биоматериал, Контейнер, ИДКонтейнера, ИДБиоматериала, ВыборНесколькихПравилЗабора");
				
				ЗаполнитьЗначенияСвойств(ДанныеПравила,ПравилоАнализа);
				ДанныеПравила.Пометка = ДанныеПравила.Обязательное;
				ДанныеПравила.ВыборНесколькихПравилЗабора = мHelix_MultipleRules;
				
				ПравилаАнализа.Добавить(ДанныеПравила);
			КонецЦикла;
							
			Если ПравилаАнализа.Количество() = 1 Тогда
				ПравилаАнализа.Получить(0).Пометка = Истина;
				ПравилаАнализа.Получить(0).Обязательное = Истина;
			ИначеЕсли ПравилаАнализа.Количество() > 1 Тогда
				НеобязательныеПравилаАнализа = Новый Массив;
				Для Индекс = 0 По ПравилаАнализа.Количество() - 1 Цикл 
					Если Не ПравилаАнализа[Индекс].Обязательное Тогда 
						НеобязательныеПравилаАнализа.Добавить(Индекс);	
					КонецЕсли;
				КонецЦикла;
				Если НеобязательныеПравилаАнализа.Количество() = 1 Тогда
					ИндексНеобязательногоПравила = НеобязательныеПравилаАнализа.Получить(0); 
					ПравилаАнализа.Получить(ИндексНеобязательногоПравила).Пометка = Истина;
					ПравилаАнализа.Получить(ИндексНеобязательногоПравила).Обязательное = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПравилаАнализа;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПравилаАнализаИзКешаПоАнализу(ИдАнализа, Лаборатория)
	
	мсПравилаАнализа = Новый Массив;
	
	Если глКешНСИЛаборатории.Helix.Helix_ПравилаАнализов <> Неопределено И глКешНСИЛаборатории.Helix.Helix_ПравилаАнализов.Количество() > 0 Тогда
		
		Для Каждого эл Из глКешНСИЛаборатории.Helix.Helix_ПравилаАнализов Цикл 
			Если эл.ИдАнализа = ИдАнализа
				И эл.Лаборатория = Лаборатория
			Тогда 
				мсПравилаАнализа.Добавить(эл);
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли; 
	
	Возврат мсПравилаАнализа;
	
КонецФункции

#КонецОбласти