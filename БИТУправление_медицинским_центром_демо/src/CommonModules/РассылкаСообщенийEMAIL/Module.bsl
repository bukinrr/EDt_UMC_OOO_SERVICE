#Область ПрограммныйИнтерфейс

Функция СоздатьДокументРассылка(ПараметрыСообщения) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НоваяРассылка = Документы.РассылкаПисемEmail.СоздатьДокумент();
	НоваяРассылка.СозданАвтоматически = Истина;
	НоваяРассылка.Дата = ТекущаяДата();                                                          
	НоваяРассылка.СозданАвтоматически	= Истина;
	НоваяРассылка.УчетнаяЗапись	= Справочники.УчетныеЗаписиЭлектроннойПочты.СистемнаяУчетнаяЗаписьЭлектроннойПочты;
	НоваяРассылка.Шаблон = ПараметрыСообщения.ВидСообщения.ШаблонEMAIL;
	
	НоваяРассылка.ДоставитьСообщениеВУказанноеВремя = ПараметрыСообщения.ДоставитьСообщениеВУказанноеВремя;
	НоваяРассылка.ДатаОтправки = ПараметрыСообщения.ДатаОтправки;
	
	НоваяРассылка.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат НоваяРассылка.Ссылка;
	
КонецФункции

Функция ОтправитьНеотправленныеСообщения(ДокументРассылки) Экспорт
		
	Если ДокументРассылки.Проведен Тогда
		
		НаборЗаписейСообщения = РегистрыСведений.СообщенияЭлектроннойПочты.СоздатьНаборЗаписей();
		НаборЗаписейСообщения.Отбор.Рассылка.Установить(ДокументРассылки.Ссылка);
		НаборЗаписейСообщения.Прочитать();
					
		ТаблицаСообщенийДокумента = НаборЗаписейСообщения.Выгрузить();
		
		ТаблицаСообщенийКОтправке = ТаблицаСообщенийДокумента.СкопироватьКолонки();
		ТаблицаСообщенийКОтправке.Колонки.Добавить("Отправлено", Новый ОписаниеТипов("Булево"));
		ТаблицаСообщенийКОтправке.Колонки.Добавить("ОжидаетПодтвержденияОтправки", Новый ОписаниеТипов("Булево"));
		Для Каждого СтрокаСообщения Из ТаблицаСообщенийДокумента Цикл
			
			Если СтрокаСообщения.СтатусОтправки = Перечисления.СтатусыОтправкиСообщений.НеОтправлено Тогда
				СтрокаСообщенияКОтправке = ТаблицаСообщенийКОтправке.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаСообщенияКОтправке, СтрокаСообщения);			
			КонецЕсли;
			
		КонецЦикла;
		
		// Проверка разрешения на отправку этим клиентам писем.
		ТаблицаСообщенийКОтправке.Колонки.Добавить("ОтправкаРазрешена");
		ТаблицаСообщенийКОтправке.ЗаполнитьЗначения(Истина, "ОтправкаРазрешена");
		
		ПутьКВременнымФайлам = ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
					ОбщегоНазначенияКлиентСервер.ПолучитьКаталогВременныхФайлов()) + "1cemailimg";
		
		// Отправка сообщений
		ТекстHTML = ПолучитьТекстHTMLСИзображениями(ДокументРассылки.Шаблон, ПутьКВременнымФайлам);
		РезультатОтправки = ОтправитьСообщенияEMAIL(ТаблицаСообщенийКОтправке, ТекстHTML);
		Если РезультатОтправки.ОтправленоСообщений <> РезультатОтправки.ОтправлялосьСообщений Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Отправлено сообщений " + РезультатОтправки.ОтправленоСообщений + " из " + РезультатОтправки.ОтправлялосьСообщений);
			Если РезультатОтправки.СообщениеОбОшибке.Количество() > 0 Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обнаружены следующие ошибки:");
				Для каждого ТекстОшибки Из РезультатОтправки.СообщениеОбОшибке Цикл
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		КаталогФайлов = Новый Файл(ПутьКВременнымФайлам);
		Если КаталогФайлов.Существует() Тогда 
			УдалитьФайлы(КаталогФайлов.ПолноеИмя);
		КонецЕсли;
		
		// Отметка отправленных сообщений как отправленных и запись набора записей
		Для Каждого СтрокаСообщенияКОтправке Из ТаблицаСообщенийКОтправке Цикл
			
			Если СтрокаСообщенияКОтправке.Отправлено Тогда                                         
				СтрокаСообщения = ТаблицаСообщенийДокумента.Найти(СтрокаСообщенияКОтправке.ВнутреннийИдентификаторСообщения);
				Если СтрокаСообщения <> Неопределено Тогда		
					НаборЗаписейСообщения[ТаблицаСообщенийДокумента.Индекс(СтрокаСообщения)].СтатусОтправки = Перечисления.СтатусыОтправкиСообщений.Отправлена;
					НаборЗаписейСообщения[ТаблицаСообщенийДокумента.Индекс(СтрокаСообщения)].КтоОтправил	= ПараметрыСеанса.ТекущийПользователь;
					НаборЗаписейСообщения[ТаблицаСообщенийДокумента.Индекс(СтрокаСообщения)].ДатаФактическойОтправки = ТекущаяДата();						                                                       
				КонецЕсли;
			КонецЕсли;
			
			Если НаборЗаписейСообщения.Модифицированность() Тогда
				НаборЗаписейСообщения.Записать();
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		РезультатОтправки = Новый Структура("ОтправленоСообщений, ОтправлялосьСообщений, СообщениеОбОшибке",0, 0, Новый Массив);	
		РезультатОтправки.СообщениеОбОшибке.Добавить("Документ рассылки " + ДокументРассылки + " не проведен!");	
	КонецЕсли;
	
	Возврат РезультатОтправки;
	
КонецФункции

Функция ОтправитьСообщенияEMAIL(ТаблицаСообщенийКОтправке, ТекстHTML = Неопределено)
	РезультатОтправки = Новый Структура("ОтправленоСообщений, ОтправлялосьСообщений, СообщениеОбОшибке",0, 0, Новый Массив);
	ТекущаяДата = ТекущаяДата();
	Для каждого Запись ИЗ ТаблицаСообщенийКОтправке Цикл
		Если Не Запись.ОтправкаРазрешена Тогда
			Продолжить;
		КонецЕсли;
		СодержаниеПисьма = Запись.Рассылка.Шаблон;
		УчетнаяЗапись = Запись.Рассылка.УчетнаяЗапись;
		
		Профиль = РаботаСПочтовымиСообщениямиСлужебный.ИнтернетПочтовыйПрофиль(УчетнаяЗапись);
		Почта = Новый ИнтернетПочта; 

		Кому = Запись.КонтактПолучателя;  
		Тема = СодержаниеПисьма.Тема; 
		Текст = ?(ТекстHTML = Неопределено, СодержаниеПисьма.ТекстHTML, ТекстHTML);
		
		// Вычисляемые параметры
		
		Текст = ВычислитьПараметрыEMAILСообщения(СодержаниеПисьма, Текст, Запись.Получатель, Запись.Источник);
		
		Письмо=Новый ИнтернетПочтовоеСообщение; 
		Письмо.Получатели.Добавить(Кому); 
		Письмо.ИмяОтправителя = УчетнаяЗапись.ИмяПользователя; 
		Письмо.Отправитель=УчетнаяЗапись.АдресЭлектроннойПочты; 
		Письмо.Кодировка="windows-1251"; 
		Письмо.Тема=Тема; 
		Письмо.Тексты.Добавить(Текст,ТипТекстаПочтовогоСообщения.HTML); 
		Письмо.ОбработатьТексты();
		
		Попытка
			Почта=Новый ИнтернетПочта; 
			Почта.Подключиться(Профиль); 
			Почта.Послать(Письмо); 
			Почта.Отключиться(); 
			РезультатОтправки.ОтправленоСообщений = РезультатОтправки.ОтправленоСообщений + 1;
			Запись.Отправлено = Истина;	
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			РезультатОтправки.СообщениеОбОшибке.Добавить("Не удалось подключиться к учетной записи email по указанным параметрам почты:");
			РезультатОтправки.СообщениеОбОшибке.Добавить(ОписаниеОшибки);
		КонецПопытки;
	КонецЦикла;
	РезультатОтправки.ОтправлялосьСообщений = ТаблицаСообщенийКОтправке.Количество();
	Возврат РезультатОтправки;
КонецФункции

Функция ВычислитьПараметрыEMAILСообщения(Знач ШаблонПисьма, Знач ТекстHTML = Неопределено, Знач Получатель, Знач Источник)
	
	Если ТекстHTML = Неопределено Тогда
		ТекстHTML = ШаблонПисьма.ТекстHTML;
	КонецЕсли;
	
	HTMLДокумент = РаботаСDOMКлиентСервер.СоздатьДокументDOM(ТекстHTML);
	Для Каждого СтрокаПараметр Из ШаблонПисьма.СоответствияПараметрам Цикл
		Идентификатор = Строка(СтрокаПараметр.Параметр.УникальныйИдентификатор());
		ТекстАлгоритма = СтрокаПараметр.Параметр.АлгоритмВычисления;
		
		Значение = Строка(ВычислитьЗначениеПараметра(ТекстАлгоритма, Получатель, Источник));
		ТекстВставки = РаботаСHTMLКлиентСервер.СформироватьТекстHTMLСПереносами(Значение);
		
		Элементы = РаботаСHTMLКлиентСервер.ПолучитьЭлементыПоЗначениюАтрибута(HTMLДокумент, Идентификатор, "a");
		Для Каждого Элемент Из Элементы Цикл	
			
			РаботаСHTMLКлиентСервер.ЗаменитьЭлементНаПроизвольныйHTML(Элемент, ТекстВставки);
			
		КонецЦикла;	
	КонецЦикла;
	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьHTML = Новый ЗаписьHTML;
	ЗаписьHTML.УстановитьСтроку();
	ЗаписьDOM.Записать(HTMLДокумент, ЗаписьHTML);
	
	Возврат ЗаписьHTML.Закрыть();
	
КонецФункции

Функция ВычислитьЗначениеПараметра(Знач ТекстАлгоритма, Знач Получатель, Знач Источник)
	
	Результат = "";
	Выполнить(ТекстАлгоритма);
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТекстHTMLСИзображениями(ШаблонПисьма, ПутьКВременномуКаталогу = Неопределено)
	
	Если ШаблонПисьма.СписокИзображений.Количество() = 0 Тогда
		Возврат ШаблонПисьма.ТекстHTML;
	КонецЕсли;
	
	ТекстHTML = ШаблонПисьма.ТекстHTML;
	
	ДокументDOM = РаботаСDOMКлиентСервер.СоздатьДокументDOM(ТекстHTML);
	
	Если ПутьКВременномуКаталогу = Неопределено Тогда 
		КаталогФайлов = Новый Файл(
			ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
				ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(
					ОбщегоНазначенияКлиентСервер.ПолучитьКаталогВременныхФайлов()) + "1cemailimg"));
	Иначе
		КаталогФайлов = Новый Файл(ОбщегоНазначенияКлиентСервер.ДобавитьКонечныйРазделительПути(ПутьКВременномуКаталогу));			
	КонецЕсли;
	
	Если Не КаталогФайлов.Существует() Тогда
		СоздатьКаталог(КаталогФайлов.ПолноеИмя);
	КонецЕсли;
	
	Для Каждого ЭлИзобр из ШаблонПисьма.СписокИзображений Цикл
		
		ЭлементDOM = ДокументDOM.ПолучитьЭлементПоИдентификатору(ЭлИзобр.Идентификатор);
		
		Если ЭлементDOM = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ПутьИзобр = КаталогФайлов.ПолноеИмя + ЭлИзобр.Идентификатор + ЭлИзобр.Расширение;
		Base64Значение(ЭлИзобр.ИзображениеBase64).Записать(ПутьИзобр);
		ЭлементDOM.src = ПутьИзобр;
		
	КонецЦикла;
	
	Возврат РаботаСDOMКлиентСервер.ПолучитьТекстHTMLДокументаDOM(ДокументDOM);
	
КонецФункции

Процедура ОтправитьНеОтправленныеПисьма() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СообщенияЭлектроннойПочты.Рассылка
	               |ИЗ
	               |	РегистрСведений.СообщенияЭлектроннойПочты КАК СообщенияЭлектроннойПочты
	               |ГДЕ
	               |	СообщенияЭлектроннойПочты.СтатусОтправки = &СтатусОтправки
	               |	И СообщенияЭлектроннойПочты.ДатаОтправки < &ДатаОтправки
	               |	И СообщенияЭлектроннойПочты.Рассылка.Проведен
	               |	И НЕ СообщенияЭлектроннойПочты.Рассылка.ПометкаУдаления
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СообщенияЭлектроннойПочты.Рассылка";
				   
	Запрос.УстановитьПараметр("СтатусОтправки", Перечисления.СтатусыОтправкиСообщений.НеОтправлено);
	Запрос.УстановитьПараметр("ДатаОтправки", ТекущаяДата());
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		РезультатОтправки = ОтправитьНеотправленныеСообщения(Выборка.Рассылка);
		
		Если не ПустаяСтрока(РезультатОтправки.СообщениеОбОшибке) Тогда
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(РезультатОтправки.СообщениеОбОшибке);
			
		КонецЕсли;
	
	КонецЦикла;		
	
КонецПроцедуры

#КонецОбласти