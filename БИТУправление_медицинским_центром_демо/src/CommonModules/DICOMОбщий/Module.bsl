#Область ПрограммныйИнтерфейс

// Прямая транслитерация переданного текста
//
// Параметры:
//  Слово	 - Строка - слово
// 
// Возвращаемое значение:
//  Строка - исправленное слово.
//
Функция ПрямаяТранслитерация(Слово) Экспорт
	
	МакетXML = ПолучитьОбщийМакет("Транслитерация").ПолучитьТекст();
	МакетТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетXML).Данные;
	МакетТаблица.Колонки.Добавить("ПорядокЛатКирЧисло", Новый ОписаниеТипов("Число"));
	МакетТаблица.Колонки.Добавить("ПорядокКирЛатЧисло", Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаМакета Из МакетТаблица Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаМакета.ПорядокКирЛат) Тогда
			СтрокаМакета.ПорядокКирЛат = "999";
		Конецесли;
		Если НЕ ЗначениеЗаполнено(СтрокаМакета.ПорядокЛатКир) Тогда
			СтрокаМакета.ПорядокЛатКир = "999";
		Конецесли;
		СтрокаМакета.ПорядокЛатКирЧисло = Число(СтрокаМакета.ПорядокЛатКир);
		СтрокаМакета.ПорядокКирЛатЧисло = Число(СтрокаМакета.ПорядокКирЛат);
	КонецЦикла;
	МакетТаблица.Сортировать("ПорядокКирЛатЧисло,Кириллица");
	КолСимволов = 0;
	НовоеСлово = "";
	Пока КолСимволов < СтрДлина(Слово) Цикл
		Символ = Сред(Слово,КолСимволов+1,1);
		Найдено = Ложь;
		Для Каждого СтрокаМакета Из МакетТаблица Цикл
			Если НРег(Символ) = Нрег(СтрокаМакета.Кириллица) Тогда
				// новый символ с переводом в нужный регистр
				НовыйСимвол = ?(Символ = НРег(СтрокаМакета.Кириллица), НРег(СтрокаМакета.Латиница),ВРег(СтрокаМакета.Латиница));
				Если ЗначениеЗаполнено(СтрокаМакета.СледующиеБуквы) И КолСимволов + 1 < СтрДлина(Слово) Тогда
					// Для буквы ц, например,важно какие следующие буквы и надо заглянуть вперед
					// вперед смотрим если буква не последняя
					СимволСлед = Сред(Слово,КолСимволов+2,1);
					МассивСледБукв = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(СтрокаМакета.СледующиеБуквы);
					Для каждого ЭлСледБуква Из МассивСледБукв Цикл
						Если НРег(ЭлСледБуква) = НРег(СимволСлед) Тогда
							НовоеСлово = НовоеСлово + НовыйСимвол;
							Найдено = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла; 
				Иначе
					НовоеСлово = НовоеСлово + НовыйСимвол;
					Найдено = Истина;
				КонецЕсли;
			КонецЕсли;
			Если Найдено = Истина Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Найдено = Ложь Тогда
			НовоеСлово = НовоеСлово + Символ;
		КонецЕсли;
		КолСимволов = КолСимволов + 1;
	КонецЦикла; 
	
	Возврат НовоеСлово;
	
КонецФункции

// Обратная транслитерация переданного текста.
//
// Параметры:
//  Слово	 - Строка - слово
// 
// Возвращаемое значение:
//  Строка - исправленное слово.
//
Функция ОбратнаяТранслитерация(Слово) Экспорт
	МакетXML = ПолучитьОбщийМакет("Транслитерация").ПолучитьТекст();
	МакетТаблица = ОбщегоНазначения.ПрочитатьXMLВТаблицу(МакетXML).Данные;
	МакетТаблица.Колонки.Добавить("ПорядокЛатКирЧисло", Новый ОписаниеТипов("Число"));
	МакетТаблица.Колонки.Добавить("ПорядокКирЛатЧисло", Новый ОписаниеТипов("Число"));
	
	Для Каждого СтрокаМакета Из МакетТаблица Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаМакета.ПорядокКирЛат) Тогда
			СтрокаМакета.ПорядокКирЛат = "999";
		Конецесли;
		Если НЕ ЗначениеЗаполнено(СтрокаМакета.ПорядокЛатКир) Тогда
			СтрокаМакета.ПорядокЛатКир = "999";
		Конецесли;
		СтрокаМакета.ПорядокЛатКирЧисло = Число(СтрокаМакета.ПорядокЛатКир);
		СтрокаМакета.ПорядокКирЛатЧисло = Число(СтрокаМакета.ПорядокКирЛат);
	КонецЦикла;
	МакетТаблица.Сортировать("ПорядокЛатКирЧисло,Кириллица");
	КолСимволов = 0;
	НовоеСлово = Слово;
	Для Каждого СтрокаМакета Из МакетТаблица Цикл
		НовоеСлово = СтрЗаменить(НовоеСлово,НРег(СтрокаМакета.Латиница),НРег(СтрокаМакета.Кириллица));
		НовоеСлово = СтрЗаменить(НовоеСлово,ВРег(СтрокаМакета.Латиница),ВРег(СтрокаМакета.Кириллица));
	КонецЦикла;
	
	Возврат НовоеСлово;
	
КонецФункции

#КонецОбласти
