#Область ПрограммныйИнтерфейс

#Область ФР_НСИ

Процедура ОткрытьФормуОбновленияСправочника(НаименованиеСправочника, ЭлементСписок, Форма, ОповещениеОЗавершении = Неопределено) Экспорт
	
	РезультатПроверки = ИнтеграцияЕГИСЗВызовСервера.ПроверитьНеобходимостьАвтоОбновления(НаименованиеСправочника);
	Если РезультатПроверки.Режим = ПредопределенноеЗначение("Перечисление.РежимыАвтоОбновленияСправочниковЕГИСЗ.Полное") Тогда
		Если РезультатПроверки.ВерсияУстарела Тогда
			
			// Формируем шаблон вида НСтр("ru='Доступна новая версия справочника: %1 Текущая: %2. Обновить?'")
			ШаблонВопроса = НСтр("ru='%1 %2. Обновить?'");
			Если ЗначениеЗаполнено(РезультатПроверки.ТекущаяВерсия) Тогда
				ТекстТекущая = СтрШаблон(НСтр("ru='Текущая версия: %1'"), РезультатПроверки.ТекущаяВерсия);
			Иначе
				ТекстТекущая = "";
			КонецЕсли;
			ШаблонВопроса = СтрШаблон(ШаблонВопроса, НСтр("ru='Доступна новая версия справочника: %1'"), ТекстТекущая);
			
			ТекстСообщения = СтрШаблон(ШаблонВопроса, РезультатПроверки.ПоследняяВерсия);
			Ответ = Вопрос(ТекстСообщения,РежимДиалогаВопрос.ДаНет,,КодВозвратаДиалога.Нет);
			Если Ответ = КодВозвратаДиалога.Да Тогда
				// Загружаем все отличающиеся элементы из последней версии справочника без отображения пользователю формы ЗагрузкаНСИЕГИСЗ
				СтруктураПараметры = Новый Структура("НаименованиеСправочника, НеОтображатьФорму, ПоследнююВерсию", НаименованиеСправочника, Истина, Истина);
				ОткрытьФорму("ОбщаяФорма.ЗагрузкаНСИЕГИСЗ", СтруктураПараметры, ЭлементСписок, Форма,,,ОповещениеОЗавершении);
				
				ОбщегоНазначения.СообщитьПользователю(НСтр("ru='Справочник был обновлен!'"));
				Если ОповещениеОЗавершении <> Неопределено Тогда
					ВыполнитьОбработкуОповещения(ОповещениеОЗавершении, Истина);
				КонецЕсли;
			КонецЕсли;
		Иначе
			ПоказатьПредупреждение(,НСтр("ru='Загружена последняя версия справочника!'"));
		КонецЕсли;
	Иначе
		СтруктураПараметры = Новый Структура("НаименованиеСправочника", НаименованиеСправочника);
		ОткрытьФорму("ОбщаяФорма.ЗагрузкаНСИЕГИСЗ", СтруктураПараметры, ЭлементСписок, Форма,,,ОповещениеОЗавершении);
	КонецЕсли;
	
КонецПроцедуры

Процедура КомандаСпискаЗагрузитьКлассификаторФРНСИ(Форма, ЭлементСписок, Список, ОповещениеОЗавершении = Неопределено, ИмяСправочника = Неопределено) Экспорт
	
	Если ИмяСправочника = Неопределено Тогда
		// Получение имени справочника конфигурации из имени формы списка.
		ЧастиИмени = СтрРазделить(Форма.ИмяФормы, ".");
		Если ЧастиИмени.Количество() >= 3 Тогда // Например, Справочник.ЛабораторныеТесты.Формы.ФормаСписка.
			Если ДопСерверныеФункцииПовтИсп.ЕстьОбъектМетаданных("Справочник." + ЧастиИмени[1]) Тогда
				ИмяСправочника = ЧастиИмени[1];
			КонецЕсли;
		КонецЕсли;
		
		Если ИмяСправочника = Неопределено Тогда
			ПоказатьПредупреждение(, НСтр("ru='Имя справочника не указано'"));
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("Форма",	 Форма);
	ПараметрыОперации.Вставить("Список", Список);
	ПараметрыОперации.Вставить("ЭлементСписок", ЭлементСписок);
	ПараметрыОперации.Вставить("ОповещениеОЗавершении", ОповещениеОЗавершении);
	
	ОповещениеОЗавершенииОбщее = Новый ОписаниеОповещения("КомандаСпискаЗагрузитьКлассификаторФРНСИ_Завершение", ИнтеграцияЕГИСЗКлиент, ПараметрыОперации);
	
	ОткрытьФормуОбновленияСправочника(ИмяСправочника, ЭлементСписок, Форма, ОповещениеОЗавершенииОбщее);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ФР_НСИ

Процедура КомандаСпискаЗагрузитьКлассификаторФРНСИ_Завершение(Результат, ПараметрыОперации) Экспорт
	
	Если Результат <> Истина Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОперации.ЭлементСписок.Обновить();
	
	Элементы = ПараметрыОперации.Форма.Элементы; // Элементы формы.
	Если Элементы.Найти("СписокСкрытьПоказатьАрхивные") <> Неопределено Тогда
		РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Элементы.СписокСкрытьПоказатьАрхивные, ПараметрыОперации.Список, Элементы.СписокСкрытьПоказатьАрхивные.Пометка);
	Иначе
		Попытка
			РаботаСДиалогамиКлиент.СкрытьПоказатьАрхивные(Новый Структура("Пометка"), ПараметрыОперации.Список, Ложь);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если ПараметрыОперации.ОповещениеОЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ПараметрыОперации.ОповещениеОЗавершении);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти


