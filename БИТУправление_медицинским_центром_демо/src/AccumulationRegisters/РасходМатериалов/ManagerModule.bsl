#Область ПрограммныйИнтерфейс

// Выполняет приходные документа движения по регистру накопления "РасходМатериалов".
//
// Параметры:
//  ДокументОбъект			 - ДокументОбъект	 - объект документа, по которому выполняются движения
//  ТаблицаПоМатериалам		 - ТаблицаЗначений	 - таблица с данными о расходе материалов
//  ТаблицаПоРаботам		 - ТаблицаЗначений	 - таблица с данными по услугам для формирования движений
//  СтруктураШапкиДокумента	 - Структура		 - структура шапки документа, откуда вызвана процедура
//  Отказ					 - Булево			 - признак отмены проведения документа.
//
Процедура ВыполнитьДвиженияПоРегистру(ДокументОбъект, ТаблицаПоМатериалам, ТаблицаПоРаботам, СтруктураШапкиДокумента, Отказ) Экспорт
	
	ТаблицаСписокРабот = ТаблицаПоРаботам.Скопировать(,"Сотрудник, Номенклатура,ХарактеристикаНоменклатуры,Количество");
	ТаблицаСписокРабот.Свернуть("Сотрудник, Номенклатура,ХарактеристикаНоменклатуры,Количество",);
	
	НужныеКолонки = "Сотрудник,Номенклатура,ХарактеристикаНоменклатуры, Склад, КлючСтрокиРаботы,Количество";
	Если ТаблицаПоМатериалам.Колонки.Найти("ОплачиваетсяКлиентом") <> Неопределено Тогда
		НужныеКолонки = НужныеКолонки + ", ОплачиваетсяКлиентом"
	КонецЕсли;
	ТаблицаРасхода = ТаблицаПоМатериалам.Скопировать(,НужныеКолонки);
	ТаблицаРасхода.Колонки.Номенклатура.Имя					= "Материал";
	ТаблицаРасхода.Колонки.ХарактеристикаНоменклатуры.Имя	= "ХарактеристикаМатериала";
	ТаблицаРасхода.Колонки.Добавить("Номенклатура");
	ТаблицаРасхода.Колонки.Добавить("ХарактеристикаНоменклатуры");        
	ТаблицаРасхода.Колонки.Добавить("Норма");
	ТаблицаРасхода.ЗаполнитьЗначения(0,"Норма");	
	// Заполнение фактического расхода
	Для Каждого СтрокаРасхода из ТаблицаРасхода Цикл
		
		СтрокаРабот = ТаблицаПоРаботам.Найти(СтрокаРасхода.КлючСтрокиРаботы, "КлючСтроки");
		Если СтрокаРабот<>Неопределено Тогда
			СтрокаРасхода.Номенклатура = СтрокаРабот.Номенклатура;
			СтрокаРасхода.ХарактеристикаНоменклатуры = СтрокаРабот.ХарактеристикаНоменклатуры;
		КонецЕсли;
		
	КонецЦикла;
	
	// Заполнение нормативного расхода
	
	// Дополняем пустыми характеристиками
	ТаблицаСписокРабот.Колонки.Добавить("ХарактеристикаДляСоединения", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Для Каждого СтрокаРабот Из ТаблицаСписокРабот Цикл
		СтрокаРабот.ХарактеристикаДляСоединения = СтрокаРабот.ХарактеристикаНоменклатуры;
	КонецЦикла;
	
	КоличествоРабот = ТаблицаСписокРабот.Количество();
	Для сч = 0 по КоличествоРабот-1 Цикл
		Если не ТаблицаСписокРабот[сч].ХарактеристикаНоменклатуры.Пустая() Тогда
			СтрокаРабот = ТаблицаСписокРабот.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРабот,ТаблицаСписокРабот[сч]);
			СтрокаРабот.ХарактеристикаДляСоединения	= Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
		КонецЕсли;
	КонецЦикла;
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ Сотрудник, Номенклатура, ХарактеристикаНоменклатуры,ХарактеристикаДляСоединения,Количество ПОМЕСТИТЬ Работы ИЗ &Работы КАК Таблица";
	Запрос.УстановитьПараметр("Работы",ТаблицаСписокРабот);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Работы.Сотрудник,
	|	Работы.Номенклатура,
	|	Работы.ХарактеристикаНоменклатуры,
	|	НормыРасходаМатериалов.Материал,
	|	НормыРасходаМатериалов.ХарактеристикаМатериала,
	|	СУММА(НормыРасходаМатериалов.Норма * Работы.Количество * НормыРасходаМатериалов.ЕдиницаИзмерения.Коэффициент / НормыРасходаМатериалов.Материал.ЕдиницаХраненияОстатков.Коэффициент) КАК Норма
	|ИЗ
	|	Работы КАК Работы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НормыРасходаМатериалов КАК НормыРасходаМатериалов
	|		ПО Работы.Номенклатура = НормыРасходаМатериалов.Номенклатура
	|			И Работы.ХарактеристикаДляСоединения = НормыРасходаМатериалов.ХарактеристикаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	Работы.ХарактеристикаНоменклатуры,
	|	НормыРасходаМатериалов.Материал,
	|	Работы.Сотрудник,
	|	Работы.Номенклатура,
	|	НормыРасходаМатериалов.ХарактеристикаМатериала"	
	;
	
	ВыбНормы = Запрос.Выполнить().Выбрать();
	Отбор = Новый Структура("Сотрудник,Материал,ХарактеристикаМатериала,Номенклатура,ХарактеристикаНоменклатуры");
	Пока ВыбНормы.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(Отбор, ВыбНормы);
		мсСтрокиРасхода = ТаблицаРасхода.НайтиСтроки( Отбор );
		Если мсСтрокиРасхода.Количество()<>0 и ЗначениеЗаполнено(ВыбНормы.Норма) Тогда
			Для Каждого ЭлементСтрокаРасхода Из мсСтрокиРасхода Цикл 
				ЭлементСтрокаРасхода.Норма = ЭлементСтрокаРасхода.Норма + ВыбНормы.Норма;  	
			КонецЦикла;
		Иначе 
			СтрокаРасхода = ТаблицаРасхода.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРасхода, ВыбНормы);
		КонецЕсли;
		
	КонецЦикла;
	
	НужныеКолонки = "Материал,ХарактеристикаМатериала,Сотрудник, Номенклатура,ХарактеристикаНоменклатуры, Склад";
	Если ТаблицаРасхода.Колонки.Найти("ОплачиваетсяКлиентом") <> Неопределено Тогда
		НужныеКолонки = НужныеКолонки + ", ОплачиваетсяКлиентом"
	КонецЕсли;
	ТаблицаРасхода.Свернуть(НужныеКолонки,"Количество, Норма");
	ТаблицаРасхода.Колонки.Количество.Имя 	= "РасходФактический";
	ТаблицаРасхода.Колонки.Норма.Имя		= "РасходНормативный";
	НаборДвижений = ДокументОбъект.Движения.РасходМатериалов;
	// Получим таблицу значений, совпадающую со струкутрой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	// Заполним таблицу движений.
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаРасхода, ТаблицаДвижений);
	НаборДвижений.Очистить();
	НаборДвижений.мПериод            = СтруктураШапкиДокумента.Дата;    
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;                 

	Если Не Отказ Тогда
		НаборДвижений.ВыполнитьДвижения();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти