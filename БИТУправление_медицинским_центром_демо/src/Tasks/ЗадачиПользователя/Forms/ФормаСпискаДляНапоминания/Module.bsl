
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭлементыОтбора = Список.КомпоновщикНастроек.Настройки.Отбор.Элементы;
	
	Для Каждого ЭлементОтбора Из ЭлементыОтбора Цикл		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("СрокОповещения") Тогда
			ЭлементОтбора.ПравоеЗначение = ТекущаяДата();
		КонецЕсли; 	
	КонецЦикла;
	
	ГруппаИЛИ = ЭлементыОтбора.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаИЛИ.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ПолеИсполнитель = ГруппаИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ПолеИсполнитель.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ПолеИсполнитель.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
	ПолеИсполнитель.ПравоеЗначение = ОбщегоНазначения.ТекущийПользователь();
	
	ПолеИсполнительПустаяСсылка = ГруппаИЛИ.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ПолеИсполнительПустаяСсылка.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ПолеИсполнительПустаяСсылка.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Исполнитель");
	ПолеИсполнительПустаяСсылка.ПравоеЗначение = Справочники.Пользователи.ПустаяСсылка();
	
	СписокОтложенногоВремени = УправлениеКонтактами.ПолучитьСписокИнтерваловНапоминания();

	Для Каждого Стр Из СписокОтложенногоВремени Цикл
		Элементы.ЗначениеОтложенногоВремени.СписокВыбора.Вставить(
			Элементы.ЗначениеОтложенногоВремени.СписокВыбора.Количество(), Стр.Значение, Стр.Представление);
	КонецЦикла;
	
	СохраненноеЗначениеОтложенногоВремени = ХранилищеПользовательскихНастроекОтчетов.Загрузить("ФормаСпискаДляНапоминания", "ЗначениеОтложенногоВремени"); 
	
	Если ЗначениеЗаполнено(СохраненноеЗначениеОтложенногоВремени) Тогда
		ЗначениеОтложенногоВремени = СохраненноеЗначениеОтложенногоВремени;
	Иначе
		ЗначениеОтложенногоВремени = 300;
	КонецЕсли;
	
	ЧастотаПроверкиНаличияОповещений = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ОбщегоНазначения.ТекущийПользователь(), "ЧастотаПроверкиНаличияОповещений");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьОтображениеПоказыватьОповещения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОткрытьЗадачи(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Для Каждого Стр Из ВыделенныеСтроки Цикл
		ОткрытьЗначение(Стр);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПрекратитьОповещение(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		ПрекратитьОповещениеНаСервере(ВыделенныеСтроки);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтложитьЗадачи(Команда)
	
	ВыделенныеСтроки = Элементы.Список.ВыделенныеСтроки;
	
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		ОтложитьЗадачиНаСервере(ВыделенныеСтроки, ЗначениеОтложенногоВремени);
	КонецЕсли;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьОповещения(Команда)
	
	ТекПользователь = ОбщегоНазначения.ТекущийПользователь();
	ТекЗначениеНастройки = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ВыводитьОповещения");
	УправлениеПользователями.УстановитьЗначение(ТекПользователь, "ВыводитьОповещения", Не ТекЗначениеНастройки);
	
	ОбновитьОтображениеПоказыватьОповещения();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗначениеОтложенногоВремениПриИзменении(Элемент)
	СохранитьЗначениеОтложенногоВремениВХранилищеНастроек(ЗначениеОтложенногоВремени);
КонецПроцедуры

&НаКлиенте
Процедура ЧастотаПроверкиНаличияОповещенийПриИзменении(Элемент)
	УправлениеПользователями.УстановитьЗначение(ОбщегоНазначения.ТекущийПользователь(), "ЧастотаПроверкиНаличияОповещений", ЧастотаПроверкиНаличияОповещений);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПрекратитьОповещениеНаСервере(МассивЗадач)
	
	Для Каждого Задача Из МассивЗадач Цикл
		ЗадачаОбъект = Задача.ПолучитьОбъект();
		ЗадачаОбъект.Оповещение = Ложь;
		ЗадачаОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОтложитьЗадачиНаСервере(МассивЗадач, ЗначениеОтложенногоВремени)
	
	Для Каждого Задача Из МассивЗадач Цикл
		ЗадачаОбъект = Задача.ПолучитьОбъект();
		ЗадачаОбъект.СрокОповещения = НачалоМинуты(ТекущаяДата() + ЗначениеОтложенногоВремени);
		ЗадачаОбъект.Записать();
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СохранитьЗначениеОтложенногоВремениВХранилищеНастроек(ЗначениеОтложенногоВремени)
	ХранилищеПользовательскихНастроекОтчетов.Сохранить("ФормаСпискаДляНапоминания", "ЗначениеОтложенногоВремени", ЗначениеОтложенногоВремени);	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтображениеПоказыватьОповещения()
	
	ТекПользователь = ОбщегоНазначения.ТекущийПользователь();
	
	Если УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ТекПользователь, "ВыводитьОповещения") Тогда
		Элементы.ПоказыватьОповещения.Картинка = БиблиотекаКартинок.ОповещениеВкл16х16;
	Иначе
		Элементы.ПоказыватьОповещения.Картинка = БиблиотекаКартинок.ОповещениеВыкл16х16;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти