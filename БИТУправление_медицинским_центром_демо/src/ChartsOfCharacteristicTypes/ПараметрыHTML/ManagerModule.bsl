#Область ПрограммныйИнтерфейс

// Первоначальное заполнение форматных строк старых параметров при обновлении..
//
Процедура ЗаполнитьФорматныеСтрокиПоУмолчанию() Экспорт 
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПараметрыHTML.Ссылка КАК Параметр,
	|	ПредставлениеПараметраПриПечати.ЗначениеПараметра,
	|	ПредставлениеПараметраПриПечати.Представление,
	|	НЕ ПредставлениеПараметраПриПечати.ЗначениеПараметра ЕСТЬ NULL КАК ЕстьПредставление
	|ИЗ
	|	ПланВидовХарактеристик.ПараметрыHTML КАК ПараметрыHTML
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПредставлениеПараметраПриПечати КАК ПредставлениеПараметраПриПечати
	|		ПО (ПредставлениеПараметраПриПечати.Параметр = ПараметрыHTML.Ссылка)
	|ГДЕ
	|	НЕ ПараметрыHTML.ЭтоГруппа
	|	И ПараметрыHTML.ФорматнаяСтрока = """"
	|ИТОГИ
	|	МАКСИМУМ(ЕстьПредставление)
	|ПО
	|	Параметр";
	ВыборкаПараметры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтандартныеПредставленияБулево = Новый Соответствие;
	СтандартныеПредставленияБулево.Вставить(Справочники.ЗначенияФорматаБулевого.Включено, Символ(10003));
	СтандартныеПредставленияБулево.Вставить(Справочники.ЗначенияФорматаБулевого.Выключено, Символ(9723));
	СтандартныеПредставленияБулево.Вставить(Справочники.ЗначенияФорматаБулевого.Ничего, "");
	
	Пока ВыборкаПараметры.Следующий() Цикл
		
		Если ВыборкаПараметры.Параметр.ТипЗначения.СодержитТип(Тип("Дата")) Тогда
			ПараметрОбъект = ВыборкаПараметры.Параметр.ПолучитьОбъект();
			ПараметрОбъект.ФорматнаяСтрока = РаботаСШаблонамиHTMLКлиентСервер.ПолучитьФорматнуюСтрокуПоТипу(ПараметрОбъект.ТипЗначения);
			ПараметрОбъект.Записать();
		ИначеЕсли ВыборкаПараметры.Параметр.ТипЗначения.СодержитТип(Тип("Булево")) И ВыборкаПараметры.ЕстьПредставление Тогда 
			ПараметрОбъект = ВыборкаПараметры.Параметр.ПолучитьОбъект();
			ФорматнаяСтрока = "";
			Выборка = ВыборкаПараметры.Выбрать();
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.Представление) Тогда
					Представление = СтандартныеПредставленияБулево.Получить(Выборка.Представление);
					Если Представление = Неопределено Тогда 
						Представление = Строка(Выборка.Представление);
					КонецЕсли;
					ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ФорматнаяСтрока, 
						?(Выборка.ЗначениеПараметра = Истина, "БИ='", "БЛ='") + Представление + "'", "; ");	
				КонецЕсли;
			КонецЦикла;
			ПараметрОбъект.ФорматнаяСтрока = ФорматнаяСтрока;
			ПараметрОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

// Формирует варианты выбора значения параметра для построения интерактивного меню выбора.
//
// Параметры:
//  ПараметрШаблона	 - ПланВидовХарактеристикСсылка.ПараметрыHTML	 - параметр.
// 
// Возвращаемое значение:
//  СписокЗначений.
//
Функция ПолучитьДеревоЗначенийВыбораПараметра(ПараметрШаблона) Экспорт
		
	Результат = Новый СписокЗначений;
	
	ТаблицаДерева = ПараметрШаблона.ЗначенияВыбора.Выгрузить();
	
	Если ПараметрШаблона.ДополнятьГотовымиФразамиВыборИзОграниченногоСписка Тогда
		ДобавитьГотовыеФразыВДерево(ПараметрШаблона, ТаблицаДерева);	
	КонецЕсли;
	
	Если ТаблицаДерева.Количество() <> 0 Тогда
		
		ЗаполнитьУровеньДереваЗначенийВыбора(Результат, 0, ТаблицаДерева);
		
	КонецЕсли;
	
	ДобавитьСпецВариантыВДерево(Результат, ПараметрШаблона);	

	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьУровеньДереваЗначенийВыбора(УровеньДерева, КлючРодителя, ТаблицаДерева)
	
	ПодчиненныеСтроки = ТаблицаДерева.НайтиСтроки(Новый Структура("КлючРодителя", КлючРодителя));
	
	Для Каждого СтрокаВыбора Из ПодчиненныеСтроки Цикл
		
		Если СтрокаВыбора.ЭтоГруппа Тогда
			НижнийУровень = Новый СписокЗначений;
			
			НовыйЭлемент = УровеньДерева.Добавить(НижнийУровень, СтрокаВыбора.Представление,, БиблиотекаКартинок.Группа);
			ЗаполнитьУровеньДереваЗначенийВыбора(НижнийУровень, СтрокаВыбора.КлючСтроки, ТаблицаДерева);
			Если НижнийУровень.Количество() = 0 Тогда
				УровеньДерева.Удалить(НовыйЭлемент);
			КонецЕсли;
		Иначе
			УровеньДерева.Добавить(СтрокаВыбора.Значение, СтрокаВыбора.Представление);
		КонецЕсли;
	КонецЦикла; 
		
КонецПроцедуры
 
Процедура ДобавитьСпецВариантыВДерево(Дерево, ПараметрШаблона)
	
	СпецВарианты = ПолучитьСпецВариантыВыбора(ПараметрШаблона);
	Для Каждого Вариант Из СпецВарианты Цикл
		Дерево.Добавить(Вариант.Значение, Вариант.Представление,,Вариант.Картинка);
	КонецЦикла; 
	
КонецПроцедуры
 
Функция ПолучитьСпецВариантыВыбора(ПараметрШаблона)
	
	СпецВарианты = Новый Массив;
	
	Если ПараметрШаблона.РазрешитьВводВручнуюПриВыбореИзОграниченногоСписка Тогда
		НовыйВариант = Новый Структура();
		НовыйВариант.Вставить("Значение", ПараметрШаблона.ТипЗначения);
		НовыйВариант.Вставить("Представление", НСтр("ru='Ввести значение...'"));
		НовыйВариант.Вставить("Картинка", БиблиотекаКартинок.Изменить);
		СпецВарианты.Добавить(НовыйВариант);
	КонецЕсли;
	
	НовыйВариант = Новый Структура();
	НовыйВариант.Вставить("Значение", ПараметрШаблона.ТипЗначения.ПривестиЗначение(Неопределено));
	НовыйВариант.Вставить("Представление", НСтр("ru='Очистить значение'"));
	НовыйВариант.Вставить("Картинка", БиблиотекаКартинок.Очистить);
	СпецВарианты.Добавить(НовыйВариант);	
	
	Возврат  СпецВарианты;
	
КонецФункции

Процедура ДобавитьГотовыеФразыВДерево(ПараметрШаблона, ТаблицаДерева)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СправочникСоставныеФразы.Ссылка КАК Ссылка,
	               |	СправочникСоставныеФразы.Текст КАК Текст,
	               |	СправочникСоставныеФразы.Наименование КАК Наименование
	               |ИЗ
	               |	Справочник.СоставныеФразы КАК СправочникСоставныеФразы
	               |ГДЕ
	               |	СправочникСоставныеФразы.Параметр = &ПараметрШаблона
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Наименование
	               |ИТОГИ ПО
	               |	ССЫЛКА ИЕРАРХИЯ
	               |АВТОУПОРЯДОЧИВАНИЕ";
	
	Запрос.УстановитьПараметр("ПараметрШаблона", ПараметрШаблона.Ссылка);
	ДеревоФраз = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	ТипЧисло = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0));
	ДеревоФраз.Колонки.Добавить("КлючСтроки",	 ТипЧисло);
	ДеревоФраз.Колонки.Добавить("КлючРодителя",	 ТипЧисло);
	
	ЗаполнитьКлючУровняДереваЗначенийВыбора(ДеревоФраз.Строки, 0, "", "", 1000000, ТаблицаДерева);
	
КонецПроцедуры

Процедура ЗаполнитьКлючУровняДереваЗначенийВыбора(УровеньДерева, КлючРодителя, Знач НаименованиеИерархии, Знач ТекстИерархии, Счетчик, ТаблицаДерева)
	
	Для Каждого СтрокаУровня Из УровеньДерева Цикл
		
		СтрокаКУдалению = СтрокаУровня.Строки.Найти(СтрокаУровня.Ссылка, "Ссылка");
		Если СтрокаКУдалению <> Неопределено Тогда
			СтрокаУровня.Строки.Удалить(СтрокаКУдалению);
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
		ТекстСтроки = ТекстИерархии;
		НаименованиеСтроки = НаименованиеИерархии;
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(ТекстСтроки, СтрокаУровня.Текст, " ", Истина);
		ОбщегоНазначенияКлиентСервер.КонкатенацияСтрок(НаименованиеСтроки, СтрокаУровня.Наименование, " ", Истина);
		
		СтрокаВыборка = ТаблицаДерева.Добавить();
		
		СтрокаВыборка.ЭтоГруппа		 = СтрокаУровня.Строки.Количество() <> 0;
		СтрокаВыборка.Значение		 = ТекстСтроки;
		СтрокаВыборка.Представление	 = НаименованиеСтроки;
		
		СтрокаВыборка.КлючСтроки	 = Счетчик;
		СтрокаВыборка.КлючРодителя	 = КлючРодителя;
	
		ЗаполнитьКлючУровняДереваЗначенийВыбора(СтрокаУровня.Строки, СтрокаВыборка.КлючСтроки, НаименованиеСтроки, ТекстСтроки, Счетчик, ТаблицаДерева);
		
	КонецЦикла;
	
КонецПроцедуры
 
#КонецОбласти
