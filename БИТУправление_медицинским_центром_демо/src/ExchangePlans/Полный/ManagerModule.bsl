#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имя файла настроек по умолчанию;
// В этот файл будут выгружены настройки обмена для приемника;
// Это значение должно быть одинаковым в плане обмена источника и приемника.
// 
// Возвращаемое значение:
//  Строка, 255 - имя файла по умолчанию для выгрузки настроек обмена данными.
//
Функция ИмяФайлаНастроекДляПриемника() Экспорт
	
	Возврат НСтр("ru = 'Настройки синхронизации распределенной информационной базы'");
	
КонецФункции

// Возвращает структуру отборов на узле плана обмена с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//  ВерсияКорреспондента - Произвольный.
//  ИмяФормы - Строк.
//
// Возвращаемое значение:
//  Произвольный - Структура - структура отборов на узле плана обмена.
//
Функция НастройкаОтборовНаУзле(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("ДатаНачалаВыгрузкиДокументов",      НачалоГода(ТекущаяДатаСеанса()));
	СтруктураНастроек.Вставить("Филиал",   Справочники.Филиалы.ПустаяСсылка());
	
	Возврат СтруктураНастроек;
КонецФункции

// Возвращает структуру значений по умолчению для узла;
// Структура настроек повторяет состав реквизитов шапки плана обмена;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//  ВерсияКорреспондента - Произвольный.
//  ИмяФормы - Строк.
//
// Возвращаемое значение:
//  Произвольный - Структура - структура значений по умолчанию на узле плана обмена.
//
Функция ЗначенияПоУмолчаниюНаУзле(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат Новый Структура;
	
КонецФункции

// Возвращает строку описания ограничений миграции данных для пользователя;
// Прикладной разработчик на основе установленных отборов на узле должен сформировать строку описания ограничений 
// удобную для восприятия пользователем.
// 
// Параметры:
//  НастройкаОтборовНаУзле - Произвольный - структура отборов на узле плана обмена,
//                                       полученная при помощи функции НастройкаОтборовНаУзле().
//	ВерсияКорреспондента - Строка.
// 
// Возвращаемое значение:
//  Строка, Неогранич. - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанных(НастройкаОтборовНаУзле, ВерсияКорреспондента) Экспорт
	
	ОграничениеДатаНачалаВыгрузкиДокументов = "";

	ОтборФилиал = "";
	
	// Дата начала выгрузки документов.
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов) Тогда
		ОграничениеДатаНачалаВыгрузкиДокументов = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Начиная с %1'"),
			Формат(НастройкаОтборовНаУзле.ДатаНачалаВыгрузкиДокументов, "ДЛФ=DD"));
	Иначе
		ОграничениеДатаНачалаВыгрузкиДокументов = НСтр("ru = 'За весь период ведения учета в программе'");
	КонецЕсли;
	
	// Отбор по филиалу
	Если ЗначениеЗаполнено(НастройкаОтборовНаУзле.Филиал) Тогда
		СтрокаПредставленияОтбора = НастройкаОтборовНаУзле.Филиал.Наименование;
		ОтборФилиал = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Только по филиалу: %1'"),
			СтрокаПредставленияОтбора);
	Иначе
		ОтборФилиал = НСтр("ru = 'Филиал не указан для узла, который осуществляет обмен с этой базой'");
	КонецЕсли;
		
	Возврат (
		НСтр("ru = 'Выгружать документы и справочную информацию:'")
		+ Символы.ПС
		+ ОтборФилиал);
КонецФункции

// Возвращает строку описания значений по умолчанию для пользователя;
// Прикладной разработчик на основе установленных значений по умолчанию на узле должен сформировать строку описания 
// удобную для восприятия пользователем.
// 
// Параметры:
//  ЗначенияПоУмолчаниюНаУзле - Произвольный - структура значений по умолчанию на узле плана обмена,
//                                       полученная при помощи функции ЗначенияПоУмолчаниюНаУзле().
//	ВерсияКорреспондента - Строка.
// 
// Возвращаемое значение:
//  Строка - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчанию(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента) Экспорт
	
	Возврат ".";
	
КонецФункции

// Возвращает пользовательскую форму для создания начального образа базы.
// Эта форма будет открыта после завершения настройки обмена с помощью помощника.
//
// Возвращаемое значение:
//  Строка - имя формы.
//
// Пример:
// 	Возврат "ПланОбмена.ОбменВРаспределеннойИнформационнойБазе.Форма.ФормаСозданияНачальногоОбраза";.
//
Функция ИмяФормыСозданияНачальногоОбраза() Экспорт
	
	Возврат "ПланОбмена.Полный.Форма.ФормаСозданияНачальногоОбраза";
	
КонецФункции

// Возвращает представление команды создания нового обмена данными.
//
// Возвращаемое значение:
//  Строка, Неогранич - представление команды, выводимое в пользовательском интерфейсе.
//
// Пример:
// 	Возврат НСтр("ru = 'Создать обмен в распределенной информационной базе'").
//
Функция ЗаголовокКомандыДляСозданияНовогоОбменаДанными() Экспорт
	
	Возврат НСтр("ru = 'Распределенная информационная база'");
	
КонецФункции

// Определяет, будет ли использоваться помощник для создания новых узлов плана обмена.
//
// Возвращаемое значение:
//  Булево - признак использования помощника.
//
Функция ИспользоватьПомощникСозданияОбменаДанными() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Возвращает массив используемых транспортов сообщений для этого плана обмена.
//
// 1. Например, если план обмена поддерживает только два транспорта сообщений FILE и FTP,
// то тело функции следует определить следующим образом:
//
// 	Результат = Новый Массив;
// 	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FILE);
// 	Результат.Добавить(Перечисления.ВидыТранспортаСообщенийОбмена.FTP);
// 	Возврат Результат;
//
// 2. Например, если план обмена поддерживает все транспорты сообщений, определенных в конфигурации,
// то тело функции следует определить следующим образом:
//
// 	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
//
// Возвращаемое значение:
//  Массив из Перечесление.ВидыТранспортаСообщенийОбмена - массив содержит значения перечисления ВидыТранспортаСообщенийОбмена.
//
Функция ИспользуемыеТранспортыСообщенийОбмена() Экспорт
	
	Возврат ОбменДаннымиСервер.ВсеТранспортыСообщенийОбменаКонфигурации();
	
КонецФункции

// Возвращает признак использования плана обмена для организации обмена в модели сервиса.
//  Если признак установлен, то в сервисе можно включить обмен данными
//  с использованием этого плана обмена.
//  Если признак не установлен, то план обмена будет использоваться только 
//  для обмена в локальном режиме работы конфигурации.
// 
// Возвращаемое значение:
//  Булево - Ложь.
Функция ПланОбменаИспользуетсяВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает признак того, что план обмена поддерживает обмен данными с корреспондентом, работающим в модели сервиса.
//  Если признак установлен, то становится возможным создать обмен данными когда эта информационная база
//  работает в локальном режиме, а корреспондент в модели сервиса.
//
// Возвращаемое значение:
//  Булево - Ложь.
Функция КорреспондентВМоделиСервиса() Экспорт
	
	Возврат Ложь;
	
КонецФункции

// Возвращает краткую информацию по обмену, выводимую при настройке синхронизации данных.
//
// Возвращаемое значение:
//  Строка.
Функция КраткаяИнформацияПоОбмену() Экспорт
	
	ПоясняющийТекст = НСтр("ru = 'Распределенная информационная база представляет собой иерархическую структуру, состоящую из отдельных информационных 
	|баз системы «1С:Предприятие» — узлов распределенной информационной базы, между которыми организована синхронизация 
	|конфигурации и данных. Главной особенностью распределенных информационных баз является передача изменений 
	|конфигурации в подчиненные узлы.
	|Имеется возможность настраивать ограничения миграции данных, например по организациям.'");
	
	Возврат ПоясняющийТекст;

КонецФункции

// Возвращает строку - ссылку на подробную информацию по настраиваемой синхронизации,
//  в виде гиперссылки или полного пути к форме
// 
// Возвращаемое значение:
//  Строка.
//
Функция ПодробнаяИнформацияПоОбмену() Экспорт
	
	Возврат "http://its.1c.ru/db/bspdoc#content:120:1:IssOgl2_Обмен%2520в%2520распределенной%2520информационной%2520базе";

КонецФункции

#Область ДляРаботыЧерезПодключениеККорреспондентуЧерезВнешнееСоединениеИлиВебсервис

// Возвращает имена реквизитов и табличных частей плана обмена, перечисленных через запятую,
// которые являются общими для пары обменивающихся конфигураций.
//
// Параметры:
//   ВерсияКорреспондента - Строка.
//   ИмяФормы - Строка.
//
// Возвращаемое значение:
//   Строка.
//
Функция ОбщиеДанныеУзлов(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат "";
КонецФункции

// Возвращает структуру отборов на узле плана обмена базы корреспондента с установленными значениями по умолчанию;
// Структура настроек повторяет состав реквизитов шапки и табличных частей плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры,
// а для табличных частей используются структуры,
// содержащие массивы значений полей табличных частей плана обмена.
// 
// Параметры:
//  ВерсияКорреспондента - Строка - версия.
//  ИмяФормы - Строка - имя формы.
//
// Возвращаемое значение:
//  Структура - структура отборов на узле плана обмена базы корреспондента.
//
Функция НастройкаОтборовНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат Новый Структура;
КонецФункции

// Возвращает структуру значений по умолчению для узла базы корреспондента;
// Структура настроек повторяет состав реквизитов шапки плана обмена базы корреспондента;
// Для реквизитов шапки используются аналогичные по ключу и значению элементы структуры.
// 
// Параметры:
//  ВерсияКорреспондента - Строка - версия.
//  ИмяФормы - Строка
//
// Возвращаемое значение:
//  Структура - структура значений по умолчанию на узле плана обмена базы корреспондента.
//
Функция ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента(ВерсияКорреспондента, ИмяФормы) Экспорт
	
	Возврат Новый Структура;
КонецФункции

// Возвращает строку описания ограничений миграции данных для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных отборов на узле базы корреспондента должен сформировать строку
// описания ограничений  удобную для восприятия пользователем.
// 
// Параметры:
//  НастройкаОтборовНаУзле - Произвольный - структура отборов на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции НастройкаОтборовНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка.
// 
// Возвращаемое значение:
//  Строка, Неогранич. - строка описания ограничений миграции данных для пользователя.
//
Функция ОписаниеОграниченийПередачиДанныхБазыКорреспондента(НастройкаОтборовНаУзле, ВерсияКорреспондента) Экспорт
	
	Возврат "";
КонецФункции

// Возвращает строку описания значений по умолчанию для базы корреспондента, которая отображается пользователю;
// Прикладной разработчик на основе установленных значений по умолчанию на узле базы корреспондента должен сформировать
// строку описания  удобную для восприятия пользователем.
// 
// Параметры:
//  ЗначенияПоУмолчаниюНаУзле - Произвольный - структура значений по умолчанию на узле плана обмена базы корреспондента,
//                                       полученная при помощи функции ЗначенияПоУмолчаниюНаУзлеБазыКорреспондента().
//	ВерсияКорреспондента - Строка.
// 
// Возвращаемое значение:
//  Строка, Неогранич. - строка описания для пользователя значений по умолчанию.
//
Функция ОписаниеЗначенийПоУмолчаниюБазыКорреспондента(ЗначенияПоУмолчаниюНаУзле, ВерсияКорреспондента) Экспорт
	
	Возврат "";
КонецФункции

// Пояснение для настройки параметров учета базы корреспондента (переопределяемая).
// Параметры:
//  ВерсияКорреспондента - Строка.
//
// Возвращаемое значение:
//  Строка.
Функция ПояснениеДляНастройкиПараметровУчетаБазыКорреспондента(ВерсияКорреспондента) Экспорт
	
	Возврат "";
КонецФункции

// Процедура предназначена для получения дополнительных данных, используемых при настройке обмена в базе-корреспонденте
//
// Параметры:
// 	ДополнительныеДанные - Структура - Дополнительные данные, которые будут использованы
// 							в базе-корреспонденте при настройке обмена
// 							В качестве значений структуры применимы только значения, поддерживающие XDTO-сериализацию
//
Процедура ПолучитьДополнительныеДанныеДляКорреспондента(ДополнительныеДанные) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Обработчик события при подключении к корреспонденту.
// Событие возникает при успешном подключении к корреспонденту и получении версии конфигурации корреспондента
// при настройке обмена с использованием помощника через прямое подключение
// или при подключении к корреспонденту через Интернет.
// В обработчике можно проанализировать версию корреспондента и,
// если настройка обмена не поддерживается с корреспондентом указанной версии, то вызвать исключение.
//
// Параметры:
//	ВерсияКорреспондента - Строка - Версия конфигурации корреспондента, например, "2.1.5.1".
//
Процедура ПриПодключенииККорреспонденту(ВерсияКорреспондента) Экспорт
	
КонецПроцедуры

// Обработчик события при отправке данных узла-отправителя
//  Событие возникает при отправке данных узла-отправителя из текущей базы в корреспондент,
//  до помещения данных узла в сообщения обмена
//  В обработчике можно изменить отправляемые данные или вовсе отказаться от отправки данных узла
//
// Параметры:
//  Отправитель	 - Неопределено	 - узел плана обмена, от имени которого выполняется отправка данных.
//  Игнорировать - Булево		 - признак отказа от выгрузки данных узла,
//  		если в обработчике установить значение этого параметра в Истина,
//  		то отправка данных узла выполнена не будет. Значение по умолчанию Ложь
//
Процедура ПриОтправкеДанныхОтправителя(Отправитель, Игнорировать) Экспорт
	
КонецПроцедуры

// Обработчик события при получении данных узла-отправителя
//  Событие возникает при получении данных узла-отправителя,
//  когда данные узла прочитаны из сообщения обмена, но не записаны в информационную базу
//  В обработчике можно изменить полученные данные или вовсе отказаться от получения данных узла
//
// Параметры:
//  Отправитель	 - Неопределено	 - узел плана обмена, от имени которого выполняется получение данных.
//  Игнорировать - Булево		 - признак отказа от получения данных узла,
//  		если в обработчике установить значение этого параметра в Истина,
//  		то получение данных узла выполнена не будет. Значение по умолчанию Ложь
//
Процедура ПриПолученииДанныхОтправителя(Отправитель, Игнорировать) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область КонстантыИПроверкаПараметровУчета

// Пояснение для настройки параметров учета (переопределяемый).
//
// Возвращаемое значение:
//  Строка
//
Функция ПояснениеДляНастройкиПараметровУчета() Экспорт
	
	Возврат "";
	
КонецФункции

// Обработчик проверки параметров учета (переопределяемый).
//
// Параметры:
//  Отказ - Булево.
//  Получатель - Произвольный.
//  Сообщение - Строка.
//
// Возвращаемое значение:
//  Строка. "".
//
Процедура ОбработчикПроверкиПараметровУчета(Отказ, Получатель, Сообщение) Экспорт
	
	Результат = "";	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли