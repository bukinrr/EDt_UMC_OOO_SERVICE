#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
		
	Таблица = ПолучитьДиагнозы();
	
	ВнешниеНаборыДанных = Новый Структура("Данные",Таблица);
	
	ОсновнойМакетОформления = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнойМакетОформленияСКД");
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	ПараметрМакет = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("МакетОформления");
	ПараметрМакет.Значение = ОсновнойМакетОформления;
	ПараметрМакет.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();    
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	// Инициализация процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	// Получение результата
	ПроцессорВыводаРезультатаКомпоновкиДанных = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ПроцессорВыводаРезультатаКомпоновкиДанных.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаКомпоновкиДанных.Вывести(ПроцессорКомпоновкиДанных);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДиагнозы()
	ПараметрыОтчета = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы;
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.Найти("НачалоПериода").Значение);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыОтчета.Найти("КонецПериода").Значение);
	Запрос.УстановитьПараметр("СписокФилиалов", ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Найти("Филиал").Значение));
	Группа = ПараметрыОтчета.Найти("Группа").Значение;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Диагнозы.Регистратор.Клиент КАК Клиент,
	|	Диагнозы.Диагноз.КодДиагноза КАК КодДиагноза,
	|	РАЗНОСТЬДАТ(Диагнозы.Регистратор.Клиент.ДатаРождения, Диагнозы.Период, ГОД) - ВЫБОР
	|		КОГДА ДЕНЬГОДА(Диагнозы.Регистратор.Клиент.ДатаРождения) >= ДЕНЬГОДА(Диагнозы.Период)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Возраст,
	|	Диагнозы.Диагноз КАК Диагноз,
	|	Диагнозы.Регистратор КАК Документ
	|ИЗ
	|	РегистрСведений.Диагнозы КАК Диагнозы
	|ГДЕ
	|	Диагнозы.Период >= &НачалоПериода
	|	И Диагнозы.Период <= &КонецПериода
	|	И Диагнозы.Регистратор.Филиал В(&СписокФилиалов)
	|	И (Диагнозы.Классификация2 = ЗНАЧЕНИЕ(Перечисление.КлассификацииДиагнозов.ХроническоеВпервыеВыявленное)
	|			ИЛИ Диагнозы.Классификация2 = ЗНАЧЕНИЕ(Перечисление.КлассификацииДиагнозов.Острое))";
	
	ТаблицаДиагнозов = Запрос.Выполнить().Выгрузить();
		
	УдаляемыеСтроки = Новый Массив;
	Для каждого СтрокаДиагноза Из ТаблицаДиагнозов Цикл
		КодДиагноза = СтрокаДиагноза.КодДиагноза;
		
		ВходитВГруппу = Ложь;
		МассивГрупп = СтрРазделить(Группа,",",Ложь);
		Для каждого ГруппаДиагноза Из МассивГрупп Цикл
			ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
			Если ВходитВГруппу Тогда				
				Прервать;
			КонецЕсли; 		
		КонецЦикла; 
		Если Не ВходитВГруппу Тогда
			УдаляемыеСтроки.Добавить(СтрокаДиагноза);	
		КонецЕсли; 
	КонецЦикла; 
	
	Для каждого СтрокаДляУдаления Из УдаляемыеСтроки Цикл
		ТаблицаДиагнозов.Удалить(СтрокаДляУдаления);	
	КонецЦикла; 
	
	Возврат ТаблицаДиагнозов;
КонецФункции

Функция ДиагнозВходитВГруппу(КодДиагноза, КодГруппы)
	
	ПересечениеНачало = Ложь;
	ПересечениеКонец = Ложь;
	МассивКодов = СтрРазделить(КодГруппы, "-", Ложь);
	Если МассивКодов.Количество() > 0 Тогда
		КодНачало = МассивКодов[0];
		ПересечениеНачало = КодДиагноза >= КодНачало;  		
	КонецЕсли; 
	
	Если МассивКодов.Количество() = 2 Тогда
		КодКонец = МассивКодов[1];
		ПересечениеКонец = КодДиагноза <= КодКонец;
	Иначе
		ПересечениеКонец = КодДиагноза = КодНачало;	
	КонецЕсли;
	
	Возврат ПересечениеНачало И ПересечениеКонец;
	
КонецФункции

#КонецОбласти
