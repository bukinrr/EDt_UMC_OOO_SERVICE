#Область РазделОписанияПеременных

&НаКлиенте
Перем ПараметрыОбработчика;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Период.ДатаНачала = ТекущаяДата();
	Период.ДатаОкончания = ТекущаяДата();
	
	Для Каждого ВариантОтчета Из Перечисления.ВариантыОтчетаБИТФон Цикл
		ИндексВарианта = Перечисления.ВариантыОтчетаБИТФон.Индекс(ВариантОтчета);
		МетаданныеВарианта = Метаданные.Перечисления.ВариантыОтчетаБИТФон.ЗначенияПеречисления[ИндексВарианта];
		ИмяКоманды = МетаданныеВарианта.Имя;
		ЗаголовокКоманды = МетаданныеВарианта.Синоним;
		
		Команда = Команды.Добавить(ИмяКоманды);
		Команда.Действие = "Подключаемый_ИзменитьВариантОтчета";
		
		Кнопка = Элементы.Добавить(ИмяКоманды, Тип("КнопкаФормы"), Элементы.ГруппаВариантыОтчета);
		Кнопка.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		Кнопка.ИмяКоманды = ИмяКоманды;
		Кнопка.Заголовок = ЗаголовокКоманды;
		
		Если ИндексВарианта = 0 Тогда
			Кнопка.Пометка = Истина;
			Вариант = ВариантОтчета;
			ОтчетНаименованиеТекущегоВарианта = Кнопка.Заголовок;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент");
	Элементы.ГруппаПроблемыССобытиями.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьПериод(Команда)
	
	СтандартнаяОбработка = Истина;
	Обработчик = Новый ОписаниеОповещения("ВыбратьПериодЗавершение", ЭтотОбъект);
	ОтчетыКлиентПереопределяемый.ПриНажатииКнопкиВыбораПериода(ЭтотОбъект, Период, СтандартнаяОбработка, Обработчик);
	Если Не СтандартнаяОбработка Тогда
		Возврат;
	КонецЕсли;
	
	Диалог = Новый ДиалогРедактированияСтандартногоПериода;
	Диалог.Период = Период;
	Диалог.Показать(Обработчик);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИзменитьВариантОтчета(Команда)
	
	Вариант = ПредопределенноеЗначение(СтрШаблон("Перечисление.ВариантыОтчетаБИТФон.%1", Команда.Имя));
	
	Для Каждого ЭлементВариантаОтчета Из Элементы.ГруппаВариантыОтчета.ПодчиненныеЭлементы Цикл
		ЭлементВариантаОтчета.Пометка = ЭлементВариантаОтчета.Имя = Команда.Имя;
		ОтчетНаименованиеТекущегоВарианта = ЭлементВариантаОтчета.Заголовок;
	КонецЦикла;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость = Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка  = БиблиотекаКартинок.Информация32;
	ОтображениеСостояния.Текст     = НСтр("ru = 'Выбран другой вариант отчета. Нажмите ""Сформировать"" для получения отчета.'");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПоПочте(Команда)
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	Если ОтображениеСостояния.Видимость = Истина
		И ОтображениеСостояния.ДополнительныйРежимОтображения = ДополнительныйРежимОтображения.Неактуальность
	Тогда
		ТекстВопроса = НСтр("ru = 'Отчет не сформирован. Сформировать?'");
		Обработчик = Новый ОписаниеОповещения("СформироватьПередОтправкойПоПочте", ЭтотОбъект);
		ПоказатьВопрос(Обработчик, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	Иначе
		ПоказатьДиалогОтправкиПоПочте();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСумму(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьКоличество(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСреднее(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьМинимум(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьМаксимум(Команда)
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент", Команда.Имя);
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьВсеПоказатели(Команда)
	ОбщегоНазначенияСлужебныйКлиент.УстановитьВидимостьПанелиПоказателей(
		Элементы, Не Элементы.РассчитатьВсеПоказатели.Пометка);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьПоказатели(Команда)
	ОбщегоНазначенияСлужебныйКлиент.УстановитьВидимостьПанелиПоказателей(Элементы);
КонецПроцедуры

&НаКлиенте
Процедура ОтчетТабличныйДокументПриАктивизацииОбласти(Элемент)
	ПодключитьОбработчикОжидания("РассчитатьПоказателиДинамически", 0.2, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПроблемыССобытиями(Команда)
	
	ОткрытьФорму("Обработка.бит_БитфонАРМУправленияСобытиями.Форма.АРМ", Новый Структура("Период", Период));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ВариантПриИзменении(Элемент)
	
	Элементы.ВыводитьПоЧасам.Доступность = Вариант = ПредопределенноеЗначение("Перечисление.ВариантыОтчетаБИТФон.ЗагруженностьЛиний");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбратьПериодЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(ВыбранныйПериод) <> Тип("СтандартныйПериод") Тогда
		Возврат;
	КонецЕсли;
	
	Период = ВыбранныйПериод;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОтчет()
	
	ОчиститьСообщения();
	Элементы.ГруппаПроблемыССобытиями.Видимость = Ложь;
	ОтчетСформирован = Ложь;
	
	Если СформироватьВФоне() Тогда
		ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", 1, Истина);
	Иначе
		ПослеФормированияНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СформироватьВФоне()
	
	Если ФоновоеЗаданиеИдентификатор <> Неопределено Тогда
		ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор);
		ФоновоеЗаданиеИдентификатор = Неопределено;
	КонецЕсли;
	
	Если Вариант = ПредопределенноеЗначение("Перечисление.ВариантыОтчетаБИТФон.СтатистикаПоОператорам") Тогда
		ИмяФункции = "Отчеты.СводныйОтчетБитФон.СформироватьСтатистикаПоОператорамСервер";
		ИмяМакета = "СтатистикаПоОператорам";
	ИначеЕсли Вариант = ПредопределенноеЗначение("Перечисление.ВариантыОтчетаБИТФон.ЗагруженностьЛиний") Тогда
		ИмяФункции = "Отчеты.СводныйОтчетБитФон.СформироватьЗагруженностьЛинийСерверПоЧасам";
		ИмяМакета = "ЗагруженностьЛиний";
	КонецЕсли;
	
	РезультатФоновогоЗадания = ДлительныеОперации.ВыполнитьФункцию(ИмяФункции, ИмяФункции, Отчеты.СводныйОтчетБитФон.ПолучитьМакет(ИмяМакета), Период.ДатаНачала, Период.ДатаОкончания);
	
	Если РезультатФоновогоЗадания.Статус = "Ошибка" Тогда
		ПоказатьОшибкиФормирования(РезультатФоновогоЗадания.КраткоеПредставлениеОшибки);
		Возврат Ложь;
	КонецЕсли;
	
	ФоновоеЗаданиеИдентификатор  = РезультатФоновогоЗадания.ИдентификаторЗадания;
	ФоновоеЗаданиеАдресХранилища = РезультатФоновогоЗадания.АдресРезультата;
	
	Если РезультатФоновогоЗадания.Статус = "Выполнено" Тогда
		ФоновоеЗаданиеЗагрузитьРезультат();
		ЗаданиеЗапущено = Ложь;
	Иначе
		ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
		ОтображениеСостояния.Видимость						= Истина;
		ОтображениеСостояния.ДополнительныйРежимОтображения	= ДополнительныйРежимОтображения.Неактуальность;
		ОтображениеСостояния.Картинка						= БиблиотекаКартинок.ДлительнаяОперация48;
		ОтображениеСостояния.Текст							= НСтр("ru = 'Отчет формируется...'");
		
		ЗаданиеЗапущено = Истина;
	КонецЕсли;
	
	Возврат ЗаданиеЗапущено;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ФоновоеЗаданиеОтменить(ФоновоеЗаданиеИдентификатор)
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ФоновоеЗаданиеИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьОшибкиФормирования(ИнформацияОбОшибке)
	
	Если ТипЗнч(ИнформацияОбОшибке) = Тип("ИнформацияОбОшибке") Тогда
		ОписаниеОшибки = КраткоеПредставлениеОшибки(ИнформацияОбОшибке);
		ПодробноеПредставлениеОшибки = НСтр("ru = 'Ошибка при формировании:'") + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке);
		Если ПустаяСтрока(ОписаниеОшибки) Тогда
			ОписаниеОшибки = ПодробноеПредставлениеОшибки;
		КонецЕсли;
	Иначе
		ОписаниеОшибки = ИнформацияОбОшибке;
		ПодробноеПредставлениеОшибки = "";
	КонецЕсли;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость						= Истина;
	ОтображениеСостояния.ДополнительныйРежимОтображения	= ДополнительныйРежимОтображения.Неактуальность;
	ОтображениеСостояния.Картинка						= Новый Картинка;
	ОтображениеСостояния.Текст							= ОписаниеОшибки;
	
КонецПроцедуры

&НаСервере
Процедура ФоновоеЗаданиеЗагрузитьРезультат()
	
	РезультатФормирования = ПолучитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	
	УдалитьИзВременногоХранилища(ФоновоеЗаданиеАдресХранилища);
	ФоновоеЗаданиеАдресХранилища = Неопределено;
	ФоновоеЗаданиеИдентификатор = Неопределено;
	
	ОтображениеСостояния = Элементы.ОтчетТабличныйДокумент.ОтображениеСостояния;
	ОтображениеСостояния.Видимость						= Ложь;
	ОтображениеСостояния.ДополнительныйРежимОтображения	= ДополнительныйРежимОтображения.НеИспользовать;
	ОтображениеСостояния.Картинка						= Новый Картинка;
	ОтображениеСостояния.Текст							= "";
	
	ОтчетТабличныйДокумент = РезультатФормирования.ТабДок;
	Элементы.ГруппаПроблемыССобытиями.Видимость = РезультатФормирования.ИмеютсяПроблемыССобытиями;
	ОтчетСформирован = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеФормированияНаКлиенте()
	
	ОтключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте");
	ФормированиеПриОткрытии = Ложь;
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ФоновоеЗаданиеПроверитьНаКлиенте()
	
	Задание = ФоновоеЗаданиеПроверитьНаСервере();
	Если Задание.Выполняется Тогда
		ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчика);
		ПодключитьОбработчикОжидания("ФоновоеЗаданиеПроверитьНаКлиенте", ПараметрыОбработчика.ТекущийИнтервал, Истина);
	Иначе
		Если ОтчетСформирован Тогда
			ПоказатьОповещениеПользователя(НСтр("ru = 'Отчет сформирован'"), , Заголовок);
		Иначе
			ПоказатьОповещениеПользователя(НСтр("ru = 'Отчет не сформирован'"), , Заголовок);
		КонецЕсли;
		ПослеФормированияНаКлиенте();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ФоновоеЗаданиеПроверитьНаСервере()
	
	Задание = НайтиЗаданиеСлужебный(ФоновоеЗаданиеИдентификатор);
	Если Не Задание.Выполняется Тогда
		Если Задание.Успех Тогда
			ФоновоеЗаданиеЗагрузитьРезультат();
		Иначе
			ПоказатьОшибкиФормирования(Задание.Ошибка);
		КонецЕсли;
	КонецЕсли;
	Задание.Удалить("Ошибка");
	
	Возврат Задание;
	
КонецФункции

&НаСервере
Функция НайтиЗаданиеСлужебный(Знач Идентификатор)
	
	Результат = Новый Структура("Выполняется, Успех, Ошибка", Ложь, Ложь, Неопределено);
	Если Идентификатор = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	Задание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Идентификатор);
	Если Задание = Неопределено Тогда
		Возврат Результат;
	КонецЕсли;
	
	Если Задание.Состояние = СостояниеФоновогоЗадания.Активно Тогда
		Результат.Выполняется = Истина;
	Иначе
		Результат.Выполняется = Ложь;
		Если Задание.Состояние = СостояниеФоновогоЗадания.Завершено Тогда
			Результат.Успех = Истина;
		Иначе
			Результат.Успех = Ложь;
			Результат.Ошибка = Задание.ИнформацияОбОшибке;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура РассчитатьПоказателиДинамически()
	ОбщегоНазначенияСлужебныйКлиент.РассчитатьПоказатели(ЭтотОбъект, "ОтчетТабличныйДокумент");
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПередОтправкойПоПочте(Ответ, ДополнительныеПараметры) Экспорт
	Если Ответ = КодВозвратаДиалога.Да Тогда
		СформироватьОтчет();
		ПоказатьДиалогОтправкиПоПочте();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьДиалогОтправкиПоПочте()
	
	Вложение = Новый Структура;
	Вложение.Вставить("АдресВоВременномХранилище", ПоместитьВоВременноеХранилище(ОтчетТабличныйДокумент, УникальныйИдентификатор));
	Вложение.Вставить("Представление", ОтчетНаименованиеТекущегоВарианта);
	
	СписокВложений = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Вложение);
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСПочтовымиСообщениями") Тогда
		МодульРаботаСПочтовымиСообщениямиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСПочтовымиСообщениямиКлиент");
		ПараметрыОтправки = МодульРаботаСПочтовымиСообщениямиКлиент.ПараметрыОтправкиПисьма();
		ПараметрыОтправки.Тема = ОтчетНаименованиеТекущегоВарианта;
		ПараметрыОтправки.Вложения = СписокВложений;
		МодульРаботаСПочтовымиСообщениямиКлиент.СоздатьНовоеПисьмо(ПараметрыОтправки);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти