#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыДанных = Новый Структура;
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ДатаНачалаОбменаСРЭМД = ИнтеграцияЕГИСЗСерверПовтИсп.ПолучитьДатуНачалаОбменаИнформациейСРЭМД();
	СотрудникиДокумента = ОтраслевыеДополнения.СотрудникиПользователя(ПараметрыСеанса.ТекущийПользователь);
	ИспользуетсяРЭМД = ИнтеграцияЕГИСЗСерверПовтИсп.ИспользуетсяИнтеграцияРЭМД();
	
	ПоВсемСотрудникам = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПоВсемСотрудникам")).Значение;
	
	ПараметрыДанных.Вставить("НачалоПериода",			Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаНачала);
	ПараметрыДанных.Вставить("КонецПериода",			Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаОкончания);
	ПараметрыДанных.Вставить("ТекущийПользователь",		ПараметрыСеанса.ТекущийПользователь);
	ПараметрыДанных.Вставить("ПоВсемСотрудникам",		ПоВсемСотрудникам);
	ПараметрыДанных.Вставить("ДатаНачалаОбменаСРЭМД",	ДатаНачалаОбменаСРЭМД);
	ПараметрыДанных.Вставить("СотрудникиДокумента",		СотрудникиДокумента);
	ПараметрыДанных.Вставить("ИспользуетсяРЭМД",		ИспользуетсяРЭМД);
	
	КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.УстановитьЗначениеПараметра("ДатаНачалаОбменаСРЭМД",	ДатаНачалаОбменаСРЭМД);
	КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.УстановитьЗначениеПараметра("СотрудникиДокумента",	СотрудникиДокумента);
	КомпоновщикНастроек.ФиксированныеНастройки.ПараметрыДанных.УстановитьЗначениеПараметра("ИспользуетсяРЭМД",		ИспользуетсяРЭМД);
	
	ВнешниеНаборыДанных = Новый Структура;
	
	ВнешниеНаборыДанных.Вставить("ПМОРЭМД",			ПолучитьНеподписанныеДокументыДляОтчётаЭЦП("ПрохождениеМедосмотра",			ПараметрыДанных, Истина));
	ВнешниеНаборыДанных.Вставить("ПМОПодписи",		ПолучитьНеподписанныеДокументыДляОтчётаЭЦП("ПрохождениеМедосмотра",			ПараметрыДанных, Ложь));
	ВнешниеНаборыДанных.Вставить("СПМОПодписи",		ПолучитьНеподписанныеДокументыДляОтчётаЭЦП("СписокНаПрохождениеМедосмотра",	ПараметрыДанных, Ложь));
	ВнешниеНаборыДанных.Вставить("ВКПодписи",		ПолучитьНеподписанныеДокументыДляОтчётаЭЦП("ВрачебнаяКомиссия",				ПараметрыДанных, Ложь));
	ВнешниеНаборыДанных.Вставить("Форма066Подписи",	ПолучитьНеподписанныеДокументыДляОтчётаЭЦП("Форма066",						ПараметрыДанных, Ложь));
	
	ВнешниеНаборыДанных.Вставить("МедицинскиеОтчетыПодписи", МедицинскиеОтчетыПодписи(ПараметрыДанных.НачалоПериода, ПараметрыДанных.КонецПериода, СотрудникиДокумента));
	ВнешниеНаборыДанных.Вставить("МедицинскиеКартыПодписи", МедицинскиеКартыПодписи(ПараметрыДанных.НачалоПериода, ПараметрыДанных.КонецПериода, СотрудникиДокумента));
	
	ОсновнойМакетОформления = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнойМакетОформленияСКД");
	ПараметрМакет = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("МакетОформления");
	ПараметрМакет.Значение = ОсновнойМакетОформления;
	ПараметрМакет.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	// Инициализация процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	// Получение результата
	ПроцессорВыводаРезультатаКомпоновкиДанных = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаРезультатаКомпоновкиДанных.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаКомпоновкиДанных.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЗначениеПараметра(НовыеНастройкиКД, ИмяПараметра, ЗначениеПараметра)
	
	Попытка
		ПараметрДанных = НовыеНастройкиКД.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
		Если ПараметрДанных <> Неопределено И Не ЗначениеЗаполнено(ПараметрДанных.Значение) Тогда
			ПараметрДанных.Значение = ЗначениеПараметра;
		КонецЕсли;
		
		ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти(ИмяПараметра);
		Если ПараметрДанных <> Неопределено И Не ЗначениеЗаполнено(ПараметрДанных.Значение) Тогда
			ПараметрДанных.Значение = ЗначениеПараметра;
		КонецЕсли;
	Исключение КонецПопытки;

КонецПроцедуры

Функция ПолучитьНеподписанныеДокументыДляОтчётаЭЦП(ИмяДокумента, ПараметрыДанных, ДокументыРЭМД)
	
	МодульМенеджера = ДопСерверныеФункции.ОбщийМодуль(СтрШаблон("Документы.%1", ИмяДокумента));
	
	Если МодульМенеджера = Неопределено
		Или Не ПравоДоступа("Просмотр", МодульМенеджера.ПустаяСсылка().Метаданные())
	Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Попытка
		Возврат МодульМенеджера.ПолучитьНеподписанныеДокументыДляОтчётаЭЦП(ПараметрыДанных, ДокументыРЭМД);
	Исключение
		Возврат Новый ТаблицаЗначений;
	КонецПопытки;
	
КонецФункции

Функция МедицинскиеОтчетыПодписи(НачалоПериода, КонецПериода, СотрудникиДокумента)
	
	Если Не (ПравоДоступа("Просмотр", Метаданные.Документы.МедицинскийОтчет)
			И ПравоДоступа("Просмотр", Метаданные.Справочники.МедицинскиеОтчеты))
	Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	МедицинскиеОтчеты.ИсточникОтчета КАК ИсточникОтчета
		|ИЗ
		|	Справочник.МедицинскиеОтчеты КАК МедицинскиеОтчеты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МедицинскийОтчет КАК МедицинскийОтчет
		|		ПО (МедицинскийОтчет.ИсточникОтчета = МедицинскиеОтчеты.ИсточникОтчета)
		|			И (МедицинскийОтчет.Ответственный.Сотрудник В (&СотрудникиДокумента))
		|			И (НЕ МедицинскийОтчет.ПометкаУдаления)
		|			И (&КонецПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ МедицинскийОтчет.Дата МЕЖДУ &НачалоПериода И &КонецПериода)";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("СотрудникиДокумента", СотрудникиДокумента);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипыРолей = Новый Массив;
	ТипыРолей.Добавить(Тип("ПеречислениеСсылка.РолиПодписей"));
	ТипыРолей.Добавить(Тип("СправочникСсылка.РолиПриПодписиМедДокументов"));
	
	РолиПодписываемыхОтчётов = Новый ТаблицаЗначений;
	РолиПодписываемыхОтчётов.Колонки.Добавить("ИсточникОтчета", Метаданные.Документы.МедицинскийОтчет.Реквизиты.ИсточникОтчета.Тип);
	РолиПодписываемыхОтчётов.Колонки.Добавить("Роль", Новый ОписаниеТипов(ТипыРолей));
	
	Пока Выборка.Следующий() Цикл
		Если Документы.МедицинскийОтчет.ПодписываетсяЭП(Выборка.ИсточникОтчета) Тогда
			Для Каждого Роль Из Документы.МедицинскийОтчет.РолиДляПодписания(Выборка.ИсточникОтчета) Цикл
				СтрокаРоли = РолиПодписываемыхОтчётов.Добавить();
				СтрокаРоли.ИсточникОтчета = Выборка.ИсточникОтчета;
				СтрокаРоли.Роль = Роль;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Если РолиПодписываемыхОтчётов.Количество() = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиПодписываемыхОтчётов.Роль КАК Роль,
		|	РолиПодписываемыхОтчётов.ИсточникОтчета КАК ИсточникОтчета
		|ПОМЕСТИТЬ РолиПодписываемыхОтчётов
		|ИЗ
		|	&РолиПодписываемыхОтчётов КАК РолиПодписываемыхОтчётов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	""Медицинские отчёты"" КАК ТипМедицинскогоДокумента,
		|	МедицинскийОтчет.Ссылка КАК Ссылка,
		|	МедицинскийОтчет.ДатаДокумента КАК ДатаДокумента,
		|	ЛОЖЬ КАК ПодписьРЭМД,
		|	ИСТИНА КАК ПодписьФайловЭМД,
		|	МедицинскийОтчет.Роль КАК Роль
		|ИЗ
		|	(ВЫБРАТЬ
		|		МедицинскийОтчет.Ссылка КАК Ссылка,
		|		МедицинскийОтчет.Дата КАК ДатаДокумента,
		|		РолиПодписываемыхОтчётов.Роль КАК Роль
		|	ИЗ
		|		Документ.МедицинскийОтчет КАК МедицинскийОтчет
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РолиПодписываемыхОтчётов КАК РолиПодписываемыхОтчётов
		|			ПО (РолиПодписываемыхОтчётов.ИсточникОтчета = МедицинскийОтчет.ИсточникОтчета)
		|				И (МедицинскийОтчет.Ответственный.Сотрудник В (&СотрудникиДокумента))
		|				И (НЕ МедицинскийОтчет.ПометкаУдаления)
		|				И (&КонецПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ИЛИ МедицинскийОтчет.Дата МЕЖДУ &НачалоПериода И &КонецПериода)) КАК МедицинскийОтчет
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|			ПО (РолиИПодписиЭМД.УИД_ЭЦП = ЭП.УникальныйИдентификатор)
		|		ПО (ЭП.Объект = МедицинскийОтчет.Ссылка)
		|			И (НЕ ЭП.ПодписанФайлЭМД)
		|			И (РолиИПодписиЭМД.РольПодписи = МедицинскийОтчет.Роль)
		|ГДЕ
		|	ЭП.Объект ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("СотрудникиДокумента", СотрудникиДокумента);
	Запрос.УстановитьПараметр("РолиПодписываемыхОтчётов", РолиПодписываемыхОтчётов);
	
	НеподписанныеОтчёты = Запрос.Выполнить().Выгрузить();
	мНедоступныеКПодписанию = Новый Массив;
	
	Для Каждого СтрокаОтчёта Из НеподписанныеОтчёты Цикл
		Если МедицинскаяДеятельность.РольДоступнаТекущемуПользователю(СтрокаОтчёта.Ссылка, СтрокаОтчёта.Роль) <> Истина Тогда
			мНедоступныеКПодписанию.Добавить(СтрокаОтчёта);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого НедоступныйКПодписанию Из мНедоступныеКПодписанию Цикл
		НеподписанныеОтчёты.Удалить(НедоступныйКПодписанию);
	КонецЦикла;
	
	НеподписанныеОтчёты.Колонки.Удалить("Роль");
	
	Возврат НеподписанныеОтчёты;
	
КонецФункции

Функция МедицинскиеКартыПодписи(НачалоПериода, КонецПериода, СотрудникиДокумента)
	
	Если Не (ПравоДоступа("Просмотр", Метаданные.Справочники.МедицинскиеКарты)
			И ПравоДоступа("Просмотр", Метаданные.Справочники.ВидыМедицинскихКарт))
	Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВидыМедицинскихКарт.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.ВидыМедицинскихКарт КАК ВидыМедицинскихКарт
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.МедицинскиеКарты КАК МедицинскиеКарты
		|		ПО (МедицинскиеКарты.ВидКарты = ВидыМедицинскихКарт.Ссылка)
		|			И (НЕ МедицинскиеКарты.ПометкаУдаления)
		|			И (&КонецПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ИЛИ МедицинскиеКарты.ДатаЗакрытия МЕЖДУ &НачалоПериода И &КонецПериода)";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТипыРолей = Новый Массив;
	ТипыРолей.Добавить(Тип("ПеречислениеСсылка.РолиПодписей"));
	ТипыРолей.Добавить(Тип("СправочникСсылка.РолиПриПодписиМедДокументов"));
	
	РолиПодписываемыхКарт = Новый ТаблицаЗначений;
	РолиПодписываемыхКарт.Колонки.Добавить("ВидМедицинскойКарты", Новый ОписаниеТипов("СправочникСсылка.ВидыМедицинскихКарт"));
	РолиПодписываемыхКарт.Колонки.Добавить("Роль", Новый ОписаниеТипов(ТипыРолей));
	
	Пока Выборка.Следующий() Цикл
		Для Каждого Роль Из Справочники.ВидыМедицинскихКарт.РолиДляПодписания(Выборка.Ссылка) Цикл
			СтрокаРоли = РолиПодписываемыхКарт.Добавить();
			СтрокаРоли.ВидМедицинскойКарты = Выборка.Ссылка;
			СтрокаРоли.Роль = Роль;
		КонецЦикла;
	КонецЦикла;
	
	Если РолиПодписываемыхКарт.Количество() = 0 Тогда
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РолиПодписываемыхКарт.Роль КАК Роль,
		|	РолиПодписываемыхКарт.ВидМедицинскойКарты КАК ВидМедицинскойКарты
		|ПОМЕСТИТЬ РолиПодписываемыхКарт
		|ИЗ
		|	&РолиПодписываемыхКарт КАК РолиПодписываемыхКарт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	""Медицинские карты"" КАК ТипМедицинскогоДокумента,
		|	МедицинскиеКарты.Ссылка КАК Ссылка,
		|	МедицинскиеКарты.ДатаЗакрытия КАК ДатаДокумента,
		|	ЛОЖЬ КАК ПодписьРЭМД,
		|	ИСТИНА КАК ПодписьФайловЭМД,
		|	МедицинскиеКарты.Роль КАК Роль
		|ИЗ
		|	(ВЫБРАТЬ
		|		МедицинскиеКарты.Ссылка КАК Ссылка,
		|		МедицинскиеКарты.ДатаЗакрытия КАК ДатаЗакрытия,
		|		РолиПодписываемыхКарт.Роль КАК Роль
		|	ИЗ
		|		Справочник.МедицинскиеКарты КАК МедицинскиеКарты
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РолиПодписываемыхКарт КАК РолиПодписываемыхКарт
		|			ПО (РолиПодписываемыхКарт.ВидМедицинскойКарты = МедицинскиеКарты.ВидКарты)
		|				И (НЕ МедицинскиеКарты.ПометкаУдаления)
		|				И (&КонецПериода = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|					ИЛИ МедицинскиеКарты.ДатаЗакрытия МЕЖДУ &НачалоПериода И &КонецПериода)) КАК МедицинскиеКарты
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЭлектронныеПодписи КАК ЭП
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РолиИПодписиЭМД КАК РолиИПодписиЭМД
		|			ПО (РолиИПодписиЭМД.УИД_ЭЦП = ЭП.УникальныйИдентификатор)
		|		ПО (ЭП.Объект = МедицинскиеКарты.Ссылка)
		|			И (НЕ ЭП.ПодписанФайлЭМД)
		|			И (РолиИПодписиЭМД.РольПодписи = МедицинскиеКарты.Роль)
		|ГДЕ
		|	ЭП.Объект ЕСТЬ NULL";
	
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("РолиПодписываемыхКарт", РолиПодписываемыхКарт);
	
	НеподписанныеКарты = Запрос.Выполнить().Выгрузить();
	мНедоступныеКПодписанию = Новый Массив;
	
	Для Каждого СтрокаКарты Из НеподписанныеКарты Цикл
		Если МедицинскаяДеятельность.РольДоступнаТекущемуПользователю(СтрокаКарты.Ссылка, СтрокаКарты.Роль) <> Истина Тогда
			мНедоступныеКПодписанию.Добавить(СтрокаКарты);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого НедоступныйКПодписанию Из мНедоступныеКПодписанию Цикл
		НеподписанныеКарты.Удалить(НедоступныйКПодписанию);
	КонецЦикла;
	
	НеподписанныеКарты.Колонки.Удалить("Роль");
	
	Возврат НеподписанныеКарты;
	
КонецФункции

#КонецОбласти
