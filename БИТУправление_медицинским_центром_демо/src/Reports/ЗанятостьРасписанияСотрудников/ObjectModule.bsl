#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();

	Нач = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаНачала;
	Нач = ?(Нач < ТекущаяДата(), ТекущаяДата(), Нач);
	Кон = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период")).Значение.ДатаОкончания;
	
	Таблица = ГрафикиСотрудников.ПолучитьРабочееВремяЗаПериод(Нач, Кон, Ложь, Ложь, , Тип("СправочникСсылка.Сотрудники"));
	Таблица.Колонки.Добавить("ПродолжительностьПоГрафику",Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Специализация");
	Для Каждого Строка Из Таблица Цикл
		Строка.ПродолжительностьПоГрафику = (Строка.ВремяОкончания - Строка.ВремяНачала)/60;
		Строка.Специализация = Строка.Сотрудник.Специализация;
	КонецЦикла;
	Таблица.Свернуть("Филиал, Сотрудник, Специализация, Дата", "ПродолжительностьПоГрафику");
	
	ВнешниеНаборыДанных = Новый Структура("Данные", Таблица);
	
	ОсновнойМакетОформления = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнойМакетОформленияСКД");
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	ПараметрМакет = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("МакетОформления");
	ПараметрМакет.Значение = ОсновнойМакетОформления;
	ПараметрМакет.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	// Инициализация процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	// Получение результата
	ПроцессорВыводаРезультатаКомпоновкиДанных = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ПроцессорВыводаРезультатаКомпоновкиДанных.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаКомпоновкиДанных.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти
