#Область РазделОписанияПеременных
Перем мВерсияОтчета Экспорт;// Строка, версия отчета
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Таблица форм отчета
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица форм отчета.
//
Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета";
	НоваяФорма.ОписаниеОтчета     = "Сведения о причинах временной нетрудоспособности (форма от 25.12.2014 № 723)";
	НоваяФорма.РедакцияФормы      = "от 25.12.2014 № 723";
	НоваяФорма.ДатаНачалоДействия = '20010101';
	НоваяФорма.ДатаКонецДействия  = '20211231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "Форма2022";
	НоваяФорма.ОписаниеОтчета     = "Сведения о причинах временной нетрудоспособности (форма от 27.12.2022 № 985)";
	НоваяФорма.РедакцияФормы      = "от 27.12.2022 № 985";
	НоваяФорма.ДатаНачалоДействия = '20220101';
	НоваяФорма.ДатаКонецДействия  = МедицинскаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

// Периодичность отчета.
//
// Параметры:
//  ПараметрыОтчета	 - Неопределено - не используется.
// 
// Возвращаемое значение:
//  Строка - периодичность Год, Полугодие, Квартал, Месяц, День.
//
Функция ПериодичностьОтчета(ПараметрыОтчета = Неопределено) Экспорт
	
	Возврат "Год"; // "Год,Полугодие,Квартал,Месяц,День".
	
КонецФункции

// Структура страниц отчета.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  мДеревоСтраницОтчета - ДанныеФормыДерево - дерево страниц отчета
//
Процедура ФормироватьСтруктуруСтраницОтчета(ВыбраннаяФорма, мДеревоСтраницОтчета) Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница1";
	СтрокаУровня1.Представление            = "Страница 1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

// Установить доступность областей.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  Форма				 - ФормаКлиентскогоПриложения - форма 
//  ИмяСтраницыПанели	 - Строка - имя страницы панели.
//
Процедура УстановитьДоступностьОбластей(ВыбраннаяФорма, Форма, ИмяСтраницыПанели = "") Экспорт
	
	ТабДокумент = Форма.ПолеТабличногоДокументаФормаОтчета;
	
	ЗапрещенныеОбласти = Новый Массив;
	ЗапрещенныеОбласти.Добавить("стр_1");
	ЗапрещенныеОбласти.Добавить("Страница1");
	ЗапрещенныеОбласти.Добавить("Страница2");
	ЗапрещенныеОбласти.Добавить("Страница3");
	ЗапрещенныеОбласти.Добавить("ОКПО");
	ЗапрещенныеОбласти.Добавить("ОтчетГод");
	ЗапрещенныеОбласти.Добавить("ОргНазв");
	ЗапрещенныеОбласти.Добавить("ОргПочтАдрес");
	
	Для Каждого Область Из ТабДокумент.Области Цикл
		Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено Тогда
			Если СтрНайти(Область.Имя,"П010000101") > 0 Тогда
				МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбластьАвтоЗаполнения(Форма.мСтруктураЦветовРаскраски["_4"], Область);
			Иначе
				МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область АлгоритмЗаполнения

// Заполнить отчет.
//
// Параметры:
//  ВыбраннаяФорма			 - ФормаКлиентскогоПриложения	 - форма
//  ПараметрыОтчета			 - Структура					 - параметры отчета
//  ЭтаФорма				 - ФормаКлиентскогоПриложения	 - форма
//  СтруктураРеквизитовФормы - Структура					 - структура реквизитов формы.
//
Процедура ЗаполнитьОтчет(ВыбраннаяФорма, ПараметрыОтчета, ЭтаФорма, СтруктураРеквизитовФормы) Экспорт
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Страницы");
	
	Если ВыбраннаяФорма = "ФормаОтчета" Тогда
		Контейнер.Страницы = ПолучитьТаблицуСтраниц_2014(ПараметрыОтчета);
	Иначе 
		// 2022+
		ИтоговаяТаблица = ПолучитьТаблицуСтраниц_2022(ПараметрыОтчета);
		Если ИтоговаяТаблица.ОтсутствующиеЛН <> "" Тогда
			ОбщегоНазначения.СообщитьПользователю(нСтр("ru='Отчет был сформирован без учета количества дней нетрудоспособности по больничным листам:'", "ru")
				+ Символы.ПС + ИтоговаяТаблица.ОтсутствующиеЛН + нСтр("ru='Необходимо загрузить недостающие больничные листы и перезаполнить отчет.'", "ru"));
		КонецЕсли;
		Контейнер.Страницы = ИтоговаяТаблица.Группы;
	КонецЕсли;
	
	ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, "Страница1", Контейнер.Страницы, 2);
	
КонецПроцедуры

Функция ДиагнозВходитВГруппу(КодДиагноза, КодГруппы)
	
	ПересечениеНачало = Ложь;
	ПересечениеКонец = Ложь;
	МассивКодов = СтрРазделить(КодГруппы, "-", Ложь);
	
	КодНачало = МассивКодов[0];
	ПересечениеНачало = КодДиагноза >= КодНачало; 
	
	Если СтрДлина(МассивКодов[0])<> 3 Тогда
		КодКонец = МассивКодов[0]
	Иначе
		ПослЭлем = МассивКодов.Количество()-1;
		КодКонец = МассивКодов[ПослЭлем] + ".9";
	КонецЕсли;
	ПересечениеКонец = КодДиагноза <= КодКонец;
	
	Возврат ПересечениеНачало И ПересечениеКонец;
	
КонецФункции

Процедура ЗаполнитьТекущуюСтроку(СтрокаГруппа,Выборка)
	
	СтрокаГруппа.Дней = СтрокаГруппа.Дней + Выборка.Дней;
	СтрокаГруппа.взр1 = СтрокаГруппа.взр1 + Выборка.взр1;
	СтрокаГруппа.взр2 = СтрокаГруппа.взр2 + Выборка.взр2;
	СтрокаГруппа.взр3 = СтрокаГруппа.взр3 + Выборка.взр3;
	СтрокаГруппа.взр4 = СтрокаГруппа.взр4 + Выборка.взр4;
	СтрокаГруппа.взр5 = СтрокаГруппа.взр5 + Выборка.взр5;
	СтрокаГруппа.взр6 = СтрокаГруппа.взр6 + Выборка.взр6;
	СтрокаГруппа.взр7 = СтрокаГруппа.взр7 + Выборка.взр7;
	СтрокаГруппа.взр8 = СтрокаГруппа.взр8 + Выборка.взр8;
	СтрокаГруппа.взр9 = СтрокаГруппа.взр9 + Выборка.взр9;
	СтрокаГруппа.взр10 = СтрокаГруппа.взр10 + Выборка.взр10;
	СтрокаГруппа.Случаев = СтрокаГруппа.Случаев + Выборка.Случаев;
	
КонецПроцедуры

Функция ПолучитьТаблицуСтраниц_2022(ПараметрыОтчета)
	
	// Таблица для возврата
	ГруппыДиагнозов = ТаблицаГруппДиагнозов_2022();
	
	// Таблица данных
	РезультатЗапрос = ВыборкаСлучаевЛН_2022(ПараметрыОтчета);
	
	// 1. Вычитываем доп. дни по случаям, в которых несколько БЛ.
	БЛДни = РезультатЗапрос[3].Выгрузить();
	БЛДни.ЗаполнитьЗначения(0, "Дней");
	
	ОтсутствующиеЛН = "";
	
	Счетчик = БЛДни.Количество();
	Пока Счетчик <>0 Цикл
		Для Каждого Стр из БЛДни Цикл
			Если Стр.ПредыдущийЛН <> "" Тогда
				
				Если ТипЗнч(Стр.ПредыдущийЛН) = Тип("Строка") Тогда
					Номер = Число(Стр.ПредыдущийЛН);
					СсылкаНаОбъект = Документы.ЛистокНетрудоспособности.НайтиПоНомеру(Номер);
				ИначеЕсли ТипЗнч(Стр.ПредыдущийЛН) = Тип("ДокументСсылка.ЛистокНетрудоспособности") Тогда
					СсылкаНаОбъект = Стр.ПредыдущийЛН;
				КонецЕсли;
				
				Если СсылкаНаОбъект = Документы.ЛистокНетрудоспособности.ПустаяСсылка() Тогда // Ошибка при пустой ссылке.
					ОтсутствующиеЛН = ОтсутствующиеЛН + Стр.ПредыдущийЛН + Символы.ПС;
					Стр.ПредыдущийЛН = "";
					Счетчик = Счетчик -1;
				Иначе
					Объект =СсылкаНаОбъект.ПолучитьОбъект();
					ДниПредБл = (НачалоДня(Объект.ДатаОкончания) - НачалоДня(Объект.Запись1ДатаНачала)) / (60 * 60 * 24);
					Стр.Дней = Стр.Дней + ДниПредБл + 1;
					Если Объект.ДокументОснование <> Неопределено Тогда
						Стр.ПредыдущийЛН = Объект.ДокументОснование; 
					Иначе
						Стр.ПредыдущийЛН = "";
						Счетчик = Счетчик -1;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// 2. Заполняем таблицу по диагнозам
	ДиагнозВыборка = РезультатЗапрос[1].Выбрать();
	
	КоличествоГрупп = (ГруппыДиагнозов.Количество() - 11) - 1;
	КоличествоСтрок = ГруппыДиагнозов.Количество() - 1;
	
	// Строки "ИТОГО по всем причинам"
	ИТОГО_м = ГруппыДиагнозов[ГруппыДиагнозов.Количество()-3];
	ИТОГО_ж = ГруппыДиагнозов[ГруппыДиагнозов.Количество()-2];
	ГруппыИтого = "A00-O99,Q00-Q99,S00-T98,U07.1,U07.2,Z00-Z99";
	МассивГруппИтого = СтрРазделить(ГруппыИтого,",",Ложь);
	
	СтартГрупп = 0;
	Пока ДиагнозВыборка.Следующий() Цикл
		КодДиагноза = ДиагнозВыборка.КодДиагноза;
		
		ВходитВГруппу = Ложь;
		Для Сч = СтартГрупп По КоличествоГрупп Цикл
			СтрокаГруппа = ГруппыДиагнозов[Сч];
			МассивГрупп = СтрРазделить(СтрокаГруппа.Группа,",",Ложь);
			
			Для Каждого ГруппаДиагноза Из МассивГрупп Цикл
				ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
				Если ВходитВГруппу Тогда
					Если ДиагнозВыборка.Пол = Перечисления.ПолФизическихЛиц.Женский И Не СтрокаГруппа.Женское Тогда
						СтрокаГруппа = ГруппыДиагнозов[Сч + 1];
					КонецЕсли;
					ЗаполнитьТекущуюСтроку(СтрокаГруппа,ДиагнозВыборка);
					
					Для Каждого Стр Из БЛДни Цикл
						Если Стр.ПричинаНетрудоспособностиКод = ДиагнозВыборка.Код
							И Стр.КодДиагноза = ДиагнозВыборка.КодДиагноза
							И Стр.Пол = ДиагнозВыборка.Пол
						Тогда
							СтрокаГруппа.Дней = СтрокаГруппа.Дней + Стр.Дней;
						КонецЕсли;
					КонецЦикла;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		СтрокаГруппа = ИТОГО_м;
		Для Каждого ГруппаДиагноза Из МассивГруппИтого Цикл
				ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
				Если ВходитВГруппу Тогда
					Если ДиагнозВыборка.Пол = Перечисления.ПолФизическихЛиц.Женский И Не СтрокаГруппа.Женское Тогда
						СтрокаГруппа = ИТОГО_ж;
					КонецЕсли;
					ЗаполнитьТекущуюСтроку(СтрокаГруппа,ДиагнозВыборка);
					
					Для Каждого Стр из БЛДни Цикл
						Если  Стр.ПричинаНетрудоспособностиКод = ДиагнозВыборка.Код
							И Стр.КодДиагноза = ДиагнозВыборка.КодДиагноза
							И Стр.Пол = ДиагнозВыборка.Пол
						Тогда
							СтрокаГруппа.Дней = СтрокаГруппа.Дней + Стр.Дней;
						КонецЕсли;
					КонецЦикла;
					
					Прервать;
				КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// 2. Заполняем таблицу по причинам 
	ПричиныВыборка = РезультатЗапрос[2].Выбрать();
	
	СтрокаКарантинПоCOVID = "Z20.8,Z22.8,Z29.0";
	СтрокаТуберкулез = "A15-A19";
	СтрокаИнфаркт = "I20-I25";
	НомерДопСтрока = 0;
	Пока ПричиныВыборка.Следующий() Цикл
		НомераСтрок = Новый Массив;
		ЗаполнитьИтого = Истина;
		ДолечиваниеТуб = Ложь;
		ДолечиваниеИнф = Ложь;
		
		Если ПричиныВыборка.Код = "09" Тогда
			НомераСтрок.Добавить(54);
		ИначеЕсли ПричиныВыборка.Код = "08" Тогда
			ДолечиваниеТуб = ДиагнозВходитВГруппу(ПричиныВыборка.КодДиагноза,СтрокаТуберкулез);
			ДолечиваниеИнф = ДиагнозВходитВГруппу(ПричиныВыборка.КодДиагноза,СтрокаИнфаркт);
			Если ДолечиваниеТуб Тогда
				НомераСтрок.Добавить(51);
				НомераСтрок.Добавить(2);
				НомераСтрок.Добавить(0);
			ИначеЕсли ДолечиваниеИнф Тогда
				НомераСтрок.Добавить(51);
				НомераСтрок.Добавить(24);
				НомераСтрок.Добавить(22);
			ИначеЕсли ДолечиваниеТуб = Ложь И ДолечиваниеИнф = Ложь Тогда
				НомераСтрок.Добавить(56);
			КонецЕсли;
		ИначеЕсли ПричиныВыборка.Код = "03" Тогда
			НомераСтрок.Добавить(58);
			КарCovid = СтрНайти(СтрокаКарантинПоCOVID,ПричиныВыборка.КодДиагноза,,,);
			Если КарCovid > 0 Тогда
				НомераСтрок.Добавить(60);
			КонецЕсли;
		ИначеЕсли ПричиныВыборка.Код = "05" Тогда
			НомераСтрок.Добавить(64);
			ЗаполнитьИтого = Ложь;
		КонецЕсли;
		
		// Женская или мужская строка
		ДопИндексЖ = 0;
		Если ПричиныВыборка.Пол = Перечисления.ПолФизическихЛиц.Женский И ПричиныВыборка.Код <> "05" Тогда
			ДопИндексЖ = ДопИндексЖ + 1;
			СтрокаИтог = ИТОГО_ж;
		Иначе
			СтрокаИтог = ИТОГО_м;
		КонецЕсли;
		
		Для Каждого Элемент Из НомераСтрок Цикл
			Элемент = Элемент + ДопИндексЖ;
			СтрокаГруппа = ГруппыДиагнозов[Элемент];
			ЗаполнитьТекущуюСтроку(СтрокаГруппа,ПричиныВыборка);
			
			Для Каждого Стр из БЛДни Цикл
				Если Стр.ПричинаНетрудоспособностиКод = ПричиныВыборка.Код
					И Стр.КодДиагноза = ПричиныВыборка.КодДиагноза
					И Стр.Пол = ПричиныВыборка.Пол
				Тогда
					СтрокаГруппа.Дней = СтрокаГруппа.Дней + Стр.Дней;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если ЗаполнитьИтого Тогда 
			ЗаполнитьТекущуюСтроку(СтрокаИтог,ПричиныВыборка);
			Для Каждого Стр из БЛДни Цикл
				Если Стр.ПричинаНетрудоспособностиКод = ПричиныВыборка.Код
					И Стр.КодДиагноза = ПричиныВыборка.КодДиагноза
					И Стр.Пол = ПричиныВыборка.Пол
				Тогда
					СтрокаГруппа.Дней = СтрокаГруппа.Дней + Стр.Дней;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	ИтоговаяТаблица = Новый Структура ("Группы, ОтсутствующиеЛН", ГруппыДиагнозов,ОтсутствующиеЛН);
	
	Возврат ИтоговаяТаблица;
	
КонецФункции

Функция ВыборкаСлучаевЛН_2022(ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("СписокФилиалов",	ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЛистокНетрудоспособности.ДиагнозПоМКБ10) = ТИП(Справочник.Диагнозы)
		|			ТОГДА ЛистокНетрудоспособности.ДиагнозПоМКБ10.КодДиагноза
		|		ИНАЧЕ ВЫРАЗИТЬ(ЛистокНетрудоспособности.ДиагнозПоМКБ10 КАК СТРОКА(10))
		|	КОНЕЦ КАК КодДиагноза,
		|	РАЗНОСТЬДАТ(ЛистокНетрудоспособности.ДатаРождения, ЛистокНетрудоспособности.ДатаОкончания, ГОД) - ВЫБОР
		|		КОГДА ДЕНЬГОДА(ЛистокНетрудоспособности.Клиент.ДатаРождения) > ДЕНЬГОДА(ЛистокНетрудоспособности.ДатаОкончания)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возраст,
		|	ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.ДокументОснование = ЗНАЧЕНИЕ(Документ.ЛистокНетрудоспособности.ПустаяСсылка)
		|				ИЛИ ЛистокНетрудоспособности.ДокументОснование = НЕОПРЕДЕЛЕНО
		|			ТОГДА """"
		|		ИНАЧЕ ЛистокНетрудоспособности.ДокументОснование
		|	КОНЕЦ КАК ПредыдущийЛН,
		|	ЛистокНетрудоспособности.Пол КАК Пол,
		|	ЛистокНетрудоспособности.ПричинаНетрудоспособности.Код КАК ПричинаНетрудоспособностиКод,
		|	РАЗНОСТЬДАТ(ЛистокНетрудоспособности.Запись1ДатаНачала, ЛистокНетрудоспособности.ДатаОкончания, ДЕНЬ) + 1 КАК Дней,
		|	СтатусыОбменаФСС.СтатусФСС КАК СтатусФСС
		|ПОМЕСТИТЬ СписокДиагнозов
		|ИЗ
		|	Документ.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОбменаФСС КАК СтатусыОбменаФСС
		|		ПО ЛистокНетрудоспособности.Ссылка = СтатусыОбменаФСС.Объект
		|ГДЕ
		|	ЛистокНетрудоспособности.Филиал В(&СписокФилиалов)
		|	И СтатусыОбменаФСС.СтатусФСС = ЗНАЧЕНИЕ(Перечисление.СтатусыФСС.ЭЛНЗакрыт)
		|	И (ЛистокНетрудоспособности.Запись1ДатаНачала >= &НачалоПериода
		|				И ЛистокНетрудоспособности.ДатаОкончания <= &КонецПериода
		|			ИЛИ ЛистокНетрудоспособности.Запись1ДатаНачала < &НачалоПериода
		|				И ЛистокНетрудоспособности.ДатаОкончания >= &НачалоПериода)
		|	И ЛистокНетрудоспособности.ЛПУОГРН = ЛистокНетрудоспособности.Филиал.Организация.ОГРН
		|	И НЕ ЛистокНетрудоспособности.ПометкаУдаления
		|	И (ЛистокНетрудоспособности.ВидЛистка = ЗНАЧЕНИЕ(Перечисление.ВидыЛистковНетрудоспособности.Первичный)
		|				И ЛистокНетрудоспособности.СледующийЛН = """"
		|			ИЛИ ЛистокНетрудоспособности.ВидЛистка = ЗНАЧЕНИЕ(Перечисление.ВидыЛистковНетрудоспособности.Продолжение)
		|				И ЛистокНетрудоспособности.СледующийЛН = """")
		|  И ЛистокНетрудоспособности.РабочийКонтур = ИСТИНА
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 15
		|					И СписокДиагнозов.Возраст <= 19
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр1,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 20
		|					И СписокДиагнозов.Возраст <= 24
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр2,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 25
		|					И СписокДиагнозов.Возраст <= 29
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр3,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 30
		|					И СписокДиагнозов.Возраст <= 34
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр4,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 35
		|					И СписокДиагнозов.Возраст <= 39
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр5,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 40
		|					И СписокДиагнозов.Возраст <= 44
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр6,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 45
		|					И СписокДиагнозов.Возраст <= 49
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр7,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 50
		|					И СписокДиагнозов.Возраст <= 54
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр8,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 55
		|					И СписокДиагнозов.Возраст <= 59
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр9,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 60
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр10,
		|	КОЛИЧЕСТВО(1) КАК Случаев,
		|	СписокДиагнозов.КодДиагноза КАК КодДиагноза,
		|	СписокДиагнозов.Пол КАК Пол,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод КАК Код,
		|	СУММА(СписокДиагнозов.Дней) КАК Дней
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	НЕ СписокДиагнозов.ПричинаНетрудоспособностиКод В (""09"", ""08"", ""03"", ""05"")
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДиагнозов.КодДиагноза,
		|	СписокДиагнозов.Пол,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДиагноза УБЫВ,
		|	Пол УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 15
		|					И СписокДиагнозов.Возраст <= 19
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр1,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 20
		|					И СписокДиагнозов.Возраст <= 24
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр2,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 25
		|					И СписокДиагнозов.Возраст <= 29
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр3,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 30
		|					И СписокДиагнозов.Возраст <= 34
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр4,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 35
		|					И СписокДиагнозов.Возраст <= 39
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр5,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 40
		|					И СписокДиагнозов.Возраст <= 44
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр6,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 45
		|					И СписокДиагнозов.Возраст <= 49
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр7,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 50
		|					И СписокДиагнозов.Возраст <= 54
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр8,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 55
		|					И СписокДиагнозов.Возраст <= 59
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр9,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 60
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр10,
		|	КОЛИЧЕСТВО(1) КАК Случаев,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод КАК Код,
		|	СписокДиагнозов.Пол КАК Пол,
		|	СписокДиагнозов.КодДиагноза КАК КодДиагноза,
		|	СУММА(СписокДиагнозов.Дней) КАК Дней
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод В (""09"", ""08"", ""03"", ""05"")
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод,
		|	СписокДиагнозов.КодДиагноза,
		|	СписокДиагнозов.Пол,
		|	СписокДиагнозов.Дней
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДиагноза УБЫВ,
		|	Пол УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДиагнозов.КодДиагноза КАК КодДиагноза,
		|	СписокДиагнозов.Возраст КАК Возраст,
		|	СписокДиагнозов.ПредыдущийЛН КАК ПредыдущийЛН,
		|	СписокДиагнозов.Пол КАК Пол,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод КАК ПричинаНетрудоспособностиКод,
		|	СписокДиагнозов.Дней КАК Дней
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	СписокДиагнозов.ПредыдущийЛН <> """"";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

Функция ТаблицаГруппДиагнозов_2022()
	
	ГруппыДиагнозов = Новый ТаблицаЗначений;
	ГруппыДиагнозов.Колонки.Добавить("Группа", Новый ОписаниеТипов("Строка"));
	ГруппыДиагнозов.Колонки.Добавить("Женское", Новый ОписаниеТипов("Булево"));
	ГруппыДиагнозов.Колонки.Добавить("Дней", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Случаев", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр1", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр2", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр3", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр4", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр5", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр6", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр7", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр8", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр9", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр10", Новый ОписаниеТипов("Число"));
	
	ГруппыДиагнозов.Добавить().Группа = "A00-B99"; // Муж
	ГруппыДиагнозов.Добавить().Женское = Истина; // Жен
	ГруппыДиагнозов.Добавить().Группа = "A15-A19";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "C00-D48";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "C00-C97";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "D50-D89";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "E00-E89,E90";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "E10-E14";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "F00-F99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "G00-G98,G99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "H00-H59";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "H60-H95";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I00-I99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I20-I25";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I60-I69";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J00-J98,J99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J00,J01,J04,J05,J06";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J09,J11";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J12-J18";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "K00-K92,K93";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "L00-L99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "M00-M99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "N00-N99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	НоваяСтрока = ГруппыДиагнозов.Добавить(); // Жен
	НоваяСтрока.Группа = "O00-O99";
	НоваяСтрока.Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "Q00-Q99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "S00-T98";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "U07.1,U07.2";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "A00-O99,Q00-Q99,S00-T98,U07.1,U07.2";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "O03-O08";
	ГруппыДиагнозов.Добавить().Группа = "09";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "09";
	ГруппыДиагнозов.Добавить().Группа = "08";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "08";
	ГруппыДиагнозов.Добавить().Группа = "03";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "03";
	ГруппыДиагнозов.Добавить().Группа = "Z20.8,Z22.8,Z29.0";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ВсегоМужПричины = ГруппыДиагнозов.Добавить();
	ВсегоМужПричины.Группа = "ВсегоМужПричины";
	ВсегоЖенПричины = ГруппыДиагнозов.Добавить();
	ВсегоЖенПричины.Группа = "ВсегоЖенПричины";
	ПоБеремености = ГруппыДиагнозов.Добавить();
	ПоБеремености.Группа = "05";
	ПоБеремености.Женское = Истина;
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

#Область Форма_2014 // Используемые только для формы образца 2014 года

Функция ПолучитьТаблицуСтраниц_2014(ПараметрыОтчета)
	
	// Таблица для возврата
	ГруппыДиагнозов = ТаблицаГруппДиагнозов_2014();
	
	// Таблица данных
	РезультатЗапрос = ВыборкаДиагнозовЛН_2014(ПараметрыОтчета);
	
	// 1. Заполняем таблицу по диагнозам
	ДиагнозВыборка = РезультатЗапрос[2].Выбрать();
	
	КоличествоГрупп = (ГруппыДиагнозов.Количество() - 10) - 1;
	КоличествоСтрок = ГруппыДиагнозов.Количество() - 1;
	
	// Строка аборты
	СтрокаАборты = ГруппыДиагнозов[ГруппыДиагнозов.Количество() - 10];
	МассивГруппБеремености = СтрРазделить(СтрокаАборты.Группа,",",Ложь);
	
	СтартГрупп = 1;
	Пока ДиагнозВыборка.Следующий() Цикл
		КодДиагноза = ДиагнозВыборка.КодДиагноза;
		
		ВходитВГруппу = Ложь;
		Для Сч = СтартГрупп По КоличествоГрупп Цикл
			СтрокаГруппа = ГруппыДиагнозов[Сч];
			МассивГрупп = СтрРазделить(СтрокаГруппа.Группа,",",Ложь);
			Для каждого ГруппаДиагноза Из МассивГрупп Цикл
				ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
				Если ВходитВГруппу Тогда
					Если ДиагнозВыборка.Пол = Перечисления.ПолФизическихЛиц.Женский И Не СтрокаГруппа.Женское Тогда
						СтрокаГруппа = ГруппыДиагнозов[Сч + 1];
					КонецЕсли; 
					СтрокаГруппа.Дней = СтрокаГруппа.Дней + ДиагнозВыборка.Дней;
					СтрокаГруппа.взр1 = СтрокаГруппа.взр1 + ДиагнозВыборка.взр1;
					СтрокаГруппа.взр2 = СтрокаГруппа.взр2 + ДиагнозВыборка.взр2;
					СтрокаГруппа.взр3 = СтрокаГруппа.взр3 + ДиагнозВыборка.взр3;
					СтрокаГруппа.взр4 = СтрокаГруппа.взр4 + ДиагнозВыборка.взр4;
					СтрокаГруппа.взр5 = СтрокаГруппа.взр5 + ДиагнозВыборка.взр5;
					СтрокаГруппа.взр6 = СтрокаГруппа.взр6 + ДиагнозВыборка.взр6;
					СтрокаГруппа.взр7 = СтрокаГруппа.взр7 + ДиагнозВыборка.взр7;
					СтрокаГруппа.взр8 = СтрокаГруппа.взр8 + ДиагнозВыборка.взр8;
					СтрокаГруппа.взр9 = СтрокаГруппа.взр9 + ДиагнозВыборка.взр9;
					СтрокаГруппа.взр10 = СтрокаГруппа.взр10 + ДиагнозВыборка.взр10;
					СтрокаГруппа.Случаев = СтрокаГруппа.Случаев + ДиагнозВыборка.Случаев;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		// Строка аборты
		Для каждого ГруппаДиагноза Из МассивГруппБеремености Цикл
			Если ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза) Тогда
				СтрокаАборты.Дней = СтрокаАборты.Дней + ДиагнозВыборка.Дней;
				СтрокаАборты.взр1 = СтрокаАборты.взр1 + ДиагнозВыборка.взр1;
				СтрокаАборты.взр2 = СтрокаАборты.взр2 + ДиагнозВыборка.взр2;
				СтрокаАборты.взр3 = СтрокаАборты.взр3 + ДиагнозВыборка.взр3;
				СтрокаАборты.взр4 = СтрокаАборты.взр4 + ДиагнозВыборка.взр4;
				СтрокаАборты.взр5 = СтрокаАборты.взр5 + ДиагнозВыборка.взр5;
				СтрокаАборты.взр6 = СтрокаАборты.взр6 + ДиагнозВыборка.взр6;
				СтрокаАборты.взр7 = СтрокаАборты.взр7 + ДиагнозВыборка.взр7;
				СтрокаАборты.взр8 = СтрокаАборты.взр8 + ДиагнозВыборка.взр8;
				СтрокаАборты.взр9 = СтрокаАборты.взр9 + ДиагнозВыборка.взр9;
				СтрокаАборты.взр10 = СтрокаАборты.взр10 + ДиагнозВыборка.взр10;
				СтрокаАборты.Случаев = СтрокаАборты.Случаев + ДиагнозВыборка.Случаев;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	// 2. Заполняем таблицу по причинам
	ПричиныВыборка = РезультатЗапрос[1].Выбрать();
	ВсегоЖенПричины = ГруппыДиагнозов[КоличествоСтрок - 1];
	ВсегоМужПричины = ГруппыДиагнозов[КоличествоСтрок - 2];
	
	Пока ПричиныВыборка.Следующий() Цикл
		Если ПричиныВыборка.Пол = Перечисления.ПолФизическихЛиц.Женский Тогда
			СтрокаГруппы = ГруппыДиагнозов.НайтиСтроки(Новый Структура("Группа, Женское",ПричиныВыборка.Код,Истина))[0];
			СтрокаИтог = ВсегоЖенПричины;
		Иначе
			СтрокаГруппы = ГруппыДиагнозов.НайтиСтроки(Новый Структура("Группа, Женское",ПричиныВыборка.Код,Ложь))[0];
			СтрокаИтог = ВсегоМужПричины;
		КонецЕсли;
		
		СтрокаГруппы.Дней = СтрокаГруппы.Дней + ПричиныВыборка.Дней;
		СтрокаГруппы.взр1 = СтрокаГруппы.взр1 + ПричиныВыборка.взр1;
		СтрокаГруппы.взр2 = СтрокаГруппы.взр2 + ПричиныВыборка.взр2;
		СтрокаГруппы.взр3 = СтрокаГруппы.взр3 + ПричиныВыборка.взр3;
		СтрокаГруппы.взр4 = СтрокаГруппы.взр4 + ПричиныВыборка.взр4;
		СтрокаГруппы.взр5 = СтрокаГруппы.взр5 + ПричиныВыборка.взр5;
		СтрокаГруппы.взр6 = СтрокаГруппы.взр6 + ПричиныВыборка.взр6;
		СтрокаГруппы.взр7 = СтрокаГруппы.взр7 + ПричиныВыборка.взр7;
		СтрокаГруппы.взр8 = СтрокаГруппы.взр8 + ПричиныВыборка.взр8;
		СтрокаГруппы.взр9 = СтрокаГруппы.взр9 + ПричиныВыборка.взр9; 
		СтрокаГруппы.взр10 = СтрокаГруппы.взр10 + ПричиныВыборка.взр10; 
		СтрокаГруппы.Случаев = СтрокаГруппы.Случаев + ПричиныВыборка.Случаев;
		
		СтрокаИтог.Дней = СтрокаИтог.Дней + ПричиныВыборка.Дней;
		СтрокаИтог.взр1 = СтрокаИтог.взр1 + ПричиныВыборка.взр1;
		СтрокаИтог.взр2 = СтрокаИтог.взр2 + ПричиныВыборка.взр2;
		СтрокаИтог.взр3 = СтрокаИтог.взр3 + ПричиныВыборка.взр3;
		СтрокаИтог.взр4 = СтрокаИтог.взр4 + ПричиныВыборка.взр4;
		СтрокаИтог.взр5 = СтрокаИтог.взр5 + ПричиныВыборка.взр5;
		СтрокаИтог.взр6 = СтрокаИтог.взр6 + ПричиныВыборка.взр6;
		СтрокаИтог.взр7 = СтрокаИтог.взр7 + ПричиныВыборка.взр7;
		СтрокаИтог.взр8 = СтрокаИтог.взр8 + ПричиныВыборка.взр8;
		СтрокаИтог.взр9 = СтрокаИтог.взр9 + ПричиныВыборка.взр9; 
		СтрокаИтог.взр10 = СтрокаИтог.взр10 + ПричиныВыборка.взр10;
		СтрокаИтог.Случаев = СтрокаИтог.Случаев + ПричиныВыборка.Случаев;
	КонецЦикла;
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

Функция ВыборкаДиагнозовЛН_2014(ПараметрыОтчета)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("СписокФилиалов",	ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ТИПЗНАЧЕНИЯ(ЛистокНетрудоспособности.ДиагнозПоМКБ10) = ТИП(Справочник.Диагнозы)
		|			ТОГДА ЛистокНетрудоспособности.ДиагнозПоМКБ10.КодДиагноза
		|		ИНАЧЕ ВЫРАЗИТЬ(ЛистокНетрудоспособности.ДиагнозПоМКБ10 КАК СТРОКА(10)) 
		|	КОНЕЦ КАК КодДиагноза, 
		|	РАЗНОСТЬДАТ(ЛистокНетрудоспособности.Клиент.ДатаРождения, ЛистокНетрудоспособности.Дата, ГОД) - ВЫБОР
		|		КОГДА ДЕНЬГОДА(ЛистокНетрудоспособности.Клиент.ДатаРождения) >= ДЕНЬГОДА(ЛистокНетрудоспособности.Дата)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возраст,
		|	ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.ПервичныйЛисток = ЗНАЧЕНИЕ(Документ.ЛистокНетрудоспособности.ПустаяСсылка) ИЛИ ЛистокНетрудоспособности.ПервичныйЛисток = НЕОПРЕДЕЛЕНО
		|			ТОГДА ЛистокНетрудоспособности.Ссылка
		|		ИНАЧЕ ЛистокНетрудоспособности.ПервичныйЛисток
		|	КОНЕЦ КАК ПервичныйЛисток,
		|	ЛистокНетрудоспособности.Пол КАК Пол,
		|	ЛистокНетрудоспособности.ПричинаНетрудоспособности.Код КАК ПричинаНетрудоспособностиКод,
		|	ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.Запись1ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.Запись1ДатаНачала, ЛистокНетрудоспособности.Запись1ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.Запись2ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.Запись2ДатаНачала, ЛистокНетрудоспособности.Запись2ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.Запись3ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.Запись3ДатаНачала, ЛистокНетрудоспособности.Запись3ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.ПервичныйЛисток.Запись1ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.ПервичныйЛисток.Запись1ДатаНачала, ЛистокНетрудоспособности.ПервичныйЛисток.Запись1ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.ПервичныйЛисток.Запись2ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.ПервичныйЛисток.Запись2ДатаНачала, ЛистокНетрудоспособности.ПервичныйЛисток.Запись2ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ + ВЫБОР
		|		КОГДА ЛистокНетрудоспособности.ПервичныйЛисток.Запись3ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РАЗНОСТЬДАТ(ЛистокНетрудоспособности.ПервичныйЛисток.Запись3ДатаНачала, ЛистокНетрудоспособности.ПервичныйЛисток.Запись3ДатаОкончания, ДЕНЬ)
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Дней
		|ПОМЕСТИТЬ СписокДиагнозов
		|ИЗ
		|	Документ.ЛистокНетрудоспособности КАК ЛистокНетрудоспособности
		|ГДЕ
		|	ЛистокНетрудоспособности.ДиагнозПоМКБ10 <> ЗНАЧЕНИЕ(Справочник.Диагнозы.ПустаяСсылка)
		|	И ЛистокНетрудоспособности.Филиал В(&СписокФилиалов)
		|	И ЛистокНетрудоспособности.Дата >= &НачалоПериода
		|	И ЛистокНетрудоспособности.Дата <= &КонецПериода
		|	И НЕ ЛистокНетрудоспособности.Статус В (ЗНАЧЕНИЕ(Перечисление.СтатусыЛистковНетрудоспособности.Испорчен), ЗНАЧЕНИЕ(Перечисление.СтатусыЛистковНетрудоспособности.Подготовка))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(СписокДиагнозов.Возраст) КАК Возраст,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод = ""05"" КАК ПоБеремености,
		|	СписокДиагнозов.Пол КАК Пол,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 15
		|					И СписокДиагнозов.Возраст <= 19
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр1,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 20
		|					И СписокДиагнозов.Возраст <= 24
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр2,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 25
		|					И СписокДиагнозов.Возраст <= 29
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр3,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 30
		|					И СписокДиагнозов.Возраст <= 34
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр4,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 35
		|					И СписокДиагнозов.Возраст <= 39
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр5,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 40
		|					И СписокДиагнозов.Возраст <= 44
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр6,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 45
		|					И СписокДиагнозов.Возраст <= 49
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр7,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 50
		|					И СписокДиагнозов.Возраст <= 54
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр8,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 55
		|					И СписокДиагнозов.Возраст <= 59
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр9,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 60
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр10,
		|	КОЛИЧЕСТВО(1) КАК Случаев,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод КАК Код,
		|	СписокДиагнозов.Дней КАК Дней
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод В (""09"", ""08"", ""03"", ""05"")
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДиагнозов.Пол,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод,
		|	СписокДиагнозов.Дней
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПоБеремености,
		|	СписокДиагнозов.ПричинаНетрудоспособностиКод УБЫВ,
		|	Пол УБЫВ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 15
		|					И СписокДиагнозов.Возраст <= 19
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр1,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 20
		|					И СписокДиагнозов.Возраст <= 24
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр2,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 25
		|					И СписокДиагнозов.Возраст <= 29
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр3,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 30
		|					И СписокДиагнозов.Возраст <= 34
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр4,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 35
		|					И СписокДиагнозов.Возраст <= 39
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр5,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 40
		|					И СписокДиагнозов.Возраст <= 44
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр6,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 45
		|					И СписокДиагнозов.Возраст <= 49
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр7,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 50
		|					И СписокДиагнозов.Возраст <= 54
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр8,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 55
		|					И СписокДиагнозов.Возраст <= 59
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр9,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст >= 60
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК взр10,
		|	КОЛИЧЕСТВО(1) КАК Случаев,
		|	СписокДиагнозов.КодДиагноза КАК КодДиагноза,
		|	СписокДиагнозов.Пол КАК Пол,
		|	СписокДиагнозов.Дней КАК Дней
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДиагнозов.КодДиагноза,
		|	СписокДиагнозов.Пол,
		|	СписокДиагнозов.Дней
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДиагноза,
		|	Пол УБЫВ";
	
	Возврат Запрос.ВыполнитьПакет();
	
КонецФункции

Функция ТаблицаГруппДиагнозов_2014()
	
	ГруппыДиагнозов = Новый ТаблицаЗначений;
	ГруппыДиагнозов.Колонки.Добавить("Группа", Новый ОписаниеТипов("Строка"));
	ГруппыДиагнозов.Колонки.Добавить("Женское", Новый ОписаниеТипов("Булево"));
	ГруппыДиагнозов.Колонки.Добавить("Дней", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Случаев", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр1", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр2", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр3", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр4", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр5", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр6", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр7", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр8", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр9", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("взр10", Новый ОписаниеТипов("Число"));
	
	ГруппыДиагнозов.Добавить().Группа = "A00-B99"; // Муж
	ГруппыДиагнозов.Добавить().Женское = Истина; // Жен
	ГруппыДиагнозов.Добавить().Группа = "A15-A19";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "C00-D48";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "C00-C97";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "D50-D89";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "E00-E89,E90";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "E10-E14";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "F00-F99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "G00-G98,G99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "H00-H59";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "H60-H95";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I00-I99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I20-I25";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "I60-I69";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J00-J98,J99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J00,J01,J04,J05,J06";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J09,J11";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "J12-J18";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "K00-K92,K93";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "L00-L99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "M00-M99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "N00-N99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	НоваяСтрока = ГруппыДиагнозов.Добавить(); // Жен
	НоваяСтрока.Группа = "O00-O99";
	НоваяСтрока.Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "Q00-Q99";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "S00-T98";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "A00-T98";
	ГруппыДиагнозов.Добавить().Женское = Истина;
	ГруппыДиагнозов.Добавить().Группа = "O03-O08";
	ГруппыДиагнозов.Добавить().Группа = "09";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "09";
	ГруппыДиагнозов.Добавить().Группа = "08";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "08";
	ГруппыДиагнозов.Добавить().Группа = "03";
	НоваяСтрока = ГруппыДиагнозов.Добавить();
	НоваяСтрока.Женское = Истина;
	НоваяСтрока.Группа = "03";
	ВсегоМужПричины = ГруппыДиагнозов.Добавить();
	ВсегоМужПричины.Группа = "ВсегоМужПричины";
	ВсегоЖенПричины = ГруппыДиагнозов.Добавить();
	ВсегоЖенПричины.Группа = "ВсегоЖенПричины";
	ПоБеремености = ГруппыДиагнозов.Добавить();
	ПоБеремености.Группа = "05";
	ПоБеремености.Женское = Истина;
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

#КонецОбласти

#КонецОбласти 

#Область Расшифровка

// Установить параметры расшифровки
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма
//  ПараметрыОтчета	 - Структура - параметры отчета 
//  ИмяЯчейки		 - Строка - имя ячейки.
// 
// Возвращаемое значение:
//  Структура - параметры расшифровки.
//
Функция УстановитьПараметрыРасшифровки(ВыбраннаяФорма, ПараметрыОтчета, ИмяЯчейки) Экспорт
	
	Если ВыбраннаяФорма = "ФормаОтчета" Тогда
		ИмяФормыРасшифровкиОтчета = "Отчет.РасшифровкаМедицинскогоОтчетаФорма16вн.ФормаОбъекта";
		ГруппыДиагнозов = ПолучитьГруппуЯчейки_2014(ИмяЯчейки);
	Иначе
		ИмяФормыРасшифровкиОтчета = "Отчет.РасшифровкаМедицинскогоОтчетаФорма16вн_2022.ФормаОбъекта";
		ГруппыДиагнозов = ПолучитьГруппуЯчейки_2022(ИмяЯчейки);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ГруппыДиагнозов) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыРасшифровки = Новый Структура();
	
	ПараметрыРасшифровки.Вставить("Группа", ГруппыДиагнозов);
	ПараметрыРасшифровки.Вставить("Страница", ПараметрыОтчета.ТекущаяСтрокаРазделовОтчета);
	ПараметрыРасшифровки.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаПериодаОтчета);
	ПараметрыРасшифровки.Вставить("КонецПериода", ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	ПараметрыРасшифровки.Вставить("СписокФилиалов", ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	ПараметрыРасшифровки.Вставить("Колонка", ПолучитьОтборПоКолонке(ИмяЯчейки));
	
	Возврат Новый Структура("ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки", ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки);
	
КонецФункции

Функция ПолучитьОтборПоКолонке(ИмяЯчейки)
	
	ИндексКолонки = Число(Сред(ИмяЯчейки,11,3)) - 1;
	Если ИндексКолонки = 2 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 15 И СписокДиагнозов.Возраст <= 19 ";
	ИначеЕсли ИндексКолонки = 3 Тогда 
		Возврат " И СписокДиагнозов.Возраст >= 20 И СписокДиагнозов.Возраст <= 24 ";
	ИначеЕсли ИндексКолонки = 4 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 25 И СписокДиагнозов.Возраст <= 29 ";
	ИначеЕсли ИндексКолонки = 5 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 30 И СписокДиагнозов.Возраст <= 34 ";
	ИначеЕсли ИндексКолонки = 6 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 35 И СписокДиагнозов.Возраст <= 39 ";
	ИначеЕсли ИндексКолонки = 7 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 40 И СписокДиагнозов.Возраст <= 44 ";
	ИначеЕсли ИндексКолонки = 8 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 45 И СписокДиагнозов.Возраст <= 49 ";
	ИначеЕсли ИндексКолонки = 9 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 50 И СписокДиагнозов.Возраст <= 54 ";
	ИначеЕсли ИндексКолонки = 10 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 55 И СписокДиагнозов.Возраст <= 59 ";
	ИначеЕсли ИндексКолонки = 11 Тогда
		Возврат " И СписокДиагнозов.Возраст >= 60 ";
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьГруппуЯчейки_2022(ИмяЯчейки)
	
	Если СтрНайти(ИмяЯчейки,"П010000101") = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ГруппыДиагнозов = Новый Массив;
	
	ГруппыДиагнозов.Добавить("A00-B99"); 
	ГруппыДиагнозов.Добавить("жA00-B99");
	ГруппыДиагнозов.Добавить("A15-A19");
	ГруппыДиагнозов.Добавить("жA15-A19");
	ГруппыДиагнозов.Добавить("C00-D48");
	ГруппыДиагнозов.Добавить("жC00-D48");
	ГруппыДиагнозов.Добавить("C00-C97");
	ГруппыДиагнозов.Добавить("жC00-C97");
	ГруппыДиагнозов.Добавить("D50-D89");
	ГруппыДиагнозов.Добавить("жD50-D89");
	ГруппыДиагнозов.Добавить("E00-E89,E90");
	ГруппыДиагнозов.Добавить("жE00-E89,E90");
	ГруппыДиагнозов.Добавить("E10-E14");
	ГруппыДиагнозов.Добавить("жE10-E14");
	ГруппыДиагнозов.Добавить("F00-F99");
	ГруппыДиагнозов.Добавить("жF00-F99");
	ГруппыДиагнозов.Добавить("G00-G98,G99");
	ГруппыДиагнозов.Добавить("жG00-G98,G99");
	ГруппыДиагнозов.Добавить("H00-H59");
	ГруппыДиагнозов.Добавить("жH00-H59");
	ГруппыДиагнозов.Добавить("H60-H95");
	ГруппыДиагнозов.Добавить("жH60-H95");
	ГруппыДиагнозов.Добавить("I00-I99");
	ГруппыДиагнозов.Добавить("жI00-I99");
	ГруппыДиагнозов.Добавить("I20-I25");
	ГруппыДиагнозов.Добавить("жI20-I25");
	ГруппыДиагнозов.Добавить("I60-I69");
	ГруппыДиагнозов.Добавить("жI60-I69");
	ГруппыДиагнозов.Добавить("J00-J98,J99");
	ГруппыДиагнозов.Добавить("жJ00-J98,J99");
	ГруппыДиагнозов.Добавить("J00,J01,J04,J05,J06");
	ГруппыДиагнозов.Добавить("жJ00,J01,J04,J05,J06");
	ГруппыДиагнозов.Добавить("J09,J11");
	ГруппыДиагнозов.Добавить("жJ09,J11");
	ГруппыДиагнозов.Добавить("J12-J18");
	ГруппыДиагнозов.Добавить("жJ12-J18");
	ГруппыДиагнозов.Добавить("K00-K92,K93");
	ГруппыДиагнозов.Добавить("жK00-K92,K93");
	ГруппыДиагнозов.Добавить("L00-L99");
	ГруппыДиагнозов.Добавить("жL00-L99");
	ГруппыДиагнозов.Добавить("M00-M99");
	ГруппыДиагнозов.Добавить("жM00-M99");
	ГруппыДиагнозов.Добавить("N00-N99");
	ГруппыДиагнозов.Добавить("жN00-N99");
	ГруппыДиагнозов.Добавить("жO00-O99");
	ГруппыДиагнозов.Добавить("Q00-Q99");
	ГруппыДиагнозов.Добавить("Q00-Q99ж");
	ГруппыДиагнозов.Добавить("S00-T98");
	ГруппыДиагнозов.Добавить("жS00-T98");
	ГруппыДиагнозов.Добавить("U07.1,U07.2");
	ГруппыДиагнозов.Добавить("жU07.1,U07.2");
	ГруппыДиагнозов.Добавить("A00-O99,Q00-Q99,S00-T98,U07.1,U07.2");
	ГруппыДиагнозов.Добавить("жA00-O99,Q00-Q99,S00-T98,U07.1,U07.2");
	ГруппыДиагнозов.Добавить("жO03-O08");
	ГруппыДиагнозов.Добавить("09");
	ГруппыДиагнозов.Добавить("ж09");
	ГруппыДиагнозов.Добавить("08");
	ГруппыДиагнозов.Добавить("ж08");
	ГруппыДиагнозов.Добавить("03");
	ГруппыДиагнозов.Добавить("ж03"); 
	ГруппыДиагнозов.Добавить("Z20.8,Z22.8,Z29.0");
	ГруппыДиагнозов.Добавить("жZ20.8,Z22.8,Z29.0");
	ГруппыДиагнозов.Добавить("A00-O99,Q00-Q99,S00-T98,U07.1,U07.2,Z00-Z99");
	ГруппыДиагнозов.Добавить("жA00-O99,Q00-Q99,S00-T98,U07.1,U07.2,Z00-Z99");
	ГруппыДиагнозов.Добавить("ж05");
		
	Попытка
		ИндексЯчейки = Число(СтрЗаменить(ИмяЯчейки, Лев(ИмяЯчейки,14), "")) - 1;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Результат = ГруппыДиагнозов.Получить(ИндексЯчейки);
	
	Возврат Результат;
	
КонецФункции

#Область Форма_2014 // Используемые только для формы образца 2014 года

Функция ПолучитьГруппуЯчейки_2014(ИмяЯчейки)
	
	Если СтрНайти(ИмяЯчейки,"П010000101") = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ГруппыДиагнозов = Новый Массив;
	
	ГруппыДиагнозов.Добавить("A00-B99"); 
	ГруппыДиагнозов.Добавить("жA00-B99");
	ГруппыДиагнозов.Добавить("A15-A19");
	ГруппыДиагнозов.Добавить("жA15-A19");
	ГруппыДиагнозов.Добавить("C00-D48");
	ГруппыДиагнозов.Добавить("жC00-D48");
	ГруппыДиагнозов.Добавить("C00-C97");
	ГруппыДиагнозов.Добавить("жC00-C97");
	ГруппыДиагнозов.Добавить("D50-D89");
	ГруппыДиагнозов.Добавить("жD50-D89");
	ГруппыДиагнозов.Добавить("E00-E89,E90");
	ГруппыДиагнозов.Добавить("жE00-E89,E90");
	ГруппыДиагнозов.Добавить("E10-E14");
	ГруппыДиагнозов.Добавить("жE10-E14");
	ГруппыДиагнозов.Добавить("F00-F99");
	ГруппыДиагнозов.Добавить("жF00-F99");
	ГруппыДиагнозов.Добавить("G00-G98,G99");
	ГруппыДиагнозов.Добавить("жG00-G98,G99");
	ГруппыДиагнозов.Добавить("H00-H59");
	ГруппыДиагнозов.Добавить("жH00-H59");
	ГруппыДиагнозов.Добавить("H60-H95");
	ГруппыДиагнозов.Добавить("жH60-H95");
	ГруппыДиагнозов.Добавить("I00-I99");
	ГруппыДиагнозов.Добавить("жI00-I99");
	ГруппыДиагнозов.Добавить("I20-I25");
	ГруппыДиагнозов.Добавить("жI20-I25");
	ГруппыДиагнозов.Добавить("I60-I69");
	ГруппыДиагнозов.Добавить("жI60-I69");
	ГруппыДиагнозов.Добавить("J00-J98,J99");
	ГруппыДиагнозов.Добавить("жJ00-J98,J99");
	ГруппыДиагнозов.Добавить("J00,J01,J04,J05,J06");
	ГруппыДиагнозов.Добавить("жJ00,J01,J04,J05,J06");
	ГруппыДиагнозов.Добавить("J09,J11");
	ГруппыДиагнозов.Добавить("жJ09,J11");
	ГруппыДиагнозов.Добавить("J12-J18");
	ГруппыДиагнозов.Добавить("жJ12-J18");
	ГруппыДиагнозов.Добавить("K00-K92,K93");
	ГруппыДиагнозов.Добавить("жK00-K92,K93");
	ГруппыДиагнозов.Добавить("L00-L99");
	ГруппыДиагнозов.Добавить("жL00-L99");
	ГруппыДиагнозов.Добавить("M00-M99");
	ГруппыДиагнозов.Добавить("жM00-M99");
	ГруппыДиагнозов.Добавить("N00-N99");
	ГруппыДиагнозов.Добавить("жN00-N99");
	ГруппыДиагнозов.Добавить("жO00-O99");
	ГруппыДиагнозов.Добавить("Q00-Q99");
	ГруппыДиагнозов.Добавить("Q00-Q99ж");
	ГруппыДиагнозов.Добавить("S00-T98");
	ГруппыДиагнозов.Добавить("жS00-T98");
	ГруппыДиагнозов.Добавить("A00-T98");
	ГруппыДиагнозов.Добавить("жA00-T98");
	ГруппыДиагнозов.Добавить("жO03-O08");
	ГруппыДиагнозов.Добавить("09");
	ГруппыДиагнозов.Добавить("ж09");
	ГруппыДиагнозов.Добавить("08");
	ГруппыДиагнозов.Добавить("ж08");
	ГруппыДиагнозов.Добавить("03");
	ГруппыДиагнозов.Добавить("ж03");
	ГруппыДиагнозов.Добавить("0");
	ГруппыДиагнозов.Добавить("ж0");
	ГруппыДиагнозов.Добавить("ж05");
	
	Попытка
		ИндексЯчейки = Число(СтрЗаменить(ИмяЯчейки, Лев(ИмяЯчейки,14), "")) - 1;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Результат = ГруппыДиагнозов.Получить(ИндексЯчейки);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти 

Процедура ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, ИмяРаздела, Таблица, КолонкаСтарт = 0)

	Если Таблица = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = ЭтаФорма.ПолеТабличногоДокументаФормаОтчета;
	МаксКол = 14;
	Стр = 1;
	СтруктураДанных = ЭтаФорма["СтруктураДанныхСтраниц"][ИмяРаздела];
	ЗаноситьВчейки = СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		Для Сч = КолонкаСтарт По МаксКол - 1 Цикл
			ИмяЯчейки = "П010000101" + Формат(Сч + 1 - КолонкаСтарт, "ЧЦ=3; ЧВН=") + "_" + Строка(Стр);
			Значение = СтрокаТаблицы[Сч];
			Если ЗаноситьВчейки Тогда
				ТабДокумент.Области[ИмяЯчейки].Значение = Значение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Значение) Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда
				СтруктураДанных.Удалить(ИмяЯчейки);
			КонецЕсли;
		КонецЦикла;
		Стр = Стр + 1;
	КонецЦикла;
	
КонецПроцедуры

// Получить список разделов для загрузки
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма 
// 
// Возвращаемое значение:
//  Массив -  разделы для загрузки.
//
Функция ПолучитьСписокРазделовДляЗагрузки(ВыбраннаяФорма) Экспорт
	
	СписокРазделовДляЗагрузки = Новый Массив;
	СписокРазделовДляЗагрузки.Добавить("Титульный");
	СписокРазделовДляЗагрузки.Добавить("Страница1");
	
	Возврат СписокРазделовДляЗагрузки;
	
КонецФункции

#КонецОбласти

мВерсияОтчета = "2.0";