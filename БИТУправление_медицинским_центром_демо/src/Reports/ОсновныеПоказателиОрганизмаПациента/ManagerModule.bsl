
#Область ПрограммныйИнтерфейс

Функция СформироватьОтчет(Клиент) Экспорт

	ТабДок = Новый ТабличныйДокумент;
	
	Таблица = ПолучитьТаблицуДанных(Клиент);
	Макет = Отчеты.ОсновныеПоказателиОрганизмаПациента.ПолучитьМакет("ОсновныеПоказателиОрганизмаПациента");
	
	Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ТабДок.Вывести(Область);
	
	Для Каждого СтрокаТаблицы Из Таблица Цикл
		Область = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		Дата = СтрокаТаблицы.Дата;
		Область.Параметры.Дата	 = Формат(Дата, "ДФ='dd МММ'");
		Область.Параметры.Год	 = Формат(Дата, "ДФ='гггг'");
		Область.Параметры.Время	 = СокрЛП(СтрокаТаблицы.ВремяДня + " " + Формат(Дата, "ДФ=HH:mm"));
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.Температура) Тогда
			Область.Параметры.Температура = Строка(СтрокаТаблицы.Температура) + "°";
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.АДВерхнее) Или ЗначениеЗаполнено(СтрокаТаблицы.АДНижнее) Тогда
			Область.Параметры.АД = Строка(Цел(СтрокаТаблицы.АДВерхнее)) + " / " + Строка(Цел(СтрокаТаблицы.АДНижнее));
		КонецЕсли;  
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ЧСС) Тогда
			Область.Параметры.ЧСС = Строка(Окр(СтрокаТаблицы.ЧСС,1));
		КонецЕсли;
		
		Область.Параметры.Документ = СтрокаТаблицы.Документ;
		
		Если Не Табдок.ПроверитьВывод(Область) Тогда
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();	
		КонецЕсли;                                           
		ТабДок.Вывести(Область);
		
	КонецЦикла;
	
	// Строго последняя манипуляция с переменной Таблица!
	// Изменение ширины колонки времени, если нет Времени дня.
	Таблица.Свернуть("ВремяДня");
	Если Таблица.Количество() = 1
		И Не ЗначениеЗаполнено(Таблица[0].ВремяДня)
	Тогда
		Область = ТабДок.Область(1, 3, ТабДок.ВысотаТаблицы, 3).ШиринаКолонки;
		Область.ШиринаКолонки = Область.ШиринаКолонки / 2;
	КонецЕсли;
	
	Возврат ТабДок;
	
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция СоздатьПустуюТаблицуДанных()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("Дата",Новый ОписаниеТипов("Дата"));
	Таблица.Колонки.Добавить("ВремяДня",Новый ОписаниеТипов("Строка"));
	Таблица.Колонки.Добавить("Температура",Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("АДВерхнее",Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("АДНижнее",Новый ОписаниеТипов("Число"));                                        
	Таблица.Колонки.Добавить("ЧСС",Новый ОписаниеТипов("Число"));
	Таблица.Колонки.Добавить("Документ");
	
	Возврат Таблица;
	
КонецФункции

Функция КолонкиПоказателей()
	
	КолонкиПоказателей = Новый Массив;
	КолонкиПоказателей.Добавить("Температура");
	КолонкиПоказателей.Добавить("АДВерхнее");
	КолонкиПоказателей.Добавить("АДНижнее");
	КолонкиПоказателей.Добавить("ЧСС");
	
	Возврат КолонкиПоказателей;
	
КонецФункции

Функция ПолучитьТаблицуДанных(Клиент)
	
	Таблица = СоздатьПустуюТаблицуДанных();
	КолонкиПоказателей = КолонкиПоказателей();
	
	СоответствиеПоказателей = Новый Соответствие; // Соответствие ссылок в базе данных показателям отчета.
	Показатели = ПолучитьПоказатели(Клиент, СоответствиеПоказателей);
	
	Строка = Неопределено;
	Пока Показатели.Следующий() Цикл
		
		Строка = ?(Строка = Неопределено, Таблица.Добавить(), Строка);
		
		Если ЗначениеЗаполнено(Строка.Дата) Тогда
			Если Строка.Дата + 900 > Показатели.Дата Тогда
				ПоказательОтчета = СоответствиеПоказателей.Получить(Показатели.Показатель);
				Если ЗначениеЗаполнено(Строка[ПоказательОтчета]) Тогда
					Строка = Таблица.Добавить();
					ЗаполнитьПустуюСтроку(Строка, Показатели, СоответствиеПоказателей);
				Иначе
					Строка[ПоказательОтчета] = Показатели.Значение;	
				КонецЕсли;
			Иначе
				Строка = Таблица.Добавить();
				ЗаполнитьПустуюСтроку(Строка, Показатели, СоответствиеПоказателей);
			КонецЕсли;
		Иначе
			ЗаполнитьПустуюСтроку(Строка, Показатели, СоответствиеПоказателей);
		КонецЕсли;
		
	КонецЦикла;
	
	// Удаление пустых строк.
	МодульСтационар = ДопСерверныеФункции.ОбщийМодуль("Стационар");
	мОбрИнд = Таблица.Количество()-1;
	Для Сч = 0 По мОбрИнд Цикл
		
		Строка = Таблица[мОбрИнд-Сч];
		
		НетЗаполненныхПоказателей = Истина;
		Для Каждого ИмяПоказателя Из КолонкиПоказателей Цикл
			Если ЗначениеЗаполнено(Строка[ИмяПоказателя]) Тогда
				НетЗаполненныхПоказателей = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если НетЗаполненныхПоказателей Тогда
			Таблица.Удалить(мОбрИнд-Сч);
			
		ИначеЕсли Не ЗначениеЗаполнено(Строка.ВремяДня)
			И МодульСтационар <> Неопределено
		Тогда
			Строка.ВремяДня = ?(МодульСтационар.ЭтоВечернееВремяВыполненияМанипуляции(Строка.Дата), "Вечер", "Утро");	
		КонецЕсли;
	КонецЦикла;
	
	Таблица.Сортировать("Дата УБЫВ");
	
	Возврат Таблица;
	
КонецФункции

Функция ПолучитьПоказатели(Клиент, СоответствиеПоказателей)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Клиент", Клиент);
	//Запрос.УстановитьПараметр("МедицинскаяКарта", Прием.МедицинскаяКарта);
	Запрос.УстановитьПараметр("ПараметрыВитальные", ПараметрыВитальныхПараметровТемпературногоЛиста(СоответствиеПоказателей));
	
	Запрос.Текст = "ВЫБРАТЬ Ссылка Из Документ.Прием ГДЕ Клиент = &Клиент И Проведен";
	//Запрос.Текст = "ВЫБРАТЬ Ссылка Из Документ.Прием ГДЕ МедицинскаяКарта = &МедицинскаяКарта И Проведен";
	Запрос.УстановитьПараметр("Приемы", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗначенияПараметровHTML.Параметр КАК Показатель,
	               |	ЗначенияПараметровHTML.Документ КАК Документ,
	               |	ЗначенияПараметровHTML.Документ.Дата КАК Дата,
	               |	НЕОПРЕДЕЛЕНО КАК ЭтоВечер,
	               |	ЗначенияПараметровHTML.Значение КАК Значение,
	               |	""ПараметрHTML"" КАК Источник
	               |ИЗ
	               |	РегистрСведений.ЗначенияПараметровHTML КАК ЗначенияПараметровHTML
	               |ГДЕ
	               |	ЗначенияПараметровHTML.Документ В (&Приемы)
	               |	И ЗначенияПараметровHTML.Параметр В (&ПараметрыВитальные)
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Дата, Документ";
				   
	// Дополнить данными подсистемы стационара.
	ДополнитьЗапросВыборкойДействийМедсестрыСтационара(Запрос, СоответствиеПоказателей);
				   
	Возврат Запрос.Выполнить().Выбрать();	
	
КонецФункции

Процедура ДополнитьЗапросВыборкойДействийМедсестрыСтационара(Запрос, СоответствиеПоказателей)
	
	Если Метаданные.РегистрыСведений.Найти("ВыполнениеДействийСтационара") <> Неопределено Тогда
		
		Попытка
			МенеджерСправочникаДействий = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени("Справочник.ДействияМедсестрыСтационара");
		Исключение
			Возврат;
		КонецПопытки;
		
		ДействияСтационараОсновныеПоказатели = Новый Массив;
		// Температура
		ДействияСтационараОсновныеПоказатели.Добавить(МенеджерСправочникаДействий.Температура);
		СоответствиеПоказателей.Вставить(МенеджерСправочникаДействий.Температура, "Температура");
		// АД верхнее
		ДействияСтационараОсновныеПоказатели.Добавить(МенеджерСправочникаДействий.АртериальноеДавление);
		СоответствиеПоказателей.Вставить(МенеджерСправочникаДействий.АртериальноеДавление, "АДВерхнее");
		// АД нижнее
		ДействияСтационараОсновныеПоказатели.Добавить(МенеджерСправочникаДействий.АртериальноеДавлениеНижнее);
		СоответствиеПоказателей.Вставить(МенеджерСправочникаДействий.АртериальноеДавлениеНижнее, "АДНижнее");
		
		Запрос.УстановитьПараметр("ДействияСтационараОсновныеПоказатели", ДействияСтационараОсновныеПоказатели);
		
		Запрос.Текст = Запрос.Текст + 
					   "ОБЪЕДИНИТЬ ВСЕ
					   |
					   |ВЫБРАТЬ
		               |	ВыполнениеДействийСтационара.ДействиеСтационара КАК Показатель,
		               |	ВыполнениеДействийСтационара.Документ КАК Документ,
		               |	ВыполнениеДействийСтационара.ДатаВремяВыполнения КАК Дата,
		               |	ВыполнениеДействийСтационара.ЭтоВечер КАК ЭтоВечер,
		               |	ВыполнениеДействийСтационара.Значение КАК Значение,
		               |	""ДействиеСтационара"" КАК Источник
		               |ИЗ
		               |	РегистрСведений.ВыполнениеДействийСтационара КАК ВыполнениеДействийСтационара
		               |ГДЕ
		               |	ВыполнениеДействийСтационара.ДействиеСтационара В (&ДействияСтационараОсновныеПоказатели)
		               //|	И ВыполнениеДействийСтационара.МедицинскаяКарта = &МедицинскаяКарта
					   |	И ВыполнениеДействийСтационара.Клиент = &Клиент";
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыВитальныхПараметровТемпературногоЛиста(СоответствиеПоказателей)
	
	УИДы = ОбщегоНазначенияБИТКлиентСервер.НовыйМассив(1, 2, 3, 4); // Температура, ЧСС, давление.
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидКлассификатора", Перечисления.ВидыКлассификаторовМинЗдрава.ВитальныеПараметры);
	Запрос.УстановитьПараметр("УИД", УИДы);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыHTML.Ссылка КАК Ссылка,
		|	ПараметрыHTML.Назначение.УИДЕГИСЗ КАК УИДЕГИСЗ
		|ИЗ
		|	ПланВидовХарактеристик.ПараметрыHTML КАК ПараметрыHTML
		|ГДЕ
		|	ПараметрыHTML.Назначение В
		|			(ВЫБРАТЬ
		|				КлассификаторыМинЗдрава.Ссылка КАК Ссылка
		|			ИЗ
		|				Справочник.КлассификаторыМинЗдрава КАК КлассификаторыМинЗдрава
		|			ГДЕ
		|				КлассификаторыМинЗдрава.ВидКлассификатора = &ВидКлассификатора
		|				И КлассификаторыМинЗдрава.УИДЕГИСЗ В (&УИД)
		|				И НЕ КлассификаторыМинЗдрава.Архив
		|				И НЕ КлассификаторыМинЗдрава.ПометкаУдаления)";
	
	Результат = Запрос.Выполнить();
	
	// Заполнение соответствия показателям отчета.
	Выб = Результат.Выбрать();
	Пока Выб.Следующий() Цикл
		ПоказательОтчета = ПоказательОтчетаПоУИДВитальногоПараметра(Выб.УИДЕГИСЗ);
		Если ЗначениеЗаполнено(ПоказательОтчета) Тогда
			СоответствиеПоказателей.Вставить(Выб.Ссылка, ПоказательОтчета);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

Функция ПоказательОтчетаПоУИДВитальногоПараметра(УИДВитальногоПараметра)
	
	Если	  УИДВитальногоПараметра = 1 Тогда
		Возврат "Температура";
		
	ИначеЕсли УИДВитальногоПараметра = 2 Тогда
		Возврат "АДНижнее";
		
	ИначеЕсли УИДВитальногоПараметра = 3 Тогда
		Возврат "АДВерхнее";
		
	ИначеЕсли УИДВитальногоПараметра = 4 Тогда
		Возврат "ЧСС";
	КонецЕсли;
	
	Возврат Неопределено;		
	
КонецФункции

Функция ПолучитьКолонкуПоказателя(Показатель, СоответствиеПоказателей)
	Возврат СоответствиеПоказателей.Получить(Показатель);
	
КонецФункции

Процедура ЗаполнитьПустуюСтроку(Строка, ДанныеПоказателя, СоответствиеПоказателей)
	
	Строка.Дата = ДанныеПоказателя.Дата;
	
	ПоказательОтчета = СоответствиеПоказателей.Получить(ДанныеПоказателя.Показатель);
	Строка[ПоказательОтчета] = ДанныеПоказателя.Значение;
	
	Если ДанныеПоказателя.Источник = "ДействиеСтационара" Тогда
		Строка.ВремяДня = ?(ДанныеПоказателя.ЭтоВечер, "Вечер", "Утро"); 	
	КонецЕсли;
	Строка.Документ = ДанныеПоказателя.Документ;
	
КонецПроцедуры

#КонецОбласти