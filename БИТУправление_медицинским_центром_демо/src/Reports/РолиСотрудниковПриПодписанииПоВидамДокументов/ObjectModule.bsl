#Область ОбработчикиСобытий

Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗаполнениемПанелиБыстрыхНастроек = Истина;
	
КонецПроцедуры

Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	ВидыДокументов = Новый СписокЗначений;
	
	Если Форма.Параметры.Свойство("ВидыДокументов") Тогда
		ВидыДокументов.ЗагрузитьЗначения(Форма.Параметры.ВидыДокументов);
	КонецЕсли;
	
	Форма.ФормаПараметры.Вставить("ВидыДокументов", ВидыДокументов);
	
КонецПроцедуры

Процедура ПередЗаполнениемПанелиБыстрыхНастроек(Форма, ПараметрыЗаполнения) Экспорт
	
	Если Форма.ФормаПараметры.Свойство("ВидыДокументов")
		И ЗначениеЗаполнено(Форма.ФормаПараметры.ВидыДокументов)
	Тогда
		ПараметрДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ВидыДокументов");
		Если ПараметрДанных <> Неопределено
			И ЗначениеЗаполнено(ПараметрДанных.ИдентификаторПользовательскойНастройки)
		Тогда
			ПользовательскаяНастройка = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрДанных.ИдентификаторПользовательскойНастройки);
			Если ПользовательскаяНастройка <> Неопределено Тогда
				ПользовательскаяНастройка.Значение = Форма.ФормаПараметры.ВидыДокументов;
				ПользовательскаяНастройка.Использование = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Настройки = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрВидыДокумента = Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидыДокументов"));
	
	Если ПараметрВидыДокумента.Использование
		И ЗначениеЗаполнено(ПараметрВидыДокумента.Значение)
	Тогда
		ВидыДокументов = ПараметрВидыДокумента.Значение;
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РегистрируемыеЭлектронныеМедДокументы.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.РегистрируемыеЭлектронныеМедДокументы КАК РегистрируемыеЭлектронныеМедДокументы
			|ГДЕ
			|	НЕ РегистрируемыеЭлектронныеМедДокументы.ПометкаУдаления
			|	И НЕ РегистрируемыеЭлектронныеМедДокументы.Архив";
		
		ВидыДокументов = Новый СписокЗначений;
		ВидыДокументов.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"));
	КонецЕсли;
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ВидДокумента", Новый ОписаниеТипов("СправочникСсылка.РегистрируемыеЭлектронныеМедДокументы"));
	Таблица.Колонки.Добавить("Роль", Новый ОписаниеТипов("СправочникСсылка.РолиПриПодписиМедДокументов"));
	Таблица.Колонки.Добавить("Должность", Новый ОписаниеТипов("СправочникСсылка.КлассификаторыМинЗдрава"));
	
	ДолжностиПоВидамДокумента = ИнтеграцияЕГИСЗ_РЭМД.ПолучитьДолжностиПоВидамЭМД(ВидыДокументов);
	
	Для Каждого СтрокаРоли Из ДолжностиПоВидамДокумента Цикл
		Для Каждого Должность Из СтрокаРоли.Должности Цикл
			НоваяСтрока = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРоли);
			НоваяСтрока.Должность = Должность;
		КонецЦикла;
	КонецЦикла;
	
	ВнешниеНаборыДанных = Новый Структура("Данные", Таблица);
	
	ОсновнойМакетОформления = УправлениеНастройками.ПолучитьПараметрУчетнойПолитики("ОсновнойМакетОформленияСКД");
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	ПараметрМакет = КомпоновщикНастроек.Настройки.ПараметрыВывода.Элементы.Найти("МакетОформления");
	ПараметрМакет.Значение = ОсновнойМакетОформления;
	ПараметрМакет.Использование = Истина;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.ПолучитьНастройки(), ДанныеРасшифровки);
	
	// Инициализация процессора компоновки
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	// Получение результата
	ПроцессорВыводаРезультатаКомпоновкиДанных = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	
	ПроцессорВыводаРезультатаКомпоновкиДанных.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаРезультатаКомпоновкиДанных.Вывести(ПроцессорКомпоновкиДанных);
	
	УниверсальныеМеханизмыСервер.ОтчетПриКомпоновкеРезультата(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти