#Область РазделОписанияПеременных
Перем мВерсияОтчета Экспорт;// Строка, версия отчета
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Таблица форм отчета
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица форм отчета.
//
Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета";
	НоваяФорма.ОписаниеОтчета     = "Сведения об организации, оказывающий услуги по медицинской помощи";
	НоваяФорма.РедакцияФормы      = "от 10.08.2018 № 1";
	НоваяФорма.ДатаНачалоДействия = '20010101';
	НоваяФорма.ДатаКонецДействия  = МедицинскаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

// Периодичность отчета.
//
// Параметры:
//  ПараметрыОтчета	 - Неопределено - не используется.
// 
// Возвращаемое значение:
//  Строка - периодичность Год, Полугодие, Квартал, Месяц, День.
//
Функция ПериодичностьОтчета(ПараметрыОтчета = Неопределено) Экспорт
	
	Возврат "Год"; // "Год,Полугодие,Квартал,Месяц,День".
	
КонецФункции

// Структура страниц отчета.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  мДеревоСтраницОтчета - ДанныеФормыДерево - дерево страниц отчета
//
Процедура ФормироватьСтруктуруСтраницОтчета(ВыбраннаяФорма, мДеревоСтраницОтчета) Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница1";
	СтрокаУровня1.Представление            = "Страница 1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница2";
	СтрокаУровня1.Представление            = "Страница 2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница3";
	СтрокаУровня1.Представление            = "Страница 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница4";
	СтрокаУровня1.Представление            = "Страница 4";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница5";
	СтрокаУровня1.Представление            = "Страница 5";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница6";
	СтрокаУровня1.Представление            = "Страница 6";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

// Установить доступность областей.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  Форма				 - ФормаКлиентскогоПриложения - форма 
//  ИмяСтраницыПанели	 - Строка - имя страницы панели.
//
Процедура УстановитьДоступностьОбластей(ВыбраннаяФорма, Форма, ИмяСтраницыПанели = "") Экспорт
	
	ТабДокумент = Форма.ПолеТабличногоДокументаФормаОтчета;
	
	ЗапрещенныеОбласти = Новый Массив;
	ЗапрещенныеОбласти.Добавить("Титульник");
	ЗапрещенныеОбласти.Добавить("Раздел1");
	ЗапрещенныеОбласти.Добавить("Раздел2");
	ЗапрещенныеОбласти.Добавить("Раздел3");
	ЗапрещенныеОбласти.Добавить("Раздел4");
	ЗапрещенныеОбласти.Добавить("Раздел5");
	ЗапрещенныеОбласти.Добавить("Раздел6");
	ЗапрещенныеОбласти.Добавить("Раздел7");
	ЗапрещенныеОбласти.Добавить("Раздел8");
	ЗапрещенныеОбласти.Добавить("Раздел9");
	ЗапрещенныеОбласти.Добавить("ОКПО");
	ЗапрещенныеОбласти.Добавить("ОтчетГод");
	ЗапрещенныеОбласти.Добавить("ОргНазв");
	ЗапрещенныеОбласти.Добавить("ОргПочтАдрес");
	
	Если ИмяСтраницыПанели = "Страница6" Тогда
		Для каждого Область Из ТабДокумент.Области Цикл
			Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено Тогда
				Если СтрНайти(Область.Имя,"П010000101") > 0 Тогда
					Если Область.Формат = "ЧН=Х" Тогда
						МедицинскаяОтчетностьВызовСервера.ЗапретитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_5"], Область);
					Иначе
						МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбластьАвтоЗаполнения(Форма.мСтруктураЦветовРаскраски["_4"], Область);
					КонецЕсли;
				Иначе
					МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ИмяСтраницыПанели = "Страница2" Тогда
		Для каждого Область Из ТабДокумент.Области Цикл
			Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено Тогда
				МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);
			КонецЕсли;
		КонецЦикла;
		МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбластьАвтоЗаполнения(Форма.мСтруктураЦветовРаскраски["_4"], Область);
	Иначе
		Для каждого Область Из ТабДокумент.Области Цикл
			Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено Тогда
				МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#Область АлгоритмЗаполнения

// Заполнить отчет.
//
// Параметры:
//  ВыбраннаяФорма			 - ФормаКлиентскогоПриложения	 - форма
//  ПараметрыОтчета			 - Структура					 - параметры отчета
//  ЭтаФорма				 - ФормаКлиентскогоПриложения	 - форма
//  СтруктураРеквизитовФормы - Структура					 - структура реквизитов формы.
//
Процедура ЗаполнитьОтчет(ВыбраннаяФорма, ПараметрыОтчета, ЭтаФорма, СтруктураРеквизитовФормы) Экспорт 
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Раздел3ПосещенияВрачей");
	Контейнер.Вставить("Раздел8Таблица");
	
	Контейнер.Раздел3ПосещенияВрачей = ПолучитьКоличествоПосещенийВрачей(ПараметрыОтчета);
	Контейнер.Раздел8Таблица = ПолучитьТаблицуРаздела8(ПараметрыОтчета);
	
	ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, "Страница6", Контейнер.Раздел8Таблица, 1);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Страница2"].Вставить("ЧислоПосещений",Контейнер.Раздел3ПосещенияВрачей);
	
КонецПроцедуры

Функция ПолучитьКоличествоПосещенийВрачей(ПараметрыОтчета)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("СписокФилиалов", ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КОЛИЧЕСТВО(Прием.Ссылка) КАК ВсегоПриемов
		|ПОМЕСТИТЬ Приемы
		|ИЗ
		|	Документ.Прием КАК Прием
		|ГДЕ
		|	НЕ Прием.ПометкаУдаления
		|	И Прием.Проведен
		|	И Прием.Дата >= &НачалоПериода
		|	И Прием.Дата <= &КонецПериода
		|	И Прием.Филиал В(&СписокФилиалов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КОЛИЧЕСТВО(ОтметкиВыполненияДействийСрезПоследних.Действие) КАК ВсегоМедОсмотров
		|ПОМЕСТИТЬ МедОсмотры
		|ИЗ
		|	РегистрСведений.ОтметкиВыполненияДействий.СрезПоследних КАК ОтметкиВыполненияДействийСрезПоследних
		|ГДЕ
		|	ОтметкиВыполненияДействийСрезПоследних.Выполнено
		|	И ОтметкиВыполненияДействийСрезПоследних.Действие.Вид = ЗНАЧЕНИЕ(ПЕРЕЧИСЛЕНИЕ.ВидыДействийМедицинскогоОсмотра.Врач)
		|	И ОтметкиВыполненияДействийСрезПоследних.Период >= &НачалоПериода
		|	И ОтметкиВыполненияДействийСрезПоследних.Период <= &КонецПериода
		|	И ОтметкиВыполненияДействийСрезПоследних.ПрохождениеМедОсмотра.Филиал В(&СписокФилиалов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(МедОсмотры.ВсегоМедОсмотров,0) + ЕСТЬNULL(Приемы.ВсегоПриемов,0) КАК ВсегоПосещений
		|ИЗ
		|	Приемы КАК Приемы,
		|	МедОсмотры КАК МедОсмотры";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.ВсегоПосещений;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьТаблицуРаздела8(ПараметрыОтчета)
	
	ГруппыДиагнозов = Новый ТаблицаЗначений;
	ГруппыДиагнозов.Колонки.Добавить("Группа", Новый ОписаниеТипов("Строка"));
	ГруппыДиагнозов.Колонки.Добавить("Всего", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Меньше17", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("МеньшеГода", Новый ОписаниеТипов("Число"));
	
	ГруппыДиагнозов.Добавить().Группа = "A00-T98";
	ГруппыДиагнозов.Добавить().Группа = "A00-B99";
	ГруппыДиагнозов.Добавить().Группа = "C00-D48";
	ГруппыДиагнозов.Добавить().Группа = "D50-D89";
	ГруппыДиагнозов.Добавить().Группа = "E00-E89";
	ГруппыДиагнозов.Добавить().Группа = "F01,F03-F99";
	ГруппыДиагнозов.Добавить().Группа = "G00-G98";
	ГруппыДиагнозов.Добавить().Группа = "H00-H59";
	ГруппыДиагнозов.Добавить().Группа = "H60-H95";
	ГруппыДиагнозов.Добавить().Группа = "I00-I99";
	ГруппыДиагнозов.Добавить().Группа = "J00-J98";
	ГруппыДиагнозов.Добавить().Группа = "K00-K92";
	ГруппыДиагнозов.Добавить().Группа = "L00-L98";
	ГруппыДиагнозов.Добавить().Группа = "M00-M99";
	ГруппыДиагнозов.Добавить().Группа = "N00-N99";
	ГруппыДиагнозов.Добавить().Группа = "O00-O99";
	ГруппыДиагнозов.Добавить().Группа = "P00-P96";
	ГруппыДиагнозов.Добавить().Группа = "Q00-Q99";
	ГруппыДиагнозов.Добавить().Группа = "R00-R99";
	ГруппыДиагнозов.Добавить().Группа = "S00-T98";
	ГруппыДиагнозов.Добавить().Группа = "U07.1,U07.2";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("СписокФилиалов", ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	Запрос.УстановитьПараметр("УчитываемыеКлассификацииОстротыДиагноза",  УчитываемыеКлассификацииОстротыДиагноза());
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Диагнозы.Регистратор.Клиент.ДатаРождения КАК ДатаРождения,
		|	Диагнозы.Регистратор.ПервичныйПрием КАК РегистраторПервичныйПрием,
		|	Диагнозы.Диагноз.КодДиагноза КАК КодДиагноза,
		|	РАЗНОСТЬДАТ(Диагнозы.Регистратор.Клиент.ДатаРождения, Диагнозы.Период, ГОД) - ВЫБОР
		|		КОГДА ДЕНЬГОДА(Диагнозы.Регистратор.Клиент.ДатаРождения) >= ДЕНЬГОДА(Диагнозы.Период)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возраст
		|ПОМЕСТИТЬ СписокДиагнозов
		|ИЗ
		|	РегистрСведений.Диагнозы КАК Диагнозы
		|ГДЕ
		|	Диагнозы.Период >= &НачалоПериода
		|	И Диагнозы.Период <= &КонецПериода
		|	И Диагнозы.Регистратор.Филиал В(&СписокФилиалов)
		|	И (Диагнозы.Классификация2 В (&УчитываемыеКлассификацииОстротыДиагноза))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДиагнозов.КодДиагноза КАК КодДиагноза,
		|	КОЛИЧЕСТВО(СписокДиагнозов.КодДиагноза) КАК Всего,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст <= 17
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Меньше17,
		|	СУММА(ВЫБОР
		|			КОГДА СписокДиагнозов.Возраст < 1
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК МеньшеГода
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|
		|СГРУППИРОВАТЬ ПО
		|	СписокДиагнозов.КодДиагноза
		|
		|УПОРЯДОЧИТЬ ПО
		|	КодДиагноза";
	
	ДиагнозВыборка = Запрос.Выполнить().Выбрать();
	
	КоличествоГрупп = ГруппыДиагнозов.Количество() - 1;
	СтартГрупп = 1;
	Пока ДиагнозВыборка.Следующий() Цикл
		КодДиагноза = ДиагнозВыборка.КодДиагноза;
		
		ВходитВГруппу = Ложь;
		Для Сч = СтартГрупп По КоличествоГрупп Цикл
			СтрокаГруппа = ГруппыДиагнозов[Сч];
			МассивГрупп = СтрРазделить(СтрокаГруппа.Группа,",",Ложь);
			Для Каждого ГруппаДиагноза Из МассивГрупп Цикл
				ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
				Если ВходитВГруппу Тогда
					СтрокаГруппа.Всего = СтрокаГруппа.Всего + ДиагнозВыборка.Всего;
					СтрокаГруппа.Меньше17 = СтрокаГруппа.Меньше17 + ДиагнозВыборка.Меньше17;
					СтрокаГруппа.МеньшеГода = СтрокаГруппа.МеньшеГода + ДиагнозВыборка.МеньшеГода;
					
					ВерхняяСтрока = ГруппыДиагнозов[0];
					ВерхняяСтрока.Всего = ВерхняяСтрока.Всего + ДиагнозВыборка.Всего;
					ВерхняяСтрока.Меньше17 = ВерхняяСтрока.Меньше17 + ДиагнозВыборка.Меньше17;
					ВерхняяСтрока.МеньшеГода = ВерхняяСтрока.МеньшеГода + ДиагнозВыборка.МеньшеГода;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ВходитВГруппу Тогда
				СтартГрупп = Сч;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

Функция УчитываемыеКлассификацииОстротыДиагноза()
	
	// Сведения о числе зарегистрированных заболеваний с диагнозом, установленным впервые в жизни, 
	// включают число заболеваний, выявленных впервые в жизни для хронических болезней,
	// а также каждый случай заболевания острыми болезнями, который может возникать неоднократно в течение отчетного года
	// (например, грипп, кишечные инфекции, острый инфаркт миокарда и т.п.).
	Результат = Новый Массив;
	Результат.Добавить(Перечисления.КлассификацииДиагнозов.Острое);
	Результат.Добавить(Перечисления.КлассификацииДиагнозов.ОбострениеХронического);
	// Результат.Добавить(Перечисления.КлассификацииДиагнозов.ПустаяСсылка());
	
	Возврат Результат;
	
КонецФункции

Функция ДиагнозВходитВГруппу(КодДиагноза, КодГруппы)
	
	ПересечениеНачало = Ложь;
	ПересечениеКонец = Ложь;
	МассивКодов = СтрРазделить(КодГруппы, "-", Ложь);
	Если МассивКодов.Количество() > 0 Тогда
		КодНачало = МассивКодов[0];
		ПересечениеНачало = КодДиагноза >= КодНачало;
	КонецЕсли;
	
	Если МассивКодов.Количество() = 2 Тогда
		КодКонец = МассивКодов[1];
		ПересечениеКонец = КодДиагноза <= КодКонец;
	Иначе
		ПересечениеКонец = КодДиагноза = КодНачало;
	КонецЕсли;
	
	Возврат ПересечениеНачало И ПересечениеКонец;
	
КонецФункции

#КонецОбласти

#Область Расшифровка

// Установить параметры расшифровки.
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма
//  ПараметрыОтчета	 - Структура - параметры отчета 
//  ИмяЯчейки		 - Строка - имя ячейки
// 
// Возвращаемое значение:
//  Структура - параметры расшифровки.
//
Функция УстановитьПараметрыРасшифровки(ВыбраннаяФорма, ПараметрыОтчета, ИмяЯчейки) Экспорт
	
	ПараметрыРасшифровки = Новый Структура();
	
	ИмяФормыРасшифровкиОтчета = "Отчет.РасшифровкаМедицинскогоОтчета1Здрав.ФормаОбъекта";
	ГруппыДиагнозов = ПолучитьГруппуЯчейки(ИмяЯчейки);
	Если Не ЗначениеЗаполнено(ГруппыДиагнозов) И Не ПараметрыОтчета.ТекущаяСтрокаРазделовОтчета = 6 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыРасшифровки = Новый Структура();
	ПараметрыРасшифровки.Вставить("Группа", ГруппыДиагнозов);
	ПараметрыРасшифровки.Вставить("ГраницаЛет", ПолучитьОтборЛет(ИмяЯчейки));
	ПараметрыРасшифровки.Вставить("НачалоПериода", ПараметрыОтчета.ДатаНачалаПериодаОтчета);
	ПараметрыРасшифровки.Вставить("КонецПериода", ПараметрыОтчета.ДатаКонцаПериодаОтчета);
	ПараметрыРасшифровки.Вставить("Филиал", ПараметрыОтчета.Филиал);
	//ПараметрыРасшифровки.Найти("Период").Значение.ДатаНачала = ПараметрыОтчета.ДатаНачалаПериодаОтчета;
	//ПараметрыРасшифровки.Найти("Период").Значение.ДатаОкончания = ПараметрыОтчета.ДатаКонцаПериодаОтчета;
	
	Возврат Новый Структура("ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки", ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки);
	
КонецФункции

// Получить группу для ячейки.
//
// Параметры:
//  ИмяЯчейки	 - Строка - имя ячейки
// 
// Возвращаемое значение:
//  Строка - группа ячейки.
//
Функция ПолучитьГруппуЯчейки(ИмяЯчейки) Экспорт
	
	Если СтрНайти(ИмяЯчейки,"П010000101") = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ГруппыДиагнозов = Новый Массив;
	ГруппыДиагнозов.Добавить("A00-T98");
	ГруппыДиагнозов.Добавить("A00-B99");
	ГруппыДиагнозов.Добавить("C00-D48");
	ГруппыДиагнозов.Добавить("D50-D89");
	ГруппыДиагнозов.Добавить("E00-E89");
	ГруппыДиагнозов.Добавить("F01,F03-F99");
	ГруппыДиагнозов.Добавить("G00-G98");
	ГруппыДиагнозов.Добавить("H00-H59");
	ГруппыДиагнозов.Добавить("H60-H95");
	ГруппыДиагнозов.Добавить("I00-I99");
	ГруппыДиагнозов.Добавить("J00-J98");
	ГруппыДиагнозов.Добавить("K00-K92");
	ГруппыДиагнозов.Добавить("L00-L98");
	ГруппыДиагнозов.Добавить("M00-M99");
	ГруппыДиагнозов.Добавить("N00-N99");
	ГруппыДиагнозов.Добавить("O00-O99");
	ГруппыДиагнозов.Добавить("P00-P96");
	ГруппыДиагнозов.Добавить("Q00-Q99");
	ГруппыДиагнозов.Добавить("R00-R99");
	ГруппыДиагнозов.Добавить("S00-T98");
	
	Попытка
		ИндексЯчейки = Число(СтрЗаменить(ИмяЯчейки, Лев(ИмяЯчейки,14), "")) - 1;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Результат = ГруппыДиагнозов.Получить(ИндексЯчейки);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОтборЛет(ИмяЯчейки)
	
	Если СтрНайти(ИмяЯчейки,"П010000101") = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Попытка
		Колонка = Число(Сред(ИмяЯчейки,11,3));
		Если Колонка = 1 Тогда
			Возврат 0;
		ИначеЕсли Колонка = 2 Тогда
			Возврат 18;
		Иначе
			Возврат 1;
		КонецЕсли;
	Исключение
		Возврат 0;
	КонецПопытки;
	
КонецФункции

#КонецОбласти

Процедура ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, ИмяРаздела, Таблица, КолонкаСтарт = 0)
	
	Если Таблица = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = ЭтаФорма.ПолеТабличногоДокументаФормаОтчета;
	МаксКол = Таблица.Колонки.Количество();
	Стр = 1;
	СтруктураДанных = ЭтаФорма["СтруктураДанныхСтраниц"][ИмяРаздела];
	ЗаноситьВчейки = СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		Для Сч = КолонкаСтарт По МаксКол - 1 Цикл
			ИмяЯчейки = "П010000101" + Формат(Сч + 1 - КолонкаСтарт, "ЧЦ=3; ЧВН=") + "_" + Строка(Стр);
			Значение = СтрокаТаблицы[Сч];
			Если ЗаноситьВчейки Тогда
				ТабДокумент.Области[ИмяЯчейки].Значение = Значение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Значение) Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда
				СтруктураДанных.Удалить(ИмяЯчейки);
			КонецЕсли;
		КонецЦикла;
		Стр = Стр + 1;
	КонецЦикла;
	
КонецПроцедуры

// Получить список разделов для загрузки
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма 
// 
// Возвращаемое значение:
//  Массив -  разделы для загрузки.
//
Функция ПолучитьСписокРазделовДляЗагрузки(ВыбраннаяФорма) Экспорт
	
	СписокРазделовДляЗагрузки = Новый Массив;
	СписокРазделовДляЗагрузки.Добавить("Титульный");
	СписокРазделовДляЗагрузки.Добавить("Страница1");
	СписокРазделовДляЗагрузки.Добавить("Страница2");
	СписокРазделовДляЗагрузки.Добавить("Страница3");
	СписокРазделовДляЗагрузки.Добавить("Страница4");
	
	Возврат СписокРазделовДляЗагрузки;
	
КонецФункции

#КонецОбласти

мВерсияОтчета = "1.0";