#Область РазделОписанияПеременных
Перем мВерсияОтчета Экспорт;// Строка, версия отчета
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Таблица форм отчета
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица форм отчета.
//
Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета";
	НоваяФорма.ОписаниеОтчета     = "";
	НоваяФорма.РедакцияФормы      = "от 25.12.2014 № 723";
	НоваяФорма.ДатаНачалоДействия = '20010101';
	НоваяФорма.ДатаКонецДействия  = МедицинскаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

// Периодичность отчета.
//
// Параметры:
//  ПараметрыОтчета	 - Неопределено - не используется.
// 
// Возвращаемое значение:
//  Строка - периодичность Год, Полугодие, Квартал, Месяц, День.
//
Функция ПериодичностьОтчета(ПараметрыОтчета = Неопределено) Экспорт
	
	Возврат "Год"; // "Год,Полугодие,Квартал,Месяц,День".
	
КонецФункции

// Структура страниц отчета.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  мДеревоСтраницОтчета - ДанныеФормыДерево - дерево страниц отчета
//
Процедура ФормироватьСтруктуруСтраницОтчета(ВыбраннаяФорма, мДеревоСтраницОтчета) Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
		
КонецПроцедуры

// Установить доступность областей.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  Форма				 - ФормаКлиентскогоПриложения - форма 
//  ИмяСтраницыПанели	 - Строка - имя страницы панели.
//
Процедура УстановитьДоступностьОбластей(ВыбраннаяФорма, Форма, ИмяСтраницыПанели = "") Экспорт
	
	ТабДокумент = Форма.ПолеТабличногоДокументаФормаОтчета;
	
	ЗапрещенныеОбласти = Новый Массив;
   	ЗапрещенныеОбласти.Добавить("Шапка");
	ЗапрещенныеОбласти.Добавить("ШапкаТаблицы");
	ЗапрещенныеОбласти.Добавить("ОтчетГод");
	ЗапрещенныеОбласти.Добавить("Год");
	ЗапрещенныеОбласти.Добавить("ИНН");
	ЗапрещенныеОбласти.Добавить("КПП");
	ЗапрещенныеОбласти.Добавить("НаименованиеОрганизации");
	ЗапрещенныеОбласти.Добавить("ДатаПриказа");
	ЗапрещенныеОбласти.Добавить("НомерПриказа");
	
	ОбластиРучноеРедактирование = Новый Массив;
	ОбластиРучноеРедактирование.Добавить("КодНалоговогоОргана");
	
	Для Каждого Область Из ТабДокумент.Области Цикл
		Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено И ОбластиРучноеРедактирование.Найти(Область.Имя) = Неопределено Тогда
			МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_4"], Область);
		ИначеЕсли ОбластиРучноеРедактирование.Найти(Область.Имя) <>  Неопределено Тогда
			МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);	
		КонецЕсли; 		
	КонецЦикла;
	
КонецПроцедуры 

// Использовать отбор по филиалу или организации
// 
// Возвращаемое значение:
// Булево  - Истина - отбор по организации, Ложь - по филиалу 
//
Функция ИспользоватьОтборПоОрганизации() Экспорт

	Возврат Истина;
	
КонецФункции

#Область АлгоритмЗаполнения

// Заполнить отчет.
//
// Параметры:
//  ВыбраннаяФорма			 - ФормаКлиентскогоПриложения	 - форма
//  ПараметрыОтчета			 - Структура					 - параметры отчета
//  ЭтаФорма				 - ФормаКлиентскогоПриложения	 - форма
//  СтруктураРеквизитовФормы - Структура					 - структура реквизитов формы.
//
Процедура ЗаполнитьОтчет(ВыбраннаяФорма, ПараметрыОтчета, ЭтаФорма, СтруктураРеквизитовФормы) Экспорт
	
	Контейнер = Новый Структура();
	ОтчетныйГод = Год(ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Контейнер.Вставить("МногострочныеДанные", ПолучитьТаблицуМногострочныеДанные(ОтчетныйГод, ПараметрыОтчета.Организация));
	Контейнер.Вставить("Год", Формат(ОтчетныйГод, "ЧГ="));
	
	ДанныеОрганизации = ПроцедурыСпециализацииПоставки.ПолучитьРеквизитыОрганизации(ПараметрыОтчета.Организация);
	Контейнер.Вставить("ИНН", ДанныеОрганизации.ИНН);
	Контейнер.Вставить("КПП", ДанныеОрганизации.КПП);
	Контейнер.Вставить("НаименованиеОрганизации", Документы.СправкаДляНалоговой.ОписаниеОрганизацииДляПечати_Справка2024(ДанныеОрганизации));
	
	РеквизитыПриказа = РеквизитыПриказа();
	Контейнер.Вставить("ДатаПриказа", РеквизитыПриказа.ДатаПриказа);
	Контейнер.Вставить("НомерПриказа", РеквизитыПриказа.НомерПриказа);
	
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("Год",Контейнер.Год);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("ИНН",Контейнер.ИНН);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("КПП",Контейнер.КПП);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("НаименованиеОрганизации",Контейнер.НаименованиеОрганизации);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("ДатаПриказа",Контейнер.ДатаПриказа);
	ЭтаФорма["СтруктураДанныхСтраниц"]["Титульный"].Вставить("НомерПриказа",Контейнер.НомерПриказа);
	ВнестиМногоСтрочнуюДинамичнуюТаблицу(ЭтаФорма, "Титульный", Контейнер.МногострочныеДанные, "СтрокаТаблицы",,Истина);
	
КонецПроцедуры

Функция ПолучитьТаблицуМногострочныеДанные(ОтчетныйГод, Организация)

	ТаблицаДанных = Новый ТаблицаЗначений();
	
	ТаблицаДанных.Колонки.Добавить("Колонка1");
	
	Для Счетчик = 2 По 21 Цикл
		ТаблицаДанных.Колонки.Добавить("Колонка" + Строка(Счетчик));
	КонецЦикла;
	
	ДанныеДляЗаполнения = ПолучитьДанныеСправокЗаГод(ОтчетныйГод,Организация);
	ЗаполнитьКолонки(ТаблицаДанных, ДанныеДляЗаполнения);
	
	Возврат ТаблицаДанных;		
	
КонецФункции

Процедура ЗаполнитьКолонки(ТаблицаДанных, ДанныеДляЗаполнения)
	
	Для Каждого СтрокаДанных Из ДанныеДляЗаполнения Цикл
		
		СтрокаПрофиля = ТаблицаДанных.Добавить();
		СтрокаПрофиля.Колонка1 	= СтрокаДанных.НомерСтроки;
		СтрокаПрофиля.Колонка2 	= СтрокаДанных.НомерСправки;
		СтрокаПрофиля.Колонка3 	= СтрокаДанных.НомерКоррекции;
		СтрокаПрофиля.Колонка4 	= СтрокаДанных.ФИОНалогоплательщика;
		СтрокаПрофиля.Колонка5 	= СтрокаДанных.ИНННалогоплательщика;
		СтрокаПрофиля.Колонка6 	= СтрокаДанных.ДатаРожденияНалогоплательщика;
		СтрокаПрофиля.Колонка7 	= СтрокаДанных.КодВидаДУЛНалогоплательщика;
		СтрокаПрофиля.Колонка8 	= СтрокаДанных.СерияНомерДУЛНалогоплательщика;
		СтрокаПрофиля.Колонка9 	= СтрокаДанных.ДатаВыдачиДУЛНалогоплательщика;
		СтрокаПрофиля.Колонка10 = СтрокаДанных.Признак;
		СтрокаПрофиля.Колонка11 = СтрокаДанных.ФИОПациента;
		СтрокаПрофиля.Колонка12 = СтрокаДанных.ИННПациента;
		СтрокаПрофиля.Колонка13 = СтрокаДанных.ДатаРожденияПациента;
		СтрокаПрофиля.Колонка14 = СтрокаДанных.КодВидаДУЛПациента;
		СтрокаПрофиля.Колонка15 = СтрокаДанных.СерияНомерДУЛПациента;
		СтрокаПрофиля.Колонка16 = СтрокаДанных.ДатаВыдачиДУЛПациента;
		СтрокаПрофиля.Колонка17 = СтрокаДанных.СуммаПоКоду1;
		СтрокаПрофиля.Колонка18 = СтрокаДанных.СуммаПоКоду2;
		СтрокаПрофиля.Колонка19 = СтрокаДанных.ФИОСотрудника;
		СтрокаПрофиля.Колонка20 = СтрокаДанных.ДатаФормирования;
		СтрокаПрофиля.Колонка21 = СтрокаДанных.Статус;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДанныеСправокЗаГод(ОтчетныйГод, Организация) 
	
	МассивВозврата = Новый Массив;	
	
	Если ОтчетныйГод >= 2024 Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	СправкаДляНалоговой.Ссылка КАК Ссылка
		               |ИЗ
		               |	Документ.СправкаДляНалоговой КАК СправкаДляНалоговой
		               |ГДЕ
		               |	СправкаДляНалоговой.ОтчетныйГод = &ОтчетныйГод
		               |	И СправкаДляНалоговой.Филиал.Организация = &Организация
		               |	И НЕ СправкаДляНалоговой.ПометкаУдаления
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	ДатаВыдачи"; 
		
		Запрос.УстановитьПараметр("ОтчетныйГод", ОтчетныйГод);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Сч = 1;
		Пока Выборка.Следующий() Цикл
			
			Документ = Выборка.Ссылка;
			СтруктураСтроки = ПолучитьСтруктуруСтрокиПечати();
			СтруктураСтроки.НомерСтроки = Строка(Сч);
			СтруктураСтроки.НомерСправки = Строка(Документ.НомерСправки); 
			СтруктураСтроки.НомерКоррекции = Строка(Документ.НомерКорректировки);
			
			Клиент = Документ.Клиент;
			
			Если Документ.ПациентЯвляетсяНалогоплательщиком Тогда
				СтруктураСтроки.Признак = "1";
				СтруктураСтроки.ФИОНалогоплательщика = СокрЛП(Клиент.Фамилия + " " + Клиент.Имя + " " + Клиент.Отчество); 
			Иначе
				СтруктураСтроки.Признак = "0";
				СтруктураСтроки.ФИОНалогоплательщика = СокрЛП(Документ.Налогоплательщик);
				
				//Заполняем данные пациента
				СтруктураСтроки.ФИОПациента = СокрЛП(Клиент.Фамилия + " " + Клиент.Имя + " " + Клиент.Отчество);
				СтруктураСтроки.ИННПациента = Клиент.ИНН;
				СтруктураСтроки.ДатаРожденияПациента = Формат(Клиент.ДатаРождения, "ДФ=dd.MM.yyyy");
				
				ПаспортныеДанные = Документы.СправкаДляНалоговой.ПолучитьПаспортныеДанныеКлиента(Клиент, Документ.ДатаВыдачи);
				СтруктураСтроки.КодВидаДУЛПациента = ПаспортныеДанные.ВидДУЛ;
				СтруктураСтроки.СерияНомерДУЛПациента = СокрЛП(Строка(ПаспортныеДанные.СерияДУЛ) + " " + Строка(ПаспортныеДанные.НомерДУЛ)); 
				СтруктураСтроки.ДатаВыдачиДУЛПациента = Формат(ПаспортныеДанные.ДатаВыдачиДУЛ, "ДФ=dd.MM.yyyy");
			КонецЕсли; 
			
			СтруктураСтроки.ИНННалогоплательщика = Документ.ИНН;
			СтруктураСтроки.ДатаРожденияНалогоплательщика = Формат(Документ.ДатаРождения, "ДФ=dd.MM.yyyy");
			СтруктураСтроки.КодВидаДУЛНалогоплательщика = Документ.ВидДУЛ;
			СтруктураСтроки.СерияНомерДУЛНалогоплательщика = СокрЛП(Документ.СерияДУЛ + " " + Документ.НомерДУЛ);
			СтруктураСтроки.ДатаВыдачиДУЛНалогоплательщика = Формат(Документ.ДатаВыдачиДУЛ, "ДФ=dd.MM.yyyy");
			
			СтруктураСтроки.СуммаПоКоду1 = Формат(Документ.Сумма, "ЧДЦ=2; ЧРГ=");
			СтруктураСтроки.СуммаПоКоду2 = Формат(Документ.СуммаПоКоду2, "ЧДЦ=2; ЧРГ=");
			
			Автор = Документ.Ответственный;	
			Сотрудник = ?(ЗначениеЗаполнено(Автор.ФизическоеЛицо), Автор.ФизическоеЛицо, Автор.Сотрудник);
			Если ЗначениеЗаполнено(Сотрудник) Тогда
				СтруктураСтроки.ФИОСотрудника = ?(ТипЗнч(Сотрудник) = Тип("СправочникСсылка.Сотрудники"), Строка(Сотрудник), Сотрудник.Наименование);
			КонецЕсли;		
			
			СтруктураСтроки.ДатаФормирования = Формат(Документ.ДатаВыдачи, "ДФ=dd.MM.yyyy");
			СтруктураСтроки.Статус = "Бумажный носитель";
			
			МассивВозврата.Добавить(СтруктураСтроки);
			Сч = Сч + 1;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат МассивВозврата;
	
КонецФункции 

Функция ПолучитьСтруктуруСтрокиПечати()
	
	Структура = Новый Структура;
	
	Структура.Вставить("НомерСтроки");  
	Структура.Вставить("НомерСправки");
	Структура.Вставить("НомерКоррекции");
	Структура.Вставить("ФИОНалогоплательщика");
	Структура.Вставить("ИНННалогоплательщика");
	Структура.Вставить("ДатаРожденияНалогоплательщика");
	Структура.Вставить("КодВидаДУЛНалогоплательщика");
	Структура.Вставить("СерияНомерДУЛНалогоплательщика");
	Структура.Вставить("ДатаВыдачиДУЛНалогоплательщика");
	Структура.Вставить("Признак");
	Структура.Вставить("ФИОПациента");
	Структура.Вставить("ИННПациента");
	Структура.Вставить("ДатаРожденияПациента");
	Структура.Вставить("КодВидаДУЛПациента");
	Структура.Вставить("СерияНомерДУЛПациента");
	Структура.Вставить("ДатаВыдачиДУЛПациента");
	Структура.Вставить("СуммаПоКоду1");
	Структура.Вставить("СуммаПоКоду2");
	Структура.Вставить("ФИОСотрудника");
	Структура.Вставить("ДатаФормирования");
	Структура.Вставить("Статус");
	
	Возврат Структура;
	
КонецФункции

Функция РеквизитыПриказа()

	Структура = Новый Структура;
	
	Структура.Вставить("ДатаПриказа", "6 декабря 2023 г.");
	Структура.Вставить("НомерПриказа", "БС-4-11/15314@");
	
	Возврат Структура;
	
КонецФункции

#КонецОбласти 

Процедура ВнестиМногоСтрочнуюДинамичнуюТаблицу(ЭтаФорма, ИмяРаздела, Таблица, ИмяОбластиСтрок, ВыводитьПустыеСтроки = Ложь, ОчищатьТаблицу = Ложь)
	
	СтруктураДанных = ЭтаФорма["СтруктураДанныхСтраниц"][ИмяРаздела];
	МаксКол = Таблица.Колонки.Количество();	
	
	Если ОчищатьТаблицу Тогда
		Для Каждого КлючИЗначение Из СтруктураДанных Цикл
			Если СтрНайти(КлючИЗначение.Ключ, ИмяОбластиСтрок + "__") Тогда
				СтруктураДанных.Удалить(КлючИЗначение.Ключ);	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Стр = 1;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		Для Сч = 0 По МаксКол - 1 Цикл
			ИмяЯчейки = ИмяОбластиСтрок + "__" + Формат(Сч + 1, "ЧЦ=3; ЧВН=") + "_" + Строка(Стр);	
			Значение = СтрокаТаблицы[Сч]; 
			Если ЗначениеЗаполнено(Значение) Или ВыводитьПустыеСтроки Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда 
				СтруктураДанных.Удалить(ИмяЯчейки);	
			КонецЕсли;
		КонецЦикла;
		Стр = Стр + 1;
	КонецЦикла;
	
КонецПроцедуры

Процедура ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, ИмяРаздела, Таблица, КолонкаСтарт = 0)

	Если Таблица = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = ЭтаФорма.ПолеТабличногоДокументаФормаОтчета;
	МаксКол = 14;
	Стр = 1;
	СтруктураДанных = ЭтаФорма["СтруктураДанныхСтраниц"][ИмяРаздела];
	ЗаноситьВчейки = СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		Для Сч = КолонкаСтарт По МаксКол - 1 Цикл
			ИмяЯчейки = "П010000101" + Формат(Сч + 1 - КолонкаСтарт, "ЧЦ=3; ЧВН=") + "_" + Строка(Стр);
			Значение = СтрокаТаблицы[Сч];
			Если ЗаноситьВчейки Тогда
				ТабДокумент.Области[ИмяЯчейки].Значение = Значение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Значение) Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда
				СтруктураДанных.Удалить(ИмяЯчейки);
			КонецЕсли;
		КонецЦикла;
		Стр = Стр + 1;
	КонецЦикла;
	
КонецПроцедуры

// Получить список разделов для загрузки
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма 
// 
// Возвращаемое значение:
//  Массив -  разделы для загрузки.
//
Функция ПолучитьСписокРазделовДляЗагрузки(ВыбраннаяФорма) Экспорт
	
	СписокРазделовДляЗагрузки = Новый Массив;
	СписокРазделовДляЗагрузки.Добавить("Титульный");
	СписокРазделовДляЗагрузки.Добавить("Страница1");
	
	Возврат СписокРазделовДляЗагрузки;
	
КонецФункции

#КонецОбласти

мВерсияОтчета = "1.0";