#Область РазделОписанияПеременных
Перем мВерсияОтчета Экспорт;// Строка, версия отчета
#КонецОбласти

#Область ПрограммныйИнтерфейс

// Таблица форм отчета
// 
// Возвращаемое значение:
//  ТаблицаЗначений - таблица форм отчета.
//
Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета";
	НоваяФорма.ОписаниеОтчета     = "Сведения о травмах, о травлениях и некоторых других";
	НоваяФорма.РедакцияФормы      = "от 27.12.2016 № 866";
	НоваяФорма.ДатаНачалоДействия = '20010101';
	НоваяФорма.ДатаКонецДействия  = МедицинскаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

// Периодичность отчета.
//
// Параметры:
//  ПараметрыОтчета	 - Неопределено - не используется.
// 
// Возвращаемое значение:
//  Строка - периодичность Год, Полугодие, Квартал, Месяц, День.
//
Функция ПериодичностьОтчета(ПараметрыОтчета = Неопределено) Экспорт
	
	Возврат "Год"; // "Год,Полугодие,Квартал,Месяц,День".
	
КонецФункции

// Структура страниц отчета.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  мДеревоСтраницОтчета - ДанныеФормыДерево - дерево страниц отчета
//
Процедура ФормироватьСтруктуруСтраницОтчета(ВыбраннаяФорма, мДеревоСтраницОтчета) Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница1";
	СтрокаУровня1.Представление            = "Страница 1";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница2";
	СтрокаУровня1.Представление            = "Страница 2";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы              = "Страница3";
	СтрокаУровня1.Представление            = "Страница 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Ландшафт";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

// Установить доступность областей.
//
// Параметры:
//  ВыбраннаяФорма		 - ФормаКлиентскогоПриложения - форма
//  Форма				 - ФормаКлиентскогоПриложения - форма 
//  ИмяСтраницыПанели	 - Строка - имя страницы панели.
//
Процедура УстановитьДоступностьОбластей(ВыбраннаяФорма, Форма, ИмяСтраницыПанели = "") Экспорт
	
	ТабДокумент = Форма.ПолеТабличногоДокументаФормаОтчета;
	
	ЗапрещенныеОбласти = Новый Массив;
	ЗапрещенныеОбласти.Добавить("стр_1");
	ЗапрещенныеОбласти.Добавить("Страница1");
	ЗапрещенныеОбласти.Добавить("Страница2");
	ЗапрещенныеОбласти.Добавить("Страница3");
	ЗапрещенныеОбласти.Добавить("ОКПО");
	ЗапрещенныеОбласти.Добавить("ОтчетГод");
	ЗапрещенныеОбласти.Добавить("ОргНазв");
	ЗапрещенныеОбласти.Добавить("ОргПочтАдрес");
	
	Для каждого Область Из ТабДокумент.Области Цикл
		Если ЗапрещенныеОбласти.Найти(Область.Имя) = Неопределено Тогда
			Если СтрНайти(Область.Имя,"П010000101") > 0 Тогда
				Если Область.Формат = "ЧН=Х" Тогда
					МедицинскаяОтчетностьВызовСервера.ЗапретитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_5"], Область);
				Иначе
					МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбластьАвтоЗаполнения(Форма.мСтруктураЦветовРаскраски["_4"], Область);
				КонецЕсли;
			Иначе
				МедицинскаяОтчетностьВызовСервера.РазрешитьВводДанныхВОбласть(Форма.мСтруктураЦветовРаскраски["_0"], Область);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область АлгоритмЗаполнения

// Заполнить отчет.
//
// Параметры:
//  ВыбраннаяФорма			 - ФормаКлиентскогоПриложения	 - форма
//  ПараметрыОтчета			 - Структура					 - параметры отчета
//  ЭтаФорма				 - ФормаКлиентскогоПриложения	 - форма
//  СтруктураРеквизитовФормы - Структура					 - структура реквизитов формы.
//
Процедура ЗаполнитьОтчет(ВыбраннаяФорма, ПараметрыОтчета, ЭтаФорма, СтруктураРеквизитовФормы) Экспорт 
	
	Контейнер = Новый Структура();
	Контейнер.Вставить("Страница1");
	Контейнер.Вставить("Страница2");
	Контейнер.Вставить("Страница3");
	
	ТравмыПричины = ТаблицаТравмИПричин(ПараметрыОтчета);
	
	Контейнер.Страница1 = ПолучитьТаблицуСтраницы(ТравмыПричины.НайтиСтроки(Новый Структура("Страница",1)));
	Контейнер.Страница2 = ПолучитьТаблицуСтраницы(ТравмыПричины.НайтиСтроки(Новый Структура("Страница",2)));
	Контейнер.Страница3 = ПолучитьТаблицуСтраницы(ТравмыПричины.НайтиСтроки(Новый Структура("Страница",3)));
	
	ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, "Страница1", Контейнер.Страница1, 1);
	ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, "Страница2", Контейнер.Страница2, 1);
	ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, "Страница3", Контейнер.Страница3, 1);
	
КонецПроцедуры

Функция ПолучитьТаблицуСтраницы(ТравмыПричины)
	
	ГруппыДиагнозов = ТаблицаКоличествоГрупп();
	
	КоличествоКолонок = ГруппыДиагнозов.Колонки.Количество() - 1;
	КоличествоГрупп = ГруппыДиагнозов.Количество() - 1;
	СтартГрупп = 0;
	Для каждого СтрокаТравмы Из ТравмыПричины Цикл
		КодДиагноза = СтрокаТравмы.Травма;
		
		ВходитВГруппу = Ложь;
		Для Сч = СтартГрупп По КоличествоГрупп Цикл
			СтрокаГруппа = ГруппыДиагнозов[Сч];
			МассивГрупп = СтрРазделить(СтрокаГруппа.Группа,",",Ложь);
			Для каждого ГруппаДиагноза Из МассивГрупп Цикл
				ВходитВГруппу = ДиагнозВходитВГруппу(КодДиагноза,ГруппаДиагноза);
				Если ВходитВГруппу Тогда
					Для Кол = 1 По КоличествоКолонок Цикл
						СтрокаГруппа[Кол] = СтрокаГруппа[Кол] + СтрокаТравмы[Кол+1];
					КонецЦикла;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

Функция ТаблицаКоличествоГрупп()
	
	ГруппыДиагнозов = Новый ТаблицаЗначений;
	ГруппыДиагнозов.Колонки.Добавить("Группа", Новый ОписаниеТипов("Строка"));
	ГруппыДиагнозов.Колонки.Добавить("V01_Y98", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("V01_V99", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Дорожного", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("W00_X59", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("W65_W74", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X00_X09", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X40_X49", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X42", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X45", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X60_X84", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X62", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X65", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("X85_Y09", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Y10_Y34", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Y35_Y38", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Y40_Y84", Новый ОписаниеТипов("Число"));
	ГруппыДиагнозов.Колонки.Добавить("Y85_Y89", Новый ОписаниеТипов("Число"));
	
	ГруппыДиагнозов.Добавить().Группа = "S00-T98";
	ГруппыДиагнозов.Добавить().Группа = "S00-S09";
	ГруппыДиагнозов.Добавить().Группа = "S02";
	ГруппыДиагнозов.Добавить().Группа = "S05";
	ГруппыДиагнозов.Добавить().Группа = "S06";
	ГруппыДиагнозов.Добавить().Группа = "S10-S19";
	ГруппыДиагнозов.Добавить().Группа = "S12";
	ГруппыДиагнозов.Добавить().Группа = "S14";
	ГруппыДиагнозов.Добавить().Группа = "S20-S29";
	ГруппыДиагнозов.Добавить().Группа = "S22";
	ГруппыДиагнозов.Добавить().Группа = "S26";
	ГруппыДиагнозов.Добавить().Группа = "S27";
	ГруппыДиагнозов.Добавить().Группа = "S30-S39";
	ГруппыДиагнозов.Добавить().Группа = "S32";
	ГруппыДиагнозов.Добавить().Группа = "S36";
	ГруппыДиагнозов.Добавить().Группа = "S37";
	ГруппыДиагнозов.Добавить().Группа = "S40-S49";
	ГруппыДиагнозов.Добавить().Группа = "S42";
	ГруппыДиагнозов.Добавить().Группа = "S50-S59";
	ГруппыДиагнозов.Добавить().Группа = "S52";
	ГруппыДиагнозов.Добавить().Группа = "S60-S69";
	ГруппыДиагнозов.Добавить().Группа = "S62";
	ГруппыДиагнозов.Добавить().Группа = "S70-S79";
	ГруппыДиагнозов.Добавить().Группа = "S72";
	ГруппыДиагнозов.Добавить().Группа = "S80-S89";
	ГруппыДиагнозов.Добавить().Группа = "S82";
	ГруппыДиагнозов.Добавить().Группа = "S90-S99";
	ГруппыДиагнозов.Добавить().Группа = "S92";
	ГруппыДиагнозов.Добавить().Группа = "T00-T07";
	ГруппыДиагнозов.Добавить().Группа = "T02";
	ГруппыДиагнозов.Добавить().Группа = "T08-T14";
	ГруппыДиагнозов.Добавить().Группа = "T15-T19";
	ГруппыДиагнозов.Добавить().Группа = "T20-T32";
	ГруппыДиагнозов.Добавить().Группа = "T33-T35";
	ГруппыДиагнозов.Добавить().Группа = "T36-T50";
	ГруппыДиагнозов.Добавить().Группа = "T40.0-T40.6";
	ГруппыДиагнозов.Добавить().Группа = "T43";
	ГруппыДиагнозов.Добавить().Группа = "T51-T65";
	ГруппыДиагнозов.Добавить().Группа = "T51";
	ГруппыДиагнозов.Добавить().Группа = "T66-T78";
	ГруппыДиагнозов.Добавить().Группа = "T80-T88";
	ГруппыДиагнозов.Добавить().Группа = "T90-T98";
	
	Возврат ГруппыДиагнозов;
	
КонецФункции

Функция ТаблицаТравмИПричин(ПараметрыОтчета)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",  ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("СписокФилиалов", ПроцедурыСпециализацииПоставки.ФилиалыОрганизации(ПараметрыОтчета.Филиал));
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Диагнозы.Диагноз.КодДиагноза КАК ДиагнозКодДиагноза,
		|	Диагнозы.Регистратор.ПервичныйПрием КАК РегистраторПервичныйПрием,
		|	РАЗНОСТЬДАТ(Диагнозы.Регистратор.Клиент.ДатаРождения, Диагнозы.Регистратор.Дата, ГОД) - ВЫБОР
		|		КОГДА ДЕНЬГОДА(Диагнозы.Регистратор.Клиент.ДатаРождения) >= ДЕНЬГОДА(Диагнозы.Регистратор.Дата)
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Возраст,
		|	Диагнозы.Регистратор.Клиент.Пол КАК РегистраторКлиентПол,
		|	Диагнозы.Диагноз.НаименованиеПолное КАК ДиагнозНаименованиеПолное
		|ПОМЕСТИТЬ СписокДиагнозов
		|ИЗ
		|	РегистрСведений.Диагнозы КАК Диагнозы
		|ГДЕ
		|	Диагнозы.Период >= &НачалоПериода
		|	И Диагнозы.Период <= &КонецПериода
		|	И Диагнозы.Регистратор.Филиал В(&СписокФилиалов)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДиагнозов.ДиагнозКодДиагноза КАК ДиагнозКодДиагноза,
		|	СписокДиагнозов.РегистраторПервичныйПрием КАК РегистраторПервичныйПрием,
		|	СписокДиагнозов.Возраст КАК Возраст,
		|	СписокДиагнозов.РегистраторКлиентПол КАК Пол
		|ПОМЕСТИТЬ Травмы
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	СписокДиагнозов.ДиагнозКодДиагноза >= ""S00""
		|	И СписокДиагнозов.ДиагнозКодДиагноза <= ""T98""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СписокДиагнозов.ДиагнозКодДиагноза КАК Причина,
		|	СписокДиагнозов.РегистраторПервичныйПрием КАК РегистраторПервичныйПрием,
		|	СписокДиагнозов.ДиагнозНаименованиеПолное КАК Наименование
		|ПОМЕСТИТЬ Причины
		|ИЗ
		|	СписокДиагнозов КАК СписокДиагнозов
		|ГДЕ
		|	СписокДиагнозов.ДиагнозКодДиагноза >= ""V01""
		|	И СписокДиагнозов.ДиагнозКодДиагноза <= ""Y98""
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Травмы.ДиагнозКодДиагноза КАК Травма,
		|	ВЫБОР
		|		КОГДА Травмы.Возраст <= 17
		|			ТОГДА 1
		|		КОГДА Травмы.Возраст > 17
		|				И (Травмы.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Мужской)
		|						И Травмы.Возраст < 65
		|					ИЛИ Травмы.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
		|						И Травмы.Возраст < 60)
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ КАК Страница,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""V01""
		|					И Причины.Причина <= ""Y98""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК V01_Y98,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""V01""
		|					И Причины.Причина <= ""V99""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК V01_V99,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Наименование ПОДОБНО ""% дорожн%""
		|				И НЕ Причины.Наименование ПОДОБНО ""%неуточненный%""
		|					И Причины.Причина >= ""V01""
		|					И Причины.Причина <= ""V99""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Дорожного,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""W00""
		|					И Причины.Причина <= ""X59""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК W00_X59,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""W65""
		|					И Причины.Причина <= ""W74""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК W65_W74,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""X00""
		|					И Причины.Причина <= ""X09""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X00_X09,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""X40""
		|					И Причины.Причина <= ""X49""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X40_X49,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина = ""X42""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X42,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина = ""X45""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X45,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""X60""
		|					И Причины.Причина <= ""X84""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X60_X84,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина = ""X62""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X62,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина = ""X65""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X65,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""X85""
		|					И Причины.Причина <= ""Y09""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК X85_Y09,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""Y10""
		|					И Причины.Причина <= ""Y34""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Y10_Y34,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""Y35""
		|					И Причины.Причина <= ""Y38""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Y35_Y38,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""Y40""
		|					И Причины.Причина <= ""Y84""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Y40_Y84,
		|	СУММА(ВЫБОР
		|			КОГДА Причины.Причина >= ""Y85""
		|					И Причины.Причина <= ""Y89""
		|				ТОГДА 1
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК Y85_Y89
		|ИЗ
		|	Травмы КАК Травмы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Причины КАК Причины
		|		ПО Травмы.РегистраторПервичныйПрием = Причины.РегистраторПервичныйПрием
		|
		|СГРУППИРОВАТЬ ПО
		|	Травмы.ДиагнозКодДиагноза,
		|	ВЫБОР
		|		КОГДА Травмы.Возраст <= 17
		|			ТОГДА 1
		|		КОГДА Травмы.Возраст > 17
		|				И (Травмы.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Мужской)
		|						И Травмы.Возраст < 65
		|					ИЛИ Травмы.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
		|						И Травмы.Возраст < 60)
		|			ТОГДА 2
		|		ИНАЧЕ 3
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Страница,
		|	Травма";
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Функция ДиагнозВходитВГруппу(КодДиагноза, КодГруппы)
	
	ПересечениеНачало = Ложь;
	ПересечениеКонец = Ложь;
	МассивКодов = СтрРазделить(КодГруппы, "-", Ложь);
	Если МассивКодов.Количество() > 0 Тогда
		КодНачало = МассивКодов[0];
		ПересечениеНачало = КодДиагноза >= КодНачало;
	КонецЕсли;
	
	Если МассивКодов.Количество() = 2 Тогда
		КодКонец = МассивКодов[1];
		ПересечениеКонец = КодДиагноза <= КодКонец;
	Иначе
		ПересечениеКонец = КодДиагноза = КодНачало;
	КонецЕсли;
	
	Возврат ПересечениеНачало И ПересечениеКонец;
	
КонецФункции

#КонецОбласти

#Область Расшифровка

// Установить параметры расшифровки.
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма
//  ПараметрыОтчета	 - Структура - параметры отчета 
//  ИмяЯчейки		 - Строка - имя ячейки
// 
// Возвращаемое значение:
//  Структура - параметры расшифровки.
//
Функция УстановитьПараметрыРасшифровки(ВыбраннаяФорма, ПараметрыОтчета, ИмяЯчейки) Экспорт
	
	ПараметрыРасшифровки = Новый Структура();
	
	ИмяФормыРасшифровкиОтчета = "Отчет.РасшифровкаМедицинскогоОтчетаФорма57.ФормаОбъекта";
	ГруппыДиагнозов = ПолучитьГруппуЯчейки(ИмяЯчейки);
	Если Не ЗначениеЗаполнено(ГруппыДиагнозов) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	МассивГрупп = СтрРазделить(ГруппыДиагнозов,"-",Ложь);
	ПараметрыРасшифровки.Вставить("ТравмаНачало", МассивГрупп[0]);
	ПараметрыРасшифровки.Вставить("ТравмаКонец", ?(МассивГрупп.Количество() = 2,МассивГрупп[1],МассивГрупп[0]));
	
	Причина = ПолучитьОтборПричина(ИмяЯчейки);
	Если Причина = "Дорожная" Тогда
		ПараметрыРасшифровки.Вставить("ПричинаНачало", "Дорожная");
		ПараметрыРасшифровки.Вставить("ПричинаКонец", "");
	Иначе
		МассивГрупп = СтрРазделить(Причина,"-",Ложь);
		ПараметрыРасшифровки.Вставить("ПричинаНачало", МассивГрупп[0]);
		ПараметрыРасшифровки.Вставить("ПричинаКонец", ?(МассивГрупп.Количество() = 2,МассивГрупп[1],МассивГрупп[0]));
	КонецЕсли;
	
	Возврат Новый Структура("ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки", ИмяФормыРасшифровкиОтчета, ПараметрыРасшифровки);
	
КонецФункции

Функция ПолучитьГруппуЯчейки(ИмяЯчейки)
	
	Если СтрНайти(ИмяЯчейки,"П010000101") = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ГруппыДиагнозов = Новый Массив;
	
	ГруппыДиагнозов.Добавить("S00-T98");
	ГруппыДиагнозов.Добавить("S00-S09");
	ГруппыДиагнозов.Добавить("S02");
	ГруппыДиагнозов.Добавить("S05");
	ГруппыДиагнозов.Добавить("S06");
	ГруппыДиагнозов.Добавить("S10-S19");
	ГруппыДиагнозов.Добавить("S12");
	ГруппыДиагнозов.Добавить("S14");
	ГруппыДиагнозов.Добавить("S20-S29");
	ГруппыДиагнозов.Добавить("S22");
	ГруппыДиагнозов.Добавить("S26");
	ГруппыДиагнозов.Добавить("S27");
	ГруппыДиагнозов.Добавить("S30-S39");
	ГруппыДиагнозов.Добавить("S32");
	ГруппыДиагнозов.Добавить("S36");
	ГруппыДиагнозов.Добавить("S37");
	ГруппыДиагнозов.Добавить("S40-S49");
	ГруппыДиагнозов.Добавить("S42");
	ГруппыДиагнозов.Добавить("S50-S59");
	ГруппыДиагнозов.Добавить("S52");
	ГруппыДиагнозов.Добавить("S60-S69");
	ГруппыДиагнозов.Добавить("S62");
	ГруппыДиагнозов.Добавить("S70-S79");
	ГруппыДиагнозов.Добавить("S72");
	ГруппыДиагнозов.Добавить("S80-S89");
	ГруппыДиагнозов.Добавить("S82");
	ГруппыДиагнозов.Добавить("S90-S99");
	ГруппыДиагнозов.Добавить("S92");
	ГруппыДиагнозов.Добавить("T00-T07");
	ГруппыДиагнозов.Добавить("T02");
	ГруппыДиагнозов.Добавить("T08-T14");
	ГруппыДиагнозов.Добавить("T15-T19");
	ГруппыДиагнозов.Добавить("T20-T32");
	ГруппыДиагнозов.Добавить("T33-T35");
	ГруппыДиагнозов.Добавить("T36-T50");
	ГруппыДиагнозов.Добавить("T40.0-T40.6");
	ГруппыДиагнозов.Добавить("T43");
	ГруппыДиагнозов.Добавить("T51-T65");
	ГруппыДиагнозов.Добавить("T51");
	ГруппыДиагнозов.Добавить("T66-T78");
	ГруппыДиагнозов.Добавить("T80-T88");
	ГруппыДиагнозов.Добавить("T90-T98");
	
	Попытка
		ИндексЯчейки = Число(СтрЗаменить(ИмяЯчейки, Лев(ИмяЯчейки,14), "")) - 1;
		Если ИндексЯчейки >= 42 Тогда
			ИндексЯчейки = ИндексЯчейки - 42;
		КонецЕсли;
	Исключение
		Возврат "";
	КонецПопытки;
	
	Результат = ГруппыДиагнозов.Получить(ИндексЯчейки);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьОтборПричина(ИмяЯчейки)
	
	ГруппыДиагнозов = Новый Массив;
	ГруппыДиагнозов.Добавить("V01-Y98");
	ГруппыДиагнозов.Добавить("V01-V99");
	ГруппыДиагнозов.Добавить("Дорожная");
	ГруппыДиагнозов.Добавить("W00-X59");
	ГруппыДиагнозов.Добавить("W65-W74");
	ГруппыДиагнозов.Добавить("X00-X09");
	ГруппыДиагнозов.Добавить("X40-X49");
	ГруппыДиагнозов.Добавить("X42");
	ГруппыДиагнозов.Добавить("X45");
	ГруппыДиагнозов.Добавить("X60-X84");
	ГруппыДиагнозов.Добавить("X62");
	ГруппыДиагнозов.Добавить("X65");
	ГруппыДиагнозов.Добавить("X85-Y09");
	ГруппыДиагнозов.Добавить("Y10-Y34");
	ГруппыДиагнозов.Добавить("Y35-Y38");
	ГруппыДиагнозов.Добавить("Y40-Y84");
	ГруппыДиагнозов.Добавить("Y85-Y89");
	
	Строка = Число(СтрЗаменить(ИмяЯчейки, Лев(ИмяЯчейки,14), "")) - 1;
	Колонка = Число(Сред(ИмяЯчейки,11,3)) - 1;
	
	Если Строка >= 42 Тогда
		ИндексЯчейки = Колонка + 9;
	Иначе
		ИндексЯчейки = Колонка;
	КонецЕсли;
	
	Результат = ГруппыДиагнозов.Получить(ИндексЯчейки);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

Процедура ВнестиТаблицуВТабДокумент(ЭтаФорма, СтруктураРеквизитовФормы, ИмяРаздела, Таблица, КолонкаСтарт = 0)
	
	Таб1Колонок = 9;
	КоличествоСтрок = Таблица.Количество();
	
	Если Таблица = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТабДокумент = ЭтаФорма.ПолеТабличногоДокументаФормаОтчета;
	МаксКол = Таблица.Колонки.Количество() - 2;
	Стр = 1;
	СтруктураДанных = ЭтаФорма["СтруктураДанныхСтраниц"][ИмяРаздела];
	ЗаноситьВчейки = СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела;
	Для каждого СтрокаТаблицы Из Таблица Цикл
		Для Сч = КолонкаСтарт По Таб1Колонок Цикл
			ИмяЯчейки = "П010000101" + Формат(Сч + 1 - КолонкаСтарт, "ЧЦ=3; ЧВН=") + "_" + Строка(Стр);
			Значение = СтрокаТаблицы[Сч];
			Если ЗаноситьВчейки Тогда
				ТабДокумент.Области[ИмяЯчейки].Значение = Значение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Значение) Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда
				СтруктураДанных.Удалить(ИмяЯчейки);
			КонецЕсли;
		КонецЦикла;
		
		Для Сч = Таб1Колонок + 1 По МаксКол Цикл
			ИмяЯчейки = "П010000101" + Формат(Сч - Таб1Колонок, "ЧЦ=3; ЧВН=") + "_" + Строка(КоличествоСтрок + Стр);
			Значение = СтрокаТаблицы[Сч];
			Если ЗаноситьВчейки Тогда
				ТабДокумент.Области[ИмяЯчейки].Значение = Значение;
			КонецЕсли;
			Если ЗначениеЗаполнено(Значение) Тогда
				СтруктураДанных.Вставить(ИмяЯчейки,Значение);
			ИначеЕсли СтруктураДанных.Свойство(ИмяЯчейки) Тогда
				СтруктураДанных.Удалить(ИмяЯчейки);
			КонецЕсли;
		КонецЦикла;
		Стр = Стр + 1;
	КонецЦикла;
	
КонецПроцедуры

// Получить список разделов для загрузки
//
// Параметры:
//  ВыбраннаяФорма	 - ФормаКлиентскогоПриложения - форма 
// 
// Возвращаемое значение:
//  Массив -  разделы для загрузки.
//
Функция ПолучитьСписокРазделовДляЗагрузки(ВыбраннаяФорма) Экспорт
	
	СписокРазделовДляЗагрузки = Новый Массив;
	СписокРазделовДляЗагрузки.Добавить("Титульный");
	Возврат СписокРазделовДляЗагрузки;
	
КонецФункции

#КонецОбласти

мВерсияОтчета = "1.0";